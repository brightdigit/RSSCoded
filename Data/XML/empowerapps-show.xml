<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="https://feeds.transistor.fm/stylesheet.xsl" type="text/xsl"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:googleplay="http://www.google.com/schemas/play-podcasts/1.0" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" xmlns:podcast="https://podcastindex.org/namespace/1.0">
  <channel>
    <atom:link rel="self" type="application/atom+xml" href="https://feeds.transistor.fm/empowerapps-show" title="MP3 Audio"/>
    <atom:link rel="hub" href="https://pubsubhubbub.appspot.com/"/>
    <title>Empower Apps</title>
    <generator>Transistor (https://transistor.fm)</generator>
    <itunes:new-feed-url>https://feeds.transistor.fm/empowerapps-show</itunes:new-feed-url>
    <description>An exploration of Apple business news and technology. We talk about how businesses can use new technology to empower their business and employees, from Leo Dion, founder of BrightDigit.</description>
    <copyright>© Bright Digit, LLC 2018</copyright>
    <podcast:locked owner="leogdion@brightdigit.com">no</podcast:locked>
    <podcast:funding url="https://www.patreon.com/empowerappsshow">Support this podcast on Patreon</podcast:funding>
    <language>en</language>
    <pubDate>Sat, 19 Jun 2021 00:00:00 -0400</pubDate>
    <lastBuildDate>Mon, 21 Jun 2021 08:24:41 -0400</lastBuildDate>
    <link>https://www.empowerapps.show</link>
    <image>
      <url>https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg</url>
      <title>Empower Apps</title>
      <link>https://www.empowerapps.show</link>
    </image>
    <itunes:category text="Business"/>
    <itunes:category text="Technology"/>
    <googleplay:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </googleplay:author>
    <googleplay:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
    <googleplay:summary>An exploration of Apple business news and technology. We talk about how businesses can use new technology to empower their business and employees, from Leo Dion, founder of BrightDigit.</googleplay:summary>
    <googleplay:explicit>No</googleplay:explicit>
    <googleplay:block>No</googleplay:block>
    <itunes:type>episodic</itunes:type>
    <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
    <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
    <itunes:summary>An exploration of Apple business news and technology. We talk about how businesses can use new technology to empower their business and employees, from Leo Dion, founder of BrightDigit.</itunes:summary>
    <itunes:subtitle>An exploration of Apple business news and technology.</itunes:subtitle>
    <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
    <itunes:owner>
      <itunes:name>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:name>
    </itunes:owner>
    <itunes:complete>No</itunes:complete>
    <itunes:explicit>No</itunes:explicit>
    <itunes:block>No</itunes:block>
    <item>
      <title>iPad Development with Adam Shaw</title>
      <itunes:episode>94</itunes:episode>
      <itunes:title>iPad Development with Adam Shaw</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">46493e8c-d033-499f-8870-b3e8776b3463</guid>
      <link>https://share.transistor.fm/s/75a6d9ba</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/KabukiVision">Adam Shaw (Twitter @kabukivision)</a><ul>
<li><a href="http://www.kabukivision.com">kabukivision.com</a></li>
<li><a href="http://welikegames.net">We Like Games Podcast</a></li>
<li><a href="https://www.youtube.com/channel/UChby9fvNUTbcA161kwG8ZkA">Developer Commentary YouTube Channel</a></li>
<li><a href="%20https://moleskinestudio.com">Moleskine Studio</a></li>
<li><a href="https://bonobolabs.com">Bonobo Labs</a></li>
</ul>
</li></ul><p><a href="https://brightdigit.typeform.com/to/yVZN2gIT"><strong>Podcast Survey</strong> - https://brightdigit.typeform.com/to/yVZN2gIT</a><br><a href="https://youtu.be/WHzAdaMHWgE"><strong>Youtube Video</strong> - https://youtu.be/WHzAdaMHWgE</a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/ace13930">Episode 92 - WWDC 2021 - Platforms State of the Union with Peter Witham</a></li>
<li><a href="https://share.transistor.fm/s/0d12719b">Episode 73 - Multi-Platform SwiftUI with Malin Sundberg</a></li>
<li><a href="https://share.transistor.fm/s/a19efbf9">Episode 10 - Business and IT Applications</a></li>
<li><a href="https://share.transistor.fm/s/a34307ee">Episode 9 - iPad Apps for Businesses and Pros</a></li>
</ul><p><strong>WWDC Sessions</strong></p><ul>
<li><a href="https://developer.apple.com/videos/play/wwdc2021-10057">Take your iPad apps to the next level</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2021-10260">Focus on iPad keyboard navigation</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2021-10120">Support Full Keyboard Access in your iOS app</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2021-10062">SwiftUI on the Mac: Build the fundamentals</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2021-10289">SwiftUI on the Mac: The finishing touches</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://revenuecat.com/"><strong>RevenueCat</strong></a><strong></strong></p><p>Using RevenueCat to power your in-app purchase infrastructure solves:</p><ul>
<li>For edge cases <strong>you don’t even know you have</strong>
</li>
<li>
<strong>Protects from outages</strong> your team hasn’t seen yet</li>
<li>Saves you time on<strong> future maintenance </strong>
</li>
<li>As well as <strong>new features released by the app stores</strong>
</li>
<li>
<strong>Empowers your marketing teams</strong> with clean, reliable IAP data</li>
</ul><p>All that to say, <strong>RevenueCat handles all the headaches of in-app purchases</strong> so you can get back to building your app. Try RevenueCat today at <a href="http://revenuecat.com/">revenuecat.com</a>.</p><p><b>Developing for iPad</b></p><ul>
<li>Why develop an iPad app?</li>
<li>iPad vs iPhone</li>
<li>iPad vs Mac</li>
<li>Building Pro Apps on the iPad</li>
<li>Limits of iPadOS</li>
<li>Using Custom Controls</li>
</ul><p><b>Designing for the iPad (specifically)</b></p><ul>
<li>Migrating from iPhone to iPad</li>
<li>Designing for Different Sizes</li>
<li>Whether to support multiple windows</li>
<li>Supporting SplitView</li>
<li>Supporting Pointers and Keyboard Shortcuts</li>
</ul><p><b>Pro Apps for the iPad</b></p><ul>
<li>Problems with Pro Apps on the iPad </li>
<li>Missing Pro Apps on the iPad</li>
<li>Swift Playground on the iPad</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.reddit.com/user/leogdion"><strong>Reddit</strong><br>Leo - /u/leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/KabukiVision">Adam Shaw (Twitter @kabukivision)</a><ul>
<li><a href="http://www.kabukivision.com">kabukivision.com</a></li>
<li><a href="http://welikegames.net">We Like Games Podcast</a></li>
<li><a href="https://www.youtube.com/channel/UChby9fvNUTbcA161kwG8ZkA">Developer Commentary YouTube Channel</a></li>
<li><a href="%20https://moleskinestudio.com">Moleskine Studio</a></li>
<li><a href="https://bonobolabs.com">Bonobo Labs</a></li>
</ul>
</li></ul><p><a href="https://brightdigit.typeform.com/to/yVZN2gIT"><strong>Podcast Survey</strong> - https://brightdigit.typeform.com/to/yVZN2gIT</a><br><a href="https://youtu.be/WHzAdaMHWgE"><strong>Youtube Video</strong> - https://youtu.be/WHzAdaMHWgE</a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/ace13930">Episode 92 - WWDC 2021 - Platforms State of the Union with Peter Witham</a></li>
<li><a href="https://share.transistor.fm/s/0d12719b">Episode 73 - Multi-Platform SwiftUI with Malin Sundberg</a></li>
<li><a href="https://share.transistor.fm/s/a19efbf9">Episode 10 - Business and IT Applications</a></li>
<li><a href="https://share.transistor.fm/s/a34307ee">Episode 9 - iPad Apps for Businesses and Pros</a></li>
</ul><p><strong>WWDC Sessions</strong></p><ul>
<li><a href="https://developer.apple.com/videos/play/wwdc2021-10057">Take your iPad apps to the next level</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2021-10260">Focus on iPad keyboard navigation</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2021-10120">Support Full Keyboard Access in your iOS app</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2021-10062">SwiftUI on the Mac: Build the fundamentals</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2021-10289">SwiftUI on the Mac: The finishing touches</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://revenuecat.com/"><strong>RevenueCat</strong></a><strong></strong></p><p>Using RevenueCat to power your in-app purchase infrastructure solves:</p><ul>
<li>For edge cases <strong>you don’t even know you have</strong>
</li>
<li>
<strong>Protects from outages</strong> your team hasn’t seen yet</li>
<li>Saves you time on<strong> future maintenance </strong>
</li>
<li>As well as <strong>new features released by the app stores</strong>
</li>
<li>
<strong>Empowers your marketing teams</strong> with clean, reliable IAP data</li>
</ul><p>All that to say, <strong>RevenueCat handles all the headaches of in-app purchases</strong> so you can get back to building your app. Try RevenueCat today at <a href="http://revenuecat.com/">revenuecat.com</a>.</p><p><b>Developing for iPad</b></p><ul>
<li>Why develop an iPad app?</li>
<li>iPad vs iPhone</li>
<li>iPad vs Mac</li>
<li>Building Pro Apps on the iPad</li>
<li>Limits of iPadOS</li>
<li>Using Custom Controls</li>
</ul><p><b>Designing for the iPad (specifically)</b></p><ul>
<li>Migrating from iPhone to iPad</li>
<li>Designing for Different Sizes</li>
<li>Whether to support multiple windows</li>
<li>Supporting SplitView</li>
<li>Supporting Pointers and Keyboard Shortcuts</li>
</ul><p><b>Pro Apps for the iPad</b></p><ul>
<li>Problems with Pro Apps on the iPad </li>
<li>Missing Pro Apps on the iPad</li>
<li>Swift Playground on the iPad</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.reddit.com/user/leogdion"><strong>Reddit</strong><br>Leo - /u/leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sat, 19 Jun 2021 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/75a6d9ba/372fb94b.mp3" length="22495716" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/567383/full_1623603382-artwork.jpg"/>
      <itunes:duration>2746</itunes:duration>
      <itunes:summary>In this episode, Leo is joined by Adam Shaw, developer at Bonobo Labs and Moleskine Studio. We talk about iPadOS 15 and developing apps for the iPad in 2021: Supporting multiple sizes, Apple Pencil, Pointer and Keyboards; as well as differences with the Mac and iPhone and issues with the iPad app market.</itunes:summary>
      <itunes:subtitle>In this episode, Leo is joined by Adam Shaw, developer at Bonobo Labs and Moleskine Studio. We talk about iPadOS 15 and developing apps for the iPad in 2021: Supporting multiple sizes, Apple Pencil, Pointer and Keyboards; as well as differences with the M</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Test-Driven Development in Swift with Gio Lodi</title>
      <itunes:episode>93</itunes:episode>
      <itunes:title>Test-Driven Development in Swift with Gio Lodi</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">5db8473b-f287-4435-96f6-3561dffca8e6</guid>
      <link>https://share.transistor.fm/s/e07bf6ba</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://gio.codes/"><strong>Gio Lodi</strong> </a>-<a href="https://gio.codes"> gio.codes</a><ul>
<li><a href="https://twitter.com/mokagio">Twitter @mokagio</a></li>
<li><a href="https://mokacoding.com/">Blog at mokacoding.com</a></li>
<li>
<a href="https://tddinswift.com">Test-Driven Development in Swift with SwiftUI and Combine</a> by Gio<ul><li><a href="https://www.apress.com/gp/book/9781484270011">Apress Link</a></li></ul>
</li>
</ul>
</li></ul><p><a href="https://brightdigit.typeform.com/to/yVZN2gIT"><strong>Podcast Survey</strong> - https://brightdigit.typeform.com/to/yVZN2gIT</a><br><a href="https://youtu.be/OM9jbAbUXZ0"><strong>Youtube Video</strong> - https://youtu.be/OM9jbAbUXZ0</a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/eddb8632">Episode 15 - Test-Driven Development with Joshua Greene and Michael Katz </a></li>
<li><a href="https://share.transistor.fm/s/a14f868f">Episode 24 - Continuous Integration with Kyle Newsome</a></li>
<li><a href="https://share.transistor.fm/s/f6092e38">Episode 62 - Local Database Storage on iOS with Aaron Douglas</a></li>
<li><a href="https://share.transistor.fm/s/b203049d">Episode 72 - Functional Programming with Daniel Steinberg</a></li>
<li><a href="https://share.transistor.fm/s/30f5853f">Episode 80 - A Tour of Software Testing with Christina Moulton</a></li>
<li><a href="https://share.transistor.fm/s/593efb15">Episode 81 - Awaiting for Async with Vincent Pradeilles</a></li>
<li><a href="https://share.transistor.fm/s/ace13930">Episode 92 - WWDC 2021 - Platforms State of the Union with Peter Witham</a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://mokacoding.com/blog/how-to-test-async-await-code-in-swift/">How to test Swift async/await code with XCTest by Gio</a></li>
<li><a href="https://www.goodreads.com/book/show/337302.xUnit_Test_Patterns">xUnit Test Patterns: Refactoring Test Code by Gerard Meszaros</a></li>
<li><a href="http://xunitpatterns.com/Test%20Double%20Patterns.html">What's a Test Double?</a></li>
<li>
<a href="https://youtu.be/BIL3GvBFatE?t=2807"><em>What's New in Testing</em> talk by Gio</a> from Melbourne CocoaHeads - June 10th 2021<ul><li><a href="https://speakerdeck.com/mokagio/wwdc-2021-whats-new-in-testing">Slides from talk</a></li></ul>
</li>
<li><a href="https://en.wikipedia.org/wiki/Dependency_inversion_principle">Dependency Inversion Principle</a></li>
<li><a href="https://github.com/unsignedapps/CombineAsyncually">CombineAsyncually</a></li>
<li><a href="https://dimsumthinking.com/">dimsumthinking.com by Daniel Steinberg</a></li>
<li>
<a href="https://www.youtube.com/watch?v=zkFxOlmLWoA">Leo Dion - Combine-ing the Old with the New from 360iDev 2019</a> (on creating Publisher Factories/Publicists)</li>
<li><a href="https://developer.apple.com/xcode-cloud/beta/">Xcode Cloud Beta Signup</a></li>
</ul><p><strong>WWDC Sessions</strong></p><ul>
<li><a href="https://developer.apple.com/wwdc21/10207%20">Embrace Expected Failures in XCTest</a></li>
<li><a href="https://developer.apple.com/wwdc21/10267">Meet Xcode Cloud</a></li>
<li><a href="https://developer.apple.com/wwdc21/10268">Explore Xcode Cloud workflows</a></li>
<li><a href="https://developer.apple.com/wwdc21/10269">Customize your advanced Xcode Cloud workflows</a></li>
<li><a href="https://developer.apple.com/wwdc21/10296">Diagnose unreliable code with test repetitions</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://revenuecat.com/"><strong>RevenueCat</strong></a><strong></strong></p><p>Using RevenueCat to power your in-app purchase infrastructure solves:</p><ul>
<li>For edge cases <strong>you don’t even know you have</strong>
</li>
<li>
<strong>Protects from outages</strong> your team hasn’t seen yet</li>
<li>Saves you time on<strong> future maintenance </strong>
</li>
<li>As well as <strong>new features released by the app stores</strong>
</li>
<li>
<strong>Empowers your marketing teams</strong> with clean, reliable IAP data</li>
</ul><p>All that to say, <strong>RevenueCat handles all the headaches of in-app purchases</strong> so you can get back to building your app. Try RevenueCat today at <a href="http://revenuecat.com/">revenuecat.com</a>.</p><p><b>TDD Thoughts from WWDC 2021</b></p><ul>
<li>Is Xcode Cloud Ready?</li>
<li>Who's the target audience for Xcode Cloud?</li>
<li>On Testing with Async/Await</li>
<li>Combine vs Async/Await</li>
<li>How to expect failures in Xcode 12.5</li>
<li>Testing Repetitions</li>
</ul><p><b>TDD, SwiftUI &amp; Combine</b></p><ul>
<li>Why do TDD now in Swift?</li>
<li>Difficulties adopting it later in project</li>
<li>TDD in SwiftUI vs UIKit</li>
<li>Isolating Systems with TDD</li>
<li>What are the different types of Test Doubles?</li>
<li><br></li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.reddit.com/user/leogdion"><strong>Reddit</strong><br>Leo - /u/leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://gio.codes/"><strong>Gio Lodi</strong> </a>-<a href="https://gio.codes"> gio.codes</a><ul>
<li><a href="https://twitter.com/mokagio">Twitter @mokagio</a></li>
<li><a href="https://mokacoding.com/">Blog at mokacoding.com</a></li>
<li>
<a href="https://tddinswift.com">Test-Driven Development in Swift with SwiftUI and Combine</a> by Gio<ul><li><a href="https://www.apress.com/gp/book/9781484270011">Apress Link</a></li></ul>
</li>
</ul>
</li></ul><p><a href="https://brightdigit.typeform.com/to/yVZN2gIT"><strong>Podcast Survey</strong> - https://brightdigit.typeform.com/to/yVZN2gIT</a><br><a href="https://youtu.be/OM9jbAbUXZ0"><strong>Youtube Video</strong> - https://youtu.be/OM9jbAbUXZ0</a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/eddb8632">Episode 15 - Test-Driven Development with Joshua Greene and Michael Katz </a></li>
<li><a href="https://share.transistor.fm/s/a14f868f">Episode 24 - Continuous Integration with Kyle Newsome</a></li>
<li><a href="https://share.transistor.fm/s/f6092e38">Episode 62 - Local Database Storage on iOS with Aaron Douglas</a></li>
<li><a href="https://share.transistor.fm/s/b203049d">Episode 72 - Functional Programming with Daniel Steinberg</a></li>
<li><a href="https://share.transistor.fm/s/30f5853f">Episode 80 - A Tour of Software Testing with Christina Moulton</a></li>
<li><a href="https://share.transistor.fm/s/593efb15">Episode 81 - Awaiting for Async with Vincent Pradeilles</a></li>
<li><a href="https://share.transistor.fm/s/ace13930">Episode 92 - WWDC 2021 - Platforms State of the Union with Peter Witham</a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://mokacoding.com/blog/how-to-test-async-await-code-in-swift/">How to test Swift async/await code with XCTest by Gio</a></li>
<li><a href="https://www.goodreads.com/book/show/337302.xUnit_Test_Patterns">xUnit Test Patterns: Refactoring Test Code by Gerard Meszaros</a></li>
<li><a href="http://xunitpatterns.com/Test%20Double%20Patterns.html">What's a Test Double?</a></li>
<li>
<a href="https://youtu.be/BIL3GvBFatE?t=2807"><em>What's New in Testing</em> talk by Gio</a> from Melbourne CocoaHeads - June 10th 2021<ul><li><a href="https://speakerdeck.com/mokagio/wwdc-2021-whats-new-in-testing">Slides from talk</a></li></ul>
</li>
<li><a href="https://en.wikipedia.org/wiki/Dependency_inversion_principle">Dependency Inversion Principle</a></li>
<li><a href="https://github.com/unsignedapps/CombineAsyncually">CombineAsyncually</a></li>
<li><a href="https://dimsumthinking.com/">dimsumthinking.com by Daniel Steinberg</a></li>
<li>
<a href="https://www.youtube.com/watch?v=zkFxOlmLWoA">Leo Dion - Combine-ing the Old with the New from 360iDev 2019</a> (on creating Publisher Factories/Publicists)</li>
<li><a href="https://developer.apple.com/xcode-cloud/beta/">Xcode Cloud Beta Signup</a></li>
</ul><p><strong>WWDC Sessions</strong></p><ul>
<li><a href="https://developer.apple.com/wwdc21/10207%20">Embrace Expected Failures in XCTest</a></li>
<li><a href="https://developer.apple.com/wwdc21/10267">Meet Xcode Cloud</a></li>
<li><a href="https://developer.apple.com/wwdc21/10268">Explore Xcode Cloud workflows</a></li>
<li><a href="https://developer.apple.com/wwdc21/10269">Customize your advanced Xcode Cloud workflows</a></li>
<li><a href="https://developer.apple.com/wwdc21/10296">Diagnose unreliable code with test repetitions</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://revenuecat.com/"><strong>RevenueCat</strong></a><strong></strong></p><p>Using RevenueCat to power your in-app purchase infrastructure solves:</p><ul>
<li>For edge cases <strong>you don’t even know you have</strong>
</li>
<li>
<strong>Protects from outages</strong> your team hasn’t seen yet</li>
<li>Saves you time on<strong> future maintenance </strong>
</li>
<li>As well as <strong>new features released by the app stores</strong>
</li>
<li>
<strong>Empowers your marketing teams</strong> with clean, reliable IAP data</li>
</ul><p>All that to say, <strong>RevenueCat handles all the headaches of in-app purchases</strong> so you can get back to building your app. Try RevenueCat today at <a href="http://revenuecat.com/">revenuecat.com</a>.</p><p><b>TDD Thoughts from WWDC 2021</b></p><ul>
<li>Is Xcode Cloud Ready?</li>
<li>Who's the target audience for Xcode Cloud?</li>
<li>On Testing with Async/Await</li>
<li>Combine vs Async/Await</li>
<li>How to expect failures in Xcode 12.5</li>
<li>Testing Repetitions</li>
</ul><p><b>TDD, SwiftUI &amp; Combine</b></p><ul>
<li>Why do TDD now in Swift?</li>
<li>Difficulties adopting it later in project</li>
<li>TDD in SwiftUI vs UIKit</li>
<li>Isolating Systems with TDD</li>
<li>What are the different types of Test Doubles?</li>
<li><br></li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.reddit.com/user/leogdion"><strong>Reddit</strong><br>Leo - /u/leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Mon, 14 Jun 2021 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/e07bf6ba/3e87bbc2.mp3" length="28492653" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/567347/full_1623599999-artwork.jpg"/>
      <itunes:duration>3500</itunes:duration>
      <itunes:summary>In this episode, Leo is joined by Gio Lodi, author of Test-Driven Development in Swift with SwiftUI and Combine. We talk about how to do TDD with Swift but also SwiftUI and Combine as well as the new features revealed at WWDC 2021 like Async/Await, Xcode Cloud, expected failures, and test repetitions.</itunes:summary>
      <itunes:subtitle>In this episode, Leo is joined by Gio Lodi, author of Test-Driven Development in Swift with SwiftUI and Combine. We talk about how to do TDD with Swift but also SwiftUI and Combine as well as the new features revealed at WWDC 2021 like Async/Await, Xcode </itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>WWDC 2021 - Platforms State of the Union with Peter Witham</title>
      <itunes:episode>92</itunes:episode>
      <itunes:title>WWDC 2021 - Platforms State of the Union with Peter Witham</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">58453b59-338a-4c35-858e-72e802ab4063</guid>
      <link>https://share.transistor.fm/s/ace13930</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://peterwitham.com/">Peter Witham</a> - <a href="https://compileswift.com/">Compileswift.com</a> - <a href="https://twitter.com/CompileSwift">Twitter</a>
</li></ul><p><b>Crossover Episode</b></p><ul><li><a href="https://www.compileswift.com/podcast/s03-e01/"><strong>CompileSwift - Episode - Keynote Review</strong></a></li></ul><p><a href="https://brightdigit.typeform.com/to/yVZN2gIT"><strong>Podcast Survey</strong> - https://brightdigit.typeform.com/to/yVZN2gIT</a><br><a href="https://youtu.be/6IEvRlyu904"><strong>Youtube Video</strong> - https://youtu.be/6IEvRlyu904</a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/a14f868f">Episode 24 - Continuous Integration with Kyle Newsome</a></li>
<li><a href="https://share.transistor.fm/s/593efb15">Episode 81 - Awaiting for Async with Vincent Pradeilles</a></li>
<li><a href="https://share.transistor.fm/s/bab83e8a">Episode 84 - Automation Fun with Jared Sorge</a></li>
<li><a href="https://share.transistor.fm/s/8505d100">Episode 91 - Fastlane with Josh Holtz</a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://developer.apple.com/xcode-cloud/beta/">Xcode Cloud Beta Signup</a></li>
<li><a href="https://www.apress.com/gp/book/9781484270011">Test-Driven Development in Swift by Gio Lodi</a></li>
<li><a href="https://twitter.com/joshshaffer/status/1402036339105665024?s=20">Josh Shaffer's Clarification on Async/Await and Combine</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://revenuecat.com/"><strong>RevenueCat</strong></a><strong></strong></p><p>Using RevenueCat to power your in-app purchase infrastructure solves:</p><ul>
<li>For edge cases <strong>you don’t even know you have</strong>
</li>
<li>
<strong>Protects from outages</strong> your team hasn’t seen yet</li>
<li>Saves you time on<strong> future maintenance </strong>
</li>
<li>As well as <strong>new features released by the app stores</strong>
</li>
<li>
<strong>Empowers your marketing teams</strong> with clean, reliable IAP data</li>
</ul><p>All that to say, <strong>RevenueCat handles all the headaches of in-app purchases</strong> so you can get back to building your app. Try RevenueCat today at <a href="http://revenuecat.com/">revenuecat.com</a>.</p><p><a href="https://360idev.com/"><strong>360iDev - August 22 -25 (Hybrid)</strong></a></p><ul>
<li>The Leading indie iOS/Mac (and watchOS, and tvOS) Developer conference</li>
<li>It's all about Community and Code!</li>
<li>Four days of hands-on training, amazing sessions, and the great community. All Swift.</li>
<li>Available Online <strong>or </strong>In-Person</li>
</ul><p>Use the promo code <strong>EmpowerApps </strong>to get <a href="https://360idev.com/"><strong>25% off registration.</strong></a></p><p><b>Xcode Cloud</b></p><ul>
<li>How does it differ from Xcode Server and Serverbots?</li>
<li>Is there an on-premises version?</li>
<li>Can the Workflows be edited via web or text?</li>
<li>How does it compare to other services?</li>
<li>Where's the REST API for Xcode Cloud</li>
<li>How much does it cost?</li>
<li>What's is going to be the relationship with Fastlane?</li>
<li>How do pull requests, discussions, etc... interface with Git Repo Services (GitHub, Gitlab)?</li>
</ul><p><b>Xcode... Swift Playgrounds on the iPad</b></p><ul>
<li>Fully Build and Upload Apps from the iPad</li>
<li>How does sharing code with Xcode on the Mac work?</li>
<li>How does it interface with Git Repos?</li>
<li>Can Preview Apps in Full Screen</li>
<li>Sounds perfect for testing and prototyping</li>
</ul><p><b>Async/Await and Actors</b></p><ul>
<li>See episode with Vincent on async and await</li>
<li>Xcode includes tools for refactoring</li>
<li>What's the relationship with Combine?</li>
<li>Uncertainty with Actors</li>
</ul><p><b>SwiftUI - Year 3</b></p><ul>
<li>Used in various macOS apps (Maps, Photos, etc...)</li>
<li>Continued improvements to List</li>
<li>Table added to macOS</li>
<li>Specific Platforms for modifiers</li>
<li>Pull-to-Refresh One liner</li>
<li>New Material Styles and UI Focus API</li>
</ul><p><b>Focus and Notifications</b></p><ul>
<li>More Granular control over notifications</li>
<li>How do notification scores work?</li>
<li>What can we do about notification spam?</li>
</ul><p><b>Widgets</b></p><ul>
<li>New Extra Large Widget</li>
<li>More Stacks</li>
<li>Widget Suggestions</li>
<li>iPad Home Screen Widgets</li>
<li>Peter's rant on Widgets</li>
</ul><p>Also... ScreenTime API, SharePlay API, AR Object Capture, and the death of Objective-C</p><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.reddit.com/user/leogdion"><strong>Reddit</strong><br>Leo - /u/leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://peterwitham.com/">Peter Witham</a> - <a href="https://compileswift.com/">Compileswift.com</a> - <a href="https://twitter.com/CompileSwift">Twitter</a>
</li></ul><p><b>Crossover Episode</b></p><ul><li><a href="https://www.compileswift.com/podcast/s03-e01/"><strong>CompileSwift - Episode - Keynote Review</strong></a></li></ul><p><a href="https://brightdigit.typeform.com/to/yVZN2gIT"><strong>Podcast Survey</strong> - https://brightdigit.typeform.com/to/yVZN2gIT</a><br><a href="https://youtu.be/6IEvRlyu904"><strong>Youtube Video</strong> - https://youtu.be/6IEvRlyu904</a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/a14f868f">Episode 24 - Continuous Integration with Kyle Newsome</a></li>
<li><a href="https://share.transistor.fm/s/593efb15">Episode 81 - Awaiting for Async with Vincent Pradeilles</a></li>
<li><a href="https://share.transistor.fm/s/bab83e8a">Episode 84 - Automation Fun with Jared Sorge</a></li>
<li><a href="https://share.transistor.fm/s/8505d100">Episode 91 - Fastlane with Josh Holtz</a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://developer.apple.com/xcode-cloud/beta/">Xcode Cloud Beta Signup</a></li>
<li><a href="https://www.apress.com/gp/book/9781484270011">Test-Driven Development in Swift by Gio Lodi</a></li>
<li><a href="https://twitter.com/joshshaffer/status/1402036339105665024?s=20">Josh Shaffer's Clarification on Async/Await and Combine</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://revenuecat.com/"><strong>RevenueCat</strong></a><strong></strong></p><p>Using RevenueCat to power your in-app purchase infrastructure solves:</p><ul>
<li>For edge cases <strong>you don’t even know you have</strong>
</li>
<li>
<strong>Protects from outages</strong> your team hasn’t seen yet</li>
<li>Saves you time on<strong> future maintenance </strong>
</li>
<li>As well as <strong>new features released by the app stores</strong>
</li>
<li>
<strong>Empowers your marketing teams</strong> with clean, reliable IAP data</li>
</ul><p>All that to say, <strong>RevenueCat handles all the headaches of in-app purchases</strong> so you can get back to building your app. Try RevenueCat today at <a href="http://revenuecat.com/">revenuecat.com</a>.</p><p><a href="https://360idev.com/"><strong>360iDev - August 22 -25 (Hybrid)</strong></a></p><ul>
<li>The Leading indie iOS/Mac (and watchOS, and tvOS) Developer conference</li>
<li>It's all about Community and Code!</li>
<li>Four days of hands-on training, amazing sessions, and the great community. All Swift.</li>
<li>Available Online <strong>or </strong>In-Person</li>
</ul><p>Use the promo code <strong>EmpowerApps </strong>to get <a href="https://360idev.com/"><strong>25% off registration.</strong></a></p><p><b>Xcode Cloud</b></p><ul>
<li>How does it differ from Xcode Server and Serverbots?</li>
<li>Is there an on-premises version?</li>
<li>Can the Workflows be edited via web or text?</li>
<li>How does it compare to other services?</li>
<li>Where's the REST API for Xcode Cloud</li>
<li>How much does it cost?</li>
<li>What's is going to be the relationship with Fastlane?</li>
<li>How do pull requests, discussions, etc... interface with Git Repo Services (GitHub, Gitlab)?</li>
</ul><p><b>Xcode... Swift Playgrounds on the iPad</b></p><ul>
<li>Fully Build and Upload Apps from the iPad</li>
<li>How does sharing code with Xcode on the Mac work?</li>
<li>How does it interface with Git Repos?</li>
<li>Can Preview Apps in Full Screen</li>
<li>Sounds perfect for testing and prototyping</li>
</ul><p><b>Async/Await and Actors</b></p><ul>
<li>See episode with Vincent on async and await</li>
<li>Xcode includes tools for refactoring</li>
<li>What's the relationship with Combine?</li>
<li>Uncertainty with Actors</li>
</ul><p><b>SwiftUI - Year 3</b></p><ul>
<li>Used in various macOS apps (Maps, Photos, etc...)</li>
<li>Continued improvements to List</li>
<li>Table added to macOS</li>
<li>Specific Platforms for modifiers</li>
<li>Pull-to-Refresh One liner</li>
<li>New Material Styles and UI Focus API</li>
</ul><p><b>Focus and Notifications</b></p><ul>
<li>More Granular control over notifications</li>
<li>How do notification scores work?</li>
<li>What can we do about notification spam?</li>
</ul><p><b>Widgets</b></p><ul>
<li>New Extra Large Widget</li>
<li>More Stacks</li>
<li>Widget Suggestions</li>
<li>iPad Home Screen Widgets</li>
<li>Peter's rant on Widgets</li>
</ul><p>Also... ScreenTime API, SharePlay API, AR Object Capture, and the death of Objective-C</p><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.reddit.com/user/leogdion"><strong>Reddit</strong><br>Leo - /u/leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Tue, 08 Jun 2021 15:09:40 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/ace13930/b23f9614.mp3" length="41671701" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/562640/full_1623179380-artwork.jpg"/>
      <itunes:duration>5145</itunes:duration>
      <itunes:summary>In this episode, Leo is joined by Peter Witham to discuss the Platforms State of the Union: Xcode Cloud, Async/Await &amp; Actors, Building Apps on the iPad, Focus &amp; DND, ScreenTime API, Shareplay API and more...</itunes:summary>
      <itunes:subtitle>In this episode, Leo is joined by Peter Witham to discuss the Platforms State of the Union: Xcode Cloud, Async/Await &amp; Actors, Building Apps on the iPad, Focus &amp; DND, ScreenTime API, Shareplay API and more...</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Fastlane with Josh Holtz</title>
      <itunes:episode>91</itunes:episode>
      <itunes:title>Fastlane with Josh Holtz</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">c1ad9bff-310a-4516-a825-32768fd21719</guid>
      <link>https://share.transistor.fm/s/8505d100</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://www.joshholtz.com"><strong>Josh Holtz (website)</strong></a><ul><li><a href="https://twitter.com/joshdholtz"><strong>Twitter @joshdholtz</strong></a></li></ul>
</li></ul><p><a href="https://youtu.be/YgEXQ1k6eRI"><strong>Youtube Video - https://youtu.be/YgEXQ1k6eRI</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/bab83e8a"><strong>Episode 84</strong> - <strong>Automation Fun with Jared Sorge</strong></a></li>
<li><a href="https://share.transistor.fm/s/a14f868f"><strong>Episode 24</strong> - <strong>Continuous Integration with Kyle Newsome</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://fastlane.tools">fastlane.tools</a></li>
<li><a href="https://github.com/shibapm">Shibapm</a></li>
<li><a href="http://fastlanescreencast.com">fastlane screencasts</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://revenuecat.com/"><strong>RevenueCat</strong></a><strong></strong></p><p>Using RevenueCat to power your in-app purchase infrastructure solves:</p><ul>
<li>For edge cases <strong>you don’t even know you have</strong>
</li>
<li>
<strong>Protects from outages</strong> your team hasn’t seen yet</li>
<li>Saves you time on<strong> future maintenance </strong>
</li>
<li>As well as <strong>new features released by the app stores</strong>
</li>
<li>
<strong>Empowers your marketing teams</strong> with clean, reliable IAP data</li>
</ul><p>All that to say, <strong>RevenueCat handles all the headaches of in-app purchases</strong> so you can get back to building your app. Try RevenueCat today at <a href="http://revenuecat.com/">revenuecat.com</a>.</p><p><a href="https://360idev.com/"><strong>360iDev - August 22 -25 (Hybrid)</strong></a></p><ul>
<li>The Leading indie iOS/Mac (and watchOS, and tvOS) Developer conference</li>
<li>It's all about Community and Code!</li>
<li>Four days of hands-on training, amazing sessions, and the great community. All Swift.</li>
<li>Available Online <strong>or </strong>In-Person</li>
</ul><p>Use the promo code <strong>EmpowerApps </strong>to get <a href="https://360idev.com/"><strong>25% off registration.</strong></a></p><p><b>What to know about Fastlane</b></p><ul>
<li>How Fastlane started?</li>
<li>How Fastlane is built and maintained?</li>
<li>How can Fastlane help your team?</li>
<li>What's Fastlane's hidden gem?</li>
<li>How to automate signing your app?</li>
<li>How does Fastlane working with the App Store Connect API?</li>
<li>How does Fastlane deal with Apple's updates behind the scenes?</li>
<li>How does WWDC affect Fastlane development?</li>
<li>What's on Josh's WWDC Wish List (i.e. What feature could help Fastlane)?</li>
<li>How can you contribute to Fastlane?</li>
<li>What's the future of Fastlane?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.reddit.com/user/leogdion"><strong>Reddit</strong><br>Leo - /u/leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://www.joshholtz.com"><strong>Josh Holtz (website)</strong></a><ul><li><a href="https://twitter.com/joshdholtz"><strong>Twitter @joshdholtz</strong></a></li></ul>
</li></ul><p><a href="https://youtu.be/YgEXQ1k6eRI"><strong>Youtube Video - https://youtu.be/YgEXQ1k6eRI</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/bab83e8a"><strong>Episode 84</strong> - <strong>Automation Fun with Jared Sorge</strong></a></li>
<li><a href="https://share.transistor.fm/s/a14f868f"><strong>Episode 24</strong> - <strong>Continuous Integration with Kyle Newsome</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://fastlane.tools">fastlane.tools</a></li>
<li><a href="https://github.com/shibapm">Shibapm</a></li>
<li><a href="http://fastlanescreencast.com">fastlane screencasts</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://revenuecat.com/"><strong>RevenueCat</strong></a><strong></strong></p><p>Using RevenueCat to power your in-app purchase infrastructure solves:</p><ul>
<li>For edge cases <strong>you don’t even know you have</strong>
</li>
<li>
<strong>Protects from outages</strong> your team hasn’t seen yet</li>
<li>Saves you time on<strong> future maintenance </strong>
</li>
<li>As well as <strong>new features released by the app stores</strong>
</li>
<li>
<strong>Empowers your marketing teams</strong> with clean, reliable IAP data</li>
</ul><p>All that to say, <strong>RevenueCat handles all the headaches of in-app purchases</strong> so you can get back to building your app. Try RevenueCat today at <a href="http://revenuecat.com/">revenuecat.com</a>.</p><p><a href="https://360idev.com/"><strong>360iDev - August 22 -25 (Hybrid)</strong></a></p><ul>
<li>The Leading indie iOS/Mac (and watchOS, and tvOS) Developer conference</li>
<li>It's all about Community and Code!</li>
<li>Four days of hands-on training, amazing sessions, and the great community. All Swift.</li>
<li>Available Online <strong>or </strong>In-Person</li>
</ul><p>Use the promo code <strong>EmpowerApps </strong>to get <a href="https://360idev.com/"><strong>25% off registration.</strong></a></p><p><b>What to know about Fastlane</b></p><ul>
<li>How Fastlane started?</li>
<li>How Fastlane is built and maintained?</li>
<li>How can Fastlane help your team?</li>
<li>What's Fastlane's hidden gem?</li>
<li>How to automate signing your app?</li>
<li>How does Fastlane working with the App Store Connect API?</li>
<li>How does Fastlane deal with Apple's updates behind the scenes?</li>
<li>How does WWDC affect Fastlane development?</li>
<li>What's on Josh's WWDC Wish List (i.e. What feature could help Fastlane)?</li>
<li>How can you contribute to Fastlane?</li>
<li>What's the future of Fastlane?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.reddit.com/user/leogdion"><strong>Reddit</strong><br>Leo - /u/leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Mon, 24 May 2021 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/8505d100/5c067fec.mp3" length="21216857" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/523906/full_1621457365-artwork.jpg"/>
      <itunes:duration>2589</itunes:duration>
      <itunes:summary>In this episode, Leo talks with John Holtz, lead maintainer of Fastlane. They talk about integrating Fastlane, advanced features in Fastlane, and what devs should know about it.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with John Holtz, lead maintainer of Fastlane. They talk about integrating Fastlane, advanced features in Fastlane, and what devs should know about it.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>AWS and SOTO with Adam Fowler</title>
      <itunes:episode>90</itunes:episode>
      <itunes:title>AWS and SOTO with Adam Fowler</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">67ab25af-db8a-4b58-befe-4f1c10f065af</guid>
      <link>https://share.transistor.fm/s/580c9ccc</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://opticalaberration.com"><strong>Adam Fowler (website)</strong></a><ul>
<li><a href="https://twitter.com/o_aberration">@o_aberation (Twitter)</a></li>
<li><a href="https://www.instagram.com/adamfowlerphoto/">@adamfowlerphoto (Instagram)</a></li>
</ul>
</li></ul><p><a href="https://youtu.be/X5XOnyysMWo"><strong>Youtube Video - https://youtu.be/X5XOnyysMWo</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/9a225bb3"><strong>Episode 85 - AWS Amplify with Kilo Loco</strong></a></li>
<li><a href="https://share.transistor.fm/s/a6728b43"><strong>Episode 75 -Year of the Server with Tim Condon - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/17f05dbf"><strong>Episode 49 - Vapor 4 with Tibor Bödecs</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://soto.codes"><strong>Soto</strong> - Swift SDK for Amazon Web Services</a></li>
<li><a href="https://github.com/hummingbird-project/hummingbird"><strong>Hummingbird</strong> - Lightweight, flexible server framework written in Swift</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://revenuecat.com/"><strong>RevenueCat</strong></a><strong></strong></p><p>Using RevenueCat to power your in-app purchase infrastructure solves:</p><ul>
<li>For edge cases <strong>you don’t even know you have</strong>
</li>
<li>
<strong>Protects from outages</strong> your team hasn’t seen yet</li>
<li>Saves you time on<strong> future maintenance </strong>
</li>
<li>As well as <strong>new features released by the app stores</strong>
</li>
<li>
<strong>Empowers your marketing teams</strong> with clean, reliable IAP data</li>
</ul><p>All that to say, <strong>RevenueCat handles all the headaches of in-app purchases</strong> so you can get back to building your app. Try RevenueCat today at <a href="http://revenuecat.com/">revenuecat.com</a>.</p><p><a href="https://360idev.com/"><strong>360iDev - August 22 -25 (Hybrid)</strong></a></p><ul>
<li>The Leading indie iOS/Mac (and watchOS, and tvOS) Developer conference</li>
<li>It's all about Community and Code!</li>
<li>Four days of hands-on training, amazing sessions, and the great community. All Swift.</li>
<li>Available Online <strong>or </strong>In-Person</li>
</ul><p>Use the promo code <strong>EmpowerApps </strong>to get <a href="https://360idev.com/"><strong>25% off registration.</strong></a></p><p><b>What is SOTO and how does it work with S3?</b></p><ul>
<li>How SOTO Works?</li>
<li>How SOTO sets up its code?</li>
<li>Why use S3 for storage?</li>
<li>How S3 compares with other services?</li>
</ul><p><b>What Devs Should Know About AWS</b></p><ul>
<li>What is the best way to serve your website from AWS?</li>
<li>How to setup authentication with AWS?</li>
<li>How does Amplify fit in with other services?</li>
<li>How to use DynamoDB with SOTO?</li>
</ul><p><b>How SOTO works with Lambda?</b></p><ul>
<li>How SOTO works with your Lambda?</li>
<li>Dealing with Authentication, SOTO, and Lambda?</li>
<li>How to avoid high costs with AWS?</li>
<li>What is Hummingbird?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.reddit.com/user/leogdion"><strong>Reddit</strong><br>Leo - /u/leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://opticalaberration.com"><strong>Adam Fowler (website)</strong></a><ul>
<li><a href="https://twitter.com/o_aberration">@o_aberation (Twitter)</a></li>
<li><a href="https://www.instagram.com/adamfowlerphoto/">@adamfowlerphoto (Instagram)</a></li>
</ul>
</li></ul><p><a href="https://youtu.be/X5XOnyysMWo"><strong>Youtube Video - https://youtu.be/X5XOnyysMWo</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/9a225bb3"><strong>Episode 85 - AWS Amplify with Kilo Loco</strong></a></li>
<li><a href="https://share.transistor.fm/s/a6728b43"><strong>Episode 75 -Year of the Server with Tim Condon - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/17f05dbf"><strong>Episode 49 - Vapor 4 with Tibor Bödecs</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://soto.codes"><strong>Soto</strong> - Swift SDK for Amazon Web Services</a></li>
<li><a href="https://github.com/hummingbird-project/hummingbird"><strong>Hummingbird</strong> - Lightweight, flexible server framework written in Swift</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://revenuecat.com/"><strong>RevenueCat</strong></a><strong></strong></p><p>Using RevenueCat to power your in-app purchase infrastructure solves:</p><ul>
<li>For edge cases <strong>you don’t even know you have</strong>
</li>
<li>
<strong>Protects from outages</strong> your team hasn’t seen yet</li>
<li>Saves you time on<strong> future maintenance </strong>
</li>
<li>As well as <strong>new features released by the app stores</strong>
</li>
<li>
<strong>Empowers your marketing teams</strong> with clean, reliable IAP data</li>
</ul><p>All that to say, <strong>RevenueCat handles all the headaches of in-app purchases</strong> so you can get back to building your app. Try RevenueCat today at <a href="http://revenuecat.com/">revenuecat.com</a>.</p><p><a href="https://360idev.com/"><strong>360iDev - August 22 -25 (Hybrid)</strong></a></p><ul>
<li>The Leading indie iOS/Mac (and watchOS, and tvOS) Developer conference</li>
<li>It's all about Community and Code!</li>
<li>Four days of hands-on training, amazing sessions, and the great community. All Swift.</li>
<li>Available Online <strong>or </strong>In-Person</li>
</ul><p>Use the promo code <strong>EmpowerApps </strong>to get <a href="https://360idev.com/"><strong>25% off registration.</strong></a></p><p><b>What is SOTO and how does it work with S3?</b></p><ul>
<li>How SOTO Works?</li>
<li>How SOTO sets up its code?</li>
<li>Why use S3 for storage?</li>
<li>How S3 compares with other services?</li>
</ul><p><b>What Devs Should Know About AWS</b></p><ul>
<li>What is the best way to serve your website from AWS?</li>
<li>How to setup authentication with AWS?</li>
<li>How does Amplify fit in with other services?</li>
<li>How to use DynamoDB with SOTO?</li>
</ul><p><b>How SOTO works with Lambda?</b></p><ul>
<li>How SOTO works with your Lambda?</li>
<li>Dealing with Authentication, SOTO, and Lambda?</li>
<li>How to avoid high costs with AWS?</li>
<li>What is Hummingbird?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.reddit.com/user/leogdion"><strong>Reddit</strong><br>Leo - /u/leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Fri, 14 May 2021 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/580c9ccc/e7f9980a.mp3" length="14890989" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/523903/full_1620662518-artwork.jpg"/>
      <itunes:duration>1796</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Adam Fowler the lead developer of SOTO, the leading Swift library for Amazon Web Services on the Server. We talk about using SOTO for S3, DynamoDB, as well as Cognito. We also discuss the power of AWS Lambdas and Adam's new project Hummingbird.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Adam Fowler the lead developer of SOTO, the leading Swift library for Amazon Web Services on the Server. We talk about using SOTO for S3, DynamoDB, as well as Cognito. We also discuss the power of AWS Lambdas and Adam's new</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Cryptography with Marcin Krzyżanowski</title>
      <itunes:episode>89</itunes:episode>
      <itunes:title>Cryptography with Marcin Krzyżanowski</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">466350a8-64ca-4c5a-be38-c1be0c0d98bb</guid>
      <link>https://share.transistor.fm/s/6858d372</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<strong>Marcin Krzyżanowski </strong><ul>
<li><a href="https://twitter.com/krzyzanowskim">Twitter @krzyzanowskim</a></li>
<li><a href="https://swift.best">Swift.best</a></li>
</ul>
</li></ul><p><a href="https://youtu.be/eigMjltZlP8"><strong>Youtube Video - https://youtu.be/eigMjltZlP8</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/30ff6bea"><strong>Episode 88 - Conferences with John Wilker</strong></a></li>
<li><a href="%20https://share.transistor.fm/s/bab83e8a"><strong>Episode 84 - Automation Fun with Jared Sorge</strong></a></li>
<li><a href="https://share.transistor.fm/s/e6621ded"><strong>Episode 77 - Swift Package Index with Sven A. Schmidt</strong></a></li>
<li><a href="https://share.transistor.fm/s/51c9a342%20"><strong>Episode 55 -</strong> <strong>WWDC 2020 and Xcode 12 with Vadim Shpakovski - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/71500d55"><strong>Episode 33 - 2020 Developer Wish List with Alex Bush</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.apple.com/newsroom/2021/03/apples-worldwide-developers-conference-is-back-in-its-all-online-format/">WWDC 2021 Announced</a></li>
<li><a href="https://cryptoswift.io">CryptoSwift</a></li>
<li><a href="https://t.co/e6euCg173j?amp=1">OnlineSwiftPlayground.run</a></li>
<li><a href="https://swiftstudio.app">SwiftStudio.app</a></li>
<li><a href="https://developer.apple.com/documentation/security">Apple Security Framework</a></li>
<li><a href="https://nostarch.com/seriouscrypto">Serious Cryptography</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://revenuecat.com/"><strong>RevenueCat</strong></a><strong></strong></p><p>Using RevenueCat to power your in-app purchase infrastructure solves:</p><ul>
<li>For edge cases <strong>you don’t even know you have</strong>
</li>
<li>
<strong>Protects from outages</strong> your team hasn’t seen yet</li>
<li>Saves you time on<strong> future maintenance </strong>
</li>
<li>As well as <strong>new features released by the app stores</strong>
</li>
<li>
<strong>Empowers your marketing teams</strong> with clean, reliable IAP data</li>
</ul><p>All that to say, <strong>RevenueCat handles all the headaches of in-app purchases</strong> so you can get back to building your app. Try RevenueCat today at <a href="http://revenuecat.com/">revenuecat.com</a>.</p><p><a href="https://360idev.com/"><strong>360iDev - August 22 -25 (Hybrid)</strong></a></p><ul>
<li>The Leading indie iOS/Mac (and watchOS, and tvOS) Developer conference</li>
<li>It's all about Community and Code!</li>
<li>Four days of hands-on training, amazing sessions, and the great community. All Swift.</li>
<li>Available Online <strong>or </strong>In-Person</li>
</ul><p>Use the promo code <strong>EmpowerApps </strong>to get <a href="https://360idev.com/"><strong>25% off registration.</strong></a></p><p><b>What Should Devs Know About Cryptography</b></p><ul>
<li>What is CryptoSwift</li>
<li>What is relationship between Randomness and Encryption</li>
<li>What's the difference between Base64 Encoding and Encryption</li>
<li>What is a cypher?</li>
<li>What is the difference between symmetric and asymmetric?</li>
<li>What is key derivation for?</li>
<li>What is an initialization vector (aka IV)?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.reddit.com/user/leogdion"><strong>Reddit</strong><br>Leo - /u/leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<strong>Marcin Krzyżanowski </strong><ul>
<li><a href="https://twitter.com/krzyzanowskim">Twitter @krzyzanowskim</a></li>
<li><a href="https://swift.best">Swift.best</a></li>
</ul>
</li></ul><p><a href="https://youtu.be/eigMjltZlP8"><strong>Youtube Video - https://youtu.be/eigMjltZlP8</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/30ff6bea"><strong>Episode 88 - Conferences with John Wilker</strong></a></li>
<li><a href="%20https://share.transistor.fm/s/bab83e8a"><strong>Episode 84 - Automation Fun with Jared Sorge</strong></a></li>
<li><a href="https://share.transistor.fm/s/e6621ded"><strong>Episode 77 - Swift Package Index with Sven A. Schmidt</strong></a></li>
<li><a href="https://share.transistor.fm/s/51c9a342%20"><strong>Episode 55 -</strong> <strong>WWDC 2020 and Xcode 12 with Vadim Shpakovski - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/71500d55"><strong>Episode 33 - 2020 Developer Wish List with Alex Bush</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.apple.com/newsroom/2021/03/apples-worldwide-developers-conference-is-back-in-its-all-online-format/">WWDC 2021 Announced</a></li>
<li><a href="https://cryptoswift.io">CryptoSwift</a></li>
<li><a href="https://t.co/e6euCg173j?amp=1">OnlineSwiftPlayground.run</a></li>
<li><a href="https://swiftstudio.app">SwiftStudio.app</a></li>
<li><a href="https://developer.apple.com/documentation/security">Apple Security Framework</a></li>
<li><a href="https://nostarch.com/seriouscrypto">Serious Cryptography</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://revenuecat.com/"><strong>RevenueCat</strong></a><strong></strong></p><p>Using RevenueCat to power your in-app purchase infrastructure solves:</p><ul>
<li>For edge cases <strong>you don’t even know you have</strong>
</li>
<li>
<strong>Protects from outages</strong> your team hasn’t seen yet</li>
<li>Saves you time on<strong> future maintenance </strong>
</li>
<li>As well as <strong>new features released by the app stores</strong>
</li>
<li>
<strong>Empowers your marketing teams</strong> with clean, reliable IAP data</li>
</ul><p>All that to say, <strong>RevenueCat handles all the headaches of in-app purchases</strong> so you can get back to building your app. Try RevenueCat today at <a href="http://revenuecat.com/">revenuecat.com</a>.</p><p><a href="https://360idev.com/"><strong>360iDev - August 22 -25 (Hybrid)</strong></a></p><ul>
<li>The Leading indie iOS/Mac (and watchOS, and tvOS) Developer conference</li>
<li>It's all about Community and Code!</li>
<li>Four days of hands-on training, amazing sessions, and the great community. All Swift.</li>
<li>Available Online <strong>or </strong>In-Person</li>
</ul><p>Use the promo code <strong>EmpowerApps </strong>to get <a href="https://360idev.com/"><strong>25% off registration.</strong></a></p><p><b>What Should Devs Know About Cryptography</b></p><ul>
<li>What is CryptoSwift</li>
<li>What is relationship between Randomness and Encryption</li>
<li>What's the difference between Base64 Encoding and Encryption</li>
<li>What is a cypher?</li>
<li>What is the difference between symmetric and asymmetric?</li>
<li>What is key derivation for?</li>
<li>What is an initialization vector (aka IV)?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.reddit.com/user/leogdion"><strong>Reddit</strong><br>Leo - /u/leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Tue, 04 May 2021 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/6858d372/3ebac95c.mp3" length="19723271" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/523867/full_1619383026-artwork.jpg"/>
      <itunes:duration>2401</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Marcin Krzyżanowski creator of CryptoSwift, Swift Studio and the Online Swift Playground about Cryptography and WWDC 2021.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Marcin Krzyżanowski creator of CryptoSwift, Swift Studio and the Online Swift Playground about Cryptography and WWDC 2021.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Conferences with John Wilker</title>
      <itunes:episode>88</itunes:episode>
      <itunes:title>Conferences with John Wilker</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">c1798934-77be-4132-b3d0-7dc6e6e230cf</guid>
      <link>https://share.transistor.fm/s/30ff6bea</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://johnwilker.com"><strong>John Wilker (johnwilker.com)</strong></a><ul>
<li>
<a href="https://360idev.com"><strong>360|iDev</strong></a> - August 22 - 25, 2021<ul><li>
<strong>Use the promo code EmpowerApps to get </strong><a href="https://360idev.com/"><strong>25% off registration.</strong></a>
</li></ul>
</li>
<li><a href="https://twitter.com/jwilker">Twitter (jwilker)</a></li>
<li><a href="https://www.instagram.com/johntwilker/">Instagram (johntwilker)</a></li>
<li><a href="https://360conferences.com"><strong>360Conferences</strong></a></li>
</ul>
</li></ul><p><a href="https://youtu.be/XXQB24mqQp4"><strong>Youtube Video - </strong>https://youtu.be/XXQB24mqQp4</a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/eba8ef64">Episode 36 - Upgrading Your Skills in 2020 with Paul Hudson</a></li>
<li><a href="https://share.transistor.fm/s/a34307ee">Episode 9 - iPad Apps for Businesses and Pros</a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.apple.com/newsroom/2021/03/apples-worldwide-developers-conference-is-back-in-its-all-online-format/">WWDC 2021 Announced</a></li>
<li><a href="https://www.goodnotes.com">GoodNotes</a></li>
<li><a href="%20https://www.literatureandlatte.com/scrivener/overview">Scrivener</a></li>
<li><a href="https://360idev.com/call-for-papers/">360|iDev 2021 Call For Papers will close May 7, 2021!</a></li>
<li><a href="https://www.imore.com/plex-now-works-apple-tv-app-not-all-content-available">Plex now works with the Apple TV app, but not all content is available - iMore</a></li>
<li>
<strong>John on using his iPad</strong><ul>
<li><a href="https://johnwilker.com/2017/10/10/writing-wherever/">Writing wherever you are - johnwilker.com</a></li>
<li><a href="https://johnwilker.com/2016/06/21/i-might-finally-not-need-a-moleskine/">I might finally not need a moleskine - johnwilker.com</a></li>
<li><a href="https://johnwilker.com/2014/11/05/wheres-the-ipad-fit-in/">Where's the iPad fit in? - johnwilker.com</a></li>
<li><a href="https://johnwilker.com/2010/04/ipad-nice-but-not-magical-yet-my-review/">iPad..... nice but not magical, yet (my Review) - johnwilker.com</a></li>
</ul>
</li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://revenuecat.com/"><strong>RevenueCat</strong></a><strong></strong></p><p>Using RevenueCat to power your in-app purchase infrastructure solves:</p><ul>
<li>For edge cases <strong>you don’t even know you have</strong>
</li>
<li>
<strong>Protects from outages</strong> your team hasn’t seen yet</li>
<li>Saves you time on<strong> future maintenance </strong>
</li>
<li>As well as <strong>new features released by the app stores</strong>
</li>
<li>
<strong>Empowers your marketing teams</strong> with clean, reliable IAP data</li>
</ul><p>All that to say, <strong>RevenueCat handles all the headaches of in-app purchases</strong> so you can get back to building your app. Try RevenueCat today at <a href="http://revenuecat.com/">revenuecat.com</a>.</p><p><a href="https://360idev.com/"><strong>360iDev - August 22 -25 (Hybrid)</strong></a></p><ul>
<li>The Leading indie iOS/Mac (and watchOS, and tvOS) Developer conference</li>
<li>It's all about Community and Code!</li>
<li>Four days of hands-on training, amazing sessions, and the great community. All Swift.</li>
<li>Available Online <strong>or </strong>In-Person</li>
</ul><p>Use the promo code <strong>EmpowerApps </strong>to get <a href="https://360idev.com/"><strong>25% off registration.</strong></a></p><p><b>Hosting Conferences Today</b></p><ul>
<li>Different Challenges with 2021 vs 2020</li>
<li>Getting Signups and Registrations</li>
<li>Improvements to Online Platforms</li>
<li>Dealing with Zoom Fatigue</li>
</ul><p><b>Being a Speaker</b></p><ul>
<li>There's always something the audience can learn</li>
<li>Teaching as a novice and avoiding missing steps</li>
<li>Practice at your "local" meeting or on a podcast 😁</li>
<li>Encourage others to speaker for the first time </li>
<li><em>The More The Merrier</em></li>
</ul><p><b>WWDC Wish List</b></p><ul>
<li>Allowing more content available on Apple TV</li>
<li>Leo's novice experiences with Apple TV</li>
<li>Thoughts on multi-user Fitness+</li>
<li>Apple Watch Band for Watch Enthusiasts?</li>
<li>More Interactive Widgets on iOS 15</li>
<li>iPad Pro vs Mac Book Air M1 </li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.reddit.com/user/leogdion"><strong>Reddit</strong><br>Leo - /u/leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://johnwilker.com"><strong>John Wilker (johnwilker.com)</strong></a><ul>
<li>
<a href="https://360idev.com"><strong>360|iDev</strong></a> - August 22 - 25, 2021<ul><li>
<strong>Use the promo code EmpowerApps to get </strong><a href="https://360idev.com/"><strong>25% off registration.</strong></a>
</li></ul>
</li>
<li><a href="https://twitter.com/jwilker">Twitter (jwilker)</a></li>
<li><a href="https://www.instagram.com/johntwilker/">Instagram (johntwilker)</a></li>
<li><a href="https://360conferences.com"><strong>360Conferences</strong></a></li>
</ul>
</li></ul><p><a href="https://youtu.be/XXQB24mqQp4"><strong>Youtube Video - </strong>https://youtu.be/XXQB24mqQp4</a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/eba8ef64">Episode 36 - Upgrading Your Skills in 2020 with Paul Hudson</a></li>
<li><a href="https://share.transistor.fm/s/a34307ee">Episode 9 - iPad Apps for Businesses and Pros</a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.apple.com/newsroom/2021/03/apples-worldwide-developers-conference-is-back-in-its-all-online-format/">WWDC 2021 Announced</a></li>
<li><a href="https://www.goodnotes.com">GoodNotes</a></li>
<li><a href="%20https://www.literatureandlatte.com/scrivener/overview">Scrivener</a></li>
<li><a href="https://360idev.com/call-for-papers/">360|iDev 2021 Call For Papers will close May 7, 2021!</a></li>
<li><a href="https://www.imore.com/plex-now-works-apple-tv-app-not-all-content-available">Plex now works with the Apple TV app, but not all content is available - iMore</a></li>
<li>
<strong>John on using his iPad</strong><ul>
<li><a href="https://johnwilker.com/2017/10/10/writing-wherever/">Writing wherever you are - johnwilker.com</a></li>
<li><a href="https://johnwilker.com/2016/06/21/i-might-finally-not-need-a-moleskine/">I might finally not need a moleskine - johnwilker.com</a></li>
<li><a href="https://johnwilker.com/2014/11/05/wheres-the-ipad-fit-in/">Where's the iPad fit in? - johnwilker.com</a></li>
<li><a href="https://johnwilker.com/2010/04/ipad-nice-but-not-magical-yet-my-review/">iPad..... nice but not magical, yet (my Review) - johnwilker.com</a></li>
</ul>
</li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://revenuecat.com/"><strong>RevenueCat</strong></a><strong></strong></p><p>Using RevenueCat to power your in-app purchase infrastructure solves:</p><ul>
<li>For edge cases <strong>you don’t even know you have</strong>
</li>
<li>
<strong>Protects from outages</strong> your team hasn’t seen yet</li>
<li>Saves you time on<strong> future maintenance </strong>
</li>
<li>As well as <strong>new features released by the app stores</strong>
</li>
<li>
<strong>Empowers your marketing teams</strong> with clean, reliable IAP data</li>
</ul><p>All that to say, <strong>RevenueCat handles all the headaches of in-app purchases</strong> so you can get back to building your app. Try RevenueCat today at <a href="http://revenuecat.com/">revenuecat.com</a>.</p><p><a href="https://360idev.com/"><strong>360iDev - August 22 -25 (Hybrid)</strong></a></p><ul>
<li>The Leading indie iOS/Mac (and watchOS, and tvOS) Developer conference</li>
<li>It's all about Community and Code!</li>
<li>Four days of hands-on training, amazing sessions, and the great community. All Swift.</li>
<li>Available Online <strong>or </strong>In-Person</li>
</ul><p>Use the promo code <strong>EmpowerApps </strong>to get <a href="https://360idev.com/"><strong>25% off registration.</strong></a></p><p><b>Hosting Conferences Today</b></p><ul>
<li>Different Challenges with 2021 vs 2020</li>
<li>Getting Signups and Registrations</li>
<li>Improvements to Online Platforms</li>
<li>Dealing with Zoom Fatigue</li>
</ul><p><b>Being a Speaker</b></p><ul>
<li>There's always something the audience can learn</li>
<li>Teaching as a novice and avoiding missing steps</li>
<li>Practice at your "local" meeting or on a podcast 😁</li>
<li>Encourage others to speaker for the first time </li>
<li><em>The More The Merrier</em></li>
</ul><p><b>WWDC Wish List</b></p><ul>
<li>Allowing more content available on Apple TV</li>
<li>Leo's novice experiences with Apple TV</li>
<li>Thoughts on multi-user Fitness+</li>
<li>Apple Watch Band for Watch Enthusiasts?</li>
<li>More Interactive Widgets on iOS 15</li>
<li>iPad Pro vs Mac Book Air M1 </li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.reddit.com/user/leogdion"><strong>Reddit</strong><br>Leo - /u/leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sat, 24 Apr 2021 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/30ff6bea/c30e596f.mp3" length="16940631" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/521759/full_1618874230-artwork.jpg"/>
      <itunes:duration>2052</itunes:duration>
      <itunes:summary>In this episode, Leo talks with John Wilker organizer of 360 Conferences including 360iDev. We talk about organizing conferences amidst the pandemic and transitioning back to in-person conferences. We also give our take on the upcoming WWDC 2021.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with John Wilker organizer of 360 Conferences including 360iDev. We talk about organizing conferences amidst the pandemic and transitioning back to in-person conferences. We also give our take on the upcoming WWDC 2021.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Core Data Fun with Tim Mitra</title>
      <itunes:episode>87</itunes:episode>
      <itunes:title>Core Data Fun with Tim Mitra</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">ba7b1cdb-2cdc-4112-bf0b-216b5cb0115f</guid>
      <link>https://share.transistor.fm/s/448ffe27</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://it-guy.com"><strong>Tim Mitra (website)</strong></a><ul>
<li><a href="https://twitter.com/timmitra">Twitter @TimMitra</a></li>
<li>
<a href="https://mtjc.fireside.fm/">More Than Just Code Podcast</a> </li>
<li>
<a href="http://spockcast.com/">Spockcast</a> Podcast</li>
<li><a href="https://podcasts.apple.com/au/podcast/pragmatic-heros-journey/id1548518533">Pragmatic Hero's Journe‪y</a></li>
<li><a href="https://roundaboutfm.com/">RoundaboutFM</a></li>
</ul>
</li></ul><p><a href="https://youtu.be/SwVF-wihDvE"><strong>Youtube Video - https://youtu.be/SwVF-wihDvE</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/8442feb7">Episode 47 - Practical Combine with Donny Wals</a></li>
<li><a href="https://share.transistor.fm/s/f6092e38">Episode 62 - Local Database Storage on iOS with Aaron Douglas</a></li>
<li><a href="https://okproductive.com/episodes/030-neuroplasticity-with-tim-mitra">Ok Productive - 030. Neuroplasticity with Tim Mitra</a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.apple.com/newsroom/2021/03/apples-worldwide-developers-conference-is-back-in-its-all-online-format/">WWDC 2021 Announced</a></li>
<li><a href="https://www.swiftconf.to">Swift TO</a></li>
<li><a href="https://github.com/brightdigit/MistKit">MistKit - Swift Package for Server-Side and Command-Line Access to CloudKit Web Services</a></li>
<li><a href="https://developer.apple.com/documentation/coredata/nspersistentcloudkitcontainer">NSPersistentCloudKitContainer</a></li>
<li><a href="https://developer.apple.com/documentation/coredata/mirroring_a_core_data_store_with_cloudkit/setting_up_core_data_with_cloudkit">Setting Up Core Data with CloudKit - Apple Docs</a></li>
<li>
<a href="https://github.com/JohnEstropia/CoreStore">CoreStore by John Estropia </a>- real power of Core Data with the elegance and safety of Swift</li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://revenuecat.com/"><strong>RevenueCat</strong></a><strong></strong></p><p>Using RevenueCat to power your in-app purchase infrastructure solves:</p><ul>
<li>For edge cases <strong>you don’t even know you have</strong>
</li>
<li>
<strong>Protects from outages</strong> your team hasn’t seen yet</li>
<li>Saves you time on<strong> future maintenance </strong>
</li>
<li>As well as <strong>new features released by the app stores</strong>
</li>
<li>
<strong>Empowers your marketing teams</strong> with clean, reliable IAP data</li>
</ul><p>All that to say, <strong>RevenueCat handles all the headaches of in-app purchases</strong> so you can get back to building your app. Try RevenueCat today at <a href="http://revenuecat.com/">revenuecat.com</a>.</p><p><b>Building Apps with Core Data Today</b></p><ul>
<li>Working with CloudKit and CoreData</li>
<li>Fun with SwiftUI and CoreData</li>
<li>Learning how to use AppData</li>
<li>Power of Combine</li>
<li>How to Sync Subscriptions with Core Data</li>
<li>CloudKit on the Server</li>
<li>Business Problems with CloudKit</li>
<li>Why Choose Core Data?</li>
<li>Power of Live Previews</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.reddit.com/user/leogdion"><strong>Reddit</strong><br>Leo - /u/leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://it-guy.com"><strong>Tim Mitra (website)</strong></a><ul>
<li><a href="https://twitter.com/timmitra">Twitter @TimMitra</a></li>
<li>
<a href="https://mtjc.fireside.fm/">More Than Just Code Podcast</a> </li>
<li>
<a href="http://spockcast.com/">Spockcast</a> Podcast</li>
<li><a href="https://podcasts.apple.com/au/podcast/pragmatic-heros-journey/id1548518533">Pragmatic Hero's Journe‪y</a></li>
<li><a href="https://roundaboutfm.com/">RoundaboutFM</a></li>
</ul>
</li></ul><p><a href="https://youtu.be/SwVF-wihDvE"><strong>Youtube Video - https://youtu.be/SwVF-wihDvE</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/8442feb7">Episode 47 - Practical Combine with Donny Wals</a></li>
<li><a href="https://share.transistor.fm/s/f6092e38">Episode 62 - Local Database Storage on iOS with Aaron Douglas</a></li>
<li><a href="https://okproductive.com/episodes/030-neuroplasticity-with-tim-mitra">Ok Productive - 030. Neuroplasticity with Tim Mitra</a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.apple.com/newsroom/2021/03/apples-worldwide-developers-conference-is-back-in-its-all-online-format/">WWDC 2021 Announced</a></li>
<li><a href="https://www.swiftconf.to">Swift TO</a></li>
<li><a href="https://github.com/brightdigit/MistKit">MistKit - Swift Package for Server-Side and Command-Line Access to CloudKit Web Services</a></li>
<li><a href="https://developer.apple.com/documentation/coredata/nspersistentcloudkitcontainer">NSPersistentCloudKitContainer</a></li>
<li><a href="https://developer.apple.com/documentation/coredata/mirroring_a_core_data_store_with_cloudkit/setting_up_core_data_with_cloudkit">Setting Up Core Data with CloudKit - Apple Docs</a></li>
<li>
<a href="https://github.com/JohnEstropia/CoreStore">CoreStore by John Estropia </a>- real power of Core Data with the elegance and safety of Swift</li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://revenuecat.com/"><strong>RevenueCat</strong></a><strong></strong></p><p>Using RevenueCat to power your in-app purchase infrastructure solves:</p><ul>
<li>For edge cases <strong>you don’t even know you have</strong>
</li>
<li>
<strong>Protects from outages</strong> your team hasn’t seen yet</li>
<li>Saves you time on<strong> future maintenance </strong>
</li>
<li>As well as <strong>new features released by the app stores</strong>
</li>
<li>
<strong>Empowers your marketing teams</strong> with clean, reliable IAP data</li>
</ul><p>All that to say, <strong>RevenueCat handles all the headaches of in-app purchases</strong> so you can get back to building your app. Try RevenueCat today at <a href="http://revenuecat.com/">revenuecat.com</a>.</p><p><b>Building Apps with Core Data Today</b></p><ul>
<li>Working with CloudKit and CoreData</li>
<li>Fun with SwiftUI and CoreData</li>
<li>Learning how to use AppData</li>
<li>Power of Combine</li>
<li>How to Sync Subscriptions with Core Data</li>
<li>CloudKit on the Server</li>
<li>Business Problems with CloudKit</li>
<li>Why Choose Core Data?</li>
<li>Power of Live Previews</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.reddit.com/user/leogdion"><strong>Reddit</strong><br>Leo - /u/leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Wed, 14 Apr 2021 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/448ffe27/95fbe9a5.mp3" length="19084224" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/513297/full_1617997258-artwork.jpg"/>
      <itunes:duration>2323</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Tim Mitra about his latest project using Core Data, CloudKit and SwiftUI. We also chat about podcasting and more.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Tim Mitra about his latest project using Core Data, CloudKit and SwiftUI. We also chat about podcasting and more.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Third-Party APIs with Christian Selig</title>
      <itunes:episode>86</itunes:episode>
      <itunes:title>Third-Party APIs with Christian Selig</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">45c08c0c-e79b-4329-826a-d8a4e6d0a547</guid>
      <link>https://share.transistor.fm/s/ec2c53c2</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://christianselig.com"><strong>Christian Selig (website)</strong></a><ul>
<li><a href="https://twitter.com/ChristianSelig">Twitter @ChristianSelig</a></li>
<li><a href="https://www.reddit.com/user/iamthatis">Reddit /u/iamthatis</a></li>
<li><a href="https://www.youtube.com/user/CLeeSelig">YouTube CLeeSelig</a></li>
<li><a href="https://apolloapp.io"><strong>ApolloApp</strong></a></li>
</ul>
</li></ul><p><a href="https://youtu.be/rhVazmvPTYo"><strong>Youtube Video - https://youtu.be/rhVazmvPTYo</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/0d12719b">Episode 73 - Multi-Platform SwiftUI with Malin Sundberg</a></li>
<li><a href="https://share.transistor.fm/s/35474f21">Episode 66 - UI Design for Developers with Heidi Helen Pilypas</a></li>
<li><a href="https://share.transistor.fm/s/0aedd602">Episode 38 - Accessibility with Kim Arnett</a></li>
<li><a href="https://share.transistor.fm/s/29d6ee9b">Episode 31 - Future Proofing Your Apps with Gui Rambo</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://revenuecat.com%20"><strong>RevenueCat</strong></a><strong></strong></p><p>Using RevenueCat to power your in-app purchase infrastructure solves:</p><ul>
<li>For edge cases <strong>you don’t even know you have</strong>
</li>
<li>
<strong>Protects from outages</strong> your team hasn’t seen yet</li>
<li>Saves you time on<strong> future maintenance </strong>
</li>
<li>As well as <strong>new features released by the app stores</strong>
</li>
<li>
<strong>Empowers your marketing teams</strong> with clean, reliable IAP data</li>
</ul><p>All that to say, <strong>RevenueCat handles all the headaches of in-app purchases</strong> so you can get back to building your app. Try RevenueCat today at <a href="http://revenuecat.com/">revenuecat.com</a>.</p><p><b>How building around Reddit works?</b></p><ul>
<li>Why Reddit is easier than Twitter?</li>
<li>How the variety in apps helps the experience?</li>
<li>Simplicity and Native Features</li>
<li>Dealing with <em>Walled Gardens</em> like Reddit Chat</li>
</ul><p><b>How Apollo works?</b></p><ul>
<li>How Server-Side Push Notifications</li>
<li>Dealing with Imgur</li>
<li>Whether to use third-party library</li>
<li>Finding great beta users</li>
<li>Testing Accessibility </li>
<li>UI Design notes</li>
<li>Building Widgets with SwiftUI</li>
<li>Finding a user community</li>
<li>Designing great gestures</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.reddit.com/user/leogdion"><strong>Reddit</strong><br>Leo - /u/leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://christianselig.com"><strong>Christian Selig (website)</strong></a><ul>
<li><a href="https://twitter.com/ChristianSelig">Twitter @ChristianSelig</a></li>
<li><a href="https://www.reddit.com/user/iamthatis">Reddit /u/iamthatis</a></li>
<li><a href="https://www.youtube.com/user/CLeeSelig">YouTube CLeeSelig</a></li>
<li><a href="https://apolloapp.io"><strong>ApolloApp</strong></a></li>
</ul>
</li></ul><p><a href="https://youtu.be/rhVazmvPTYo"><strong>Youtube Video - https://youtu.be/rhVazmvPTYo</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/0d12719b">Episode 73 - Multi-Platform SwiftUI with Malin Sundberg</a></li>
<li><a href="https://share.transistor.fm/s/35474f21">Episode 66 - UI Design for Developers with Heidi Helen Pilypas</a></li>
<li><a href="https://share.transistor.fm/s/0aedd602">Episode 38 - Accessibility with Kim Arnett</a></li>
<li><a href="https://share.transistor.fm/s/29d6ee9b">Episode 31 - Future Proofing Your Apps with Gui Rambo</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://revenuecat.com%20"><strong>RevenueCat</strong></a><strong></strong></p><p>Using RevenueCat to power your in-app purchase infrastructure solves:</p><ul>
<li>For edge cases <strong>you don’t even know you have</strong>
</li>
<li>
<strong>Protects from outages</strong> your team hasn’t seen yet</li>
<li>Saves you time on<strong> future maintenance </strong>
</li>
<li>As well as <strong>new features released by the app stores</strong>
</li>
<li>
<strong>Empowers your marketing teams</strong> with clean, reliable IAP data</li>
</ul><p>All that to say, <strong>RevenueCat handles all the headaches of in-app purchases</strong> so you can get back to building your app. Try RevenueCat today at <a href="http://revenuecat.com/">revenuecat.com</a>.</p><p><b>How building around Reddit works?</b></p><ul>
<li>Why Reddit is easier than Twitter?</li>
<li>How the variety in apps helps the experience?</li>
<li>Simplicity and Native Features</li>
<li>Dealing with <em>Walled Gardens</em> like Reddit Chat</li>
</ul><p><b>How Apollo works?</b></p><ul>
<li>How Server-Side Push Notifications</li>
<li>Dealing with Imgur</li>
<li>Whether to use third-party library</li>
<li>Finding great beta users</li>
<li>Testing Accessibility </li>
<li>UI Design notes</li>
<li>Building Widgets with SwiftUI</li>
<li>Finding a user community</li>
<li>Designing great gestures</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.reddit.com/user/leogdion"><strong>Reddit</strong><br>Leo - /u/leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 04 Apr 2021 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/ec2c53c2/d0d2054f.mp3" length="21573858" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/504447/full_1617116438-artwork.jpg"/>
      <itunes:duration>2631</itunes:duration>
      <itunes:summary>In this episode, Leo chats with Christian Selig creator of Apollo about his process and the challenges with developing an app based around a third-party API like Reddit... also we talk about 🥫 spaghetti sauce🍝 and new Coke🥤</itunes:summary>
      <itunes:subtitle>In this episode, Leo chats with Christian Selig creator of Apollo about his process and the challenges with developing an app based around a third-party API like Reddit... also we talk about 🥫 spaghetti sauce🍝 and new Coke🥤</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>AWS Amplify with Kilo Loco</title>
      <itunes:episode>85</itunes:episode>
      <itunes:title>AWS Amplify with Kilo Loco</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">a410b9fa-4cf0-407c-a95f-283266f6ce6b</guid>
      <link>https://share.transistor.fm/s/9a225bb3</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://www.kiloloco.com">Kilo Loco</a><ul>
<li><a href="https://twitter.com/kilo_loco">Twitter</a></li>
<li><a href="https://youtube.com/kiloloco">Youtube</a></li>
<li><a href="https://www.linkedin.com/in/kiloloco/">LinkedIn</a></li>
</ul>
</li></ul><p><a href="https://youtu.be/kQP7dCaKdEc"><strong>Youtube Video - https://youtu.be/kQP7dCaKdEc</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/38ce32c5"><strong>Episode 83 - Interviewing Tips with Kim Arnett</strong></a></li>
<li><a href="https://share.transistor.fm/s/a8b66b9f"><strong>Episode 75 - Year of the Server with Tim Condon - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/ffcb9fc1"><strong>Episode 10 - Cloud and Backend Services For Apps with Erik Gillespie</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://sandbox.amplifyapp.com/getting-started">Getting Started with AWS Amplify</a></li>
<li><a href="https://aws.amazon.com/free/">AWS Free Tier</a></li>
<li><a href="https://www.youtube.com/watch?v=BS4RlkRkI20">APNs Push Notifications for iOS Using AWS Lambda in Swift - Kilo Loco</a></li>
<li><a href="https://www.youtube.com/watch?v=8OYvpnycLIk&amp;list=PL5h37q2DJtAP_zjWjERNG-qwNIT9m1QCs">AWS Amplify Playlist - Kilo Loco</a></li>
<li><a href="https://github.com/aws-amplify/amplify-ios">AWS Amplify Repo</a></li>
<li><a href="https://aws.amazon.com/dynamodb/">Amazon DynamoDB</a></li>
<li><a href="https://aws.amazon.com/cognito/">Amazon Cognito</a></li>
<li><a href="https://docs.aws.amazon.com/sns/latest/dg/sns-mobile-application-as-subscriber.html">Amazon SNS</a></li>
<li>
<a href="https://docs.aws.amazon.com/pinpoint/latest/developerguide/mobile-push.html">Amazon Pinpoint</a> </li>
<li><a href="https://fuckingifcaseletsyntax.com">How <em>Do</em> I Write If Case Let in Swift?</a></li>
<li><a href="https://goshdarnswiftui.com">GoshDarnSwiftUI</a></li>
<li><a href="https://swiftuipropertywrappers.com">SwiftUIPropertyWrappers</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://swiftheroes.com/2021/"><strong>Swift Heroes Digital 2021</strong></a><strong></strong></p><p>Swift Heroes Digital is a one day event, for developers, designers and project managers at all levels of experience with the Swift platform. Combining resources from the Swift Heroes Global network, we’re excited to be bringing you this international, interactive event. </p><p>Share this code with your network and they receive 20% discount on all Swift Heroes tickets: SH21-SPEAKERS-COMMUNITY<br>Insert the code under 'redeem voucher' on the <a href="https://pretix.eu/advento/SH2021/">ticketing platform</a> to receive 20% discount on all ticket types.</p><p><b>What does AWS Amplify do?</b></p><ul>
<li>How it works with your iOS project</li>
<li>Why Amplify vs your own backend</li>
<li>How does it compare with other <em>MBaaS</em> services</li>
<li>What are the different components</li>
<li>How does it compare with something like SOTO</li>
<li>How does the cost compare</li>
<li>Can you opt-out later and use the individual services</li>
</ul><p><b>Getting Started with AWS Amplify</b></p><ul>
<li>Using Cocoapods vs SPM</li>
<li>How to use the AWS CLI</li>
<li>How to setup your data model in DynamoDB</li>
<li>How you can take advantage of AWS Lambda</li>
<li>How do you get started with Push Notifications and APNS</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://www.kiloloco.com">Kilo Loco</a><ul>
<li><a href="https://twitter.com/kilo_loco">Twitter</a></li>
<li><a href="https://youtube.com/kiloloco">Youtube</a></li>
<li><a href="https://www.linkedin.com/in/kiloloco/">LinkedIn</a></li>
</ul>
</li></ul><p><a href="https://youtu.be/kQP7dCaKdEc"><strong>Youtube Video - https://youtu.be/kQP7dCaKdEc</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/38ce32c5"><strong>Episode 83 - Interviewing Tips with Kim Arnett</strong></a></li>
<li><a href="https://share.transistor.fm/s/a8b66b9f"><strong>Episode 75 - Year of the Server with Tim Condon - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/ffcb9fc1"><strong>Episode 10 - Cloud and Backend Services For Apps with Erik Gillespie</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://sandbox.amplifyapp.com/getting-started">Getting Started with AWS Amplify</a></li>
<li><a href="https://aws.amazon.com/free/">AWS Free Tier</a></li>
<li><a href="https://www.youtube.com/watch?v=BS4RlkRkI20">APNs Push Notifications for iOS Using AWS Lambda in Swift - Kilo Loco</a></li>
<li><a href="https://www.youtube.com/watch?v=8OYvpnycLIk&amp;list=PL5h37q2DJtAP_zjWjERNG-qwNIT9m1QCs">AWS Amplify Playlist - Kilo Loco</a></li>
<li><a href="https://github.com/aws-amplify/amplify-ios">AWS Amplify Repo</a></li>
<li><a href="https://aws.amazon.com/dynamodb/">Amazon DynamoDB</a></li>
<li><a href="https://aws.amazon.com/cognito/">Amazon Cognito</a></li>
<li><a href="https://docs.aws.amazon.com/sns/latest/dg/sns-mobile-application-as-subscriber.html">Amazon SNS</a></li>
<li>
<a href="https://docs.aws.amazon.com/pinpoint/latest/developerguide/mobile-push.html">Amazon Pinpoint</a> </li>
<li><a href="https://fuckingifcaseletsyntax.com">How <em>Do</em> I Write If Case Let in Swift?</a></li>
<li><a href="https://goshdarnswiftui.com">GoshDarnSwiftUI</a></li>
<li><a href="https://swiftuipropertywrappers.com">SwiftUIPropertyWrappers</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://swiftheroes.com/2021/"><strong>Swift Heroes Digital 2021</strong></a><strong></strong></p><p>Swift Heroes Digital is a one day event, for developers, designers and project managers at all levels of experience with the Swift platform. Combining resources from the Swift Heroes Global network, we’re excited to be bringing you this international, interactive event. </p><p>Share this code with your network and they receive 20% discount on all Swift Heroes tickets: SH21-SPEAKERS-COMMUNITY<br>Insert the code under 'redeem voucher' on the <a href="https://pretix.eu/advento/SH2021/">ticketing platform</a> to receive 20% discount on all ticket types.</p><p><b>What does AWS Amplify do?</b></p><ul>
<li>How it works with your iOS project</li>
<li>Why Amplify vs your own backend</li>
<li>How does it compare with other <em>MBaaS</em> services</li>
<li>What are the different components</li>
<li>How does it compare with something like SOTO</li>
<li>How does the cost compare</li>
<li>Can you opt-out later and use the individual services</li>
</ul><p><b>Getting Started with AWS Amplify</b></p><ul>
<li>Using Cocoapods vs SPM</li>
<li>How to use the AWS CLI</li>
<li>How to setup your data model in DynamoDB</li>
<li>How you can take advantage of AWS Lambda</li>
<li>How do you get started with Push Notifications and APNS</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 28 Mar 2021 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/9a225bb3/89b3c87a.mp3" length="16296320" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/502294/full_1616851243-artwork.jpg"/>
      <itunes:duration>1971</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Kyle Lee otherwise known as Kilo Loco about AWS Amplify and how it helps iOS developers setup their full-stack application.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Kyle Lee otherwise known as Kilo Loco about AWS Amplify and how it helps iOS developers setup their full-stack application.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Automation Fun with Jared Sorge</title>
      <itunes:episode>84</itunes:episode>
      <itunes:title>Automation Fun with Jared Sorge</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">109cfd62-cfdf-4b29-9afe-27ff5bdc8be4</guid>
      <link>https://share.transistor.fm/s/bab83e8a</link>
      <description>
        <![CDATA[<p><b><a href="https://xcoders.org/2021/03/21/xcoders-podcast-march.html"><strong>Part 2 of Episode at Xcoders!</strong></a></b></p><ul><li>More on Swift Package Manager, Graphics Management, and Server-Side Dev 👆</li></ul><p><b>Guest</b></p><ul><li>
<a href="https://jsorge.net"><strong>Jared Sorge</strong></a><ul>
<li><a href="https://xcoders.org"><strong>Xcoders Podcast</strong></a></li>
<li><a href="https://micro.blog/jsorge">Micro.blog (@jsorge)</a></li>
<li><a href="https://twitter.com/jsorge">Twitter (@jsorge)</a></li>
<li><a href="http://github.com/jsorge">GitHub (@jsorge)</a></li>
<li><a href="https://www.linkedin.com/in/jsorge/">LinkedIn</a></li>
</ul>
</li></ul><p><a href="https://youtu.be/hWVfxNkY5Sw"><strong>Youtube Video - https://youtu.be/hWVfxNkY5Sw</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://xcoders.org/2021/03/23/xcoders-podcast-march.html"><strong>Xcoders Podcast - March 2021</strong></a></li>
<li><a href="https://share.transistor.fm/s/0d12719b"><strong>Episode 73</strong> - <strong>Multi-Platform SwiftUI with Malin Sundberg</strong></a></li>
<li><a href="https://share.transistor.fm/s/a14f868f"><strong>Episode 24 -</strong> <strong>Continuous Integration with Kyle Newsome</strong></a></li>
<li><a href="https://share.transistor.fm/s/30f5853f"><strong>Episode 80</strong> - <strong>A Tour of Software Testing with Christina Moulton</strong></a></li>
<li><a href="https://share.transistor.fm/s/4d6360c9"><strong>Episode 51</strong> - <strong>Haikus of Code with Erica Sadun - Part 1</strong></a></li>
<li><a href="https://share.transistor.fm/s/60a4bc92"><strong>Episode 52</strong> - <strong>Haikus of Code with Erica Sadun - Part 2</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li>
<a href="https://jsorge.net/2021/03/15/xcode-project-generation-a-primer"><strong>Xcode Project Generation: A Primer</strong></a><ul>
<li><a href="https://tuist.io">Tuist</a></li>
<li><a href="https://github.com/yonaskolb/XcodeGen">XcodeGen</a></li>
</ul>
</li>
<li>
<strong>App Distribution</strong><ul>
<li><a href="https://appcenter.ms">AppCenter</a></li>
<li><a href="https://github.com/microsoft/fastlane-plugin-appcenter">AppCenter Fastlane Plugin</a></li>
<li><a href="https://fastlane.tools">Fastlane</a></li>
<li><a href="https://developer.apple.com/testflight/">TestFlight</a></li>
<li><a href="https://sparkle-project.org">Sparkle</a></li>
</ul>
</li>
<li>
<strong>Continuous Integration</strong><ul>
<li><a href="https://www.jenkins.io">Jenkins</a></li>
<li><a href="https://about.gitlab.com/stages-devops-lifecycle/continuous-integration/">GitLab CI</a></li>
<li><a href="https://github.com/features/actions">Github Actions</a></li>
</ul>
</li>
<li>
<strong>Scripting</strong><ul>
<li><a href="https://github.com/JohnSundell/ShellOut">ShellOut</a></li>
<li><a href="https://github.com/mxcl/swift-sh">Swift-Sh</a></li>
<li><a href="https://github.com/apple/swift-argument-parser">ArgumentParser</a></li>
<li><a href="https://www.gnu.org/software/make/manual/html_node/Introduction.html">Makefiles</a></li>
<li><a href="https://github.com/ruby/rake">Rake for Ruby</a></li>
</ul>
</li>
<li>
<strong>Mac Development</strong><ul>
<li><a href="https://www.macstadium.com">MacStadium</a></li>
<li><a href="https://aws.amazon.com/ec2/instance-types/mac/">Macs in AWS</a></li>
<li><a href="https://www.docker.com">Docker</a></li>
<li><a href="https://github.com/sickcodes/Docker-OSX">Docker-OSX</a></li>
<li>
<a href="https://www.ansible.com">Ansible</a> </li>
<li><a href="https://www.chef.io">Chef</a></li>
</ul>
</li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://swiftheroes.com/2021/"><strong>Swift Heroes Digital 2021</strong></a><strong></strong></p><p>Swift Heroes Digital is a one day event, for developers, designers and project managers at all levels of experience with the Swift platform. Combining resources from the Swift Heroes Global network, we’re excited to be bringing you this international, interactive event. </p><p>Share this code with your network and they receive 20% discount on all Swift Heroes tickets: SH21-SPEAKERS-COMMUNITY<br>Insert the code under 'redeem voucher' on the <a href="https://pretix.eu/advento/SH2021/">ticketing platform</a> to receive 20% discount on all ticket types.</p><p><b>Why Automate</b></p><ul>
<li>Getting started with Continuous Integration</li>
<li>Avoiding Xcode Project Merges</li>
<li>Avoiding over-automation</li>
<li>Using test plans to empower your tests</li>
</ul><p><b>Automation Tools</b></p><ul>
<li>Xcodegen vs Tuist for Project Generation</li>
<li>Gitlab CI vs GitHub Actions vs Jenkins</li>
<li>The power of Fastlane</li>
<li>Yes Makefiles are still great!</li>
<li>Using ArgumentParser and ShellOut</li>
<li>macOS Development Challenges</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b><a href="https://xcoders.org/2021/03/21/xcoders-podcast-march.html"><strong>Part 2 of Episode at Xcoders!</strong></a></b></p><ul><li>More on Swift Package Manager, Graphics Management, and Server-Side Dev 👆</li></ul><p><b>Guest</b></p><ul><li>
<a href="https://jsorge.net"><strong>Jared Sorge</strong></a><ul>
<li><a href="https://xcoders.org"><strong>Xcoders Podcast</strong></a></li>
<li><a href="https://micro.blog/jsorge">Micro.blog (@jsorge)</a></li>
<li><a href="https://twitter.com/jsorge">Twitter (@jsorge)</a></li>
<li><a href="http://github.com/jsorge">GitHub (@jsorge)</a></li>
<li><a href="https://www.linkedin.com/in/jsorge/">LinkedIn</a></li>
</ul>
</li></ul><p><a href="https://youtu.be/hWVfxNkY5Sw"><strong>Youtube Video - https://youtu.be/hWVfxNkY5Sw</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://xcoders.org/2021/03/23/xcoders-podcast-march.html"><strong>Xcoders Podcast - March 2021</strong></a></li>
<li><a href="https://share.transistor.fm/s/0d12719b"><strong>Episode 73</strong> - <strong>Multi-Platform SwiftUI with Malin Sundberg</strong></a></li>
<li><a href="https://share.transistor.fm/s/a14f868f"><strong>Episode 24 -</strong> <strong>Continuous Integration with Kyle Newsome</strong></a></li>
<li><a href="https://share.transistor.fm/s/30f5853f"><strong>Episode 80</strong> - <strong>A Tour of Software Testing with Christina Moulton</strong></a></li>
<li><a href="https://share.transistor.fm/s/4d6360c9"><strong>Episode 51</strong> - <strong>Haikus of Code with Erica Sadun - Part 1</strong></a></li>
<li><a href="https://share.transistor.fm/s/60a4bc92"><strong>Episode 52</strong> - <strong>Haikus of Code with Erica Sadun - Part 2</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li>
<a href="https://jsorge.net/2021/03/15/xcode-project-generation-a-primer"><strong>Xcode Project Generation: A Primer</strong></a><ul>
<li><a href="https://tuist.io">Tuist</a></li>
<li><a href="https://github.com/yonaskolb/XcodeGen">XcodeGen</a></li>
</ul>
</li>
<li>
<strong>App Distribution</strong><ul>
<li><a href="https://appcenter.ms">AppCenter</a></li>
<li><a href="https://github.com/microsoft/fastlane-plugin-appcenter">AppCenter Fastlane Plugin</a></li>
<li><a href="https://fastlane.tools">Fastlane</a></li>
<li><a href="https://developer.apple.com/testflight/">TestFlight</a></li>
<li><a href="https://sparkle-project.org">Sparkle</a></li>
</ul>
</li>
<li>
<strong>Continuous Integration</strong><ul>
<li><a href="https://www.jenkins.io">Jenkins</a></li>
<li><a href="https://about.gitlab.com/stages-devops-lifecycle/continuous-integration/">GitLab CI</a></li>
<li><a href="https://github.com/features/actions">Github Actions</a></li>
</ul>
</li>
<li>
<strong>Scripting</strong><ul>
<li><a href="https://github.com/JohnSundell/ShellOut">ShellOut</a></li>
<li><a href="https://github.com/mxcl/swift-sh">Swift-Sh</a></li>
<li><a href="https://github.com/apple/swift-argument-parser">ArgumentParser</a></li>
<li><a href="https://www.gnu.org/software/make/manual/html_node/Introduction.html">Makefiles</a></li>
<li><a href="https://github.com/ruby/rake">Rake for Ruby</a></li>
</ul>
</li>
<li>
<strong>Mac Development</strong><ul>
<li><a href="https://www.macstadium.com">MacStadium</a></li>
<li><a href="https://aws.amazon.com/ec2/instance-types/mac/">Macs in AWS</a></li>
<li><a href="https://www.docker.com">Docker</a></li>
<li><a href="https://github.com/sickcodes/Docker-OSX">Docker-OSX</a></li>
<li>
<a href="https://www.ansible.com">Ansible</a> </li>
<li><a href="https://www.chef.io">Chef</a></li>
</ul>
</li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://swiftheroes.com/2021/"><strong>Swift Heroes Digital 2021</strong></a><strong></strong></p><p>Swift Heroes Digital is a one day event, for developers, designers and project managers at all levels of experience with the Swift platform. Combining resources from the Swift Heroes Global network, we’re excited to be bringing you this international, interactive event. </p><p>Share this code with your network and they receive 20% discount on all Swift Heroes tickets: SH21-SPEAKERS-COMMUNITY<br>Insert the code under 'redeem voucher' on the <a href="https://pretix.eu/advento/SH2021/">ticketing platform</a> to receive 20% discount on all ticket types.</p><p><b>Why Automate</b></p><ul>
<li>Getting started with Continuous Integration</li>
<li>Avoiding Xcode Project Merges</li>
<li>Avoiding over-automation</li>
<li>Using test plans to empower your tests</li>
</ul><p><b>Automation Tools</b></p><ul>
<li>Xcodegen vs Tuist for Project Generation</li>
<li>Gitlab CI vs GitHub Actions vs Jenkins</li>
<li>The power of Fastlane</li>
<li>Yes Makefiles are still great!</li>
<li>Using ArgumentParser and ShellOut</li>
<li>macOS Development Challenges</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 21 Mar 2021 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/bab83e8a/66c72d4d.mp3" length="15523304" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/493349/full_1616164675-artwork.jpg"/>
      <itunes:duration>1877</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Jared Sorge of Xcoders about how they automate some of the components of their Xcode build and the tools they use.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Jared Sorge of Xcoders about how they automate some of the components of their Xcode build and the tools they use.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Interviewing Tips with Kim Arnett</title>
      <itunes:episode>83</itunes:episode>
      <itunes:title>Interviewing Tips with Kim Arnett</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">dc10edb1-c686-460d-8669-92c821a8a8ca</guid>
      <link>https://share.transistor.fm/s/38ce32c5</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://kimarnett.com/"><strong>Kim Arnett (kimarnett.com)</strong></a><ul>
<li><a href="https://twitter.com/kaydacode"><strong>Twitter @kaydacode</strong></a></li>
<li><a href="https://dev.to/kaydacode"><strong>DEV.TO @kaydacode</strong></a></li>
</ul>
</li></ul><p><a href="https://youtu.be/UpUQY7sD9g4"><strong>Youtube Video - https://youtu.be/UpUQY7sD9g4</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/0aedd602">Episode 38 - Accessibility with Kim Arnett</a></li>
<li><a href="https://share.transistor.fm/s/382a5473">Episode 25 - Hiring an iOS Developer with John Knox</a></li>
<li><a href="https://share.transistor.fm/s/bcf9bb21">Episode 12 - iOS Developer Interviews with Alex Bush</a></li>
</ul><p><b>Related Links</b></p><ul><li><a href="https://twitter.com/kaydacode/status/1368955950573490177?s=20">Job Posting Tweet</a></li></ul><p><b>Sponsors</b></p><p><a href="https://heartwitch.app/"><strong>Heartwitch 1.4.1 released!</strong></a></p><ul>
<li>Live stream your health stats while you play the latest video games or exercise online. </li>
<li>Show your heart rate as you live stream with this watch app!</li>
</ul><p>Heartwitch is a combination Apple Watch and Web Application for sending your health data to a web browser window.</p><p>Use the promo code <strong>EMPOWERAPPSMARCH</strong> to get 3 months <em>premium </em>free<br><a href="https://heartwitch.app/"><strong>https://heartwitch.app/</strong></a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><b>Interviewing Techniques</b></p><ul>
<li>Removing Anxiety for the Process</li>
<li>Testing Skills Properly</li>
<li>Importance of Communication and People Skills</li>
<li>Creating a Welcoming Environment </li>
<li>Clear Intentions and Company Buy-In </li>
<li>Clear Job Postings</li>
</ul><p><b>What to Ask Company During Interview</b></p><ul>
<li>Find out about Turnover</li>
<li>How's their Diversity</li>
<li>What's their Day-to-Day Schedule</li>
<li>What's their priority for Mobile Development and iOS</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p>Music from https://filmmusic.io<br>"Blippy Trance" by Kevin MacLeod (https://incompetech.com)<br>License: CC BY (http://creativecommons.org/licenses/by/4.0/)</p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://kimarnett.com/"><strong>Kim Arnett (kimarnett.com)</strong></a><ul>
<li><a href="https://twitter.com/kaydacode"><strong>Twitter @kaydacode</strong></a></li>
<li><a href="https://dev.to/kaydacode"><strong>DEV.TO @kaydacode</strong></a></li>
</ul>
</li></ul><p><a href="https://youtu.be/UpUQY7sD9g4"><strong>Youtube Video - https://youtu.be/UpUQY7sD9g4</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/0aedd602">Episode 38 - Accessibility with Kim Arnett</a></li>
<li><a href="https://share.transistor.fm/s/382a5473">Episode 25 - Hiring an iOS Developer with John Knox</a></li>
<li><a href="https://share.transistor.fm/s/bcf9bb21">Episode 12 - iOS Developer Interviews with Alex Bush</a></li>
</ul><p><b>Related Links</b></p><ul><li><a href="https://twitter.com/kaydacode/status/1368955950573490177?s=20">Job Posting Tweet</a></li></ul><p><b>Sponsors</b></p><p><a href="https://heartwitch.app/"><strong>Heartwitch 1.4.1 released!</strong></a></p><ul>
<li>Live stream your health stats while you play the latest video games or exercise online. </li>
<li>Show your heart rate as you live stream with this watch app!</li>
</ul><p>Heartwitch is a combination Apple Watch and Web Application for sending your health data to a web browser window.</p><p>Use the promo code <strong>EMPOWERAPPSMARCH</strong> to get 3 months <em>premium </em>free<br><a href="https://heartwitch.app/"><strong>https://heartwitch.app/</strong></a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><b>Interviewing Techniques</b></p><ul>
<li>Removing Anxiety for the Process</li>
<li>Testing Skills Properly</li>
<li>Importance of Communication and People Skills</li>
<li>Creating a Welcoming Environment </li>
<li>Clear Intentions and Company Buy-In </li>
<li>Clear Job Postings</li>
</ul><p><b>What to Ask Company During Interview</b></p><ul>
<li>Find out about Turnover</li>
<li>How's their Diversity</li>
<li>What's their Day-to-Day Schedule</li>
<li>What's their priority for Mobile Development and iOS</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p>Music from https://filmmusic.io<br>"Blippy Trance" by Kevin MacLeod (https://incompetech.com)<br>License: CC BY (http://creativecommons.org/licenses/by/4.0/)</p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sat, 13 Mar 2021 19:28:58 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/38ce32c5/d6647fff.mp3" length="17156831" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/489933/full_1615582219-artwork.jpg"/>
      <itunes:duration>2080</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Kim Arnett about her interviewing and hiring experiences and what she's learned to improve the process for the candidate and the company as well.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Kim Arnett about her interviewing and hiring experiences and what she's learned to improve the process for the candidate and the company as well.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Game Development with Tammy Coron</title>
      <itunes:episode>82</itunes:episode>
      <itunes:title>Game Development with Tammy Coron</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">703c3c36-05a1-467b-bef8-1bd389033c07</guid>
      <link>https://share.transistor.fm/s/ee6bf4b1</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://tammycoron.com"><strong>Tammy Coron</strong></a><ul>
<li><a href="https://justwritecode.net">Just Write Code</a></li>
<li>
<a href="https://twitter.com/Paradox927">Twitter (@Paradox927</a>)</li>
<li><a href="https://www.linkedin.com/in/paradox927/">LinkedIn</a></li>
<li><a href="https://www.youtube.com/user/paradox927">YouTube</a></li>
<li>
<a href="https://apps.apple.com/us/app/gloop-drop/id1441553754">Gloop Drop game</a> </li>
</ul>
</li></ul><p><a href="https://youtu.be/cqhSz3-fZtI"><strong>Youtube Video - https://youtu.be/cqhSz3-fZtI</strong></a></p><p><b>Related Episodes</b></p><ul><li><a href="https://share.transistor.fm/s/2445da70">Episode 64 - A Very Remote Year with Jacob Gorban</a></li></ul><p><b>Related Links</b></p><ul>
<li><a href="https://pragprog.com/titles/tcswift/apple-game-frameworks-and-technologies/"><strong>Apple Game Frameworks and Technologies</strong> by Tammy Coron</a></li>
<li><a href="https://trello.com">Trello</a></li>
<li>Royalty Free Assets<ul>
<li><a href="%20https://opengameart.org">Open Game Art</a></li>
<li><a href="%20https://itch.io/game-assets/free">Itch</a></li>
<li><a href="https://www.reddit.com/r/gamedev/comments/1os10r/resources_for_freeroyaltyfree_assets_for_game_dev/">Resources for Free/Royalty-Free Assets for Game Dev from /r/gamedev</a></li>
</ul>
</li>
<li><a href="https://www.youtube.com/watch?v=3nGirZfKWJ0"><strong>Managing Multiple Projects Without Losing Your Mind (Probably)</strong> by Tammy Coron - 360iDev 2019</a></li>
<li><a href="https://brightdigit.com/blog/2021/02/25/working-remotely-ios-development/"><strong>Working Remotely: Best Practices for Distributed iOS development </strong>by Leo Dion</a></li>
<li>Games Tammy is Playing Now<ul>
<li><a href="https://apps.apple.com/us/app/all-of-you/id1497510732">All of You</a></li>
<li><a href="https://inmostgame.com">In Most</a></li>
</ul>
</li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://swiftheroes.com/2021/"><strong>Swift Heroes Digital 2021</strong></a><strong></strong></p><p>Swift Heroes Digital is a one day event, for developers, designers and project managers at all levels of experience with the Swift platform. Combining resources from the Swift Heroes Global network, we’re excited to be bringing you this international, interactive event. </p><p>Share this code with your network and they receive 20% discount on all Swift Heroes tickets: SH21-SPEAKERS-COMMUNITY<br>Insert the code under 'redeem voucher' on the <a href="https://pretix.eu/advento/SH2021/">ticketing platform</a> to receive 20% discount on all ticket types.</p><p><b>Why Game Development</b></p><ul>
<li>Where to get started</li>
<li>Native vs Cross-Platform</li>
<li>What is a Game Loop</li>
<li>How SpriteKit helps?</li>
<li>SceneKit vs Unity</li>
<li>Working with Game Controllers</li>
</ul><p><b>On Managing Multiple Projects</b></p><ul>
<li>Where to get started</li>
<li>Working Remotely</li>
<li>Staying Organized</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://tammycoron.com"><strong>Tammy Coron</strong></a><ul>
<li><a href="https://justwritecode.net">Just Write Code</a></li>
<li>
<a href="https://twitter.com/Paradox927">Twitter (@Paradox927</a>)</li>
<li><a href="https://www.linkedin.com/in/paradox927/">LinkedIn</a></li>
<li><a href="https://www.youtube.com/user/paradox927">YouTube</a></li>
<li>
<a href="https://apps.apple.com/us/app/gloop-drop/id1441553754">Gloop Drop game</a> </li>
</ul>
</li></ul><p><a href="https://youtu.be/cqhSz3-fZtI"><strong>Youtube Video - https://youtu.be/cqhSz3-fZtI</strong></a></p><p><b>Related Episodes</b></p><ul><li><a href="https://share.transistor.fm/s/2445da70">Episode 64 - A Very Remote Year with Jacob Gorban</a></li></ul><p><b>Related Links</b></p><ul>
<li><a href="https://pragprog.com/titles/tcswift/apple-game-frameworks-and-technologies/"><strong>Apple Game Frameworks and Technologies</strong> by Tammy Coron</a></li>
<li><a href="https://trello.com">Trello</a></li>
<li>Royalty Free Assets<ul>
<li><a href="%20https://opengameart.org">Open Game Art</a></li>
<li><a href="%20https://itch.io/game-assets/free">Itch</a></li>
<li><a href="https://www.reddit.com/r/gamedev/comments/1os10r/resources_for_freeroyaltyfree_assets_for_game_dev/">Resources for Free/Royalty-Free Assets for Game Dev from /r/gamedev</a></li>
</ul>
</li>
<li><a href="https://www.youtube.com/watch?v=3nGirZfKWJ0"><strong>Managing Multiple Projects Without Losing Your Mind (Probably)</strong> by Tammy Coron - 360iDev 2019</a></li>
<li><a href="https://brightdigit.com/blog/2021/02/25/working-remotely-ios-development/"><strong>Working Remotely: Best Practices for Distributed iOS development </strong>by Leo Dion</a></li>
<li>Games Tammy is Playing Now<ul>
<li><a href="https://apps.apple.com/us/app/all-of-you/id1497510732">All of You</a></li>
<li><a href="https://inmostgame.com">In Most</a></li>
</ul>
</li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://swiftheroes.com/2021/"><strong>Swift Heroes Digital 2021</strong></a><strong></strong></p><p>Swift Heroes Digital is a one day event, for developers, designers and project managers at all levels of experience with the Swift platform. Combining resources from the Swift Heroes Global network, we’re excited to be bringing you this international, interactive event. </p><p>Share this code with your network and they receive 20% discount on all Swift Heroes tickets: SH21-SPEAKERS-COMMUNITY<br>Insert the code under 'redeem voucher' on the <a href="https://pretix.eu/advento/SH2021/">ticketing platform</a> to receive 20% discount on all ticket types.</p><p><b>Why Game Development</b></p><ul>
<li>Where to get started</li>
<li>Native vs Cross-Platform</li>
<li>What is a Game Loop</li>
<li>How SpriteKit helps?</li>
<li>SceneKit vs Unity</li>
<li>Working with Game Controllers</li>
</ul><p><b>On Managing Multiple Projects</b></p><ul>
<li>Where to get started</li>
<li>Working Remotely</li>
<li>Staying Organized</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 07 Mar 2021 00:00:00 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/ee6bf4b1/74e9e509.mp3" length="18435939" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/474558/full_1614786743-artwork.jpg"/>
      <itunes:duration>2240</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Tammy Coron of Just Write Code about her new book Apple Game Frameworks and Technologies. We cover SpriteKit, SceneKit, Unity as well how Tammy stays organized with all her game dev, writing, and public speaking projects.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Tammy Coron of Just Write Code about her new book Apple Game Frameworks and Technologies. We cover SpriteKit, SceneKit, Unity as well how Tammy stays organized with all her game dev, writing, and public speaking projects.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Awaiting for Async with Vincent Pradeilles</title>
      <itunes:episode>81</itunes:episode>
      <itunes:title>Awaiting for Async with Vincent Pradeilles</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">2cb40db7-9fb9-4556-b0e7-5d08e21dd5ed</guid>
      <link>https://share.transistor.fm/s/593efb15</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<strong>Vincent Pradeilles </strong><ul>
<li><a href="https://twitter.com/v_pradeilles">Twitter @v_pradeilles</a></li>
<li><a href="https://www.youtube.com/c/vincentpradeilles">YouTube Channel (vincentpradeilles)</a></li>
<li><a href="https://github.com/vincent-pradeilles/">GitHub</a></li>
<li><a href="https://www.linkedin.com/in/vincentpradeilles/">LinkedIn</a></li>
<li><a href="https://twitter.com/ios_memes">Also iOS Memes 😆 ... </a></li>
</ul>
</li></ul><p><a href="https://youtu.be/hcVJSu7we5w"><strong>Youtube Video - https://youtu.be/hcVJSu7we5w</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/a8b66b9f"><strong>Episode 75</strong> - <strong>Year of the Server with Tim Condon - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/b203049d"><strong>Episode 72 -</strong> <strong>Functional Programming with Daniel Steinberg</strong></a></li>
<li><a href="https://share.transistor.fm/s/8442feb7"><strong>Episode 47 -</strong> <strong>Practical Combine with Donny Wals</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://github.com/apple/swift-evolution/blob/main/proposals/0296-async-await.md">Swift Evolution Proposal</a></li>
<li>
<a href="https://learningswift.brightdigit.com/asynchronous-multi-threaded-parallel-world-of-swift/">Asynchronous Multi-Threaded Parallel World of Swift</a> by Leo </li>
<li><a href="https://www.youtube.com/watch?v=C0tx4Cionus">Experimenting with async &amp; await in Swift by Vincent</a></li>
<li><a href="https://www.youtube.com/watch?v=IwAO06Xt4OY">Running tasks in parallel using async/await 🚀 by Vincent</a></li>
<li><a href="https://github.com/mxcl/PromiseKit">PromiseKit by Max Howell</a></li>
<li><a href="https://docs.vapor.codes/4.0/async/">EventLoopFuture in Vapor (and SwiftNIO)</a></li>
<li><a href="https://github.com/leogdion/AsyncAwaitSwift">Leo's Async Await Test Code</a></li>
<li><a href="https://gist.github.com/lattner/429b9070918248274f25b714dcfc7619">Chris Lattner's Async Proposal</a></li>
<li><a href="https://www.enekoalonso.com/articles/getting-started-with-async-await-in-swift">Getting started with async/await in Swift by Eneko Alonso</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://swiftheroes.com/2021/"><strong>Swift Heroes Digital 2021</strong></a><strong></strong></p><p>Swift Heroes Digital is a one day event, for developers, designers and project managers at all levels of experience with the Swift platform. Combining resources from the Swift Heroes Global network, we’re excited to be bringing you this international, interactive event. </p><p>Share this code with your network and they receive 20% discount on all Swift Heroes tickets: SH21-SPEAKERS-COMMUNITY<br>Insert the code under 'redeem voucher' on the <a href="https://pretix.eu/advento/SH2021/">ticketing platform</a> to receive 20% discount on all ticket types.</p><p><b>Dealing with Asynchronous Calls Now</b></p><ul>
<li>Dealing with GCD</li>
<li>History of CPU Cores and Asynchronous Programming</li>
<li>Power of GCD and Queues</li>
<li>How Promises fit in with Swift</li>
<li>Managing Network Call Asynchronously</li>
<li>Dealing with UI Changes</li>
<li>What is a DispatchGroup</li>
</ul><p><b>What Await and Async Provide</b></p><ul>
<li>Avoiding Blocking the Main Thread</li>
<li>Subscribing/Publisher vs Async/Await</li>
<li>How do <em>Tasks</em> work</li>
<li>How to get started <strong>now</strong> with Async and Await</li>
<li>What are <em>Continuations</em>
</li>
<li>What is an <em>Unsafe Continuation</em>
</li>
<li>Dealing with Errors in Async Functions</li>
<li>How do parallel asynchronous tasks</li>
<li>How Combine works with Async/Await</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<strong>Vincent Pradeilles </strong><ul>
<li><a href="https://twitter.com/v_pradeilles">Twitter @v_pradeilles</a></li>
<li><a href="https://www.youtube.com/c/vincentpradeilles">YouTube Channel (vincentpradeilles)</a></li>
<li><a href="https://github.com/vincent-pradeilles/">GitHub</a></li>
<li><a href="https://www.linkedin.com/in/vincentpradeilles/">LinkedIn</a></li>
<li><a href="https://twitter.com/ios_memes">Also iOS Memes 😆 ... </a></li>
</ul>
</li></ul><p><a href="https://youtu.be/hcVJSu7we5w"><strong>Youtube Video - https://youtu.be/hcVJSu7we5w</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/a8b66b9f"><strong>Episode 75</strong> - <strong>Year of the Server with Tim Condon - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/b203049d"><strong>Episode 72 -</strong> <strong>Functional Programming with Daniel Steinberg</strong></a></li>
<li><a href="https://share.transistor.fm/s/8442feb7"><strong>Episode 47 -</strong> <strong>Practical Combine with Donny Wals</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://github.com/apple/swift-evolution/blob/main/proposals/0296-async-await.md">Swift Evolution Proposal</a></li>
<li>
<a href="https://learningswift.brightdigit.com/asynchronous-multi-threaded-parallel-world-of-swift/">Asynchronous Multi-Threaded Parallel World of Swift</a> by Leo </li>
<li><a href="https://www.youtube.com/watch?v=C0tx4Cionus">Experimenting with async &amp; await in Swift by Vincent</a></li>
<li><a href="https://www.youtube.com/watch?v=IwAO06Xt4OY">Running tasks in parallel using async/await 🚀 by Vincent</a></li>
<li><a href="https://github.com/mxcl/PromiseKit">PromiseKit by Max Howell</a></li>
<li><a href="https://docs.vapor.codes/4.0/async/">EventLoopFuture in Vapor (and SwiftNIO)</a></li>
<li><a href="https://github.com/leogdion/AsyncAwaitSwift">Leo's Async Await Test Code</a></li>
<li><a href="https://gist.github.com/lattner/429b9070918248274f25b714dcfc7619">Chris Lattner's Async Proposal</a></li>
<li><a href="https://www.enekoalonso.com/articles/getting-started-with-async-await-in-swift">Getting started with async/await in Swift by Eneko Alonso</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://swiftheroes.com/2021/"><strong>Swift Heroes Digital 2021</strong></a><strong></strong></p><p>Swift Heroes Digital is a one day event, for developers, designers and project managers at all levels of experience with the Swift platform. Combining resources from the Swift Heroes Global network, we’re excited to be bringing you this international, interactive event. </p><p>Share this code with your network and they receive 20% discount on all Swift Heroes tickets: SH21-SPEAKERS-COMMUNITY<br>Insert the code under 'redeem voucher' on the <a href="https://pretix.eu/advento/SH2021/">ticketing platform</a> to receive 20% discount on all ticket types.</p><p><b>Dealing with Asynchronous Calls Now</b></p><ul>
<li>Dealing with GCD</li>
<li>History of CPU Cores and Asynchronous Programming</li>
<li>Power of GCD and Queues</li>
<li>How Promises fit in with Swift</li>
<li>Managing Network Call Asynchronously</li>
<li>Dealing with UI Changes</li>
<li>What is a DispatchGroup</li>
</ul><p><b>What Await and Async Provide</b></p><ul>
<li>Avoiding Blocking the Main Thread</li>
<li>Subscribing/Publisher vs Async/Await</li>
<li>How do <em>Tasks</em> work</li>
<li>How to get started <strong>now</strong> with Async and Await</li>
<li>What are <em>Continuations</em>
</li>
<li>What is an <em>Unsafe Continuation</em>
</li>
<li>Dealing with Errors in Async Functions</li>
<li>How do parallel asynchronous tasks</li>
<li>How Combine works with Async/Await</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Fri, 26 Feb 2021 00:00:00 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/593efb15/538fa1ff.mp3" length="21759791" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/469038/full_1613855866-artwork.jpg"/>
      <itunes:duration>2656</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Vincent Pradeilles about the new async and await features coming to Swift. Leo and Vincent get into the challenges adopting it and the design around as well as how it helps to help with building multi-threaded asynchronous applications.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Vincent Pradeilles about the new async and await features coming to Swift. Leo and Vincent get into the challenges adopting it and the design around as well as how it helps to help with building multi-threaded asynchronous </itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>A Tour of Software Testing with Christina Moulton</title>
      <itunes:episode>80</itunes:episode>
      <itunes:title>A Tour of Software Testing with Christina Moulton</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">84f2a635-a8b9-44cd-97a0-638a0f45be6d</guid>
      <link>https://share.transistor.fm/s/30f5853f</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/christinamltn">Christina Moulton - @ChristinaMltn</a><ul><li><a href="https://grokswift.com">GrokSwift.com</a></li></ul>
</li></ul><p><a href="https://youtu.be/5LShKIwHEsA"><strong>Youtube Video - https://youtu.be/5LShKIwHEsA</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/e6621ded"><strong>Episode 77 - Swift Package Index with Sven A. Schmidt</strong></a></li>
<li><a href="https://share.transistor.fm/s/a14f868f"><strong>Episode 24 - Continuous Integration with Kyle Newsome</strong></a></li>
<li>
<a href="https://share.transistor.fm/s/eddb8632"><strong>Episode 15 - Test-Driven Development with Joshua Greene and Michael Katz</strong></a> </li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://developer.apple.com/documentation/xcode/testing_your_apps_in_xcode"><strong>Testing Your Apps in Xcode from Apple Docs</strong></a></li>
<li><a href="https://github.com/pointfreeco/swift-snapshot-testing"><strong>SnapshotTesting by PointFreeCo</strong></a></li>
<li><a href="https://www.pointfree.co/episodes/ep41-a-tour-of-snapshot-testing"><strong>PointFreeCo Episode 41 - A Tour of Snapshot Testing</strong></a></li>
<li>
<a href="https://github.com/kif-framework/KIF"><strong>KIF</strong></a><strong> </strong>
</li>
<li><a href="%20https://cucumber.io"><strong>Cucumber</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://transistor.fm/?via=empowerapps"><strong>Transistor.Fm</strong></a><br><em>Your podcast's publishing platform<br></em>Transistor not only hosts your podcast but also:</p><ul>
<li>
<strong>Help distribute your podcast with integrations</strong> to Apple Podcasts, Spotify, Google Podcasts, YouTube, and Mailchimp</li>
<li>
<strong>Deep analytics</strong> including average downloads per episode, popular podcast apps, number of subscribers, trends</li>
<li>
<strong>Professional support</strong> for creatives, businesses, and professional podcasters when it comes to hosting and analytics</li>
</ul><p><a href="https://transistor.fm/how-to-start-a-podcast/?via=empowerapps"><strong>How do you start a podcast?</strong></a><br><a href="https://transistor.fm/how-to-start-a-podcast/?via=empowerapps">https://transistor.fm/how-to-start-a-podcast/?via=empowerapps</a></p><p>Try it today with<a href="https://transistor.fm/?via=empowerapps"> this special link:</a><br><a href="https://transistor.fm/?via=empowerapps">https://transistor.fm/?via=empowerapps</a></p><p><b>What is Software Testing?</b></p><ul>
<li>Why is important?</li>
<li>What can be automated? (and what can't?)</li>
<li>Why are unit tests so important?</li>
<li>How to automate the workflow between manual tests?</li>
<li>What tests should you do before release?</li>
</ul><p><b>What kinds of testing are there?</b></p><ul>
<li>How to use visual snapshots for testing?</li>
<li>What is integration testing?</li>
<li>How to deal with outside systems which are always changing?</li>
<li>How is smoke testing different from integration testing?</li>
</ul><p><b>What should be tested?</b></p><ul>
<li>How to test the visual appearance of your app?</li>
<li>Where to draw the line when isolating what should be tested</li>
<li>How to avoid the code coverage trap?</li>
<li>How iOS devs can share specs with server developers?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/christinamltn">Christina Moulton - @ChristinaMltn</a><ul><li><a href="https://grokswift.com">GrokSwift.com</a></li></ul>
</li></ul><p><a href="https://youtu.be/5LShKIwHEsA"><strong>Youtube Video - https://youtu.be/5LShKIwHEsA</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/e6621ded"><strong>Episode 77 - Swift Package Index with Sven A. Schmidt</strong></a></li>
<li><a href="https://share.transistor.fm/s/a14f868f"><strong>Episode 24 - Continuous Integration with Kyle Newsome</strong></a></li>
<li>
<a href="https://share.transistor.fm/s/eddb8632"><strong>Episode 15 - Test-Driven Development with Joshua Greene and Michael Katz</strong></a> </li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://developer.apple.com/documentation/xcode/testing_your_apps_in_xcode"><strong>Testing Your Apps in Xcode from Apple Docs</strong></a></li>
<li><a href="https://github.com/pointfreeco/swift-snapshot-testing"><strong>SnapshotTesting by PointFreeCo</strong></a></li>
<li><a href="https://www.pointfree.co/episodes/ep41-a-tour-of-snapshot-testing"><strong>PointFreeCo Episode 41 - A Tour of Snapshot Testing</strong></a></li>
<li>
<a href="https://github.com/kif-framework/KIF"><strong>KIF</strong></a><strong> </strong>
</li>
<li><a href="%20https://cucumber.io"><strong>Cucumber</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://transistor.fm/?via=empowerapps"><strong>Transistor.Fm</strong></a><br><em>Your podcast's publishing platform<br></em>Transistor not only hosts your podcast but also:</p><ul>
<li>
<strong>Help distribute your podcast with integrations</strong> to Apple Podcasts, Spotify, Google Podcasts, YouTube, and Mailchimp</li>
<li>
<strong>Deep analytics</strong> including average downloads per episode, popular podcast apps, number of subscribers, trends</li>
<li>
<strong>Professional support</strong> for creatives, businesses, and professional podcasters when it comes to hosting and analytics</li>
</ul><p><a href="https://transistor.fm/how-to-start-a-podcast/?via=empowerapps"><strong>How do you start a podcast?</strong></a><br><a href="https://transistor.fm/how-to-start-a-podcast/?via=empowerapps">https://transistor.fm/how-to-start-a-podcast/?via=empowerapps</a></p><p>Try it today with<a href="https://transistor.fm/?via=empowerapps"> this special link:</a><br><a href="https://transistor.fm/?via=empowerapps">https://transistor.fm/?via=empowerapps</a></p><p><b>What is Software Testing?</b></p><ul>
<li>Why is important?</li>
<li>What can be automated? (and what can't?)</li>
<li>Why are unit tests so important?</li>
<li>How to automate the workflow between manual tests?</li>
<li>What tests should you do before release?</li>
</ul><p><b>What kinds of testing are there?</b></p><ul>
<li>How to use visual snapshots for testing?</li>
<li>What is integration testing?</li>
<li>How to deal with outside systems which are always changing?</li>
<li>How is smoke testing different from integration testing?</li>
</ul><p><b>What should be tested?</b></p><ul>
<li>How to test the visual appearance of your app?</li>
<li>Where to draw the line when isolating what should be tested</li>
<li>How to avoid the code coverage trap?</li>
<li>How iOS devs can share specs with server developers?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Fri, 19 Feb 2021 00:00:00 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/30f5853f/b1e862ea.mp3" length="15251785" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/463158/full_1613246872-artwork.jpg"/>
      <itunes:duration>1843</itunes:duration>
      <itunes:summary>Unit testing, integration testing, smoke testing... What does it all mean and how does it all work together?
In this episode, Leo talks with Christina Moulton about the different types of testing, how they work, what you should prioritize and to integrate it with your teams and your iOS development processes.</itunes:summary>
      <itunes:subtitle>Unit testing, integration testing, smoke testing... What does it all mean and how does it all work together?
In this episode, Leo talks with Christina Moulton about the different types of testing, how they work, what you should prioritize and to integrat</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Large Scale Teams with Joe Fabisevich</title>
      <itunes:episode>79</itunes:episode>
      <itunes:title>Large Scale Teams with Joe Fabisevich</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">83ea01fd-bea2-4772-90ff-9e76d5b20dbf</guid>
      <link>https://share.transistor.fm/s/f6582b48</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://www.fabisevi.ch/about/"><strong>Joe Fabisevich - Website</strong></a><ul>
<li><a href="https://twitter.com/mergesort">Twitter - @mergesort</a></li>
<li><a href="https://github.com/mergesort">GitHub - @mergesort</a></li>
<li><a href="https://www.linkedin.com/in/devjoe/">LinkedIn</a></li>
</ul>
</li></ul><p><a href="https://youtu.be/Mgg9D4JggQI"><strong>Youtube Video - https://youtu.be/Mgg9D4JggQI</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/5c6e99e7"><strong>Episode 76 - Scaling and Security with Jeroen Leenarts</strong></a></li>
<li><a href="https://share.transistor.fm/s/2445da70"><strong>Episode 64 - A Very Remote Year with Jacob Gorban</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://how.complexsystems.fail">How Complex Systems Fail by Richard I. Cook, MD</a></li>
<li><a href="https://spin.atomicobject.com/2018/12/05/first-principle-of-programming/">My New 1st Principle of Programming – “Good Code Is Easy to Change” by Aaron King</a></li>
<li><a href="https://en.wikipedia.org/wiki/Conway%27s_law">Conway's law from Wikipedia</a></li>
<li><a href="https://www.brandonsmith.ninja/blog/write-code-not-too-much-mostly-functions"><em>Write code. Not too much. Mostly functions. </em>by Brandon Smith</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><strong>Linode</strong></a><br><em>A cloud experience developers love</em></p><ul>
<li>Great for Setting Up a Backend for Your App</li>
<li>Variety of VM Configurations and Settings</li>
<li>Reasonable Pricing Starting at $5 per month</li>
<li>Global Data Centers</li>
<li><strong>The Developer Cloud Simplified</strong></li>
</ul><p>Try it today with<a href="https://transistor.fm/?via=empowerapps"> </a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7">this special link:<br>https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7</a></p><p>Check out <a href="https://orchardnest.com/">OrchardNest</a> Today:<br>https://orchardnest.com</p><p><b>Working with Big Teams</b></p><ul>
<li>Does it translate well to each team's work?</li>
<li>Dealing with different levels of communication and detail</li>
<li>How to keep communication consistent</li>
<li>Documenting Why Decisions Are Made</li>
<li>How Early Company Decisions Affect their Future</li>
</ul><p><b>Organizing Architecture and Code with Large Teams</b></p><ul>
<li>Staying away from dependencies</li>
<li>Mono-Repo vs Modularity</li>
<li>Server-Driven solutions</li>
<li>Consistency in Platform Design</li>
<li>What does it mean to put People-first in your code?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://www.fabisevi.ch/about/"><strong>Joe Fabisevich - Website</strong></a><ul>
<li><a href="https://twitter.com/mergesort">Twitter - @mergesort</a></li>
<li><a href="https://github.com/mergesort">GitHub - @mergesort</a></li>
<li><a href="https://www.linkedin.com/in/devjoe/">LinkedIn</a></li>
</ul>
</li></ul><p><a href="https://youtu.be/Mgg9D4JggQI"><strong>Youtube Video - https://youtu.be/Mgg9D4JggQI</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/5c6e99e7"><strong>Episode 76 - Scaling and Security with Jeroen Leenarts</strong></a></li>
<li><a href="https://share.transistor.fm/s/2445da70"><strong>Episode 64 - A Very Remote Year with Jacob Gorban</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://how.complexsystems.fail">How Complex Systems Fail by Richard I. Cook, MD</a></li>
<li><a href="https://spin.atomicobject.com/2018/12/05/first-principle-of-programming/">My New 1st Principle of Programming – “Good Code Is Easy to Change” by Aaron King</a></li>
<li><a href="https://en.wikipedia.org/wiki/Conway%27s_law">Conway's law from Wikipedia</a></li>
<li><a href="https://www.brandonsmith.ninja/blog/write-code-not-too-much-mostly-functions"><em>Write code. Not too much. Mostly functions. </em>by Brandon Smith</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><strong>Linode</strong></a><br><em>A cloud experience developers love</em></p><ul>
<li>Great for Setting Up a Backend for Your App</li>
<li>Variety of VM Configurations and Settings</li>
<li>Reasonable Pricing Starting at $5 per month</li>
<li>Global Data Centers</li>
<li><strong>The Developer Cloud Simplified</strong></li>
</ul><p>Try it today with<a href="https://transistor.fm/?via=empowerapps"> </a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7">this special link:<br>https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7</a></p><p>Check out <a href="https://orchardnest.com/">OrchardNest</a> Today:<br>https://orchardnest.com</p><p><b>Working with Big Teams</b></p><ul>
<li>Does it translate well to each team's work?</li>
<li>Dealing with different levels of communication and detail</li>
<li>How to keep communication consistent</li>
<li>Documenting Why Decisions Are Made</li>
<li>How Early Company Decisions Affect their Future</li>
</ul><p><b>Organizing Architecture and Code with Large Teams</b></p><ul>
<li>Staying away from dependencies</li>
<li>Mono-Repo vs Modularity</li>
<li>Server-Driven solutions</li>
<li>Consistency in Platform Design</li>
<li>What does it mean to put People-first in your code?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Fri, 12 Feb 2021 00:00:00 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/f6582b48/9016e6c9.mp3" length="18393327" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/457489/full_1613050821-artwork.jpg"/>
      <itunes:duration>2237</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Joe Fabisevich, iOS developer on Twitter's Health Client team. We talk about how to optimize communication and code on a large product with a large teams.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Joe Fabisevich, iOS developer on Twitter's Health Client team. We talk about how to optimize communication and code on a large product with a large teams.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Apple Silicon Review with Gui Rambo</title>
      <itunes:episode>78</itunes:episode>
      <itunes:title>Apple Silicon Review with Gui Rambo</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">1e347785-d0cf-4144-bbb4-5b1ceecc963c</guid>
      <link>https://share.transistor.fm/s/588ee24d</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/_inside"><strong>Gui Rambo - Twitter @_inside</strong></a><ul>
<li><a href="https://rambo.codes/">Blog</a></li>
<li><a href="https://github.com/insidegui">Github</a></li>
<li><a href="https://9to5mac.com/guides/stacktrace/">Stacktrace Podcast</a></li>
<li><a href="https://9to5mac.com/author/guirambobr/">9to5Mac</a></li>
</ul>
</li></ul><p><a href="https://youtu.be/L-lOLeuGrnM"><strong>Youtube Video - https://youtu.be/L-lOLeuGrnM</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://9to5mac.com/2020/12/09/stacktrace-podcast-113-the-hype-is-real/">Stacktrace Podcast 113: “The hype is real!”</a></li>
<li><a href="https://share.transistor.fm/s/29d6ee9b">Episode 31 - Future Proofing Your Apps with Gui Rambo</a></li>
<li><a href="https://share.transistor.fm/s/e6621ded">Episode 77 - Swift Package Index with Sven A. Schmidt</a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://v2.airbuddy.app">AirBuddy 2</a></li>
<li><a href="https://fusioncast.rambo.codes">FusionCast</a></li>
<li><a href="https://chibi.app">Chibi Studio</a></li>
<li><a href="https://rambo.codes/posts/2021-01-08-distributing-mac-apps-outside-the-app-store">Distributing Mac apps outside the App Store, a quick start guide by Gui</a></li>
<li><a href="https://www.notion.so/Run-x86-Apps-including-homebrew-in-the-Terminal-on-Apple-Silicon-8350b43d97de4ce690f283277e958602">Run x86 Apps (including homebrew) in the Terminal on Apple Silicon</a></li>
<li><a href="https://soffes.blog/homebrew-on-apple-silicon">Homebrew on Apple Silicon</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><b>Distributing App Outside the App Store</b></p><ul>
<li>Dealing with Design Restrictions</li>
<li>Avoiding Sandboxing</li>
<li>Avoiding the Apple Cut</li>
<li>Dealing with Technical Restrictions</li>
</ul><p><b>Mac Book Air Review</b></p><ul>
<li>Mac Book Air vs Mac Book Pro</li>
<li>Portability vs Screen Size</li>
<li>Battery Life and Optimized Charging</li>
<li>USB-C 😡</li>
<li>Software Compatibility and Rosetta 2</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/_inside"><strong>Gui Rambo - Twitter @_inside</strong></a><ul>
<li><a href="https://rambo.codes/">Blog</a></li>
<li><a href="https://github.com/insidegui">Github</a></li>
<li><a href="https://9to5mac.com/guides/stacktrace/">Stacktrace Podcast</a></li>
<li><a href="https://9to5mac.com/author/guirambobr/">9to5Mac</a></li>
</ul>
</li></ul><p><a href="https://youtu.be/L-lOLeuGrnM"><strong>Youtube Video - https://youtu.be/L-lOLeuGrnM</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://9to5mac.com/2020/12/09/stacktrace-podcast-113-the-hype-is-real/">Stacktrace Podcast 113: “The hype is real!”</a></li>
<li><a href="https://share.transistor.fm/s/29d6ee9b">Episode 31 - Future Proofing Your Apps with Gui Rambo</a></li>
<li><a href="https://share.transistor.fm/s/e6621ded">Episode 77 - Swift Package Index with Sven A. Schmidt</a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://v2.airbuddy.app">AirBuddy 2</a></li>
<li><a href="https://fusioncast.rambo.codes">FusionCast</a></li>
<li><a href="https://chibi.app">Chibi Studio</a></li>
<li><a href="https://rambo.codes/posts/2021-01-08-distributing-mac-apps-outside-the-app-store">Distributing Mac apps outside the App Store, a quick start guide by Gui</a></li>
<li><a href="https://www.notion.so/Run-x86-Apps-including-homebrew-in-the-Terminal-on-Apple-Silicon-8350b43d97de4ce690f283277e958602">Run x86 Apps (including homebrew) in the Terminal on Apple Silicon</a></li>
<li><a href="https://soffes.blog/homebrew-on-apple-silicon">Homebrew on Apple Silicon</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><b>Distributing App Outside the App Store</b></p><ul>
<li>Dealing with Design Restrictions</li>
<li>Avoiding Sandboxing</li>
<li>Avoiding the Apple Cut</li>
<li>Dealing with Technical Restrictions</li>
</ul><p><b>Mac Book Air Review</b></p><ul>
<li>Mac Book Air vs Mac Book Pro</li>
<li>Portability vs Screen Size</li>
<li>Battery Life and Optimized Charging</li>
<li>USB-C 😡</li>
<li>Software Compatibility and Rosetta 2</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 24 Jan 2021 00:00:00 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/588ee24d/0eee23b1.mp3" length="27892437" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/441853/full_1611015510-artwork.jpg"/>
      <itunes:duration>3421</itunes:duration>
      <itunes:summary>In this episode, Leo is joined by Gui Rambo to talk about their new M1 Macs and how it's changed the way they've developed as well as what they look forward to in 2021.</itunes:summary>
      <itunes:subtitle>In this episode, Leo is joined by Gui Rambo to talk about their new M1 Macs and how it's changed the way they've developed as well as what they look forward to in 2021.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Swift Package Index with Sven A. Schmidt</title>
      <itunes:episode>77</itunes:episode>
      <itunes:title>Swift Package Index with Sven A. Schmidt</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">460cbe54-bf34-43e7-af00-b5ee3d9fb0c5</guid>
      <link>https://share.transistor.fm/s/e6621ded</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://finestructure.co"><strong>Sven A. Schmidt - finestructure.co</strong></a><ul>
<li><a href="%20https://twitter.com/_sa_s">Twitter - @_sa_s</a></li>
<li><a href="https://www.linkedin.com/in/svenaschmidt">LinkedIn - Sven A. Schmidt </a></li>
</ul>
</li></ul><p><a href="https://youtu.be/VqQTUM7-_64"><strong>Youtube Video - https://youtu.be/VqQTUM7-_64</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/a8b66b9f">Episode 75 - Year of the Server with Tim Condon - Part 2</a></li>
<li><a href="https://share.transistor.fm/s/a6728b43">Episode 74 - Year of the Server with Tim Condon - Part 1</a></li>
<li><a href="https://share.transistor.fm/s/e38854fe">Episode 46 - Developer Community - Part 2</a></li>
<li><a href="https://share.transistor.fm/s/46b2f52d">Episode 45 - Developer Community - Part 1</a></li>
<li><a href="https://share.transistor.fm/s/17f05dbf">Episode 49 - Vapor 4 with Tibor Bödecs</a></li>
<li><a href="https://share.transistor.fm/s/bf0516f2">Episode 34 - Server-Side Swift with Tim Condon</a></li>
<li><a href="https://share.transistor.fm/s/a14f868f">Episode 24 - Continuous Integration with Kyle Newsome</a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://github.com/finestructure/Arena">Arena</a></li>
<li>
<a href="https://finestructure.co/hummingbird">Hummingbird</a> </li>
<li><a href="https://finestructure.co/revisor">Revisor (Xcode Extension)</a></li>
<li><a href="https://swiftpackageindex.com">Swift Package Index</a></li>
<li><a href="https://www.swiftbysundell.com/podcast/75/">Swift by Sundell #75 - The Swift package ecosystem</a></li>
<li><a href="https://vimeo.com/480555844/c2410e1f89">Swift Packages - Dependency Management of the Future - Leo Dion</a></li>
<li>
<a href="https://blog.swiftpackageindex.com/posts/the-swift-package-index-metadata-file-first-steps">The Swift Package Index Metadata File</a><ul>
<li><a href="https://github.com/pointfreeco/swift-composable-architecture/blob/main/.spi.yml">watchOS Support in Composable Architecture by PointFree</a></li>
<li><a href="https://github.com/brightdigit/MistKit/blob/main/.spi.yml">Docker Image Support in MistKit by Leo</a></li>
</ul>
</li>
<li>
<a href="https://shields.io">Shields.io</a> - badges for your README</li>
<li>
<a href="https://github.com/brightdigit/MistKit">MistKit</a> - CloudKit support outside of CloudKit framework (i.e. Linux)</li>
<li>
<a href="https://github.com/apple/swift-metrics">Swift Metrics</a> </li>
<li><a href="https://github.com/MrLotU/SwiftPrometheus">SwiftPrometheus</a></li>
<li><a href="https://github.com/pointfreeco/swift-snapshot-testing">Snapshot Testing by PointFree</a></li>
<li><a href="https://github.com/JohnSundell/Ink">Ink by John Sundell</a></li>
<li><a href="https://github.com/JohnSundell/Plot">Plot by John Sundell</a></li>
<li><a href="https://orchardnest.com">OrchardNest.com</a></li>
<li><a href="https://www.pointfree.co/episodes/ep16-dependency-injection-made-easy">PointFree Ep 16: Dependency Injection Made Easy</a></li>
<li><a href="https://vimeo.com/291588126">How To Control The World by Stephen Celis (from PointFree)</a></li>
<li><a href="https://grafana.com">Grafana</a></li>
<li><a href="https://finestructure.co/blog/rester">Rester for Smoke Testing</a></li>
<li><a href="https://finestructure.co/blog/2021/1/10/running-docker-on-apple-silicon-persistence">Running Docker on Apple Silicon M1 (persisted volume)</a></li>
<li><a href="https://forums.swift.org/t/extend-swiftpm-packagedescription-to-introduce-metadata/37722">Extend SwiftPM `PackageDescription` to introduce metadata</a></li>
<li><a href="https://learningswift.brightdigit.com/swift-package-continuous-integration-guide/">Swift Package Continuous Integration Guide by Leo</a></li>
<li><a href="https://developer.apple.com/documentation/virtualization">Virtualization Framework</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><strong>Linode</strong></a><br><em>A cloud experience developers love</em></p><ul>
<li>Great for Setting Up a Backend for Your App</li>
<li>Variety of VM Configurations and Settings</li>
<li>Reasonable Pricing Starting at $5 per month</li>
<li>Global Data Centers</li>
<li><strong>The Developer Cloud Simplified</strong></li>
</ul><p>Try it today with<a href="https://transistor.fm/?via=empowerapps"> </a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7">this special link:<br>https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7</a></p><p>Check out <a href="https://orchardnest.com/">OrchardNest</a> Today:<br>https://orchardnest.com</p><p><b>Maintaining Swift Package Index</b></p><ul>
<li>Supporting Different Projects and Packages</li>
<li>Dealing with Schemes and Docker Images</li>
<li>Supporting Badges</li>
</ul><p><b>Server Side Support</b></p><ul>
<li>Snapshot Testing for the web page</li>
<li>Tracking Metrics and performance</li>
<li>Setting up CI on Gitlab and Github Actions</li>
<li>Making deployment easy</li>
</ul><p><b>Future of SPI</b></p><ul>
<li>Dealing with Apple Silicon</li>
<li>Running a Database Server on an M1</li>
<li>README Support Here</li>
<li>Improved Search Support</li>
<li>Category Support</li>
<li>More Metadata Support</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://finestructure.co"><strong>Sven A. Schmidt - finestructure.co</strong></a><ul>
<li><a href="%20https://twitter.com/_sa_s">Twitter - @_sa_s</a></li>
<li><a href="https://www.linkedin.com/in/svenaschmidt">LinkedIn - Sven A. Schmidt </a></li>
</ul>
</li></ul><p><a href="https://youtu.be/VqQTUM7-_64"><strong>Youtube Video - https://youtu.be/VqQTUM7-_64</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/a8b66b9f">Episode 75 - Year of the Server with Tim Condon - Part 2</a></li>
<li><a href="https://share.transistor.fm/s/a6728b43">Episode 74 - Year of the Server with Tim Condon - Part 1</a></li>
<li><a href="https://share.transistor.fm/s/e38854fe">Episode 46 - Developer Community - Part 2</a></li>
<li><a href="https://share.transistor.fm/s/46b2f52d">Episode 45 - Developer Community - Part 1</a></li>
<li><a href="https://share.transistor.fm/s/17f05dbf">Episode 49 - Vapor 4 with Tibor Bödecs</a></li>
<li><a href="https://share.transistor.fm/s/bf0516f2">Episode 34 - Server-Side Swift with Tim Condon</a></li>
<li><a href="https://share.transistor.fm/s/a14f868f">Episode 24 - Continuous Integration with Kyle Newsome</a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://github.com/finestructure/Arena">Arena</a></li>
<li>
<a href="https://finestructure.co/hummingbird">Hummingbird</a> </li>
<li><a href="https://finestructure.co/revisor">Revisor (Xcode Extension)</a></li>
<li><a href="https://swiftpackageindex.com">Swift Package Index</a></li>
<li><a href="https://www.swiftbysundell.com/podcast/75/">Swift by Sundell #75 - The Swift package ecosystem</a></li>
<li><a href="https://vimeo.com/480555844/c2410e1f89">Swift Packages - Dependency Management of the Future - Leo Dion</a></li>
<li>
<a href="https://blog.swiftpackageindex.com/posts/the-swift-package-index-metadata-file-first-steps">The Swift Package Index Metadata File</a><ul>
<li><a href="https://github.com/pointfreeco/swift-composable-architecture/blob/main/.spi.yml">watchOS Support in Composable Architecture by PointFree</a></li>
<li><a href="https://github.com/brightdigit/MistKit/blob/main/.spi.yml">Docker Image Support in MistKit by Leo</a></li>
</ul>
</li>
<li>
<a href="https://shields.io">Shields.io</a> - badges for your README</li>
<li>
<a href="https://github.com/brightdigit/MistKit">MistKit</a> - CloudKit support outside of CloudKit framework (i.e. Linux)</li>
<li>
<a href="https://github.com/apple/swift-metrics">Swift Metrics</a> </li>
<li><a href="https://github.com/MrLotU/SwiftPrometheus">SwiftPrometheus</a></li>
<li><a href="https://github.com/pointfreeco/swift-snapshot-testing">Snapshot Testing by PointFree</a></li>
<li><a href="https://github.com/JohnSundell/Ink">Ink by John Sundell</a></li>
<li><a href="https://github.com/JohnSundell/Plot">Plot by John Sundell</a></li>
<li><a href="https://orchardnest.com">OrchardNest.com</a></li>
<li><a href="https://www.pointfree.co/episodes/ep16-dependency-injection-made-easy">PointFree Ep 16: Dependency Injection Made Easy</a></li>
<li><a href="https://vimeo.com/291588126">How To Control The World by Stephen Celis (from PointFree)</a></li>
<li><a href="https://grafana.com">Grafana</a></li>
<li><a href="https://finestructure.co/blog/rester">Rester for Smoke Testing</a></li>
<li><a href="https://finestructure.co/blog/2021/1/10/running-docker-on-apple-silicon-persistence">Running Docker on Apple Silicon M1 (persisted volume)</a></li>
<li><a href="https://forums.swift.org/t/extend-swiftpm-packagedescription-to-introduce-metadata/37722">Extend SwiftPM `PackageDescription` to introduce metadata</a></li>
<li><a href="https://learningswift.brightdigit.com/swift-package-continuous-integration-guide/">Swift Package Continuous Integration Guide by Leo</a></li>
<li><a href="https://developer.apple.com/documentation/virtualization">Virtualization Framework</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><strong>Linode</strong></a><br><em>A cloud experience developers love</em></p><ul>
<li>Great for Setting Up a Backend for Your App</li>
<li>Variety of VM Configurations and Settings</li>
<li>Reasonable Pricing Starting at $5 per month</li>
<li>Global Data Centers</li>
<li><strong>The Developer Cloud Simplified</strong></li>
</ul><p>Try it today with<a href="https://transistor.fm/?via=empowerapps"> </a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7">this special link:<br>https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7</a></p><p>Check out <a href="https://orchardnest.com/">OrchardNest</a> Today:<br>https://orchardnest.com</p><p><b>Maintaining Swift Package Index</b></p><ul>
<li>Supporting Different Projects and Packages</li>
<li>Dealing with Schemes and Docker Images</li>
<li>Supporting Badges</li>
</ul><p><b>Server Side Support</b></p><ul>
<li>Snapshot Testing for the web page</li>
<li>Tracking Metrics and performance</li>
<li>Setting up CI on Gitlab and Github Actions</li>
<li>Making deployment easy</li>
</ul><p><b>Future of SPI</b></p><ul>
<li>Dealing with Apple Silicon</li>
<li>Running a Database Server on an M1</li>
<li>README Support Here</li>
<li>Improved Search Support</li>
<li>Category Support</li>
<li>More Metadata Support</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sat, 16 Jan 2021 00:00:00 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/e6621ded/bb9876d5.mp3" length="22829399" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/433918/full_1610317400-artwork.jpg"/>
      <itunes:duration>2788</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Sven A. Schmidt, co-creator of the Swift Package Index. We talk about the challenges of supporting thousands of Swift Packages, dealing with metrics and site ops with Vapor, running CI for the site and the plethora of Swift packages as well as Apple Silicon support.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Sven A. Schmidt, co-creator of the Swift Package Index. We talk about the challenges of supporting thousands of Swift Packages, dealing with metrics and site ops with Vapor, running CI for the site and the plethora of Swift</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Scaling and Security with Jeroen Leenarts</title>
      <itunes:episode>76</itunes:episode>
      <itunes:title>Scaling and Security with Jeroen Leenarts</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">863b3a97-f3f7-4a23-a6cf-1564bc02a0a7</guid>
      <link>https://share.transistor.fm/s/5c6e99e7</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://appforce1.net">Jeroen Leenarts - AppForce1.Net</a><ul>
<li><a href="https://twitter.com/AppForce1">Twitter @AppForce1</a></li>
<li><a href="https://appforce1.net/podcast/">Podcast </a></li>
<li><a href="https://www.linkedin.com/in/leenarts">LinkedIn</a></li>
</ul>
</li></ul><p><a href="https://youtu.be/iDP9wdtQ6sw"><strong>Youtube Video - https://youtu.be/iDP9wdtQ6sw</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://www.buzzsprout.com/1414396/7124089">AppForce1 - Special: Leo Dion</a></li>
<li><a href="https://share.transistor.fm/s/dc84aaa9">Episode 70 - Maintaining &amp; Migrating with Antoine van der Lee - Part 2</a></li>
<li><a href="https://share.transistor.fm/s/8226bebf">Episode 65 - Understanding Git with Ben Chatelain</a></li>
<li><a href="https://share.transistor.fm/s/8442feb7">Episode 47 - Practical Combine with Donny Wals</a></li>
<li><a href="https://share.transistor.fm/s/4eba2003">Episode 42 - Patterns and Practices for Scalable Apps</a></li>
<li><a href="https://share.transistor.fm/s/bcf9bb21">Episode 12 - iOS Developer Interviews with Alex Bush</a></li>
</ul><p><b>Related Links</b></p><ul>
<li>
<a href="https://www.iosdevhappyhour.com/">iOS Developer Happy Hour</a> by <a href="https://twitter.com/codeine_coding?s=21">Allen W</a>
</li>
<li><a href="https://appforce1.net/podcast/">AppForce1 Podcast</a></li>
<li><a href="https://www.amazon.com/Managers-Path-Leaders-Navigating-Growth/dp/1491973897">The Manager's Path: A Guide for Tech Leaders Navigating Growth and Change by Camille Fournier</a></li>
<li><a href="https://www.bazel.build">Bazel</a></li>
<li><a href="https://tuist.io">Tuist</a></li>
<li><a href="https://github.com/yonaskolb/XcodeGen">XcodeGen</a></li>
<li><a href="https://vimeo.com/480555844/c2410e1f89">Swift Packages - Dependency Management of the Future (NSSpain 2020) by Leo Dion</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><b>Working in 2020 and 2021</b></p><ul>
<li>Why do podcasts in 2020 and 2021?</li>
<li>Running a Cocoaheads in 2020</li>
<li>Networking in 2020</li>
<li>Working from Home</li>
<li>Writing a Book in 2021</li>
</ul><p><b>Dealing with Complexity in Your Code Base</b></p><ul>
<li>Dealing with Large Teams</li>
<li>Keeping Your App Secure</li>
<li>Using the Keychain properly</li>
<li>How does ATS work</li>
<li>Dealing with Isolation and Repetition</li>
<li>Transitioning through Objective-C, Swift, and SwiftUI</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://appforce1.net">Jeroen Leenarts - AppForce1.Net</a><ul>
<li><a href="https://twitter.com/AppForce1">Twitter @AppForce1</a></li>
<li><a href="https://appforce1.net/podcast/">Podcast </a></li>
<li><a href="https://www.linkedin.com/in/leenarts">LinkedIn</a></li>
</ul>
</li></ul><p><a href="https://youtu.be/iDP9wdtQ6sw"><strong>Youtube Video - https://youtu.be/iDP9wdtQ6sw</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://www.buzzsprout.com/1414396/7124089">AppForce1 - Special: Leo Dion</a></li>
<li><a href="https://share.transistor.fm/s/dc84aaa9">Episode 70 - Maintaining &amp; Migrating with Antoine van der Lee - Part 2</a></li>
<li><a href="https://share.transistor.fm/s/8226bebf">Episode 65 - Understanding Git with Ben Chatelain</a></li>
<li><a href="https://share.transistor.fm/s/8442feb7">Episode 47 - Practical Combine with Donny Wals</a></li>
<li><a href="https://share.transistor.fm/s/4eba2003">Episode 42 - Patterns and Practices for Scalable Apps</a></li>
<li><a href="https://share.transistor.fm/s/bcf9bb21">Episode 12 - iOS Developer Interviews with Alex Bush</a></li>
</ul><p><b>Related Links</b></p><ul>
<li>
<a href="https://www.iosdevhappyhour.com/">iOS Developer Happy Hour</a> by <a href="https://twitter.com/codeine_coding?s=21">Allen W</a>
</li>
<li><a href="https://appforce1.net/podcast/">AppForce1 Podcast</a></li>
<li><a href="https://www.amazon.com/Managers-Path-Leaders-Navigating-Growth/dp/1491973897">The Manager's Path: A Guide for Tech Leaders Navigating Growth and Change by Camille Fournier</a></li>
<li><a href="https://www.bazel.build">Bazel</a></li>
<li><a href="https://tuist.io">Tuist</a></li>
<li><a href="https://github.com/yonaskolb/XcodeGen">XcodeGen</a></li>
<li><a href="https://vimeo.com/480555844/c2410e1f89">Swift Packages - Dependency Management of the Future (NSSpain 2020) by Leo Dion</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><b>Working in 2020 and 2021</b></p><ul>
<li>Why do podcasts in 2020 and 2021?</li>
<li>Running a Cocoaheads in 2020</li>
<li>Networking in 2020</li>
<li>Working from Home</li>
<li>Writing a Book in 2021</li>
</ul><p><b>Dealing with Complexity in Your Code Base</b></p><ul>
<li>Dealing with Large Teams</li>
<li>Keeping Your App Secure</li>
<li>Using the Keychain properly</li>
<li>How does ATS work</li>
<li>Dealing with Isolation and Repetition</li>
<li>Transitioning through Objective-C, Swift, and SwiftUI</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Fri, 08 Jan 2021 00:00:00 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/5c6e99e7/d68159f7.mp3" length="24853773" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/430899/full_1609690804-artwork.jpg"/>
      <itunes:duration>3041</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Jeroen Leenarts of the AppForce1 podcast about he's learned this year being a lead developer and how he thinks teams can improve the scalability and security of their apps. He also talks about his year running a Cocoaheads meetup and starting podcast with all challenges of 2020.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Jeroen Leenarts of the AppForce1 podcast about he's learned this year being a lead developer and how he thinks teams can improve the scalability and security of their apps. He also talks about his year running a Cocoaheads </itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Year of the Server with Tim Condon - Part 2</title>
      <itunes:episode>75</itunes:episode>
      <itunes:title>Year of the Server with Tim Condon - Part 2</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">2ba1f09f-f456-4edb-be4c-a0689d85e010</guid>
      <link>https://share.transistor.fm/s/a8b66b9f</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://www.timc.dev/"><strong>Tim Condon</strong></a><ul><li><a href="https://twitter.com/0xtim?s=21">Twitter @0xTim</a></li></ul>
</li></ul><p><a href="https://youtu.be/VMNvZtw9OyU"><strong>Youtube Video - https://youtu.be/VMNvZtw9OyU</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/a6728b43">Episode 74 - Year of the Server with Tim Condon - Part 1</a></li>
<li><a href="https://share.transistor.fm/s/b203049d">Episode 72 - Functional Programming with Daniel Steinberg</a></li>
<li><a href="https://share.transistor.fm/s/17f05dbf">Episode 49 - Vapor 4 with Tibor Bödecs</a></li>
<li><a href="https://share.transistor.fm/s/bf0516f2">Episode 34 - Server-Side Swift with Tim Condon</a></li>
<li><a href="https://share.transistor.fm/s/ffcb9fc1">Episode 8 - Choosing the Right Backend with Erik Gillespie</a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.timc.dev/posts/future-of-server-side-swift/">The Future of Swift on the Server by Tim</a></li>
<li><a href="https://www.serversideswift.info/speakers/simonpilkington">Building the next version of the Smoke Framework by Simon Pilkington</a></li>
<li><a href="https://swift.org/server/">Swift Server Work Group</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10644/">Use Swift on AWS Lambda with Xcode - WWDC 2020</a></li>
<li><a href="https://www.enekoalonso.com/2020/12/06/getting-started-with-async-await-in-swift.html">Getting started with async/await in Swift by Eneko Alonso</a></li>
<li><a href="https://github.com/soto-project/soto">Soto for AWS</a></li>
<li><a href="https://github.com/amzn/smoke-framework">Smoke Framework</a></li>
<li><a href="https://www.serversideswift.info/speakers/simonpilkington">Building the next version of the Smoke Framework by Simon Pilkington</a></li>
<li><a href="https://www.kitura.dev">Kitura</a></li>
<li><a href="https://chaqmoq.dev">Chaqmoq</a></li>
<li><a href="https://github.com/apple/swift-log">Swift Log</a></li>
<li><a href="https://github.com/apple/swift-metrics">Swift Metrics</a></li>
<li><a href="https://github.com/apple/swift-distributed-tracing">Swift Tracing</a></li>
<li><a href="https://github.com/vapor/queues">Vapor Queues</a></li>
<li><a href="https://github.com/m-barthelemy/vapor-queues-fluent-driver">Vapor Queues Fluent Driver</a></li>
<li><a href="https://www.raywenderlich.com/8325890-a-complete-guide-to-swift-development-on-linux">A Complete Guide to Swift Development on Linux By Jari Koopman</a></li>
<li><a href="https://github.com/pwsacademy/swift-setup">Swift Setup from Steven Van Impe and PWS Academy</a></li>
<li>
<a href="https://www.iosdevhappyhour.com">iOS Developer Happy Hour</a> by <a href="https://twitter.com/codeine_coding?s=21">Allen W</a>
</li>
<li><a href="https://appforce1.net/podcast/">AppForce1 Podcast</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><strong>Linode</strong></a><br><em>A cloud experience developers love</em></p><ul>
<li>Great for Setting Up a Backend for Your App</li>
<li>Variety of VM Configurations and Settings</li>
<li>Reasonable Pricing Starting at $5 per month</li>
<li>Global Data Centers</li>
<li><strong>The Developer Cloud Simplified</strong></li>
</ul><p>Try it today with<a href="https://transistor.fm/?via=empowerapps"> </a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7">this special link:<br>https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7</a></p><p>Check out <a href="https://orchardnest.com/">OrchardNest</a> Today:<br>https://orchardnest.com</p><p><b>Vapor 5 and Async/Await</b></p><ul>
<li>How Async/Await affects SwiftNIO</li>
<li>How Async/Await affects EventLoopFuture</li>
<li>Performances vs Maintainability </li>
<li>What is the timeline on Async/Await</li>
</ul><p><b>Amazon and Server-Side Swift</b></p><ul>
<li>What is Soto?</li>
<li>What Amazon web services Soto supports?</li>
<li>How to integrate Soto into your sever-side Swift project?</li>
<li>What is Smoke?</li>
</ul><p><b>Important Server-Side Frameworks</b></p><ul>
<li>Smoke, Kitura, and Chaqmoq</li>
<li>Logging and Metrics</li>
<li>Job and Queue Management</li>
<li>Swift Tracing</li>
</ul><p><b>Server-Side Swift in the Real World</b></p><ul>
<li>Where to Host Your Server-Side App</li>
<li>Is Server-Side Swift Production Ready</li>
<li>Growth of Server-Side Acceptance in 2020</li>
<li>Differences from iOS Development</li>
<li>Scaling Your Server-Side Application</li>
<li>Can You Develop in Swift outside of Xcode?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://www.timc.dev/"><strong>Tim Condon</strong></a><ul><li><a href="https://twitter.com/0xtim?s=21">Twitter @0xTim</a></li></ul>
</li></ul><p><a href="https://youtu.be/VMNvZtw9OyU"><strong>Youtube Video - https://youtu.be/VMNvZtw9OyU</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/a6728b43">Episode 74 - Year of the Server with Tim Condon - Part 1</a></li>
<li><a href="https://share.transistor.fm/s/b203049d">Episode 72 - Functional Programming with Daniel Steinberg</a></li>
<li><a href="https://share.transistor.fm/s/17f05dbf">Episode 49 - Vapor 4 with Tibor Bödecs</a></li>
<li><a href="https://share.transistor.fm/s/bf0516f2">Episode 34 - Server-Side Swift with Tim Condon</a></li>
<li><a href="https://share.transistor.fm/s/ffcb9fc1">Episode 8 - Choosing the Right Backend with Erik Gillespie</a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.timc.dev/posts/future-of-server-side-swift/">The Future of Swift on the Server by Tim</a></li>
<li><a href="https://www.serversideswift.info/speakers/simonpilkington">Building the next version of the Smoke Framework by Simon Pilkington</a></li>
<li><a href="https://swift.org/server/">Swift Server Work Group</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10644/">Use Swift on AWS Lambda with Xcode - WWDC 2020</a></li>
<li><a href="https://www.enekoalonso.com/2020/12/06/getting-started-with-async-await-in-swift.html">Getting started with async/await in Swift by Eneko Alonso</a></li>
<li><a href="https://github.com/soto-project/soto">Soto for AWS</a></li>
<li><a href="https://github.com/amzn/smoke-framework">Smoke Framework</a></li>
<li><a href="https://www.serversideswift.info/speakers/simonpilkington">Building the next version of the Smoke Framework by Simon Pilkington</a></li>
<li><a href="https://www.kitura.dev">Kitura</a></li>
<li><a href="https://chaqmoq.dev">Chaqmoq</a></li>
<li><a href="https://github.com/apple/swift-log">Swift Log</a></li>
<li><a href="https://github.com/apple/swift-metrics">Swift Metrics</a></li>
<li><a href="https://github.com/apple/swift-distributed-tracing">Swift Tracing</a></li>
<li><a href="https://github.com/vapor/queues">Vapor Queues</a></li>
<li><a href="https://github.com/m-barthelemy/vapor-queues-fluent-driver">Vapor Queues Fluent Driver</a></li>
<li><a href="https://www.raywenderlich.com/8325890-a-complete-guide-to-swift-development-on-linux">A Complete Guide to Swift Development on Linux By Jari Koopman</a></li>
<li><a href="https://github.com/pwsacademy/swift-setup">Swift Setup from Steven Van Impe and PWS Academy</a></li>
<li>
<a href="https://www.iosdevhappyhour.com">iOS Developer Happy Hour</a> by <a href="https://twitter.com/codeine_coding?s=21">Allen W</a>
</li>
<li><a href="https://appforce1.net/podcast/">AppForce1 Podcast</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><strong>Linode</strong></a><br><em>A cloud experience developers love</em></p><ul>
<li>Great for Setting Up a Backend for Your App</li>
<li>Variety of VM Configurations and Settings</li>
<li>Reasonable Pricing Starting at $5 per month</li>
<li>Global Data Centers</li>
<li><strong>The Developer Cloud Simplified</strong></li>
</ul><p>Try it today with<a href="https://transistor.fm/?via=empowerapps"> </a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7">this special link:<br>https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7</a></p><p>Check out <a href="https://orchardnest.com/">OrchardNest</a> Today:<br>https://orchardnest.com</p><p><b>Vapor 5 and Async/Await</b></p><ul>
<li>How Async/Await affects SwiftNIO</li>
<li>How Async/Await affects EventLoopFuture</li>
<li>Performances vs Maintainability </li>
<li>What is the timeline on Async/Await</li>
</ul><p><b>Amazon and Server-Side Swift</b></p><ul>
<li>What is Soto?</li>
<li>What Amazon web services Soto supports?</li>
<li>How to integrate Soto into your sever-side Swift project?</li>
<li>What is Smoke?</li>
</ul><p><b>Important Server-Side Frameworks</b></p><ul>
<li>Smoke, Kitura, and Chaqmoq</li>
<li>Logging and Metrics</li>
<li>Job and Queue Management</li>
<li>Swift Tracing</li>
</ul><p><b>Server-Side Swift in the Real World</b></p><ul>
<li>Where to Host Your Server-Side App</li>
<li>Is Server-Side Swift Production Ready</li>
<li>Growth of Server-Side Acceptance in 2020</li>
<li>Differences from iOS Development</li>
<li>Scaling Your Server-Side Application</li>
<li>Can You Develop in Swift outside of Xcode?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Tue, 29 Dec 2020 00:00:00 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/a8b66b9f/69a6db48.mp3" length="17614143" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/427316/full_1609204740-artwork.jpg"/>
      <itunes:duration>2138</itunes:duration>
      <itunes:summary>In this second part of our interview with Tim Condon, we follow up on Async/Await and Vapor 5, Amazon and server-side Swift, hosting, frameworks, development, and what we look forward to in 2021.</itunes:summary>
      <itunes:subtitle>In this second part of our interview with Tim Condon, we follow up on Async/Await and Vapor 5, Amazon and server-side Swift, hosting, frameworks, development, and what we look forward to in 2021.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Year of the Server with Tim Condon - Part 1</title>
      <itunes:episode>74</itunes:episode>
      <itunes:title>Year of the Server with Tim Condon - Part 1</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">bff80919-3c25-41c2-9cee-e030c70f2b82</guid>
      <link>https://share.transistor.fm/s/a6728b43</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://www.timc.dev"><strong>Tim Condon</strong></a><ul><li><a href="https://twitter.com/0xtim?s=21">Twitter @0xTim</a></li></ul>
</li></ul><p><a href="https://youtu.be/7pNF4em4pyU"><strong>Youtube Video - https://youtu.be/7pNF4em4pyU</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/bf0516f2">Episode 34 - Server-Side Swift with Tim Condon</a></li>
<li><a href="https://share.transistor.fm/s/17f05dbf">Episode 49 - Vapor 4 with Tibor Bödecs</a></li>
<li><a href="https://share.transistor.fm/s/a8b66b9f">Episode 74 - Year of the Server with Tim Condon - Part 2</a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.timc.dev/posts/future-of-server-side-swift/"><strong>The Future of Swift on the Server by Tim</strong></a></li>
<li><a href="https://www.serversideswift.info/speakers/simonpilkington"><strong>Building the next version of the Smoke Framework by Simon Pilkington</strong></a></li>
<li><a href="https://swift.org/server/"><strong>Swift Server Work Group</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10644/"><strong>Use Swift on AWS Lambda with Xcode - WWDC 2020</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/102/"><strong>Platforms State of the Union - WWDC 2020 (Vapor at 30:30)</strong></a></li>
<li><a href="https://developer.apple.com/documentation/virtualization"><strong>Virtualization Framework</strong></a></li>
<li><a href="https://finestructure.co/blog/2020/11/27/running-docker-on-apple-silicon-m1"><strong>Running Docker on Apple Silicon M1 by Sven A. Schmidt</strong></a></li>
<li><a href="https://aws.amazon.com/ec2/graviton/"><strong>AWS Graviton</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><b>Swift Server Work Group and SwiftNIO</b></p><ul>
<li>What is the Swift Server Work Group?</li>
<li>Server-Side at WWDC</li>
<li>What is SwiftNIO and how does it fit with Server-Side Swift?</li>
<li>Why SwiftNIO instead of URLSession?</li>
<li>Should you use SwiftNIO for my iOS app?</li>
</ul><p><b>State of Swift on the Server</b></p><ul>
<li>Where Swift has grown in 2020 </li>
<li>State of Kitura after IBM</li>
<li>Swift and Server-Side Swift on Windows</li>
<li>AWS Lambda and Smoke</li>
<li>Swift on Ubuntu 20, Centos, and Amazon Linux</li>
</ul><p><b>ARM and Swift on the Server</b></p><ul>
<li>Server Development on Apple Silicon/ARM</li>
<li>Virtualization on Apple Silicon</li>
<li>The Future of ARM Servers</li>
<li>more on concurrency proposal and Vapor 5 in the next episode... 😯</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://www.timc.dev"><strong>Tim Condon</strong></a><ul><li><a href="https://twitter.com/0xtim?s=21">Twitter @0xTim</a></li></ul>
</li></ul><p><a href="https://youtu.be/7pNF4em4pyU"><strong>Youtube Video - https://youtu.be/7pNF4em4pyU</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/bf0516f2">Episode 34 - Server-Side Swift with Tim Condon</a></li>
<li><a href="https://share.transistor.fm/s/17f05dbf">Episode 49 - Vapor 4 with Tibor Bödecs</a></li>
<li><a href="https://share.transistor.fm/s/a8b66b9f">Episode 74 - Year of the Server with Tim Condon - Part 2</a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.timc.dev/posts/future-of-server-side-swift/"><strong>The Future of Swift on the Server by Tim</strong></a></li>
<li><a href="https://www.serversideswift.info/speakers/simonpilkington"><strong>Building the next version of the Smoke Framework by Simon Pilkington</strong></a></li>
<li><a href="https://swift.org/server/"><strong>Swift Server Work Group</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10644/"><strong>Use Swift on AWS Lambda with Xcode - WWDC 2020</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/102/"><strong>Platforms State of the Union - WWDC 2020 (Vapor at 30:30)</strong></a></li>
<li><a href="https://developer.apple.com/documentation/virtualization"><strong>Virtualization Framework</strong></a></li>
<li><a href="https://finestructure.co/blog/2020/11/27/running-docker-on-apple-silicon-m1"><strong>Running Docker on Apple Silicon M1 by Sven A. Schmidt</strong></a></li>
<li><a href="https://aws.amazon.com/ec2/graviton/"><strong>AWS Graviton</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><b>Swift Server Work Group and SwiftNIO</b></p><ul>
<li>What is the Swift Server Work Group?</li>
<li>Server-Side at WWDC</li>
<li>What is SwiftNIO and how does it fit with Server-Side Swift?</li>
<li>Why SwiftNIO instead of URLSession?</li>
<li>Should you use SwiftNIO for my iOS app?</li>
</ul><p><b>State of Swift on the Server</b></p><ul>
<li>Where Swift has grown in 2020 </li>
<li>State of Kitura after IBM</li>
<li>Swift and Server-Side Swift on Windows</li>
<li>AWS Lambda and Smoke</li>
<li>Swift on Ubuntu 20, Centos, and Amazon Linux</li>
</ul><p><b>ARM and Swift on the Server</b></p><ul>
<li>Server Development on Apple Silicon/ARM</li>
<li>Virtualization on Apple Silicon</li>
<li>The Future of ARM Servers</li>
<li>more on concurrency proposal and Vapor 5 in the next episode... 😯</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Wed, 23 Dec 2020 21:33:02 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/a6728b43/ee518a92.mp3" length="12210179" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/427172/full_1608750622-artwork.jpg"/>
      <itunes:duration>1460</itunes:duration>
      <itunes:summary>In the first part of this two-part series of episodes, Leo talks with Tim Condon of Broken Hands, Swift Server Work Group member, and Vapor maintainer. We talk about the Swift Server Work Group, SwiftNIO, Server-Side Swift's growth in 2020 and Swift on Server-Side ARM.</itunes:summary>
      <itunes:subtitle>In the first part of this two-part series of episodes, Leo talks with Tim Condon of Broken Hands, Swift Server Work Group member, and Vapor maintainer. We talk about the Swift Server Work Group, SwiftNIO, Server-Side Swift's growth in 2020 and Swift on Se</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Multi-Platform SwiftUI with Malin Sundberg</title>
      <itunes:episode>73</itunes:episode>
      <itunes:title>Multi-Platform SwiftUI with Malin Sundberg</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">cb12af93-3ebd-4413-b5b8-064d2039d19b</guid>
      <link>https://share.transistor.fm/s/0d12719b</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/malinsundberg"><strong>Malin Sundberg - @malinsundberg</strong></a><ul>
<li>
<a href="https://timeinorbit.com"><strong>Orbit</strong> - https://timeinorbit.com</a> - A nicely designed time tracking and invoicing app</li>
<li>
<a href="http://cupof.tech"><strong>Cup of Tech -</strong> http://cupof.tech</a> - Podcast with Malin, Kai and Zach</li>
</ul>
</li></ul><p><a href="https://apps.apple.com/us/app/speculid/id1438319700?mt=12&amp;itsct=apps_box&amp;itscg=30200"><strong>Order Speculid Today!</strong></a><strong></strong></p><p><a href="https://youtu.be/uFdLYrze0uc"><strong>Youtube Video - https://youtu.be/uFdLYrze0uc</strong></a></p><p><b>Related Episodes</b></p><ul>
<li>
<a href="https://share.transistor.fm/s/3498c82f"><strong>Episode 25 - Developing for Multiple Platforms with Manton Reece</strong></a> </li>
<li><a href="https://share.transistor.fm/s/87165d83"><strong>Episode 35</strong> - <strong>SwiftUI - The Good, the Bad, and the Benefits</strong></a></li>
<li><a href="https://share.transistor.fm/s/dfb18c54"><strong>Episode 57</strong> - <strong>SwiftUI with Majid Jabrayilov - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/c73ba3e5"><strong>Episode 60 - The Future of Mac Development with Lucas Derraugh - Part 2</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.youtube.com/watch?v=twuAkBhoOV8&amp;feature=youtu.be"><strong>Back to the Mac 2020 - The journey of making a Mac app in SwiftUI by Malin</strong></a></li>
<li><a href="https://vimeo.com/479786650/e7f11e6b84"><strong>NSSpain - SwiftUI: We’re now Apple Platform Developers by Malin</strong></a></li>
<li><a href="https://www.youtube.com/watch?v=fzLkHAku1mc"><strong>iOSDevCampDC 2020 - Full Stack Swift - From Server to Watch by Leo</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://transistor.fm/?via=empowerapps"><strong>Transistor.Fm</strong></a><br><em>Your podcast's publishing platform<br></em>Transistor not only hosts your podcast but also:</p><ul>
<li>
<strong>Help distribute your podcast with integrations</strong> to Apple Podcasts, Spotify, Google Podcasts, YouTube, and Mailchimp</li>
<li>
<strong>Deep analytics</strong> including average downloads per episode, popular podcast apps, number of subscribers, trends</li>
<li>
<strong>Professional support</strong> for creatives, businesses, and professional podcasters when it comes to hosting and analytics</li>
</ul><p><a href="https://transistor.fm/how-to-start-a-podcast/?via=empowerapps"><strong>How do you start a podcast?</strong></a><br><a href="https://transistor.fm/how-to-start-a-podcast/?via=empowerapps">https://transistor.fm/how-to-start-a-podcast/?via=empowerapps</a></p><p>Try it today with<a href="https://transistor.fm/?via=empowerapps"> this special link:</a><br><a href="https://transistor.fm/?via=empowerapps">https://transistor.fm/?via=empowerapps</a></p><p><b>Building for the macOS</b></p><ul>
<li>macOS Design Differences</li>
<li>Where AppKit is necessary on macOS?</li>
<li>How Big Sur changed the design?</li>
<li>Supporting Older Operating Systems</li>
</ul><p><b>Migrating to iOS</b></p><ul>
<li>Dealing with iOS screen size</li>
<li>Differences in navigation</li>
<li>What parts can be reused for SwiftUI?</li>
<li>Designing for "glimpses"</li>
</ul><p><b>Whether to go with SwiftUI</b></p><ul>
<li>AppKit/UIKit vs SwiftUI</li>
<li>Some parts faster for development - some slower</li>
<li>Based on expertise </li>
<li>How about Catalyst?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/malinsundberg"><strong>Malin Sundberg - @malinsundberg</strong></a><ul>
<li>
<a href="https://timeinorbit.com"><strong>Orbit</strong> - https://timeinorbit.com</a> - A nicely designed time tracking and invoicing app</li>
<li>
<a href="http://cupof.tech"><strong>Cup of Tech -</strong> http://cupof.tech</a> - Podcast with Malin, Kai and Zach</li>
</ul>
</li></ul><p><a href="https://apps.apple.com/us/app/speculid/id1438319700?mt=12&amp;itsct=apps_box&amp;itscg=30200"><strong>Order Speculid Today!</strong></a><strong></strong></p><p><a href="https://youtu.be/uFdLYrze0uc"><strong>Youtube Video - https://youtu.be/uFdLYrze0uc</strong></a></p><p><b>Related Episodes</b></p><ul>
<li>
<a href="https://share.transistor.fm/s/3498c82f"><strong>Episode 25 - Developing for Multiple Platforms with Manton Reece</strong></a> </li>
<li><a href="https://share.transistor.fm/s/87165d83"><strong>Episode 35</strong> - <strong>SwiftUI - The Good, the Bad, and the Benefits</strong></a></li>
<li><a href="https://share.transistor.fm/s/dfb18c54"><strong>Episode 57</strong> - <strong>SwiftUI with Majid Jabrayilov - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/c73ba3e5"><strong>Episode 60 - The Future of Mac Development with Lucas Derraugh - Part 2</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.youtube.com/watch?v=twuAkBhoOV8&amp;feature=youtu.be"><strong>Back to the Mac 2020 - The journey of making a Mac app in SwiftUI by Malin</strong></a></li>
<li><a href="https://vimeo.com/479786650/e7f11e6b84"><strong>NSSpain - SwiftUI: We’re now Apple Platform Developers by Malin</strong></a></li>
<li><a href="https://www.youtube.com/watch?v=fzLkHAku1mc"><strong>iOSDevCampDC 2020 - Full Stack Swift - From Server to Watch by Leo</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://transistor.fm/?via=empowerapps"><strong>Transistor.Fm</strong></a><br><em>Your podcast's publishing platform<br></em>Transistor not only hosts your podcast but also:</p><ul>
<li>
<strong>Help distribute your podcast with integrations</strong> to Apple Podcasts, Spotify, Google Podcasts, YouTube, and Mailchimp</li>
<li>
<strong>Deep analytics</strong> including average downloads per episode, popular podcast apps, number of subscribers, trends</li>
<li>
<strong>Professional support</strong> for creatives, businesses, and professional podcasters when it comes to hosting and analytics</li>
</ul><p><a href="https://transistor.fm/how-to-start-a-podcast/?via=empowerapps"><strong>How do you start a podcast?</strong></a><br><a href="https://transistor.fm/how-to-start-a-podcast/?via=empowerapps">https://transistor.fm/how-to-start-a-podcast/?via=empowerapps</a></p><p>Try it today with<a href="https://transistor.fm/?via=empowerapps"> this special link:</a><br><a href="https://transistor.fm/?via=empowerapps">https://transistor.fm/?via=empowerapps</a></p><p><b>Building for the macOS</b></p><ul>
<li>macOS Design Differences</li>
<li>Where AppKit is necessary on macOS?</li>
<li>How Big Sur changed the design?</li>
<li>Supporting Older Operating Systems</li>
</ul><p><b>Migrating to iOS</b></p><ul>
<li>Dealing with iOS screen size</li>
<li>Differences in navigation</li>
<li>What parts can be reused for SwiftUI?</li>
<li>Designing for "glimpses"</li>
</ul><p><b>Whether to go with SwiftUI</b></p><ul>
<li>AppKit/UIKit vs SwiftUI</li>
<li>Some parts faster for development - some slower</li>
<li>Based on expertise </li>
<li>How about Catalyst?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Wed, 16 Dec 2020 15:24:54 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/0d12719b/143c0ea9.mp3" length="22604399" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/422245/full_1608126435-artwork.jpg"/>
      <itunes:duration>2768</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Malin Sundberg about her experience building Orbit across a variety of Apple platforms using SwiftUI and what lessons she came away with.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Malin Sundberg about her experience building Orbit across a variety of Apple platforms using SwiftUI and what lessons she came away with.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Functional Programming with Daniel Steinberg</title>
      <itunes:episode>72</itunes:episode>
      <itunes:title>Functional Programming with Daniel Steinberg</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">4737e340-0dd1-42d4-9098-3f5de1def349</guid>
      <link>https://share.transistor.fm/s/b203049d</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://dimsumthinking.com"><strong>Daniel Steinberg - dimsumthinking.com</strong></a><ul>
<li><a href="https://twitter.com/dimsumthinking">Twitter @dimsumthinking</a></li>
<li><a href="https://www.dimsumthinking.com/Newsletter/"><strong>Newsletter</strong></a></li>
</ul>
</li></ul><p><a href="https://youtu.be/YWZt2vq3Y_U"><strong>Youtube Video - https://youtu.be/YWZt2vq3Y_U</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/eba8ef64"><strong>Episode 36 - Upgrading Your Skills in 2020 with Paul Hudson</strong></a></li>
<li><a href="https://share.transistor.fm/s/8442feb7"><strong>Episode 47 - Practical Combine with Donny Wals</strong></a></li>
<li><a href="https://share.transistor.fm/s/03051561"><strong>Episode 19 - WWDC 2019 - Swift UI with Jason Anderson</strong></a></li>
<li><a href="https://share.transistor.fm/s/dfb18c54"><strong>Episode 57 - SwiftUI with Majid Jabrayilov - Part 2</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://gumroad.com/l/combineKickstart"><strong>A Combine Kickstart</strong> by Daniel Steinberg </a></li>
<li><a href="https://gumroad.com/l/functionalKickstart"><strong>A Functional Programming Kickstart</strong> by Daniel Steinberg</a></li>
<li><a href="https://www.youtube.com/watch?v=fImG9tMrzsQ"><strong>iOSDevCampDC 2020 - Keynote: Mise en Place - Daniel Steinberg</strong></a></li>
<li><a href="https://stackingthebricks.com/just-fucking-ship/"><strong>JFS by Amy Hoy</strong></a></li>
<li><a href="https://www.amazon.com/Refactoring-Patterns-Joshua-Kerievsky/dp/0321213351"><strong>Refactoring to Patterns by Joshua Kerievsky</strong></a></li>
<li><a href="https://learningswift.brightdigit.com/flatmap-double-optionals-functional-programming/"><strong>flatMap, Double Optionals, and Functional Programming by Leo Dion</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2019/722/"><strong>Introducing Combine - WWDC 2019 </strong></a></li>
<li><a href="https://www.objc.io/books/functional-swift/"><strong>Functional Swift by Chris Eidhof, Florian Kugler, and Wouter Swierstra</strong></a></li>
<li><a href="https://www.amazon.com/Humane-Interface-Directions-Designing-Interactive/dp/0201379376"><strong>The Humane Interface: New Directions for Designing Interactive Systems by Jef Raskin</strong></a></li>
<li><a href="https://vimeo.com/459004230"><strong>Combine-ing the Old with the New by Leo Dion at 360iDev 2020</strong></a></li>
<li><a href="https://jamesclear.com/atomic-habits"><strong>Atomic Habits by James Clear</strong></a></li>
<li><a href="https://mailchi.mp/c4e898297781/errors-201209"><strong>Latest BrightDigit Newsletter on Error Handling</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="http://www.audibletrial.com/EmpowerApps"><strong>Audible</strong></a><strong><br></strong>Audible is the leading provider of spoken-word entertainment and audiobooks, ranging from best sellers, to celebrity memoirs, news, business, and self-development. Every month, members get one (1) credit to pick any title, plus two (2) Audible Originals from a monthly selection, and access to daily news digests (from <em>The New York Times, The Wall Street Journal, and The Washington Post</em>), as well as guided meditation programs.</p><p><em>My recommendation</em><br><strong>Talking to Strangers - What We Should Know About the People We Don't Know</strong></p><p>Written and Narrated by: <strong>Malcolm Gladwell</strong></p><p><br>Try it out today and 2 free audiobooks:<br><a href="http://www.audibletrial.com/EmpowerApps">http://www.audibletrial.com/EmpowerApps</a></p><p><b>Learning and Conferences</b></p><ul>
<li>Presentation vs Code</li>
<li>Avoiding the actual work</li>
<li>Using what works best when you need it</li>
<li>The importance of writing everyday</li>
</ul><p><b>Functional Programming</b></p><ul>
<li>History of functional programming</li>
<li>Mathematical basis for functional programming</li>
<li>Examples of use with Array and Optionals: zip, reduce, map, etc...</li>
<li>Difference compactMap vs flatMap</li>
<li>What flatMap actually means</li>
<li>Relationship between functional programming and object-oriented programming</li>
</ul><p><b>Functional Programming and Combine</b></p><ul>
<li>Mutability and Values</li>
<li>Adapting to new patterns</li>
<li>Staying organized with small pieces</li>
<li>Testing mapping between inputs</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://dimsumthinking.com"><strong>Daniel Steinberg - dimsumthinking.com</strong></a><ul>
<li><a href="https://twitter.com/dimsumthinking">Twitter @dimsumthinking</a></li>
<li><a href="https://www.dimsumthinking.com/Newsletter/"><strong>Newsletter</strong></a></li>
</ul>
</li></ul><p><a href="https://youtu.be/YWZt2vq3Y_U"><strong>Youtube Video - https://youtu.be/YWZt2vq3Y_U</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/eba8ef64"><strong>Episode 36 - Upgrading Your Skills in 2020 with Paul Hudson</strong></a></li>
<li><a href="https://share.transistor.fm/s/8442feb7"><strong>Episode 47 - Practical Combine with Donny Wals</strong></a></li>
<li><a href="https://share.transistor.fm/s/03051561"><strong>Episode 19 - WWDC 2019 - Swift UI with Jason Anderson</strong></a></li>
<li><a href="https://share.transistor.fm/s/dfb18c54"><strong>Episode 57 - SwiftUI with Majid Jabrayilov - Part 2</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://gumroad.com/l/combineKickstart"><strong>A Combine Kickstart</strong> by Daniel Steinberg </a></li>
<li><a href="https://gumroad.com/l/functionalKickstart"><strong>A Functional Programming Kickstart</strong> by Daniel Steinberg</a></li>
<li><a href="https://www.youtube.com/watch?v=fImG9tMrzsQ"><strong>iOSDevCampDC 2020 - Keynote: Mise en Place - Daniel Steinberg</strong></a></li>
<li><a href="https://stackingthebricks.com/just-fucking-ship/"><strong>JFS by Amy Hoy</strong></a></li>
<li><a href="https://www.amazon.com/Refactoring-Patterns-Joshua-Kerievsky/dp/0321213351"><strong>Refactoring to Patterns by Joshua Kerievsky</strong></a></li>
<li><a href="https://learningswift.brightdigit.com/flatmap-double-optionals-functional-programming/"><strong>flatMap, Double Optionals, and Functional Programming by Leo Dion</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2019/722/"><strong>Introducing Combine - WWDC 2019 </strong></a></li>
<li><a href="https://www.objc.io/books/functional-swift/"><strong>Functional Swift by Chris Eidhof, Florian Kugler, and Wouter Swierstra</strong></a></li>
<li><a href="https://www.amazon.com/Humane-Interface-Directions-Designing-Interactive/dp/0201379376"><strong>The Humane Interface: New Directions for Designing Interactive Systems by Jef Raskin</strong></a></li>
<li><a href="https://vimeo.com/459004230"><strong>Combine-ing the Old with the New by Leo Dion at 360iDev 2020</strong></a></li>
<li><a href="https://jamesclear.com/atomic-habits"><strong>Atomic Habits by James Clear</strong></a></li>
<li><a href="https://mailchi.mp/c4e898297781/errors-201209"><strong>Latest BrightDigit Newsletter on Error Handling</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="http://www.audibletrial.com/EmpowerApps"><strong>Audible</strong></a><strong><br></strong>Audible is the leading provider of spoken-word entertainment and audiobooks, ranging from best sellers, to celebrity memoirs, news, business, and self-development. Every month, members get one (1) credit to pick any title, plus two (2) Audible Originals from a monthly selection, and access to daily news digests (from <em>The New York Times, The Wall Street Journal, and The Washington Post</em>), as well as guided meditation programs.</p><p><em>My recommendation</em><br><strong>Talking to Strangers - What We Should Know About the People We Don't Know</strong></p><p>Written and Narrated by: <strong>Malcolm Gladwell</strong></p><p><br>Try it out today and 2 free audiobooks:<br><a href="http://www.audibletrial.com/EmpowerApps">http://www.audibletrial.com/EmpowerApps</a></p><p><b>Learning and Conferences</b></p><ul>
<li>Presentation vs Code</li>
<li>Avoiding the actual work</li>
<li>Using what works best when you need it</li>
<li>The importance of writing everyday</li>
</ul><p><b>Functional Programming</b></p><ul>
<li>History of functional programming</li>
<li>Mathematical basis for functional programming</li>
<li>Examples of use with Array and Optionals: zip, reduce, map, etc...</li>
<li>Difference compactMap vs flatMap</li>
<li>What flatMap actually means</li>
<li>Relationship between functional programming and object-oriented programming</li>
</ul><p><b>Functional Programming and Combine</b></p><ul>
<li>Mutability and Values</li>
<li>Adapting to new patterns</li>
<li>Staying organized with small pieces</li>
<li>Testing mapping between inputs</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Fri, 11 Dec 2020 10:40:25 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/b203049d/d9990eff.mp3" length="19503072" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/419435/full_1607699656-artwork.jpg"/>
      <itunes:duration>2372</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Daniel Steinberg about functional programming, how to use it in Swift, why it's important for SwiftUI and Combine, and how to stay organized.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Daniel Steinberg about functional programming, how to use it in Swift, why it's important for SwiftUI and Combine, and how to stay organized.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>App Dev Stack with Jordan Morgan</title>
      <itunes:episode>71</itunes:episode>
      <itunes:title>App Dev Stack with Jordan Morgan</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">e84b336c-58c2-4d85-89be-9ff88b8e6b52</guid>
      <link>https://share.transistor.fm/s/021d08bc</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/jordanmorgan10">Jordan Morgan - @jordanmorgan10</a><ul>
<li><a href="https://www.spendstack.com">Spend Stack</a></li>
<li><a href="https://www.swiftjectivec.com">Swiftjective-C</a></li>
</ul>
</li></ul><p><a href="https://youtu.be/0GSKcO18XPs"><strong>Special Cut</strong> Our 2020 Apple Purchases - https://youtu.be/0GSKcO18XPs</a><br><a href="https://youtu.be/9-9XxNzXoTs">Full Episode @Youtube - https://youtu.be/9-9XxNzXoTs</a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/1decc81f"><strong>Episode 68 - App Store Review Guidelines with Paweł Madej</strong></a></li>
<li><a href="https://share.transistor.fm/s/f6092e38"><strong>Episode 62 -</strong> <strong>Local Database Storage on iOS with Aaron Douglas</strong></a></li>
<li><a href="https://share.transistor.fm/s/8226bebf"><strong>Episode 65 - Understanding Git with Ben Chatelain</strong></a></li>
<li><a href="https://atp.fm/405"><strong>ATP 405 - The Benevolence of the Powerful</strong></a></li>
<li><a href="https://releasenotes.tv/393-small-fry/"><strong>Release Notes 393 - Small Fry</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.apple.com/newsroom/2020/11/developers-say-app-store-small-business-program-is-good-for-business/">Apple Press Release</a></li>
<li><a href="https://apps.apple.com/us/app/a-companion-for-swiftui/id1485436674?mt=12">A Companion of SwiftUI App</a></li>
<li><a href="https://www.nytimes.com/2020/11/18/technology/apple-app-store-fee.html">NYTimes - Apple Halves Its App Store Fee for the Smaller Companies</a></li>
<li>Apps We Use<ul>
<li><a href="https://desktop.github.com">GitHub</a></li>
<li><a href="https://ohmyz.sh/">Oh My Zsh</a></li>
<li><a href="https://www.sublimetext.com">Sublime Text</a></li>
<li><a href="https://nova.app">Nova</a></li>
<li><a href="https://ulysses.app">Ulysses</a></li>
<li><a href="https://brew.sh">Homebrew</a></li>
<li><a href="https://github.com/Homebrew/homebrew-bundle">Homebrew Bundle</a></li>
</ul>
</li>
<li><a href="https://isapplesiliconready.com">Is Apple Silicon Ready?</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><strong>Linode</strong></a><br><em>A cloud experience developers love</em></p><ul>
<li>Great for Setting Up a Backend for Your App</li>
<li>Variety of VM Configurations and Settings</li>
<li>Reasonable Pricing Starting at $5 per month</li>
<li>Global Data Centers</li>
<li><strong>The Developer Cloud Simplified</strong></li>
</ul><p>Try it today with<a href="https://transistor.fm/?via=empowerapps"> </a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7">this special link:<br>https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7</a></p><p>Check out <a href="https://orchardnest.com/">OrchardNest</a> Today:<br>https://orchardnest.com</p><p><b>App Store Revenue Changes</b></p><ul>
<li>Make less than a million, cut reduced from 30% to 15%</li>
<li>How it helps indie developers </li>
<li>Alternative App Stores</li>
</ul><p><b>Setting Up a New Dev Machine</b></p><ul>
<li>Using Instruments</li>
<li>Power of Accessibility Inspector</li>
<li>Favorite Text Editor</li>
<li>GitHub App</li>
<li>Shell Configuration</li>
<li>Web Development Tools</li>
<li>Dev Application Compatibility on M1?</li>
</ul><p><b>Working from Home in 2020</b></p><ul>
<li>Benefits of a Co-Working Space</li>
<li>Keeping kids busy while working</li>
<li>Trying to keep focus in development</li>
<li>Co-working in 2020</li>
<li>Having boundaries with kids</li>
<li>Having "me-time" and being working parents in 2020</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/jordanmorgan10">Jordan Morgan - @jordanmorgan10</a><ul>
<li><a href="https://www.spendstack.com">Spend Stack</a></li>
<li><a href="https://www.swiftjectivec.com">Swiftjective-C</a></li>
</ul>
</li></ul><p><a href="https://youtu.be/0GSKcO18XPs"><strong>Special Cut</strong> Our 2020 Apple Purchases - https://youtu.be/0GSKcO18XPs</a><br><a href="https://youtu.be/9-9XxNzXoTs">Full Episode @Youtube - https://youtu.be/9-9XxNzXoTs</a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/1decc81f"><strong>Episode 68 - App Store Review Guidelines with Paweł Madej</strong></a></li>
<li><a href="https://share.transistor.fm/s/f6092e38"><strong>Episode 62 -</strong> <strong>Local Database Storage on iOS with Aaron Douglas</strong></a></li>
<li><a href="https://share.transistor.fm/s/8226bebf"><strong>Episode 65 - Understanding Git with Ben Chatelain</strong></a></li>
<li><a href="https://atp.fm/405"><strong>ATP 405 - The Benevolence of the Powerful</strong></a></li>
<li><a href="https://releasenotes.tv/393-small-fry/"><strong>Release Notes 393 - Small Fry</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.apple.com/newsroom/2020/11/developers-say-app-store-small-business-program-is-good-for-business/">Apple Press Release</a></li>
<li><a href="https://apps.apple.com/us/app/a-companion-for-swiftui/id1485436674?mt=12">A Companion of SwiftUI App</a></li>
<li><a href="https://www.nytimes.com/2020/11/18/technology/apple-app-store-fee.html">NYTimes - Apple Halves Its App Store Fee for the Smaller Companies</a></li>
<li>Apps We Use<ul>
<li><a href="https://desktop.github.com">GitHub</a></li>
<li><a href="https://ohmyz.sh/">Oh My Zsh</a></li>
<li><a href="https://www.sublimetext.com">Sublime Text</a></li>
<li><a href="https://nova.app">Nova</a></li>
<li><a href="https://ulysses.app">Ulysses</a></li>
<li><a href="https://brew.sh">Homebrew</a></li>
<li><a href="https://github.com/Homebrew/homebrew-bundle">Homebrew Bundle</a></li>
</ul>
</li>
<li><a href="https://isapplesiliconready.com">Is Apple Silicon Ready?</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><strong>Linode</strong></a><br><em>A cloud experience developers love</em></p><ul>
<li>Great for Setting Up a Backend for Your App</li>
<li>Variety of VM Configurations and Settings</li>
<li>Reasonable Pricing Starting at $5 per month</li>
<li>Global Data Centers</li>
<li><strong>The Developer Cloud Simplified</strong></li>
</ul><p>Try it today with<a href="https://transistor.fm/?via=empowerapps"> </a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7">this special link:<br>https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7</a></p><p>Check out <a href="https://orchardnest.com/">OrchardNest</a> Today:<br>https://orchardnest.com</p><p><b>App Store Revenue Changes</b></p><ul>
<li>Make less than a million, cut reduced from 30% to 15%</li>
<li>How it helps indie developers </li>
<li>Alternative App Stores</li>
</ul><p><b>Setting Up a New Dev Machine</b></p><ul>
<li>Using Instruments</li>
<li>Power of Accessibility Inspector</li>
<li>Favorite Text Editor</li>
<li>GitHub App</li>
<li>Shell Configuration</li>
<li>Web Development Tools</li>
<li>Dev Application Compatibility on M1?</li>
</ul><p><b>Working from Home in 2020</b></p><ul>
<li>Benefits of a Co-Working Space</li>
<li>Keeping kids busy while working</li>
<li>Trying to keep focus in development</li>
<li>Co-working in 2020</li>
<li>Having boundaries with kids</li>
<li>Having "me-time" and being working parents in 2020</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Wed, 25 Nov 2020 12:00:00 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/021d08bc/97c94048.mp3" length="18994216" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/407974/full_1606245614-artwork.jpg"/>
      <itunes:duration>2309</itunes:duration>
      <itunes:summary>Leo is joined by Jordan Morgan of Spend Stack and Buffer. In this episode, they discuss the new changes to the App Store Revenue cut, their 2020 purchases, how to setup Leo's new M1 Mac Book Air, as well as working remotely with little ones at home in 2020.</itunes:summary>
      <itunes:subtitle>Leo is joined by Jordan Morgan of Spend Stack and Buffer. In this episode, they discuss the new changes to the App Store Revenue cut, their 2020 purchases, how to setup Leo's new M1 Mac Book Air, as well as working remotely with little ones at home in 202</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Maintaining &amp; Migrating with Antoine van der Lee - Part 2</title>
      <itunes:episode>70</itunes:episode>
      <itunes:title>Maintaining &amp; Migrating with Antoine van der Lee - Part 2</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">77dbd436-c173-40ff-a378-46222a68e361</guid>
      <link>https://share.transistor.fm/s/dc84aaa9</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://www.avanderlee.com/"><strong>Antoine van der Lee</strong></a><ul>
<li><a href="https://twitter.com/twannl">Twitter - @twannl</a></li>
<li><a href="https://www.linkedin.com/in/ajvanderlee">Linkedin</a></li>
<li><a href="https://github.com/AvdLee">GitHub</a></li>
<li><a href="https://t.co/fy7WhVk3vw?amp=1">RocketSim</a></li>
</ul>
</li></ul><p><a href="https://youtu.be/AedW0Da37KQ"><strong>YouTube Video - https://youtu.be/AedW0Da37KQ</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/de8caf60"><strong>Episode 69 - Maintaining &amp; Migrating with Antoine van der Lee - Part 1</strong></a></li>
<li><a href="https://share.transistor.fm/s/7247db7e">Episode 14 - iOS App Architecture with René Cacheaux and Josh Berlin</a></li>
<li><a href="https://share.transistor.fm/s/eddb8632">Episode 15 - Test-Driven Development with Joshua Greene and Michael Katz</a></li>
<li><a href="https://share.transistor.fm/s/99f236b1">Episode 39 - Managing Code Quality with Anne Cahalan</a></li>
<li><a href="https://share.transistor.fm/s/f6092e38">Episode 62 - Local Database Storage on iOS with Aaron Douglas</a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.avanderlee.com/workflow/fixing-crashes-bugs/">4 Tips to make it easier to fix crashes and bugs</a></li>
<li><a href="https://www.avanderlee.com/debugging/oslog-unified-logging/">OSLog and Unified logging as recommended by Apple</a></li>
<li><a href="https://ideas.bywetransfer.com/story/apples-swiftui-collect">Adopting SwiftUI at WeTransfer</a></li>
<li>
<a href="https://github.com/WeTransfer/WeTransfer-iOS-CI/">Code Guidelines at WeTransfer</a> </li>
<li><a href="https://www.avanderlee.com/category/core-data/">Antoine's Core Data Blog Posts</a></li>
<li><a href="https://www.donnywals.com/category/core-data/">Donny's Core Data Blog Posts</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance or indie apps like <a href="https://appfigures.com/resources/aso/aso-teardown-fotmob">Fotmob</a>.</li>
<li>
<a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">New competitor's report in the Appfigures dashboard</a> where you are able to view competitor downloads, build performance benchmarks, and see the new trends as they happen. <a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">Check it out here.</a>
</li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><br><a href="https://remote.nsspain.com/"><em>I will be speaking at </em><strong>NSSpain 2020...</strong></a><br>Nov 17 - 20, 2020</p><ul>
<li>One of the most known conferences about Apple platforms development is going remote this year! </li>
<li>NSSpain 2020 is an online, continuous 36 hours conference, carefully crafted by the community for the community.</li>
<li>Guests of the show Paul Hudson, Donny Wals and <strong>Antoine van der Lee</strong> will be speaking as well as others</li>
</ul><p>Go to <a href="https://remote.nsspain.com/"><strong>NSSpain.com</strong></a> and use promo code <em>empowerapps </em>to get 10% off</p><p><b>Upgrading Older Projects</b></p><ul>
<li>Migrating from older versions of Swift</li>
<li>Migrating to SwiftUI</li>
<li>Upgrading piecemeal with new features</li>
<li>Continue supporting older OSes</li>
</ul><p><b>Bugs and Logging</b></p><ul>
<li>Understanding OSLog</li>
<li>Finding a Bug Tracker</li>
<li>Using Diagnostics</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><b>Transcription</b></p><p><strong>Leo Dion (Host): </strong>[00:00:00] Thank you for joining me for another episode of empower apps. I'm your host, Leo Dion joining us again is Antoine Vander Lee. Hey Antoine. Thanks for coming back. Yeah, glad to be back. So I've actually worked on projects that were written in Swift 1. And in the last year or two, have you, have you worked on any of those?</p><p>[00:00:26] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:00:26] I was honored to be at WWDC the, when Swift was announced and you know, you're at the enthusiastic when it's announced, but if you're there, I guess you're even more enthusiastic to get started with it because you're there in that week. You have your MacBook open all the time and you try out a few things.</p><p>[00:00:44] And yeah, I was at a point where I had to convince kind of my project manager to rewrite the project or not. So, yeah, I know. I knew at that point, Switch was the future. So I had a really good statement to make there and I convinced them and we started writing the project is Swift one.one, which was kind of like the first really public version you could use, I guess if I recall correctly.</p><p>[00:01:09] Yeah. Yeah. So we, we started using that and the first week, two weeks, it was all fine and it worked nicely and we continue that we continued and a project grew. And then we realized that you know what is it called again? Incremental bills. Sorry, I couldn't get to the word because we didn't have incremental building at the time, which meant that the project builds times where like, like eight minutes, nine minutes at the certain point, just for a really small change, it didn't work at all.</p><p>[00:01:42] Up until I think  introduced incremental building, which was a lot better already, but yeah. Then three arrives with forest grades, but for existing projects, it was definitely not great. I'm not sure if you experienced the same, but we had to rewrite a lot of good. </p><p>[00:02:00] <strong>Leo Dion (Host): </strong>[00:02:00] Yes. One to two was a big rewrite, but two to three, I think was even bigger rewrite from what I know.</p><p>[00:02:07] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:02:07] Yeah. Yeah. Not even mentioning all the best practices that arrived with the new changes, you know, so I never regret it. The fact that we went for shrift because we were in a much better place than. If we would have started writing it then Objective-C, but it wasn't easy as well. </p><p>[00:02:27] <strong>Leo Dion (Host): </strong>[00:02:27] Yeah. So I've been on a few projects actually in the last year or two that were written in Swift three.</p><p>[00:02:34] And I, I had to add features or bugs fixed bugs from Swift three. And that was an interesting experience because. I ended up having to set up a high Sierra VM and install Xcode 8, but I also had to change the calendar date because the certificate, when it worked on Xcode 8 and then I, yeah, I had to upgrade the product to four on the VM.</p><p>[00:03:00] And then I ended up being able to open it on my actual machine and then upgrade it from 4 to 5. And there was like all sorts of cruft in the code of like, no generics. No Try catch. And it was like, yeah, it was an interesting experience having to, I didn't upgrade it wholesale. I just wanted to fix the bugs and get the features in, but it was interesting if like, Just being able to like dance around it, I guess, and not change too much of the old code that worked while also using new methodology is like a lot of like NSArray and NSDictionary and stuff.</p><p>[00:03:38] I was like, Oh my gosh, this is crazy. </p><p>[00:03:41] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:03:41] Yeah. But it's, it's the same. When you, you have to work on a project still using Objective-C you know, like it's it's, even though you might still notice it texts you, you have a small moment where you need to switch your mindset again. Right. I think the same happens right now with Swift you way, we started adopting Swifty way that we transfer up lately.</p><p>[00:04:00] And it's a, it's a whole different mindset. And once you start writing those Swifts, your wife, he was, you need to get started a bit, but once you're in there, it goes pretty well. Once you know, the same texts a bit, but at a certain point, you need to get back to UIKit code, and then you're like, damn, I need to write so many codes.</p><p>[00:04:19] Yeah. It's a, it's an interesting switch. You have to do all the time.</p><p>[00:04:24] <strong>Leo Dion (Host): </strong>[00:04:24] How are you switching over to Swift UI at we transfer? You're doing it like piecemeal, I guess. Well, </p><p>[00:04:30] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:04:30] well, what we decided to do is really look into like a place where we can adapt Swift to ill, still maintaining a support for iOS 12, because we still support ios 12 and SwiftUI only arrived in ios 13. So that was the first decision we made before we decided which few or which part of the app we wanted to rewrite. And our designers dropped us a new introduction screen just because it probably worked better. So we had to implement that. And this was like coincidence because we also wanted to adopt choice UI at that point.</p><p>[00:05:02] So we decided to build those views with Swift way while keeping the older production screens available for iOS 12 users. Kind of an easy approach. It's it's, it's like a distinct piece of the project, which we could simply rewrite. Well, well, almost not touching the old code. We kind of created an in-between business there, which contained all the logic, like opening the signup page, opening the login page basically methods like sign in button tapped, which we could call from the old introduction screen and from the new Swift to I introduction screens.</p><p>[00:05:37] And with that, we, we started with full confidence on building these SwitUI views and yeah, we, we wrote a blog post about this with all our learnings, which we can share in the show notes later. But if I would make the decision today, I think I would even drop. The new introduction screens for iOS 13, because the thing is once, once SwiftUI arrived, it was iOS 13, obviously.</p><p>[00:06:06] So we can, until you're re you switched away from iOS 13, but it was early days and there were so many books still in there. And. If you decide to use Swift you way with iOS 13, you still have to deal with those books even though they might be fixed now. So we, yeah. Yeah. </p><p>[00:06:22] <strong>Leo Dion (Host): </strong>[00:06:22] That's a good point. I didn't think about that.</p><p>[00:06:23] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:06:23] Yeah. We ended up fixing a lot of books just for those iOS versions, which still have quite a few users on it, you know? So. Yeah, it's a, it's, it's a tough decision. I think if, if we would write like new fuse today, which are quite simple because, you know, our introduction screen sounds simple, but they had a lot of animations because they didn't really make it.</p><p>[00:06:48] <strong>Leo Dion (Host): </strong>[00:06:48] Is it like an onboarding essentially? </p><p>[00:06:50] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:06:50] Yeah, and it's an onboarding, but the design, this we're like limited, we always say just, just create the best view possible. We will see what we can do. Okay. And yeah, we did it well, we didn't regret it, but it's </p><p>[00:07:03] <strong>Leo Dion (Host): </strong>[00:07:03] possible, </p><p>[00:07:06] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:07:06] especially with squishy way, but it turned out upgrades, but yeah.</p><p>[00:07:09] <strong>Leo Dion (Host): </strong>[00:07:09] You know, how does it work on 14? Yeah. </p><p>[00:07:14] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:07:14] So 14 was much better, but fourteen.one, broken other things. So. Oh, boy, it's still not really stable, but I guess it's also, it really depends how complicated your fields are. If you use like customer alignment, guides, for example, then it's all more complicated geometry readers.</p><p>[00:07:33] Yeah, if you, if you don't all use those things, then it can be really simple. Yeah. Yeah. </p><p>[00:07:39] <strong>Leo Dion (Host): </strong>[00:07:39] Yeah. I, you need a doctorate to understand geometry reader. I think, </p><p>[00:07:44] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:07:44] get your head around it. Yeah. Be struggling with that one as well. But yeah, it's pretty useful in some cases even in the, in the kind of hacky way sometimes, but </p><p>[00:07:54] <strong>Leo Dion (Host): </strong>[00:07:54] right.</p><p>[00:07:54] Yeah. So is the idea then in like next year, you're just gonna get rid of the UIKit code since you're not going to support 12 next year properly. </p><p>[00:08:04] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:08:04] Well, I guess at least new fields, you know, once we have the opportunity to rewrite a few, just because the design is so different than we would definitely think about rewriting it in Swift UI, just because, I mean, you know, for sure that one day we want to rewrite it into straightaway.</p><p>[00:08:19] So if we do it today, we make our lives a bit easier for the future selves, you know? But then still, it depends because if it's a really complicated field tangled, they do a lot of business logic we have in place already. Then it might not be the best decision to do for, for example but you know, if you, if you have a UI collection fee with a lot of your recollections with sales in it, You don't want to rewrite that one cell into Swift UI because performance wise, it might not be the best approach.</p><p>[00:08:47] You write one rewrite that whole few all cells altogether with the header footers and so on, in switch UI instead. </p><p>[00:08:54] <strong>Leo Dion (Host): </strong>[00:08:54] And the other thing you had to think about is like, even though. You might have a collection view is a great example. It's only in 14 that we have something like a collection view 50 wise.</p><p>[00:09:05] So if you're still supporting 13, you can't really like bring in a H Grid or V Grid or any of that stuff. </p><p>[00:09:10] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:09:10] Yeah. Yeah, exactly. Yeah. You can still decide to rewrite that few for iOS for two uses only, but especially if you have a large, large user base and collected. Has multiple of millions of users in that case, an adoption of 8% is still like a lot of users.</p><p>[00:09:30] So it's, it's hard to sell that through your product manager that I, that new field will only be available for 90% of the users, because it's still a big percent that you left. Yeah. </p><p>[00:09:42] <strong>Leo Dion (Host): </strong>[00:09:42] And if you're like an indie developer, you know, You don't have to care about that. Stuff's too much, but if you're going to, you're starting something new, but yeah, if you're a product company, that's where it could become a real big issue.</p><p>[00:09:53] Yeah. You know, it's </p><p>[00:09:55] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:09:55] also like a timely decision, you know, like today you have an adoption on iOS 13, but in a year that's probably gone. So. It's also thinking about the future for yourself. If you're in any developer, you're likely want to do the development to Swift your way, just to make it easier for yourself and care a bit less about that lower adoption rate.</p><p>[00:10:15] At least that's my opinion, how I would look at it because, you know, as an indie developer, your time, it's really valuable. You might not have the time to really maintain all fields as well. So </p><p>[00:10:25] <strong>Leo Dion (Host): </strong>[00:10:25] yeah, recently I've dealt with an issue on the watch where there's like a weird archiving issue with watch apps for 32 bit watches.</p><p>[00:10:36] Essentially crashed on watchOS 6 on 32 bit, because of the way archiving was set up. And I had to figure out a specific build flag for it. And it's like, now I'm like, is it really worth supporting watchOS 6? Like, yeah. I'm not, I'm not so sure about that. So yeah, I'm facing that same, same conundrum myself.</p><p>[00:10:56] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:10:56] Yeah. You know, you can only spend your time once, so you need to be careful, but with your decisions. </p><p>[00:11:02] <strong>Leo Dion (Host): </strong>[00:11:02] Yeah, exactly.</p><p>[00:11:07]<strong>App Figures<br></strong><br></p><p>[00:11:07] Hey folks, I wanted to talk to you again about app figures. You probably already know them, but their analytics and their app store optimization and figures really is about giving makers the tools they need to get more downloads and revenue. Well now figures can help you track competitors for how many downloads they're getting and how much money they're making to their audience, demographics and which SDKs they use.</p><p>[00:11:29] Their competitor intelligence really gives you great context, say a competitor as like a new feature or was mentioned in the news recently with app figures, you can see if that brought in more downloads right away. Got a great idea for an app or a game. Well with that figures, you can figure out how big that market is and how much money you could be making with it.</p><p>[00:11:50] And that's just scratching the surface, whether you're growing your app or building a new one, and figures has the tools you need that will reduce the risk, but also get you more downloads. You don't need a large budget or a data science degree to do this kind of thing. I figures has made it affordable Ansible on top of tools and figures also provides a lot of great guides and tutorials to take you step-by-step through gaining more visibility with ASO and increasing your revenue by learning from your competitors.</p><p>[00:12:18] They just released a free guide on that, actually. So go ahead, head to the link in the show notes and try out figures for free. If you like it, user special code and power 30, 30 to get 30% off for the next three months. Thank you at figures first,</p><p>[00:12:34]<strong>End Sponsorship<br></strong><br></p><p>[00:12:34] going back to onboarding now. What's your plan as far as like transitioning out of the UIKit portion of that onboarding thing, once you stopped supporting iOS 12. </p><p>[00:12:49] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:12:49] Yeah. You know, the, the introduction screens, it took a lot of time, but they are now really stable and all I was 13 versions and I was 14. So we're kind of in a place where we were able to just keep on supporting our 13 for as long as we want.</p><p>[00:13:03] But as soon as we We drop. I was 12. We obviously remove and delete the old, the old logic and the old code. And yeah. </p><p>[00:13:11] <strong>Leo Dion (Host): </strong>[00:13:11] Do you use any Swift attributes to deprecate parts of your code? So that way developers understand, you know, don't use this or if you do use it, understand it's going to be going away very soon or like, how do you deal with that kind of stuff?</p><p>[00:13:23] Yeah. </p><p>[00:13:24] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:13:24] We have two ways of doing that sometimes deprecation  warnings. But that's more for like logic that you're likely to reuse or multiple places. Whereas calling the introduction screens, that's not really something you would do with multiple places. So a deprecation warning wouldn't really help a lot there.</p><p>[00:13:42] But what you can do is you can be smart with the availability API APIs and throw a warning. Yeah. You know that the hashtag a warning, same text you can use to predict one is for yourself. That's a, that's often something we like to do. But I guess if you. If you use the availability API APIs, and you start dropping a sort of version, you can just search on that fill-ability API and basically remove all the code that's in the L statement, </p><p>[00:14:11] <strong>Leo Dion (Host): </strong>[00:14:11] right?</p><p>[00:14:12] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:14:12] That's, that's basically the approach we use now. And there's a few places in, in our, in our code, which is kind of like the generic business logic. I think we have, we just adopted difficult data sources and we have some old implementation for iOS 12 to support reloading cells in a factory sales controller.</p><p>[00:14:30] It's quite detailed, but I know that we use a deprecation warning right there. Just because we use it, the multiple fuse and that way we automatically get like warnings from several places and we know where to where to update it. So, yeah, it's a, it's a case by case thing. </p><p>[00:14:44] <strong>Leo Dion (Host): </strong>[00:14:44] Okay, that makes a lot of sense.</p><p>[00:14:46] So over the summer after WWDC, you wrote actually some really good blog posts on logging and dealing with, with bugs and things like that. I'm not super familiar with. And I don't know if a lot of people are really familiar with how OSlog works, but maybe can you explain briefly why folks should be using OSlog over just debug print or print?</p><p>[00:15:10] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:15:10] Yeah. So honestly, if I, if I ride my own projects, I don't really set up. I was lucky because it's feels like a bigger step to take them just using brains. But if you're really looking carefully on what are the benefits of using all this stuff? There are, there are a few, and I didn't really look into the latest features regarding it, but I know for sure that you can use the console app, for example, to read outlooks, which can be useful in certain deep obsessions.</p><p>[00:15:37] And I don't know that it's more performing than print and it's, it's probably not something we will encounter that fast in, in regular applications when using prints. But yeah, you know, if you have to decide anyway, then you can maybe just use, I was lugging stat. And within the collective, we, we created our own kind of like convenient class with categories.</p><p>[00:15:58] So we can really like filter out on certain categories when we run a code and we look out sprint statements which makes it kind of like more coffee and way. And at the time I think we started trying out Coco lumberjack. I was really a favor of using it because I was just used to it. But we really didn't want to add another third party dependency, which is why we decided to use always log, which is kind of like the native available API, similar to Cocoa, Lumberjack, where you also have those log levels in place.</p><p>[00:16:29] So, yeah, I guess that's, that's how we look at it. </p><p>[00:16:33] <strong>Leo Dion (Host): </strong>[00:16:33] How, how can you find that your specific app logs within console, </p><p>[00:16:39] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:16:39] you have to filter out based on your pin, that identifier, and then you can also filter out on the certain log levels. So on, on like the error level or the deepest level and that's where you will only get the print statements of that.</p><p>[00:16:51] The things you really want to see, </p><p>[00:16:53] <strong>Leo Dion (Host): </strong>[00:16:53] and this is available. mAcOS  iOS. wAtchOS over us pretty much anywhere you can, you can filter, you can pull these logs up in the console. </p><p>[00:17:02] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:17:02] Yeah. As far as I know it is, and there are even like further steps you can take. I think connecting like a device, say a colleague in the office has a certain issue on their device.</p><p>[00:17:12] And I think it's even possible to read out certain lugs to the console app, but just connecting the USB connector. I, I really didn't use that often. Yeah, that's maybe interesting to point out as well. We created the framework called diagnostics, which collects all the look statements in your app.</p><p>[00:17:30] And it allows you to, it's been an issue to just press a button in your app and it opens the mail composer with an attachment. And in the spread file, you have a whole diagnostics report, including user defaults, core data specific data, if required all the look statements, any crisis that occurred.</p><p>[00:17:50] It's a pretty nice format in an HTML file way to like an HTML menu as well. So. We we often get report from real users that press the set feedback burden and it gets reported through our support team and we get a lot of details about it user already based on the look statements we have in place.</p><p>[00:18:11] So yeah, I guess that, that took away reasons for us to use the console app, but nowadays, but yeah, it's, it's </p><p>[00:18:19] <strong>Leo Dion (Host): </strong>[00:18:19] still, yeah, that's awesome. The other blog post I wanted to talk about was one from last December about. Your four tips to make it easier to fix crashes and bugs, because I know like if you're updating an app, especially when we have an app that, Oh, well we found out it doesn't work in iOS 14.</p><p>[00:18:37] Can you figure it out? Like and I've had those before. What, what have you found is like some successful ways of figuring out where those bugs are coming from or how those practices are happening? </p><p>[00:18:51] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:18:51] Yeah. So actually in the blog post, I also talk about diagnostics. So that's a. Maybe a pretty interesting entrance point for, for users that for listeners that want to know more, if I look at how we solve crisis nowadays there are a few steps I take we're using Firebase quest reporting.</p><p>[00:19:10] But tools like Instabook do the same where when you get like the last analytics events before request occurred, and that already points you in the right direction. Then there's also defy statistics. So is it happening on iOS 12 only sometimes that happens or is it happening on an iPad only? That can really point you in a certain direction too.</p><p>[00:19:33] And then I start to. Look into the coat, you know, like, can I, based on theory, see what happened there. And if not, I tried to reproduce it in the app itself and then sometimes it's very easy to reproduce it and I can start writing a unit test that reproduces that question, because I wanna make sure that that grass doesn't occur again.</p><p>[00:19:57] So sprint. But sometimes it even happened today. This morning, I explained to her QA engineers, we have a whole team of testing people that run like smoke tests every now and then, and I asked them like, Hey I got a crest related to receiving transfers. It should be around there. Any of those views, did you happen to have a crest when you were downloading content?</p><p>[00:20:23] And sometimes they can tell me, yeah, I coincidentally had that and I had to do this and this and this. But sometimes they did it and they will start testing themselves and try to see if they can find it in a certain way, by doing all kinds of like edge cases. But yeah, that's, that's basically the approach we take to you to solve it.</p><p>[00:20:43] And once we solve the quest, that's important to, you know, those fresh reporting tools, even in Xcode itself, you can Mark a crisis fixed. And that way you will tell the tool like, Hey, whenever disgrace occurred again, show me a notification and let me know, because. Probably didn't fix it yet. So I have to take a look again.</p><p>[00:21:02] <strong>Leo Dion (Host): </strong>[00:21:02] Awesome. And we'll have a link to both of those blog posts in our show notes. Before we close out, we both will be at a conference coming up soon, as much as one can be at a conference in 2020. We'll both be speaking. And Spain, what are you going to be speaking on? </p><p>[00:21:22] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:21:22] Yeah. So lately I've been writing a lot of blog posts around core data which is kind of like a way I prepare for my talks.</p><p>[00:21:29] I try to combine my time preparing the presentation by writing about the same, </p><p>[00:21:35] <strong>Leo Dion (Host): </strong>[00:21:35] same here. </p><p>[00:21:36] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:21:36] Yeah. So what I'll be speaking about this accord data best practices and. You know, I, I took kind of like a benefit from the fact that we need to pre-record it. So I decided to make fun out of it and without giving away too much, but I'll be not alone in the presentation.</p><p>[00:21:55] I'll be speaking together with somebody else. And I also decided to really yeah, go deep and create some custom introduction screens. Do some things with audio. No. I had the chance to combine a few, a few of my previous hobbies, which is video editing and audio editing into creating an awesome recording.</p><p>[00:22:15] So yes, you make it really hard to concentrate now, you know? </p><p>[00:22:21] <strong>Leo Dion (Host): </strong>[00:22:21] Sorry. </p><p>[00:22:22] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:22:22] Sorry. I'm looking at like a futuristic. </p><p>[00:22:26] <strong>Leo Dion (Host): </strong>[00:22:26] Okay. Okay. Okay. Boilers spoiler, because my, my talk is Swift Swift package management, dependency management of the future. So I spent a few bucks on what I'm wearing right now. So I won't say I won't spoil it, but if you attend to Ennis, Spain, you'll check me out this cool, cool runner.</p><p>[00:22:47] You don't want to miss this super cool. Purely like, yeah, it has a lot of button. There we go. </p><p>[00:22:54] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:22:54] Okay. But this is so nice. It's so aligned with the house style. No, I'm not giving away too much, but I get what you're doing here. </p><p>[00:23:02] <strong>Leo Dion (Host): </strong>[00:23:02] Yeah, yeah, yeah. So, yeah. Yeah, so this  will be m, this'll be my 10th. 10th of talk this year, this year.</p><p>[00:23:12] Yeah. Yeah. Wow. Yeah. That's impressive. And I think like two of them were in person. Yeah. All the arrests, obviously our video video. Yeah. I'm excited to talk about it. It seems like I'm excited. You're talking about Swift packages and like you said, it aligns with a lot of my other talks because they all have to do something with Swift packages.</p><p>[00:23:30] So it's, it's kind of a good, good cap to the end of the year, I guess, a good capper. But I'm really excited to talk about that. It's funny, you're talking about core data. There seems to be a big, I think Dani has wrote a few posts on core data as well. And we did an episode recently with Aaron from automatic about core data, but there seems to be a big research, I guess, an interest in core data.</p><p>[00:23:56] Which, which is really interesting. Yeah. </p><p>[00:23:58] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:23:58] You know Donny is a big friend of me. He's also from the Netherlands and we we often speak about gordita. He's writing a new book on </p><p>[00:24:06] <strong>Leo Dion (Host): </strong>[00:24:06] it, which is it's practical core data, isn't it? </p><p>[00:24:10] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:24:10] Yeah, exactly. So that, that, yeah. Promises to be a really good way of starting with good data if you didn't do that yet.</p><p>[00:24:17] But yeah. You know, I think over time, core data really improved, especially in the early days of, of Swift and stuff, core data, wasn't really, really a particular good, but things like the Anna's persistent container persistent history tracking, those really solved a few. Big problems in court data we had at the time.</p><p>[00:24:34] And nowadays it's much more convenient to use. I guess the only thing I really hoped for during this desktop see, and I guess I'll do that next year. Again, it's more like a Swift version of it. You know, we, we still have to interpret it with a lot with Objective-C code, which isn't really nice, but </p><p>[00:24:54] <strong>Leo Dion (Host): </strong>[00:24:54] I've actually looked at a couple of, you know, maybe I'll fly and I'll send you some libraries.</p><p>[00:24:58] I've looked at. Doing core data in a Swifty way. Cause I just hate dealing with what is a XD object model files and all that stuff. Especially going back, especially talking about Swift packages, I'd rather have my, my, my stuff all in code and doing it that way. So maybe I'll fly in. I'll send that to you.</p><p>[00:25:15] Cause I found some really interesting libraries that like kind of refactor that into more of a coding format, similar to how like Swift UI removes storyboards in the same way. Like just being able to get that all in code. The </p><p>[00:25:28] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:25:28] thing is, you know, I I've seen those libraries probably. And there's also this discussion often do use realm and, you know, the best thing is, in my opinion, is that they're all third party dependencies and you, </p><p>[00:25:41] <strong>Leo Dion (Host): </strong>[00:25:41] which we already talked about that with reacts with Slayer, </p><p>[00:25:46] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:25:46] you know, talking about, use a data and you take a really big risk of using a third party dependency.</p><p>[00:25:51] Especially if it turns out to be the wrong decision where you have to migrate all the. Which comes with all kinds of risks. So </p><p>[00:26:02] <strong>Leo Dion (Host): </strong>[00:26:02] totally fair point. Yeah, absolutely. </p><p>[00:26:03] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:26:03] Yeah. Much broader use like a betel test. That's kind of older for shooting core data than offensive third party dependency, which might not work.</p><p>[00:26:15] As good as I would hope, </p><p>[00:26:16] <strong>Leo Dion (Host): </strong>[00:26:16] especially if Apple Sherlock said essentially come up with something better, that actually works, which God willing. I hope maybe 20, 21 we'll get core data migrated fully to Swift and some declarative way. I hope so. </p><p>[00:26:30] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:26:30] I'm pretty sure they're already building something. I would be surprised if they are not.</p><p>[00:26:33] Yeah. </p><p>[00:26:34] <strong>Leo Dion (Host): </strong>[00:26:34] And if people want to watch Antoine and I speak about core data or Swift packages, you definitely want to go to nsp.com. Use that promo code, empower apps to get 10% off. And it's going to be, what is it like 36 hours of talks. So it will be a lot of talks. Yeah. Yeah. It's going to be awesome. So you'll definitely want to check that out.</p><p>[00:26:57] Anything else you want to mention before we close out? </p><p>[00:27:00] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:27:00] Well, I think if anybody wants to discuss any of the topics we discussed now and share opinions, feel free to reach out to me to me on Twitter or on my website through email. Yeah. And that's right to reply as soon as possible. </p><p>[00:27:14] <strong>Leo Dion (Host): </strong>[00:27:14] We'll have that info in the notes.</p><p>[00:27:15] But go ahead and I'll let you say, say the names. What's your website and put your handle. I actually, let me try. You can find Antoine@swiftly.com. No, no. That's that hurts, you know, that hurts. Oh no, no. Yeah. vander.com. </p><p>[00:27:33] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:27:33] Maybe the person, the owner of swiftly the is listening and can get sell it to me because I've really tried to get both swiftly.com and the Twitter handler swiftly, which is also not in my </p><p>[00:27:45] <strong>Leo Dion (Host): </strong>[00:27:45] hands.</p><p>[00:27:46] How about swiftly D and L or is there, is that available or I dunno how that works in another lens. </p><p>[00:27:52] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:27:52] You know, I already build up name for a vendor leader com. So I'd rather go to the right, this destination, swiftly.com or stay with eventually, you know, it's, it's kind of the same for my Twitter handle, which is 20 now which is.</p><p>[00:28:08] Kind of odd as well. It's from the old days, but yeah, some people know it by by themselves, so I don't really want to change that easily. </p><p>[00:28:18] <strong>Leo Dion (Host): </strong>[00:28:18] I totally understand. Trust me. And then I know, I know the Twitter handle @twannl. Yep. twannl. I get that right. I've never done that. I've never done the info of the guest have usually let the guest handle it.</p><p>[00:28:34] What am I missing? You're on get hub as well. </p><p>[00:28:37] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:28:37] I can tell you it's short, short, first or short story about my Twitter handle because you know, I really tried to get swiftly. I started to research was the owner, you know, so I found out the name and I went on LinkedIn. I went on Facebook. I tried to contact him through his email.</p><p>[00:28:53] It's, it's some kind of guy living in California. Even know where, where it's a city is, but you know, you don't want to go too far, but everybody tried to get the Twitter. I know he's not been active since 2009 and I'm like, come on. I can really use that ahead a little bit. </p><p>[00:29:11] <strong>Leo Dion (Host): </strong>[00:29:11] So set. And if you're, if that gentleman is happens to be listening to this podcast, come on.</p><p>[00:29:18] Come on for Antonie. Come on, please. </p><p>[00:29:21] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:29:21] I'll give you some Swiftly merchandise, swiftly coffee. Come on. </p><p>[00:29:27] <strong>Leo Dion (Host): </strong>[00:29:27] We'll have all the info to Antoine. In our show notes, folks can find me on Twitter at Leo G Deon. My company is bright digit. If you have any questions for us or any feedback on this episode, Be sure to reach out to us, please do give us a review in Apple podcast and Google podcasts and Spotify.</p><p>[00:29:47] I'd really appreciate it. Thank you Antonie, for coming on the show. I really appreciate it. Thank you. </p><p>[00:29:52] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:29:52] It's a please</p><p>[00:29:54] <strong>Leo Dion (Host): </strong>[00:29:54] See you at NSSpain. </p><p>[00:29:55] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:29:55] Oh yes, definitely.</p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://www.avanderlee.com/"><strong>Antoine van der Lee</strong></a><ul>
<li><a href="https://twitter.com/twannl">Twitter - @twannl</a></li>
<li><a href="https://www.linkedin.com/in/ajvanderlee">Linkedin</a></li>
<li><a href="https://github.com/AvdLee">GitHub</a></li>
<li><a href="https://t.co/fy7WhVk3vw?amp=1">RocketSim</a></li>
</ul>
</li></ul><p><a href="https://youtu.be/AedW0Da37KQ"><strong>YouTube Video - https://youtu.be/AedW0Da37KQ</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/de8caf60"><strong>Episode 69 - Maintaining &amp; Migrating with Antoine van der Lee - Part 1</strong></a></li>
<li><a href="https://share.transistor.fm/s/7247db7e">Episode 14 - iOS App Architecture with René Cacheaux and Josh Berlin</a></li>
<li><a href="https://share.transistor.fm/s/eddb8632">Episode 15 - Test-Driven Development with Joshua Greene and Michael Katz</a></li>
<li><a href="https://share.transistor.fm/s/99f236b1">Episode 39 - Managing Code Quality with Anne Cahalan</a></li>
<li><a href="https://share.transistor.fm/s/f6092e38">Episode 62 - Local Database Storage on iOS with Aaron Douglas</a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.avanderlee.com/workflow/fixing-crashes-bugs/">4 Tips to make it easier to fix crashes and bugs</a></li>
<li><a href="https://www.avanderlee.com/debugging/oslog-unified-logging/">OSLog and Unified logging as recommended by Apple</a></li>
<li><a href="https://ideas.bywetransfer.com/story/apples-swiftui-collect">Adopting SwiftUI at WeTransfer</a></li>
<li>
<a href="https://github.com/WeTransfer/WeTransfer-iOS-CI/">Code Guidelines at WeTransfer</a> </li>
<li><a href="https://www.avanderlee.com/category/core-data/">Antoine's Core Data Blog Posts</a></li>
<li><a href="https://www.donnywals.com/category/core-data/">Donny's Core Data Blog Posts</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance or indie apps like <a href="https://appfigures.com/resources/aso/aso-teardown-fotmob">Fotmob</a>.</li>
<li>
<a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">New competitor's report in the Appfigures dashboard</a> where you are able to view competitor downloads, build performance benchmarks, and see the new trends as they happen. <a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">Check it out here.</a>
</li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><br><a href="https://remote.nsspain.com/"><em>I will be speaking at </em><strong>NSSpain 2020...</strong></a><br>Nov 17 - 20, 2020</p><ul>
<li>One of the most known conferences about Apple platforms development is going remote this year! </li>
<li>NSSpain 2020 is an online, continuous 36 hours conference, carefully crafted by the community for the community.</li>
<li>Guests of the show Paul Hudson, Donny Wals and <strong>Antoine van der Lee</strong> will be speaking as well as others</li>
</ul><p>Go to <a href="https://remote.nsspain.com/"><strong>NSSpain.com</strong></a> and use promo code <em>empowerapps </em>to get 10% off</p><p><b>Upgrading Older Projects</b></p><ul>
<li>Migrating from older versions of Swift</li>
<li>Migrating to SwiftUI</li>
<li>Upgrading piecemeal with new features</li>
<li>Continue supporting older OSes</li>
</ul><p><b>Bugs and Logging</b></p><ul>
<li>Understanding OSLog</li>
<li>Finding a Bug Tracker</li>
<li>Using Diagnostics</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><b>Transcription</b></p><p><strong>Leo Dion (Host): </strong>[00:00:00] Thank you for joining me for another episode of empower apps. I'm your host, Leo Dion joining us again is Antoine Vander Lee. Hey Antoine. Thanks for coming back. Yeah, glad to be back. So I've actually worked on projects that were written in Swift 1. And in the last year or two, have you, have you worked on any of those?</p><p>[00:00:26] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:00:26] I was honored to be at WWDC the, when Swift was announced and you know, you're at the enthusiastic when it's announced, but if you're there, I guess you're even more enthusiastic to get started with it because you're there in that week. You have your MacBook open all the time and you try out a few things.</p><p>[00:00:44] And yeah, I was at a point where I had to convince kind of my project manager to rewrite the project or not. So, yeah, I know. I knew at that point, Switch was the future. So I had a really good statement to make there and I convinced them and we started writing the project is Swift one.one, which was kind of like the first really public version you could use, I guess if I recall correctly.</p><p>[00:01:09] Yeah. Yeah. So we, we started using that and the first week, two weeks, it was all fine and it worked nicely and we continue that we continued and a project grew. And then we realized that you know what is it called again? Incremental bills. Sorry, I couldn't get to the word because we didn't have incremental building at the time, which meant that the project builds times where like, like eight minutes, nine minutes at the certain point, just for a really small change, it didn't work at all.</p><p>[00:01:42] Up until I think  introduced incremental building, which was a lot better already, but yeah. Then three arrives with forest grades, but for existing projects, it was definitely not great. I'm not sure if you experienced the same, but we had to rewrite a lot of good. </p><p>[00:02:00] <strong>Leo Dion (Host): </strong>[00:02:00] Yes. One to two was a big rewrite, but two to three, I think was even bigger rewrite from what I know.</p><p>[00:02:07] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:02:07] Yeah. Yeah. Not even mentioning all the best practices that arrived with the new changes, you know, so I never regret it. The fact that we went for shrift because we were in a much better place than. If we would have started writing it then Objective-C, but it wasn't easy as well. </p><p>[00:02:27] <strong>Leo Dion (Host): </strong>[00:02:27] Yeah. So I've been on a few projects actually in the last year or two that were written in Swift three.</p><p>[00:02:34] And I, I had to add features or bugs fixed bugs from Swift three. And that was an interesting experience because. I ended up having to set up a high Sierra VM and install Xcode 8, but I also had to change the calendar date because the certificate, when it worked on Xcode 8 and then I, yeah, I had to upgrade the product to four on the VM.</p><p>[00:03:00] And then I ended up being able to open it on my actual machine and then upgrade it from 4 to 5. And there was like all sorts of cruft in the code of like, no generics. No Try catch. And it was like, yeah, it was an interesting experience having to, I didn't upgrade it wholesale. I just wanted to fix the bugs and get the features in, but it was interesting if like, Just being able to like dance around it, I guess, and not change too much of the old code that worked while also using new methodology is like a lot of like NSArray and NSDictionary and stuff.</p><p>[00:03:38] I was like, Oh my gosh, this is crazy. </p><p>[00:03:41] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:03:41] Yeah. But it's, it's the same. When you, you have to work on a project still using Objective-C you know, like it's it's, even though you might still notice it texts you, you have a small moment where you need to switch your mindset again. Right. I think the same happens right now with Swift you way, we started adopting Swifty way that we transfer up lately.</p><p>[00:04:00] And it's a, it's a whole different mindset. And once you start writing those Swifts, your wife, he was, you need to get started a bit, but once you're in there, it goes pretty well. Once you know, the same texts a bit, but at a certain point, you need to get back to UIKit code, and then you're like, damn, I need to write so many codes.</p><p>[00:04:19] Yeah. It's a, it's an interesting switch. You have to do all the time.</p><p>[00:04:24] <strong>Leo Dion (Host): </strong>[00:04:24] How are you switching over to Swift UI at we transfer? You're doing it like piecemeal, I guess. Well, </p><p>[00:04:30] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:04:30] well, what we decided to do is really look into like a place where we can adapt Swift to ill, still maintaining a support for iOS 12, because we still support ios 12 and SwiftUI only arrived in ios 13. So that was the first decision we made before we decided which few or which part of the app we wanted to rewrite. And our designers dropped us a new introduction screen just because it probably worked better. So we had to implement that. And this was like coincidence because we also wanted to adopt choice UI at that point.</p><p>[00:05:02] So we decided to build those views with Swift way while keeping the older production screens available for iOS 12 users. Kind of an easy approach. It's it's, it's like a distinct piece of the project, which we could simply rewrite. Well, well, almost not touching the old code. We kind of created an in-between business there, which contained all the logic, like opening the signup page, opening the login page basically methods like sign in button tapped, which we could call from the old introduction screen and from the new Swift to I introduction screens.</p><p>[00:05:37] And with that, we, we started with full confidence on building these SwitUI views and yeah, we, we wrote a blog post about this with all our learnings, which we can share in the show notes later. But if I would make the decision today, I think I would even drop. The new introduction screens for iOS 13, because the thing is once, once SwiftUI arrived, it was iOS 13, obviously.</p><p>[00:06:06] So we can, until you're re you switched away from iOS 13, but it was early days and there were so many books still in there. And. If you decide to use Swift you way with iOS 13, you still have to deal with those books even though they might be fixed now. So we, yeah. Yeah. </p><p>[00:06:22] <strong>Leo Dion (Host): </strong>[00:06:22] That's a good point. I didn't think about that.</p><p>[00:06:23] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:06:23] Yeah. We ended up fixing a lot of books just for those iOS versions, which still have quite a few users on it, you know? So. Yeah, it's a, it's, it's a tough decision. I think if, if we would write like new fuse today, which are quite simple because, you know, our introduction screen sounds simple, but they had a lot of animations because they didn't really make it.</p><p>[00:06:48] <strong>Leo Dion (Host): </strong>[00:06:48] Is it like an onboarding essentially? </p><p>[00:06:50] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:06:50] Yeah, and it's an onboarding, but the design, this we're like limited, we always say just, just create the best view possible. We will see what we can do. Okay. And yeah, we did it well, we didn't regret it, but it's </p><p>[00:07:03] <strong>Leo Dion (Host): </strong>[00:07:03] possible, </p><p>[00:07:06] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:07:06] especially with squishy way, but it turned out upgrades, but yeah.</p><p>[00:07:09] <strong>Leo Dion (Host): </strong>[00:07:09] You know, how does it work on 14? Yeah. </p><p>[00:07:14] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:07:14] So 14 was much better, but fourteen.one, broken other things. So. Oh, boy, it's still not really stable, but I guess it's also, it really depends how complicated your fields are. If you use like customer alignment, guides, for example, then it's all more complicated geometry readers.</p><p>[00:07:33] Yeah, if you, if you don't all use those things, then it can be really simple. Yeah. Yeah. </p><p>[00:07:39] <strong>Leo Dion (Host): </strong>[00:07:39] Yeah. I, you need a doctorate to understand geometry reader. I think, </p><p>[00:07:44] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:07:44] get your head around it. Yeah. Be struggling with that one as well. But yeah, it's pretty useful in some cases even in the, in the kind of hacky way sometimes, but </p><p>[00:07:54] <strong>Leo Dion (Host): </strong>[00:07:54] right.</p><p>[00:07:54] Yeah. So is the idea then in like next year, you're just gonna get rid of the UIKit code since you're not going to support 12 next year properly. </p><p>[00:08:04] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:08:04] Well, I guess at least new fields, you know, once we have the opportunity to rewrite a few, just because the design is so different than we would definitely think about rewriting it in Swift UI, just because, I mean, you know, for sure that one day we want to rewrite it into straightaway.</p><p>[00:08:19] So if we do it today, we make our lives a bit easier for the future selves, you know? But then still, it depends because if it's a really complicated field tangled, they do a lot of business logic we have in place already. Then it might not be the best decision to do for, for example but you know, if you, if you have a UI collection fee with a lot of your recollections with sales in it, You don't want to rewrite that one cell into Swift UI because performance wise, it might not be the best approach.</p><p>[00:08:47] You write one rewrite that whole few all cells altogether with the header footers and so on, in switch UI instead. </p><p>[00:08:54] <strong>Leo Dion (Host): </strong>[00:08:54] And the other thing you had to think about is like, even though. You might have a collection view is a great example. It's only in 14 that we have something like a collection view 50 wise.</p><p>[00:09:05] So if you're still supporting 13, you can't really like bring in a H Grid or V Grid or any of that stuff. </p><p>[00:09:10] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:09:10] Yeah. Yeah, exactly. Yeah. You can still decide to rewrite that few for iOS for two uses only, but especially if you have a large, large user base and collected. Has multiple of millions of users in that case, an adoption of 8% is still like a lot of users.</p><p>[00:09:30] So it's, it's hard to sell that through your product manager that I, that new field will only be available for 90% of the users, because it's still a big percent that you left. Yeah. </p><p>[00:09:42] <strong>Leo Dion (Host): </strong>[00:09:42] And if you're like an indie developer, you know, You don't have to care about that. Stuff's too much, but if you're going to, you're starting something new, but yeah, if you're a product company, that's where it could become a real big issue.</p><p>[00:09:53] Yeah. You know, it's </p><p>[00:09:55] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:09:55] also like a timely decision, you know, like today you have an adoption on iOS 13, but in a year that's probably gone. So. It's also thinking about the future for yourself. If you're in any developer, you're likely want to do the development to Swift your way, just to make it easier for yourself and care a bit less about that lower adoption rate.</p><p>[00:10:15] At least that's my opinion, how I would look at it because, you know, as an indie developer, your time, it's really valuable. You might not have the time to really maintain all fields as well. So </p><p>[00:10:25] <strong>Leo Dion (Host): </strong>[00:10:25] yeah, recently I've dealt with an issue on the watch where there's like a weird archiving issue with watch apps for 32 bit watches.</p><p>[00:10:36] Essentially crashed on watchOS 6 on 32 bit, because of the way archiving was set up. And I had to figure out a specific build flag for it. And it's like, now I'm like, is it really worth supporting watchOS 6? Like, yeah. I'm not, I'm not so sure about that. So yeah, I'm facing that same, same conundrum myself.</p><p>[00:10:56] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:10:56] Yeah. You know, you can only spend your time once, so you need to be careful, but with your decisions. </p><p>[00:11:02] <strong>Leo Dion (Host): </strong>[00:11:02] Yeah, exactly.</p><p>[00:11:07]<strong>App Figures<br></strong><br></p><p>[00:11:07] Hey folks, I wanted to talk to you again about app figures. You probably already know them, but their analytics and their app store optimization and figures really is about giving makers the tools they need to get more downloads and revenue. Well now figures can help you track competitors for how many downloads they're getting and how much money they're making to their audience, demographics and which SDKs they use.</p><p>[00:11:29] Their competitor intelligence really gives you great context, say a competitor as like a new feature or was mentioned in the news recently with app figures, you can see if that brought in more downloads right away. Got a great idea for an app or a game. Well with that figures, you can figure out how big that market is and how much money you could be making with it.</p><p>[00:11:50] And that's just scratching the surface, whether you're growing your app or building a new one, and figures has the tools you need that will reduce the risk, but also get you more downloads. You don't need a large budget or a data science degree to do this kind of thing. I figures has made it affordable Ansible on top of tools and figures also provides a lot of great guides and tutorials to take you step-by-step through gaining more visibility with ASO and increasing your revenue by learning from your competitors.</p><p>[00:12:18] They just released a free guide on that, actually. So go ahead, head to the link in the show notes and try out figures for free. If you like it, user special code and power 30, 30 to get 30% off for the next three months. Thank you at figures first,</p><p>[00:12:34]<strong>End Sponsorship<br></strong><br></p><p>[00:12:34] going back to onboarding now. What's your plan as far as like transitioning out of the UIKit portion of that onboarding thing, once you stopped supporting iOS 12. </p><p>[00:12:49] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:12:49] Yeah. You know, the, the introduction screens, it took a lot of time, but they are now really stable and all I was 13 versions and I was 14. So we're kind of in a place where we were able to just keep on supporting our 13 for as long as we want.</p><p>[00:13:03] But as soon as we We drop. I was 12. We obviously remove and delete the old, the old logic and the old code. And yeah. </p><p>[00:13:11] <strong>Leo Dion (Host): </strong>[00:13:11] Do you use any Swift attributes to deprecate parts of your code? So that way developers understand, you know, don't use this or if you do use it, understand it's going to be going away very soon or like, how do you deal with that kind of stuff?</p><p>[00:13:23] Yeah. </p><p>[00:13:24] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:13:24] We have two ways of doing that sometimes deprecation  warnings. But that's more for like logic that you're likely to reuse or multiple places. Whereas calling the introduction screens, that's not really something you would do with multiple places. So a deprecation warning wouldn't really help a lot there.</p><p>[00:13:42] But what you can do is you can be smart with the availability API APIs and throw a warning. Yeah. You know that the hashtag a warning, same text you can use to predict one is for yourself. That's a, that's often something we like to do. But I guess if you. If you use the availability API APIs, and you start dropping a sort of version, you can just search on that fill-ability API and basically remove all the code that's in the L statement, </p><p>[00:14:11] <strong>Leo Dion (Host): </strong>[00:14:11] right?</p><p>[00:14:12] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:14:12] That's, that's basically the approach we use now. And there's a few places in, in our, in our code, which is kind of like the generic business logic. I think we have, we just adopted difficult data sources and we have some old implementation for iOS 12 to support reloading cells in a factory sales controller.</p><p>[00:14:30] It's quite detailed, but I know that we use a deprecation warning right there. Just because we use it, the multiple fuse and that way we automatically get like warnings from several places and we know where to where to update it. So, yeah, it's a, it's a case by case thing. </p><p>[00:14:44] <strong>Leo Dion (Host): </strong>[00:14:44] Okay, that makes a lot of sense.</p><p>[00:14:46] So over the summer after WWDC, you wrote actually some really good blog posts on logging and dealing with, with bugs and things like that. I'm not super familiar with. And I don't know if a lot of people are really familiar with how OSlog works, but maybe can you explain briefly why folks should be using OSlog over just debug print or print?</p><p>[00:15:10] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:15:10] Yeah. So honestly, if I, if I ride my own projects, I don't really set up. I was lucky because it's feels like a bigger step to take them just using brains. But if you're really looking carefully on what are the benefits of using all this stuff? There are, there are a few, and I didn't really look into the latest features regarding it, but I know for sure that you can use the console app, for example, to read outlooks, which can be useful in certain deep obsessions.</p><p>[00:15:37] And I don't know that it's more performing than print and it's, it's probably not something we will encounter that fast in, in regular applications when using prints. But yeah, you know, if you have to decide anyway, then you can maybe just use, I was lugging stat. And within the collective, we, we created our own kind of like convenient class with categories.</p><p>[00:15:58] So we can really like filter out on certain categories when we run a code and we look out sprint statements which makes it kind of like more coffee and way. And at the time I think we started trying out Coco lumberjack. I was really a favor of using it because I was just used to it. But we really didn't want to add another third party dependency, which is why we decided to use always log, which is kind of like the native available API, similar to Cocoa, Lumberjack, where you also have those log levels in place.</p><p>[00:16:29] So, yeah, I guess that's, that's how we look at it. </p><p>[00:16:33] <strong>Leo Dion (Host): </strong>[00:16:33] How, how can you find that your specific app logs within console, </p><p>[00:16:39] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:16:39] you have to filter out based on your pin, that identifier, and then you can also filter out on the certain log levels. So on, on like the error level or the deepest level and that's where you will only get the print statements of that.</p><p>[00:16:51] The things you really want to see, </p><p>[00:16:53] <strong>Leo Dion (Host): </strong>[00:16:53] and this is available. mAcOS  iOS. wAtchOS over us pretty much anywhere you can, you can filter, you can pull these logs up in the console. </p><p>[00:17:02] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:17:02] Yeah. As far as I know it is, and there are even like further steps you can take. I think connecting like a device, say a colleague in the office has a certain issue on their device.</p><p>[00:17:12] And I think it's even possible to read out certain lugs to the console app, but just connecting the USB connector. I, I really didn't use that often. Yeah, that's maybe interesting to point out as well. We created the framework called diagnostics, which collects all the look statements in your app.</p><p>[00:17:30] And it allows you to, it's been an issue to just press a button in your app and it opens the mail composer with an attachment. And in the spread file, you have a whole diagnostics report, including user defaults, core data specific data, if required all the look statements, any crisis that occurred.</p><p>[00:17:50] It's a pretty nice format in an HTML file way to like an HTML menu as well. So. We we often get report from real users that press the set feedback burden and it gets reported through our support team and we get a lot of details about it user already based on the look statements we have in place.</p><p>[00:18:11] So yeah, I guess that, that took away reasons for us to use the console app, but nowadays, but yeah, it's, it's </p><p>[00:18:19] <strong>Leo Dion (Host): </strong>[00:18:19] still, yeah, that's awesome. The other blog post I wanted to talk about was one from last December about. Your four tips to make it easier to fix crashes and bugs, because I know like if you're updating an app, especially when we have an app that, Oh, well we found out it doesn't work in iOS 14.</p><p>[00:18:37] Can you figure it out? Like and I've had those before. What, what have you found is like some successful ways of figuring out where those bugs are coming from or how those practices are happening? </p><p>[00:18:51] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:18:51] Yeah. So actually in the blog post, I also talk about diagnostics. So that's a. Maybe a pretty interesting entrance point for, for users that for listeners that want to know more, if I look at how we solve crisis nowadays there are a few steps I take we're using Firebase quest reporting.</p><p>[00:19:10] But tools like Instabook do the same where when you get like the last analytics events before request occurred, and that already points you in the right direction. Then there's also defy statistics. So is it happening on iOS 12 only sometimes that happens or is it happening on an iPad only? That can really point you in a certain direction too.</p><p>[00:19:33] And then I start to. Look into the coat, you know, like, can I, based on theory, see what happened there. And if not, I tried to reproduce it in the app itself and then sometimes it's very easy to reproduce it and I can start writing a unit test that reproduces that question, because I wanna make sure that that grass doesn't occur again.</p><p>[00:19:57] So sprint. But sometimes it even happened today. This morning, I explained to her QA engineers, we have a whole team of testing people that run like smoke tests every now and then, and I asked them like, Hey I got a crest related to receiving transfers. It should be around there. Any of those views, did you happen to have a crest when you were downloading content?</p><p>[00:20:23] And sometimes they can tell me, yeah, I coincidentally had that and I had to do this and this and this. But sometimes they did it and they will start testing themselves and try to see if they can find it in a certain way, by doing all kinds of like edge cases. But yeah, that's, that's basically the approach we take to you to solve it.</p><p>[00:20:43] And once we solve the quest, that's important to, you know, those fresh reporting tools, even in Xcode itself, you can Mark a crisis fixed. And that way you will tell the tool like, Hey, whenever disgrace occurred again, show me a notification and let me know, because. Probably didn't fix it yet. So I have to take a look again.</p><p>[00:21:02] <strong>Leo Dion (Host): </strong>[00:21:02] Awesome. And we'll have a link to both of those blog posts in our show notes. Before we close out, we both will be at a conference coming up soon, as much as one can be at a conference in 2020. We'll both be speaking. And Spain, what are you going to be speaking on? </p><p>[00:21:22] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:21:22] Yeah. So lately I've been writing a lot of blog posts around core data which is kind of like a way I prepare for my talks.</p><p>[00:21:29] I try to combine my time preparing the presentation by writing about the same, </p><p>[00:21:35] <strong>Leo Dion (Host): </strong>[00:21:35] same here. </p><p>[00:21:36] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:21:36] Yeah. So what I'll be speaking about this accord data best practices and. You know, I, I took kind of like a benefit from the fact that we need to pre-record it. So I decided to make fun out of it and without giving away too much, but I'll be not alone in the presentation.</p><p>[00:21:55] I'll be speaking together with somebody else. And I also decided to really yeah, go deep and create some custom introduction screens. Do some things with audio. No. I had the chance to combine a few, a few of my previous hobbies, which is video editing and audio editing into creating an awesome recording.</p><p>[00:22:15] So yes, you make it really hard to concentrate now, you know? </p><p>[00:22:21] <strong>Leo Dion (Host): </strong>[00:22:21] Sorry. </p><p>[00:22:22] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:22:22] Sorry. I'm looking at like a futuristic. </p><p>[00:22:26] <strong>Leo Dion (Host): </strong>[00:22:26] Okay. Okay. Okay. Boilers spoiler, because my, my talk is Swift Swift package management, dependency management of the future. So I spent a few bucks on what I'm wearing right now. So I won't say I won't spoil it, but if you attend to Ennis, Spain, you'll check me out this cool, cool runner.</p><p>[00:22:47] You don't want to miss this super cool. Purely like, yeah, it has a lot of button. There we go. </p><p>[00:22:54] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:22:54] Okay. But this is so nice. It's so aligned with the house style. No, I'm not giving away too much, but I get what you're doing here. </p><p>[00:23:02] <strong>Leo Dion (Host): </strong>[00:23:02] Yeah, yeah, yeah. So, yeah. Yeah, so this  will be m, this'll be my 10th. 10th of talk this year, this year.</p><p>[00:23:12] Yeah. Yeah. Wow. Yeah. That's impressive. And I think like two of them were in person. Yeah. All the arrests, obviously our video video. Yeah. I'm excited to talk about it. It seems like I'm excited. You're talking about Swift packages and like you said, it aligns with a lot of my other talks because they all have to do something with Swift packages.</p><p>[00:23:30] So it's, it's kind of a good, good cap to the end of the year, I guess, a good capper. But I'm really excited to talk about that. It's funny, you're talking about core data. There seems to be a big, I think Dani has wrote a few posts on core data as well. And we did an episode recently with Aaron from automatic about core data, but there seems to be a big research, I guess, an interest in core data.</p><p>[00:23:56] Which, which is really interesting. Yeah. </p><p>[00:23:58] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:23:58] You know Donny is a big friend of me. He's also from the Netherlands and we we often speak about gordita. He's writing a new book on </p><p>[00:24:06] <strong>Leo Dion (Host): </strong>[00:24:06] it, which is it's practical core data, isn't it? </p><p>[00:24:10] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:24:10] Yeah, exactly. So that, that, yeah. Promises to be a really good way of starting with good data if you didn't do that yet.</p><p>[00:24:17] But yeah. You know, I think over time, core data really improved, especially in the early days of, of Swift and stuff, core data, wasn't really, really a particular good, but things like the Anna's persistent container persistent history tracking, those really solved a few. Big problems in court data we had at the time.</p><p>[00:24:34] And nowadays it's much more convenient to use. I guess the only thing I really hoped for during this desktop see, and I guess I'll do that next year. Again, it's more like a Swift version of it. You know, we, we still have to interpret it with a lot with Objective-C code, which isn't really nice, but </p><p>[00:24:54] <strong>Leo Dion (Host): </strong>[00:24:54] I've actually looked at a couple of, you know, maybe I'll fly and I'll send you some libraries.</p><p>[00:24:58] I've looked at. Doing core data in a Swifty way. Cause I just hate dealing with what is a XD object model files and all that stuff. Especially going back, especially talking about Swift packages, I'd rather have my, my, my stuff all in code and doing it that way. So maybe I'll fly in. I'll send that to you.</p><p>[00:25:15] Cause I found some really interesting libraries that like kind of refactor that into more of a coding format, similar to how like Swift UI removes storyboards in the same way. Like just being able to get that all in code. The </p><p>[00:25:28] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:25:28] thing is, you know, I I've seen those libraries probably. And there's also this discussion often do use realm and, you know, the best thing is, in my opinion, is that they're all third party dependencies and you, </p><p>[00:25:41] <strong>Leo Dion (Host): </strong>[00:25:41] which we already talked about that with reacts with Slayer, </p><p>[00:25:46] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:25:46] you know, talking about, use a data and you take a really big risk of using a third party dependency.</p><p>[00:25:51] Especially if it turns out to be the wrong decision where you have to migrate all the. Which comes with all kinds of risks. So </p><p>[00:26:02] <strong>Leo Dion (Host): </strong>[00:26:02] totally fair point. Yeah, absolutely. </p><p>[00:26:03] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:26:03] Yeah. Much broader use like a betel test. That's kind of older for shooting core data than offensive third party dependency, which might not work.</p><p>[00:26:15] As good as I would hope, </p><p>[00:26:16] <strong>Leo Dion (Host): </strong>[00:26:16] especially if Apple Sherlock said essentially come up with something better, that actually works, which God willing. I hope maybe 20, 21 we'll get core data migrated fully to Swift and some declarative way. I hope so. </p><p>[00:26:30] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:26:30] I'm pretty sure they're already building something. I would be surprised if they are not.</p><p>[00:26:33] Yeah. </p><p>[00:26:34] <strong>Leo Dion (Host): </strong>[00:26:34] And if people want to watch Antoine and I speak about core data or Swift packages, you definitely want to go to nsp.com. Use that promo code, empower apps to get 10% off. And it's going to be, what is it like 36 hours of talks. So it will be a lot of talks. Yeah. Yeah. It's going to be awesome. So you'll definitely want to check that out.</p><p>[00:26:57] Anything else you want to mention before we close out? </p><p>[00:27:00] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:27:00] Well, I think if anybody wants to discuss any of the topics we discussed now and share opinions, feel free to reach out to me to me on Twitter or on my website through email. Yeah. And that's right to reply as soon as possible. </p><p>[00:27:14] <strong>Leo Dion (Host): </strong>[00:27:14] We'll have that info in the notes.</p><p>[00:27:15] But go ahead and I'll let you say, say the names. What's your website and put your handle. I actually, let me try. You can find Antoine@swiftly.com. No, no. That's that hurts, you know, that hurts. Oh no, no. Yeah. vander.com. </p><p>[00:27:33] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:27:33] Maybe the person, the owner of swiftly the is listening and can get sell it to me because I've really tried to get both swiftly.com and the Twitter handler swiftly, which is also not in my </p><p>[00:27:45] <strong>Leo Dion (Host): </strong>[00:27:45] hands.</p><p>[00:27:46] How about swiftly D and L or is there, is that available or I dunno how that works in another lens. </p><p>[00:27:52] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:27:52] You know, I already build up name for a vendor leader com. So I'd rather go to the right, this destination, swiftly.com or stay with eventually, you know, it's, it's kind of the same for my Twitter handle, which is 20 now which is.</p><p>[00:28:08] Kind of odd as well. It's from the old days, but yeah, some people know it by by themselves, so I don't really want to change that easily. </p><p>[00:28:18] <strong>Leo Dion (Host): </strong>[00:28:18] I totally understand. Trust me. And then I know, I know the Twitter handle @twannl. Yep. twannl. I get that right. I've never done that. I've never done the info of the guest have usually let the guest handle it.</p><p>[00:28:34] What am I missing? You're on get hub as well. </p><p>[00:28:37] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:28:37] I can tell you it's short, short, first or short story about my Twitter handle because you know, I really tried to get swiftly. I started to research was the owner, you know, so I found out the name and I went on LinkedIn. I went on Facebook. I tried to contact him through his email.</p><p>[00:28:53] It's, it's some kind of guy living in California. Even know where, where it's a city is, but you know, you don't want to go too far, but everybody tried to get the Twitter. I know he's not been active since 2009 and I'm like, come on. I can really use that ahead a little bit. </p><p>[00:29:11] <strong>Leo Dion (Host): </strong>[00:29:11] So set. And if you're, if that gentleman is happens to be listening to this podcast, come on.</p><p>[00:29:18] Come on for Antonie. Come on, please. </p><p>[00:29:21] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:29:21] I'll give you some Swiftly merchandise, swiftly coffee. Come on. </p><p>[00:29:27] <strong>Leo Dion (Host): </strong>[00:29:27] We'll have all the info to Antoine. In our show notes, folks can find me on Twitter at Leo G Deon. My company is bright digit. If you have any questions for us or any feedback on this episode, Be sure to reach out to us, please do give us a review in Apple podcast and Google podcasts and Spotify.</p><p>[00:29:47] I'd really appreciate it. Thank you Antonie, for coming on the show. I really appreciate it. Thank you. </p><p>[00:29:52] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:29:52] It's a please</p><p>[00:29:54] <strong>Leo Dion (Host): </strong>[00:29:54] See you at NSSpain. </p><p>[00:29:55] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:29:55] Oh yes, definitely.</p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Thu, 19 Nov 2020 00:00:00 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/dc84aaa9/4ac2257f.mp3" length="14958277" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/402705/full_1605624259-artwork.jpg"/>
      <itunes:duration>1804</itunes:duration>
      <itunes:summary>In this second part of our interview with Antoine van der Lee, we talk about how to upgrade older apps piecemeal, supporting older OSes, as well as bug tracking and logging. Antoine also gets a sneak peak at Leo's talk at NSSpain.</itunes:summary>
      <itunes:subtitle>In this second part of our interview with Antoine van der Lee, we talk about how to upgrade older apps piecemeal, supporting older OSes, as well as bug tracking and logging. Antoine also gets a sneak peak at Leo's talk at NSSpain.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Maintaining &amp; Migrating with Antoine van der Lee - Part 1</title>
      <itunes:episode>69</itunes:episode>
      <itunes:title>Maintaining &amp; Migrating with Antoine van der Lee - Part 1</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">70bce17b-59b5-42d9-84f7-eb6c00a99c98</guid>
      <link>https://share.transistor.fm/s/de8caf60</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://www.avanderlee.com"><strong>Antoine van der Lee</strong></a><ul>
<li><a href="https://twitter.com/twannl">Twitter - @twannl</a></li>
<li><a href="https://www.linkedin.com/in/ajvanderlee">Linkedin</a></li>
<li><a href="https://github.com/AvdLee">GitHub</a></li>
<li><a href="https://t.co/fy7WhVk3vw?amp=1">RocketSim</a></li>
</ul>
</li></ul><p><a href="https://youtu.be/bnAzZo3-N4g"><strong>YouTube Video - https://youtu.be/bnAzZo3-N4g</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/dc84aaa9"><strong>Episode 70 - Maintaining &amp; Migrating with Antoine van der Lee - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/7247db7e">Episode 14 - iOS App Architecture with René Cacheaux and Josh Berlin</a></li>
<li><a href="https://share.transistor.fm/s/eddb8632">Episode 15 - Test-Driven Development with Joshua Greene and Michael Katz</a></li>
<li><a href="https://share.transistor.fm/s/99f236b1">Episode 39 - Managing Code Quality with Anne Cahalan</a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.avanderlee.com/workflow/fixing-crashes-bugs/">4 Tips to make it easier to fix crashes and bugs</a></li>
<li><a href="https://www.avanderlee.com/debugging/oslog-unified-logging/">OSLog and Unified logging as recommended by Apple</a></li>
<li><a href="https://ideas.bywetransfer.com/story/apples-swiftui-collect">Adopting SwiftUI at WeTransfer</a></li>
<li>
<a href="https://github.com/WeTransfer/WeTransfer-iOS-CI/">Code Guidelines at WeTransfer</a> </li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance or indie apps like <a href="https://appfigures.com/resources/aso/aso-teardown-fotmob">Fotmob</a>.</li>
<li>
<a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">New competitor's report in the Appfigures dashboard</a> where you are able to view competitor downloads, build performance benchmarks, and see the new trends as they happen. <a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">Check it out here.</a>
</li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><br><a href="https://remote.nsspain.com/"><em>I will be speaking at </em><strong>NSSpain 2020...</strong></a><br>Nov 17 - 20, 2020</p><ul>
<li>One of the most known conferences about Apple platforms development is going remote this year! </li>
<li>NSSpain 2020 is an online, continuous 36 hours conference, carefully crafted by the community for the community.</li>
<li>Guests of the show Paul Hudson, Donny Wals and <strong>Antoine van der Lee</strong> will be speaking as well as others</li>
</ul><p>Go to <a href="https://remote.nsspain.com/"><strong>NSSpain.com</strong></a> and use promo code <em>empowerapps </em>to get 10% off</p><p><b>Intro</b></p><ul>
<li><a href="https://mailchi.mp/02d6e26ad618/brightdigit-issue-4740637">Latest BrightDigit newsletter on Apple Event</a></li>
<li>Fan or no Fan?</li>
<li>Memory Limits?</li>
<li>Trying to get Speculid out in the App Store </li>
<li>
<a href="https://backtomac.org">Back to the Mac 2020 Videos</a><ul>
<li><a href="https://youtu.be/2ZhvfG_vd5Y">Leo on Modern Mac App Dev and C++</a></li>
<li><a href="https://youtu.be/GpekbTYHX8w">Leo on Swift Argument Parser</a></li>
<li>
<a href="https://share.transistor.fm/s/c73ba3e5">Lucas from Episodes 59 and 60</a> on <a href="https://youtu.be/VnvlK6gUCAg">Custom Search Suggestions Window</a>
</li>
<li><a href="https://youtu.be/twuAkBhoOV8">Malin will be on in Dec to talk SwiftUI and Multiplatform Dev!</a></li>
</ul>
</li>
<li>Get your <a href="https://remote.nsspain.com/"><strong>NSSpain</strong></a><strong> ticket soon and use promo code </strong><strong><em>empowerapps</em></strong>
</li>
</ul><p><b>On Simulators</b></p><ul>
<li><a href="https://t.co/fy7WhVk3vw?amp=1">RocketSim</a></li>
<li>Managing Multiple Simulators</li>
<li>Creating Movies and Gifs from Simulator</li>
<li>Preparing RocketSim for Big Sur</li>
</ul><p><b>Dealing with Old Code</b></p><ul>
<li>Your old code vs Someone else's old code</li>
<li>When do you need to rewrite the app?</li>
<li>How do you convince a manager?</li>
<li>Differences between agency and product work</li>
</ul><p><b>Early Project Decisions</b></p><ul>
<li>Dealing with Third-Party Dependencies</li>
<li>Refactoring by Unit Tests</li>
<li>Keeping File Size Down</li>
<li>Splitting Types with Extensions</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><b>Transcript</b></p><p><strong>Leo Dion (Host): </strong>[00:00:00] Hello folks. Welcome to another episode of EmpowerApps. I am your host Leo Dion. Before we began the interview with Antonie, I wanted to cover a few things. We just finished the Apple event, revealing the new Apple Silicon Macs. And I wanted to talk about that. We recorded the episode the morning of today of the Apple event.</p><p>[00:00:20] So obviously Antonie and I didn't really cover these new Macs, but I figured I would just give you a quick, quick thoughts on the event today. So this was our last event from Apple last hardware event. It's been pretty quick. This year. We've had three events in two months, like Tim said, and we got the reveal of the  chip, which will be used in the Mac book pro, Mac book air, and Mac mini, which can be ordered today.</p><p>[00:00:48] I don't know when they're going to be out. Exactly. I haven't been able to check that out. I don't know which I'm really interested in. I'm kind of. Not really up for buying another piece of Apple hardware already bought a new iPhone and a new. Apple watch as well as the home pod mini, that should be coming in a few days.</p><p>[00:01:05] So I'm not super enthusiastic about buying something new. I do have a Mac book pro that's almost half a decade old now, so it could definitely use an upgrade, but I did just put a two terabyte hard drive in. So that's, that's helped us quite a bit, but it's getting slow for sure. The other. Option is looking at getting a Mac book air.</p><p>[00:01:25] If I wanted something to replace what was my iPad pro, but that doesn't sound really interesting to me for a right only machine. And then the other option is the Mac mini. And I think if I was really desperate to get an app in the app store that worked on Apple, silicone, I'd probably go that route because I think that would be.</p><p>[00:01:43] The most reliable as to kind of use it as a remote CI machine, essentially to make sure I can get my builds working on Apple Silicon, especially with the applique speculate, which I'm hoping to get an app store very soon. So that was the Apple event. I am really kind of a wait and see approach to see what the review say and what comes out.</p><p>[00:02:03] But It doesn't look like new industrial design or anything like that. A lot of comments about devices having fans or don't have fans and things like that, you know, all that's fantastic I guess, but I'm kind of wait and see, and. What is it actually going to be like when developers get these in their hands or even video editors as well?</p><p>[00:02:23] So that was pretty much the Apple event in summary, not a lot. And then the other thing I wanted to talk about is my videos are out for Back To Mac. Thank you so much, Gavin, for putting this conference together, you can check it out at the YouTube channel, which I'll have a link to as well as my two videos on modern.</p><p>[00:02:43] Mac OS development with C++ as well as my talk on Swift argument parser, those will be in the links Lucas, who was a guest this summer and talked about Miko West development. He had a video as well, and a few other people that you really should check out. It's awesome conference. If you're interested in Mac development anyways.</p><p>[00:03:00] Yeah. And that's back to Mac. And then lastly, get your ticket to NSSpain. Remember you can get 10% off if you use our promo code and power apps. I'm speaking at it. I will be speaking on Swift package management Antonie. Our guest for today is also speaking as well. And folks that we've had on the show like Paul Hudson, Donnie Walls, they all will be speaking at this 36 hour conference, which is going to be awesome.</p><p>[00:03:23] So that's fantastic. Definitely want to check that out, go to Anna spain.com. Use the promo code and power apps get 10% off and you will see me talk about Swift package manager, the dependency management of the future. Thank you so much. I think that's it. Here is the first part of our interview with Antonie about maintaining and migrating old code and old projects over a second part should be out in a few days later, probably five days.</p><p>[00:03:51] So thank you so much and I'll let the rest episode take it away.</p><p>[00:04:00] Welcome to another episode of EmpowerApps. I'm your host, Leo Dion. Today. I'm excited to have one of my favorites. Bloggers in the Swift space. Antonie Vander Lee. Hey Antonie how's it going? </p><p>[00:04:12] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:04:12] Hey. Hey. Yeah. Great. Thanks for inviting me over. I'm really looking forward to having a nice conversation today . </p><p>[00:04:19] <strong>Leo Dion (Host): </strong>[00:04:19] So for those who don't know who you are, I'll let you go ahead and introduce yourself.</p><p>[00:04:23] Yeah, I think </p><p>[00:04:24] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:04:24] I'm best known for my personal blog called swiftly at which I write for two years every week. And I try to publish that article every new week, besides that I'm a developer for almost four years that we transfer where I developed the collect by we transfer application. Yeah. And I tried to be a regular speaker at conference. And so yeah, that's me. </p><p>[00:04:47] <strong>Leo Dion (Host): </strong>[00:04:47] Yeah. We'll talk about at the end of our recording today. We'll talk about our talks and Spain. I'm really excited about that this year, but you've been working on your big app you've been working on for developers has been RocketSim, correct? </p><p>[00:05:01] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:05:01] That's correct. Yeah. That's like a typical example of a hobby project that turns out to be way more serious than it started.</p><p>[00:05:09] I think I started like a year ago in August where I found myself testing universal links in the simulator. For the CollectByWeTransfer application and it was quite like a repetitive task. You know, I had to copy a link into Safari on the simulator open it. Then I started evolving it into an HTML page where I could just press a link and it would open in the simulator, but you know, it was repetitive and it didn't really.</p><p>[00:05:39] Well smoothly my whole process in testing the application. So yeah, I decided to start developing RocketSim, but it's a, it's a different application, you know, today, </p><p>[00:05:49] <strong>Leo Dion (Host): </strong>[00:05:49] I think. So what exactly does RocketSim do? Is it like a power tool for simulators essentially? Yeah, </p><p>[00:05:56] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:05:56] so I think many of the iOS developers are familiar with the SIM CTL tools.</p><p>[00:06:02] Yes, we have available in the, in the terminal command. </p><p>[00:06:06] <strong>Leo Dion (Host): </strong>[00:06:06] Yeah. I use that for like screenshots and videos. You can do all sorts of stuff with like clearing or data resetting it, all that stuff. </p><p>[00:06:13] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:06:13] Exactly. So what I basically did with RocketSim is a at first I built like a, a UI around that tool to make it a bit more accessible.</p><p>[00:06:22] And over time I started developing RocketSim to be a more enhanced version of it. So. Right now RocketSim enables you to record the simulator into MP4 or GIF. So what basically RocketSim is doing for you is converting it into a quality video file, as well as a dif file, which you can share on platforms like Git or GitHub.</p><p>[00:06:44] <strong>Leo Dion (Host): </strong>[00:06:44] You can't create a GIF with some CTL, so you you're doing all that in coding yourself.  </p><p>[00:06:49] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:06:49] EXactly. So right now yeah, I'm, I'm taking the result from SIM CTL and I'm converting it in multiple ways. I also want it to support dragging it into app store connect so you can use it for app store Prefuse so yeah, you know, it's a lot easier to create app store Prefuse if you want through the simulator.</p><p>[00:07:07] And it's also resulting in an floating third nail on the bottom right of your screen. So you can dial like directly drag the recording result in any app you want. And that's different compared to using the terminal where you first need to open the third terminal. Remember the commands executed commands, save it to a location with the right syntax.</p><p>[00:07:28] And then you can start dragging it anywhere. So it's basically making the whole workflow a lot easier. </p><p>[00:07:34] <strong>Leo Dion (Host): </strong>[00:07:34] That's awesome. And is this available on the app store or is it just free open source? </p><p>[00:07:39] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:07:39] It's available for free in the app store, in the Mac app store and for free, we'll get like a recording version with a small watermark on it to just to help me promote this RocketSim a bit.</p><p>[00:07:49] And you can decide to become a rocketsim PRO user and then you get like recordings without any watermarks. </p><p>[00:07:56] <strong>Leo Dion (Host): </strong>[00:07:56] Awesome. So are you ready for. The switch over to big Sur with RocketSim. </p><p>[00:08:03] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:08:03] Yeah. Yeah. W what I did, what I'd like to do in general is to just have an separated petition in which I can test out big Sur.</p><p>[00:08:10] So I did the same because I had quite a few early adopters. I think that's the downside of a developer tool because developers, they want to test out big server as soon as it's available. So I had to actually start testing it quite early. And well, yeah, you know, I was, I think I was kind of lucky because it works almost completely, so yeah.</p><p>[00:08:33] I guess I'm ready. </p><p>[00:08:34] <strong>Leo Dion (Host): </strong>[00:08:34] That's awesome. So today we have. Quite a challenging topic. I'm sorry. This is the topic that we've picked. It's not fun and exotic, but I think as employees and as software developers, we run into this quite a bit and that's maintaining and migrating older applications. We all, we've all done it before.</p><p>[00:08:59] It's it's the dirty job of iOS development. What kind of experiences have you had? Dealing with like old code or maintaining old code. What kind of challenges do you run into frequently? Yeah. </p><p>[00:09:14] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:09:14] So there's a lot. I can say about this and I think it totally differs per project. Before I worked at we transfer, I was working at a digital agency and it often happened that I had to take over a project from a different company where you would end up being in a reel.</p><p>[00:09:29] Big, well kind of coat mess. You didn't write yourself, which is a lot. Whereas then if you are in a code mess you did right. Do you know nowadays it's at WeTransfer? I, you know, was one of the first developers, so I can dream like the complete code in that application. And I think if you're, if you're doing a great job for yourself, it's, it's not, not a difficult topic to discuss because if you're iteratively making sure your code is up to date and then there's nothing really to migrate, you know, So what we try to do at WeTransfer.</p><p>[00:10:01] And we do the same as we speak with SwiftUI is we really try to stay on top of the new things and adopt as we go in phases. Step-by-step which, you know, that makes it at least a much smaller step. Over time. And I think that way it doesn't really hurt. Yeah. </p><p>[00:10:21] <strong>Leo Dion (Host): </strong>[00:10:21] I think definitely doing it iterative approach, and I'm a big believer in continuous integration and things like that.</p><p>[00:10:30] And just making sure your code is constantly like. Passes, whatever linting or whatever code coverage you expect and following that rule. But yeah, I think I've run into more situations where I am brought on to deal with essentially like a mess of code that somebody had already worked on and kind of being brought onto those projects.</p><p>[00:10:54] And that, that to me is like the bigger challenge is how, how do you take something that's are writing on this and like, introduce. First of all a clean it up, but also be introduced an intuitive process into it. So that way problems don't happen in the future. Yeah. </p><p>[00:11:11] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:11:11] I think if I look back, I have been lucky over time.</p><p>[00:11:13] Right. Could convince my product managers to really start rewriting the complete project. At the time when Swift first just just arrived. But you know, there are indeed cases where that's not an option that you really need to figure out like a solid structure in a solid way where like tomorrow is a better day for your project, then, then it, and today.</p><p>[00:11:35] <strong>Leo Dion (Host): </strong>[00:11:35] What do you think helped convince your product manager?</p><p>[00:11:38] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:11:38] Yeah. So, you know, I always try to really make it visible for them. Especially if the product manager isn't technical, you really need to know how to convince him in terms of like, what does it mean if we wouldn't do the migration in terms of time, for example, because. If it means that the developing a new feature takes, like, for example, a week long, or just because the project structure isn't fitting the way we like to work.</p><p>[00:12:04] And it takes for example, three months to develop the, the rewrite because you know, you already have the code, right. You only need to rewrite it to Swift. For example, you know, the business rules already. So it's kind of like a faster approach than starting from scratch. Three months is obviously longer than that one week for that developing that new feature.</p><p>[00:12:25] But if you take it over like two years or three years, then obviously it's, it's, it's a better approach. I think this, this is a case per case, obviously, but in this case it might work. If you, for example, still have a project and Objective-C let's say that you have a project with Swift and that project is a mess just because, you know, maybe, maybe somebody else wrote a lot of things in Well, let me, let me share an example.</p><p>[00:12:52] What I did, this is a sad story for my old colleagues, because I left them with a, with a project which is now a code mess probably. But you know, you have those, those times where you really want to dive into like a new, new, new tool or topic. And for me, that was at the time RXSwift. Okay. You have to reactive programming.</p><p>[00:13:12] I was really into it and I wrote everything with our experience, even though it wasn't the best choice. And right now I left over like a few of those engineers with a project, which is completely wired into our Swift observables and those kinds of things. And it's really hard for them to maintain that project because, you know, If you don't have that learning curve for RXSwift, with it's just, yeah.</p><p>[00:13:36] Time-consuming and it's way harder doing a project without it. And what they do, they take, take it step by step and they rewrite screen per screen, business logic, pro business logic, into like code. That's easier to understand and simpler for them to maintain. And obviously that doesn't result in a better application within a few days, but yeah, it's, it's an iterative process.</p><p>[00:13:59] Which makes it a better project over time. </p><p>[00:14:01] <strong>Leo Dion (Host): </strong>[00:14:01] Yeah. I'm hearing a couple of things. One thing is when you convince your product manager, it seems like, like at the end of the day it's money, right. That's going to drive the decision. If that means they can save more money long time by you rewriting and rearchitecting the code, I think that's much more tangible to them.</p><p>[00:14:18] And of course, like you said, it depends case by case because a lot of cases there is no long-term, everything is short term. Those are not fun projects to work on, but. They're for real they're out there. And so, like, they don't even care about rearchitecting cause they just want the short term gain. And then, you know, whatever, they'll worry about it at some other point.</p><p>[00:14:39] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:14:39] I think that that's also like an important difference between an agency working for clients that really want to have a result within eight weeks, no matter how you do it. You know, those are often also the examples where you don't write any unit tests because there's no time. Right, right. Whereas if you're working at a product company, it's much more important to have that solid foundation on which we can build on for like years, you know?</p><p>[00:15:05] We, we can't rewrite the project every, every other year. So yeah, those are really different stories. </p><p>[00:15:10] <strong>Leo Dion (Host): </strong>[00:15:10] The other thing you talk about is using RX Swift and the idea of bringing in third party, the library's always is kind of a flag, a warning flag. It better be like really accepted or something. That's pretty major.</p><p>[00:15:22] If you're going to bring that in and make that your whole design philosophy. Cause I know a lot of fans that RX Swift there isn't, it isn't that. I wouldn't say it's that foreign to a lot of people, especially now that people are getting more exposure to reactive programming, but still at least, I don't know, we're talking to maybe like five years ago that you did this.</p><p>[00:15:41] Like yeah. I could see how that's a totally, totally foreign way to do things outside of the standard UI kit storyboard way. </p><p>[00:15:49] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:15:49] Yeah, definitely. And you know, it's not per se a problem. You know, if everybody in the project knows what you're doing and knows about this third party dependency, then it's a perfect way to develop the application.</p><p>[00:16:02] And at the time I was the only one developing the application so, you know, there is no problem. </p><p>[00:16:06] <strong>Leo Dion (Host): </strong>[00:16:06] Well, where were you in the hierarchy of the company? </p><p>[00:16:09] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:16:09] This was at the agency time where I grew from like. Being a junior or for four years to a senior. And I think, I think this, this was at a point where I was the senior, because I made a decision to do a</p><p>[00:16:23] Then I was capable of making that decision. Yeah. </p><p>[00:16:26] <strong>Leo Dion (Host): </strong>[00:16:26] And there probably were like, whatever five years ago. That was probably not a lot of Swift developers because whatever Swift is only six years old anyways. Yeah. </p><p>[00:16:36] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:16:36] That's true. This dates back even longer where We also adopted reactive cocoa with objective-C time, you know?</p><p>[00:16:43] So yes. Okay. In general, any decision to adopt it to a third party dependency? Which obviously also happens way more often than tonight to see because the time is way smaller. So if you can use a third party dependency, which gives you like a boost in development. Yeah. That's the easy choice.</p><p>[00:17:06] <strong>AppFiguresLeo Dion (Host): </strong>[00:17:06] I want her to talk to you again about app figures. You probably already know them, but their analytics and their app store optimization. I figures really is about giving makers the tools they need to get more downloads and revenue. Well, now figures can help you track competitors for how many downloads they're getting and how much money they're making to their audience, demographics and which SDKs they use.</p><p>[00:17:27] Their competitor intelligence really gives you great context, say a competitor as like a new feature or was spending in the news recently with app figures, you can see if that brought in more downloads right away. Got a great idea for an app or a game. Well with that figures that you can figure out how big that market is and how much money you could be making with it.</p><p>[00:17:48] And that's just scratching the surface, whether you're growing your app or building a new one, and figures has the tools you need that will reduce the risk, but also get you more downloads. You don't need a large budget or a data science degree to do this kind of thing. I figures has made it affordable Ansible on top of tools and figures also provides a lot of great guides and tutorials to take you step-by-step through gaining more visibility with ASO and increasing your revenue by learning from your competitors.</p><p>[00:18:16] They just released a free guide on that, actually. So go ahead, head to the link in the show notes and try out figures for free. If you like it, user special code and power 30, 30 to get 30% off for the next three months. Thank you at figures for sponsoring our show.</p><p>[00:18:36]<strong>End Sponsorship<br></strong><br></p><p>[00:18:36] So let's say you got a ginormous file. From one of your developers, like a really big file, maybe has maybe there's, it's a huge view controller. Let's say tons of lines, like we're talking thousands. How what's your philosophy fee on like cleaning up that code? Or how do you triage that in such a way that like, okay, first thing we need to do is break this up in this way.</p><p>[00:18:59] Or first thing we need to do is to deal with this. What are some like red flags that you would take care of right away? </p><p>[00:19:05] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:19:05] So the way I like to do refactoring is by being really convinced that I'm doing the right thing. And the only way I see that makes it possible is by writing unit tests. </p><p>[00:19:15] <strong>Leo Dion (Host): </strong>[00:19:15] Yeah. I was about to say the same thing.</p><p>[00:19:17] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:19:17] Yeah. You know, it's, it's, it's the only way you're for sure that the inputs results in the same output and I guess if anybody writes such a big class, a they don't care about unit testing as well. So I probably have to start writing those first. Once I have those, I would, I would take it step-by-step and rewrite like, well, maybe, maybe first look at like data sources, delegates, like those distinct responsibilities and take them out, creates a single responsibilities of them.</p><p>[00:19:50] And then that leaves you up with, with, with other kind of sectors in that class, you know, like pieces that should be in a field model. Maybe there's some network in which I can extract into networking layer. Maybe that field itself is way to bake and I need to create two new fields first, which already removes a bit of code.</p><p>[00:20:11] And as you go, it will be more and more obvious what you want to create there. Although, while I'm sorry right here, thinking out loud, I think it's maybe even better to do this beforehand where you really create that structure. So you know what you're going to do, you know, like where, where are you going to place all the pieces that you have in place?</p><p>[00:20:30] <strong>Leo Dion (Host): </strong>[00:20:30] Yeah. Like, I like the idea about unit testing, because I think like that's not just as unit testing, ensure that your code does what you expect it to do, but it also it's created at least for me, like a healthy habit of good architecture. That's one of the things and just being able to like, Build the unit tests and then build the scaffolding.</p><p>[00:20:52] So that way, like kind of like you're building almost like a bridge or a tower to where, like you have pieces in there. I didn't even know what it's called. I'm not a construction person, but like you have the pieces in there that holds the thing up, but then you are able to like remove those pieces that hold it up temporarily, which is basically your old code.</p><p>[00:21:10] Once you've set up your new code, that's better are cut textured and refactored correctly. Does that analogy make any sense? I think so. </p><p>[00:21:18] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:21:18] Yeah. Yeah, I think it does. Although it might not always be the way how to do this, you know, because it's not always possible to keep the old code in place while rewrite or well writing the new code.</p><p>[00:21:29] You know, sometimes you have to throw the way the old code first, before you can start writing and adopting the new code, but I guess, yeah. You can make the building collapsed the reflector, you know, </p><p>[00:21:42] <strong>Leo Dion (Host): </strong>[00:21:42] what, what do you mean by you have to remove the old code. Well, you know </p><p>[00:21:46] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:21:46] you have two ways of refactoring one way would be to kind of like in an AB testing way where you would have to first and side-by-side working.</p><p>[00:21:54] That would mean that, that the ultimate approach should completely stay working automatic contest in you. And the other approach would be to. Make the project kind of breaks. So you're kind of like let the building collapse and then you start rebuilding it from scratch to kind of </p><p>[00:22:11] <strong>Leo Dion (Host): </strong>[00:22:11] so kind of let it, you let the compiler fail or the app crash, because that way it, it's a way to remind you to, to, you know, understand when that thing is fully working, I guess.</p><p>[00:22:21] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:22:21] Yeah, exactly. And sometimes the new approach needs to make use of codes that already exists, but that existing code needs to be adopted for the new way of working. But to be able to do that, you're breaking the old kind of logic that was already in place. So you have to remove that kind of yeah, it's just an easier approach.</p><p>[00:22:40] If you don't have to think about the old implementation. </p><p>[00:22:43] <strong>Leo Dion (Host): </strong>[00:22:43] Yeah. Yeah. That makes sense. What other red flags do you think you'll see in code that you'd like now that needs to be taken care of right away? </p><p>[00:22:52] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:22:52] Well, what we like to do with retreads transfer is well, it's actually an open source framework we have where you can find our code guidelines, you know, like the same techs using that  source spaces. You, you notice, go in discussions you have in the community, but </p><p>[00:23:09] <strong>Leo Dion (Host): </strong>[00:23:09] linting rules basically, right? </p><p>[00:23:11] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:23:11] Exactly main thing rules we have we have Swift lint set up and we also have a few custom danger rules. They just systems which will all run during the day and, and pull requests. She, I integration we're using patronize for that, which really helps us to write consistent code and it could easily be that that costs we get.</p><p>[00:23:32] Somehow doesn't apply to those rules. So I think that's a red flag for us as well, because we want to have consistent code that at least makes it easier. That's that's one part. There is another part that you can't really force through LinkedIn, and that's like structuring code decided to go for a few model, certain naming conventions using a return keyword or not, you know, like all those kinds of decisions.</p><p>[00:23:59] You want to make sure that that class is adopting that as well. So it's kind of like family of the coat you already have in place. </p><p>[00:24:07] <strong>Leo Dion (Host): </strong>[00:24:07] Okay. So let's let me ask tabs or spaces.</p><p>[00:24:10] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:24:10] Tabs</p><p>[00:24:11] <strong>Leo Dion (Host): </strong>[00:24:11] Oh my gosh. Yeah. I don't know if we can keep her, keep doing this work. It's going to become a controversial I do, I guess. Yeah. I need two spaces. Just, just FYI. But yeah, I don't, I don't care. Like, I guess for my own part projects, I'll do two spaces, but like, if I'm on a team, I just want a rule. Right.</p><p>[00:24:34] Like, I think that's the important thing. Just have a rule if it's tabs be consistent. Like, I think that's the most important thing though, to the agreed and then. I guess like one, one thing that I, I haven't found a good Swift lint rule or Swift format rule for is one struck or one extension or one type in each file.</p><p>[00:24:57] I try to follow that rule. So like, don't have multiple classes in one file. I'll do that when I first start off. Right. But then eventually, like I split it up into like files each file for each type in each extension. And enumeration, whatever, you know what I mean? I'm trying to think what other rules I find a lot of.</p><p>[00:25:18] I don't know. Well, anything else you can think of? Do you have like a max max line limit or max limit? </p><p>[00:25:26] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:25:26] Yeah, we have the max file length later, but you know, that's always a big struggle because sometimes it's just, you know, those, those few controls that add up so many extensions, it's really hard to just.</p><p>[00:25:39] Move them over to a different file because you also want to contain them to get a kind of </p><p>[00:25:44] yeah, because I have, </p><p>[00:25:45] <strong>Leo Dion (Host): </strong>[00:25:45] when I've done view controllers like that, I usually just split them up into extensions if they're way too long. And then I try to group it based on what protocol, let's try to implement. And then that way, like, okay, this one is the view controller data source implementation.</p><p>[00:26:00] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:26:00] This is the view controller whatever table view, delegate, you know, things like that. Yeah, the downside, I find there is that it's always, you know, you need to find it in a different file, even though it does files may live together in the same folder. It's an extra step to make it discoverable, which I often kind of dislike.</p><p>[00:26:18] <strong>Leo Dion (Host): </strong>[00:26:18] Yeah. Yep. I've heard that's a big pet peeve with extensions in general. </p><p>[00:26:23] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:26:23] Yeah. Yeah. And we, we do end up doing so, but I'd rather have like a hundred lines extra in that class and make it easy to find. Instead of having the code separate. And of course all those files in the end, it's all about findability readability in your project.</p><p>[00:26:39] And if it means that it's a 600 lines file, but it's still viewable, you know, then I reached my goal. So yeah, we, we sometimes decide to use that wild market to disable the rules. </p><p>[00:26:52] <strong>Leo Dion (Host): </strong>[00:26:52] Right, right, right. Yeah. Was there any other red flags you want to talk about? Or should I just go to the next topic?</p><p>[00:26:58] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:26:58] What I find interesting about your road that you suggest that this you know, and that's, that's often something I run into is in the beginning, you start writing your field model in the same file. So you have like a few controller and the structure for your view model in the same file. As long as that's view model is really small.</p><p>[00:27:15] You don't really feel the need to create a new file because the new file will only contain like 10 lines of code or something. And it seems kind of odd to create a whole file for that small class, you know, but the thing is over time, it could easily grow, grow into like a bigger class with more responsibilities.</p><p>[00:27:35] So if I, if I look at the code we have in place that we transfer, we often never define two instances in the same file, but it's always an interesting interesting decision. </p><p>[00:27:47] <strong>Leo Dion (Host): </strong>[00:27:47] I feel like that's a habit I got from when I was a C# developer. And then I just carried that through, into JavaScript and Swift and, and it makes a lot of science and like, I've gotten to a point.</p><p>[00:27:58] I have like a, somewhere in my terminal history. I have a series of like batch and bash. Commands that basically splits the file for me, based on every little curly bracket, because I just, I do it so often. And it's just, it's easier to find stuff. If anything, like, I almost wish going back to your comment regarding extensions, like, I feel like.</p><p>[00:28:23] Maybe an Xcode 13. It'd be nice if like the find finding features worked better. I know it keeps getting improved, but that would, that would make it a lot easier to deal with like multiple files for a single class or type. </p><p>[00:28:35] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:28:35] Yeah, it's a, it's an interesting one. You know, we often run into a discussion as well in our team meetup we developed do we transfer app collect by, we transfer for three iOS engineers and. That's that makes it easy to discuss things. You know, it's not really a given that a certain way of direction is the way forward. And one of my  colleagues ofte, likes to use functions in function, which is always discussion.</p><p>[00:29:01] <strong>Leo Dion (Host): </strong>[00:29:01] That's scary. </p><p>[00:29:03] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:29:03] Scary. What is your opinion on that? </p><p>[00:29:06] <strong>Leo Dion (Host): </strong>[00:29:06] That's really scary. That's that's that should not be done, I guess. Yeah. That's kind of my feeling because yeah, it has a, it has a sloppy Javascript feel to it when you're, when you have a function in a function. Yeah. </p><p>[00:29:22] It gets used to it too, but you know, in some places he meant to convince me because it kind of works and it's kind of readable.</p><p>[00:29:31] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:29:31] But still, it feels so, you know, it's almost like a structure into a structure itself. So up to me, you know, it just feels like it's, it's like tangled into each other or, you know, it doesn't feel right. </p><p>[00:29:44] <strong>Leo Dion (Host): </strong>[00:29:44] That's a hard one. Okay. Here, I'm going to try, try to. Try to try to be coherent and explain why I don't like it and I could be totally wrong, but I'm going to try it anyways, a function in sight, a function.</p><p>[00:29:59] And the reason why it reminds me of like older Javascript is because it kind of it's masking a variable. As a function, even though it's really a variable, that's essentially private. And I understand he's like trying to like, control access that way to that function. But to me, like why not just make it a file private function in the type, rather than making it inside the function itself like that.</p><p>[00:30:24] Well in, in unit testing too, like just the unit testing of that individual function is going to be a mess, which goes back to my whole point about how like unit testing, one of the best things about it has been how it's made architecture so much better in the last 10 or 15 years that it's been popular.</p><p>[00:30:41] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:30:41] Yeah, totally. You </p><p>[00:30:42] know, and it's also not really improving the structure of the method itself. Like it's pretty hard to get an overview of what is not exactly in the method called all those inner methods, you know, and readability doesn't really </p><p>[00:30:55] approve. </p><p>[00:30:55] <strong>Leo Dion (Host): </strong>[00:30:55] Yeah. Is this, it, it reminds me of all the worst parts about Java script when I did a lot words, like even whatever ES6, whatever it is right now.</p><p>[00:31:05] Yeah. Thank you so much, Antonie. Let's go ahead and we'll continue with the rest of our interview in the next episode. Folks can find me on Twitter at Leo G Dion and my company is BrightDigit. If you have any comments, questions, or feedback, please let me know, reach out to me on Twitter. And then I would love for you to just take a few moments, retweet, whatever you liked about this episode.</p><p>[00:31:31] Just send me a reply, send me something on Twitter. Just letting me know what you've liked about this particular episode. And if you could post any reviews on Apple podcast, Spotify or Google podcast, I'd really appreciate it. We'll continue the rest of our interview with Antonie in the next episode in a few days.</p><p>[00:31:47] So be sure to subscribe and we'll talk to you.</p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://www.avanderlee.com"><strong>Antoine van der Lee</strong></a><ul>
<li><a href="https://twitter.com/twannl">Twitter - @twannl</a></li>
<li><a href="https://www.linkedin.com/in/ajvanderlee">Linkedin</a></li>
<li><a href="https://github.com/AvdLee">GitHub</a></li>
<li><a href="https://t.co/fy7WhVk3vw?amp=1">RocketSim</a></li>
</ul>
</li></ul><p><a href="https://youtu.be/bnAzZo3-N4g"><strong>YouTube Video - https://youtu.be/bnAzZo3-N4g</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/dc84aaa9"><strong>Episode 70 - Maintaining &amp; Migrating with Antoine van der Lee - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/7247db7e">Episode 14 - iOS App Architecture with René Cacheaux and Josh Berlin</a></li>
<li><a href="https://share.transistor.fm/s/eddb8632">Episode 15 - Test-Driven Development with Joshua Greene and Michael Katz</a></li>
<li><a href="https://share.transistor.fm/s/99f236b1">Episode 39 - Managing Code Quality with Anne Cahalan</a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.avanderlee.com/workflow/fixing-crashes-bugs/">4 Tips to make it easier to fix crashes and bugs</a></li>
<li><a href="https://www.avanderlee.com/debugging/oslog-unified-logging/">OSLog and Unified logging as recommended by Apple</a></li>
<li><a href="https://ideas.bywetransfer.com/story/apples-swiftui-collect">Adopting SwiftUI at WeTransfer</a></li>
<li>
<a href="https://github.com/WeTransfer/WeTransfer-iOS-CI/">Code Guidelines at WeTransfer</a> </li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance or indie apps like <a href="https://appfigures.com/resources/aso/aso-teardown-fotmob">Fotmob</a>.</li>
<li>
<a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">New competitor's report in the Appfigures dashboard</a> where you are able to view competitor downloads, build performance benchmarks, and see the new trends as they happen. <a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">Check it out here.</a>
</li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><br><a href="https://remote.nsspain.com/"><em>I will be speaking at </em><strong>NSSpain 2020...</strong></a><br>Nov 17 - 20, 2020</p><ul>
<li>One of the most known conferences about Apple platforms development is going remote this year! </li>
<li>NSSpain 2020 is an online, continuous 36 hours conference, carefully crafted by the community for the community.</li>
<li>Guests of the show Paul Hudson, Donny Wals and <strong>Antoine van der Lee</strong> will be speaking as well as others</li>
</ul><p>Go to <a href="https://remote.nsspain.com/"><strong>NSSpain.com</strong></a> and use promo code <em>empowerapps </em>to get 10% off</p><p><b>Intro</b></p><ul>
<li><a href="https://mailchi.mp/02d6e26ad618/brightdigit-issue-4740637">Latest BrightDigit newsletter on Apple Event</a></li>
<li>Fan or no Fan?</li>
<li>Memory Limits?</li>
<li>Trying to get Speculid out in the App Store </li>
<li>
<a href="https://backtomac.org">Back to the Mac 2020 Videos</a><ul>
<li><a href="https://youtu.be/2ZhvfG_vd5Y">Leo on Modern Mac App Dev and C++</a></li>
<li><a href="https://youtu.be/GpekbTYHX8w">Leo on Swift Argument Parser</a></li>
<li>
<a href="https://share.transistor.fm/s/c73ba3e5">Lucas from Episodes 59 and 60</a> on <a href="https://youtu.be/VnvlK6gUCAg">Custom Search Suggestions Window</a>
</li>
<li><a href="https://youtu.be/twuAkBhoOV8">Malin will be on in Dec to talk SwiftUI and Multiplatform Dev!</a></li>
</ul>
</li>
<li>Get your <a href="https://remote.nsspain.com/"><strong>NSSpain</strong></a><strong> ticket soon and use promo code </strong><strong><em>empowerapps</em></strong>
</li>
</ul><p><b>On Simulators</b></p><ul>
<li><a href="https://t.co/fy7WhVk3vw?amp=1">RocketSim</a></li>
<li>Managing Multiple Simulators</li>
<li>Creating Movies and Gifs from Simulator</li>
<li>Preparing RocketSim for Big Sur</li>
</ul><p><b>Dealing with Old Code</b></p><ul>
<li>Your old code vs Someone else's old code</li>
<li>When do you need to rewrite the app?</li>
<li>How do you convince a manager?</li>
<li>Differences between agency and product work</li>
</ul><p><b>Early Project Decisions</b></p><ul>
<li>Dealing with Third-Party Dependencies</li>
<li>Refactoring by Unit Tests</li>
<li>Keeping File Size Down</li>
<li>Splitting Types with Extensions</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><b>Transcript</b></p><p><strong>Leo Dion (Host): </strong>[00:00:00] Hello folks. Welcome to another episode of EmpowerApps. I am your host Leo Dion. Before we began the interview with Antonie, I wanted to cover a few things. We just finished the Apple event, revealing the new Apple Silicon Macs. And I wanted to talk about that. We recorded the episode the morning of today of the Apple event.</p><p>[00:00:20] So obviously Antonie and I didn't really cover these new Macs, but I figured I would just give you a quick, quick thoughts on the event today. So this was our last event from Apple last hardware event. It's been pretty quick. This year. We've had three events in two months, like Tim said, and we got the reveal of the  chip, which will be used in the Mac book pro, Mac book air, and Mac mini, which can be ordered today.</p><p>[00:00:48] I don't know when they're going to be out. Exactly. I haven't been able to check that out. I don't know which I'm really interested in. I'm kind of. Not really up for buying another piece of Apple hardware already bought a new iPhone and a new. Apple watch as well as the home pod mini, that should be coming in a few days.</p><p>[00:01:05] So I'm not super enthusiastic about buying something new. I do have a Mac book pro that's almost half a decade old now, so it could definitely use an upgrade, but I did just put a two terabyte hard drive in. So that's, that's helped us quite a bit, but it's getting slow for sure. The other. Option is looking at getting a Mac book air.</p><p>[00:01:25] If I wanted something to replace what was my iPad pro, but that doesn't sound really interesting to me for a right only machine. And then the other option is the Mac mini. And I think if I was really desperate to get an app in the app store that worked on Apple, silicone, I'd probably go that route because I think that would be.</p><p>[00:01:43] The most reliable as to kind of use it as a remote CI machine, essentially to make sure I can get my builds working on Apple Silicon, especially with the applique speculate, which I'm hoping to get an app store very soon. So that was the Apple event. I am really kind of a wait and see approach to see what the review say and what comes out.</p><p>[00:02:03] But It doesn't look like new industrial design or anything like that. A lot of comments about devices having fans or don't have fans and things like that, you know, all that's fantastic I guess, but I'm kind of wait and see, and. What is it actually going to be like when developers get these in their hands or even video editors as well?</p><p>[00:02:23] So that was pretty much the Apple event in summary, not a lot. And then the other thing I wanted to talk about is my videos are out for Back To Mac. Thank you so much, Gavin, for putting this conference together, you can check it out at the YouTube channel, which I'll have a link to as well as my two videos on modern.</p><p>[00:02:43] Mac OS development with C++ as well as my talk on Swift argument parser, those will be in the links Lucas, who was a guest this summer and talked about Miko West development. He had a video as well, and a few other people that you really should check out. It's awesome conference. If you're interested in Mac development anyways.</p><p>[00:03:00] Yeah. And that's back to Mac. And then lastly, get your ticket to NSSpain. Remember you can get 10% off if you use our promo code and power apps. I'm speaking at it. I will be speaking on Swift package management Antonie. Our guest for today is also speaking as well. And folks that we've had on the show like Paul Hudson, Donnie Walls, they all will be speaking at this 36 hour conference, which is going to be awesome.</p><p>[00:03:23] So that's fantastic. Definitely want to check that out, go to Anna spain.com. Use the promo code and power apps get 10% off and you will see me talk about Swift package manager, the dependency management of the future. Thank you so much. I think that's it. Here is the first part of our interview with Antonie about maintaining and migrating old code and old projects over a second part should be out in a few days later, probably five days.</p><p>[00:03:51] So thank you so much and I'll let the rest episode take it away.</p><p>[00:04:00] Welcome to another episode of EmpowerApps. I'm your host, Leo Dion. Today. I'm excited to have one of my favorites. Bloggers in the Swift space. Antonie Vander Lee. Hey Antonie how's it going? </p><p>[00:04:12] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:04:12] Hey. Hey. Yeah. Great. Thanks for inviting me over. I'm really looking forward to having a nice conversation today . </p><p>[00:04:19] <strong>Leo Dion (Host): </strong>[00:04:19] So for those who don't know who you are, I'll let you go ahead and introduce yourself.</p><p>[00:04:23] Yeah, I think </p><p>[00:04:24] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:04:24] I'm best known for my personal blog called swiftly at which I write for two years every week. And I try to publish that article every new week, besides that I'm a developer for almost four years that we transfer where I developed the collect by we transfer application. Yeah. And I tried to be a regular speaker at conference. And so yeah, that's me. </p><p>[00:04:47] <strong>Leo Dion (Host): </strong>[00:04:47] Yeah. We'll talk about at the end of our recording today. We'll talk about our talks and Spain. I'm really excited about that this year, but you've been working on your big app you've been working on for developers has been RocketSim, correct? </p><p>[00:05:01] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:05:01] That's correct. Yeah. That's like a typical example of a hobby project that turns out to be way more serious than it started.</p><p>[00:05:09] I think I started like a year ago in August where I found myself testing universal links in the simulator. For the CollectByWeTransfer application and it was quite like a repetitive task. You know, I had to copy a link into Safari on the simulator open it. Then I started evolving it into an HTML page where I could just press a link and it would open in the simulator, but you know, it was repetitive and it didn't really.</p><p>[00:05:39] Well smoothly my whole process in testing the application. So yeah, I decided to start developing RocketSim, but it's a, it's a different application, you know, today, </p><p>[00:05:49] <strong>Leo Dion (Host): </strong>[00:05:49] I think. So what exactly does RocketSim do? Is it like a power tool for simulators essentially? Yeah, </p><p>[00:05:56] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:05:56] so I think many of the iOS developers are familiar with the SIM CTL tools.</p><p>[00:06:02] Yes, we have available in the, in the terminal command. </p><p>[00:06:06] <strong>Leo Dion (Host): </strong>[00:06:06] Yeah. I use that for like screenshots and videos. You can do all sorts of stuff with like clearing or data resetting it, all that stuff. </p><p>[00:06:13] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:06:13] Exactly. So what I basically did with RocketSim is a at first I built like a, a UI around that tool to make it a bit more accessible.</p><p>[00:06:22] And over time I started developing RocketSim to be a more enhanced version of it. So. Right now RocketSim enables you to record the simulator into MP4 or GIF. So what basically RocketSim is doing for you is converting it into a quality video file, as well as a dif file, which you can share on platforms like Git or GitHub.</p><p>[00:06:44] <strong>Leo Dion (Host): </strong>[00:06:44] You can't create a GIF with some CTL, so you you're doing all that in coding yourself.  </p><p>[00:06:49] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:06:49] EXactly. So right now yeah, I'm, I'm taking the result from SIM CTL and I'm converting it in multiple ways. I also want it to support dragging it into app store connect so you can use it for app store Prefuse so yeah, you know, it's a lot easier to create app store Prefuse if you want through the simulator.</p><p>[00:07:07] And it's also resulting in an floating third nail on the bottom right of your screen. So you can dial like directly drag the recording result in any app you want. And that's different compared to using the terminal where you first need to open the third terminal. Remember the commands executed commands, save it to a location with the right syntax.</p><p>[00:07:28] And then you can start dragging it anywhere. So it's basically making the whole workflow a lot easier. </p><p>[00:07:34] <strong>Leo Dion (Host): </strong>[00:07:34] That's awesome. And is this available on the app store or is it just free open source? </p><p>[00:07:39] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:07:39] It's available for free in the app store, in the Mac app store and for free, we'll get like a recording version with a small watermark on it to just to help me promote this RocketSim a bit.</p><p>[00:07:49] And you can decide to become a rocketsim PRO user and then you get like recordings without any watermarks. </p><p>[00:07:56] <strong>Leo Dion (Host): </strong>[00:07:56] Awesome. So are you ready for. The switch over to big Sur with RocketSim. </p><p>[00:08:03] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:08:03] Yeah. Yeah. W what I did, what I'd like to do in general is to just have an separated petition in which I can test out big Sur.</p><p>[00:08:10] So I did the same because I had quite a few early adopters. I think that's the downside of a developer tool because developers, they want to test out big server as soon as it's available. So I had to actually start testing it quite early. And well, yeah, you know, I was, I think I was kind of lucky because it works almost completely, so yeah.</p><p>[00:08:33] I guess I'm ready. </p><p>[00:08:34] <strong>Leo Dion (Host): </strong>[00:08:34] That's awesome. So today we have. Quite a challenging topic. I'm sorry. This is the topic that we've picked. It's not fun and exotic, but I think as employees and as software developers, we run into this quite a bit and that's maintaining and migrating older applications. We all, we've all done it before.</p><p>[00:08:59] It's it's the dirty job of iOS development. What kind of experiences have you had? Dealing with like old code or maintaining old code. What kind of challenges do you run into frequently? Yeah. </p><p>[00:09:14] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:09:14] So there's a lot. I can say about this and I think it totally differs per project. Before I worked at we transfer, I was working at a digital agency and it often happened that I had to take over a project from a different company where you would end up being in a reel.</p><p>[00:09:29] Big, well kind of coat mess. You didn't write yourself, which is a lot. Whereas then if you are in a code mess you did right. Do you know nowadays it's at WeTransfer? I, you know, was one of the first developers, so I can dream like the complete code in that application. And I think if you're, if you're doing a great job for yourself, it's, it's not, not a difficult topic to discuss because if you're iteratively making sure your code is up to date and then there's nothing really to migrate, you know, So what we try to do at WeTransfer.</p><p>[00:10:01] And we do the same as we speak with SwiftUI is we really try to stay on top of the new things and adopt as we go in phases. Step-by-step which, you know, that makes it at least a much smaller step. Over time. And I think that way it doesn't really hurt. Yeah. </p><p>[00:10:21] <strong>Leo Dion (Host): </strong>[00:10:21] I think definitely doing it iterative approach, and I'm a big believer in continuous integration and things like that.</p><p>[00:10:30] And just making sure your code is constantly like. Passes, whatever linting or whatever code coverage you expect and following that rule. But yeah, I think I've run into more situations where I am brought on to deal with essentially like a mess of code that somebody had already worked on and kind of being brought onto those projects.</p><p>[00:10:54] And that, that to me is like the bigger challenge is how, how do you take something that's are writing on this and like, introduce. First of all a clean it up, but also be introduced an intuitive process into it. So that way problems don't happen in the future. Yeah. </p><p>[00:11:11] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:11:11] I think if I look back, I have been lucky over time.</p><p>[00:11:13] Right. Could convince my product managers to really start rewriting the complete project. At the time when Swift first just just arrived. But you know, there are indeed cases where that's not an option that you really need to figure out like a solid structure in a solid way where like tomorrow is a better day for your project, then, then it, and today.</p><p>[00:11:35] <strong>Leo Dion (Host): </strong>[00:11:35] What do you think helped convince your product manager?</p><p>[00:11:38] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:11:38] Yeah. So, you know, I always try to really make it visible for them. Especially if the product manager isn't technical, you really need to know how to convince him in terms of like, what does it mean if we wouldn't do the migration in terms of time, for example, because. If it means that the developing a new feature takes, like, for example, a week long, or just because the project structure isn't fitting the way we like to work.</p><p>[00:12:04] And it takes for example, three months to develop the, the rewrite because you know, you already have the code, right. You only need to rewrite it to Swift. For example, you know, the business rules already. So it's kind of like a faster approach than starting from scratch. Three months is obviously longer than that one week for that developing that new feature.</p><p>[00:12:25] But if you take it over like two years or three years, then obviously it's, it's, it's a better approach. I think this, this is a case per case, obviously, but in this case it might work. If you, for example, still have a project and Objective-C let's say that you have a project with Swift and that project is a mess just because, you know, maybe, maybe somebody else wrote a lot of things in Well, let me, let me share an example.</p><p>[00:12:52] What I did, this is a sad story for my old colleagues, because I left them with a, with a project which is now a code mess probably. But you know, you have those, those times where you really want to dive into like a new, new, new tool or topic. And for me, that was at the time RXSwift. Okay. You have to reactive programming.</p><p>[00:13:12] I was really into it and I wrote everything with our experience, even though it wasn't the best choice. And right now I left over like a few of those engineers with a project, which is completely wired into our Swift observables and those kinds of things. And it's really hard for them to maintain that project because, you know, If you don't have that learning curve for RXSwift, with it's just, yeah.</p><p>[00:13:36] Time-consuming and it's way harder doing a project without it. And what they do, they take, take it step by step and they rewrite screen per screen, business logic, pro business logic, into like code. That's easier to understand and simpler for them to maintain. And obviously that doesn't result in a better application within a few days, but yeah, it's, it's an iterative process.</p><p>[00:13:59] Which makes it a better project over time. </p><p>[00:14:01] <strong>Leo Dion (Host): </strong>[00:14:01] Yeah. I'm hearing a couple of things. One thing is when you convince your product manager, it seems like, like at the end of the day it's money, right. That's going to drive the decision. If that means they can save more money long time by you rewriting and rearchitecting the code, I think that's much more tangible to them.</p><p>[00:14:18] And of course, like you said, it depends case by case because a lot of cases there is no long-term, everything is short term. Those are not fun projects to work on, but. They're for real they're out there. And so, like, they don't even care about rearchitecting cause they just want the short term gain. And then, you know, whatever, they'll worry about it at some other point.</p><p>[00:14:39] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:14:39] I think that that's also like an important difference between an agency working for clients that really want to have a result within eight weeks, no matter how you do it. You know, those are often also the examples where you don't write any unit tests because there's no time. Right, right. Whereas if you're working at a product company, it's much more important to have that solid foundation on which we can build on for like years, you know?</p><p>[00:15:05] We, we can't rewrite the project every, every other year. So yeah, those are really different stories. </p><p>[00:15:10] <strong>Leo Dion (Host): </strong>[00:15:10] The other thing you talk about is using RX Swift and the idea of bringing in third party, the library's always is kind of a flag, a warning flag. It better be like really accepted or something. That's pretty major.</p><p>[00:15:22] If you're going to bring that in and make that your whole design philosophy. Cause I know a lot of fans that RX Swift there isn't, it isn't that. I wouldn't say it's that foreign to a lot of people, especially now that people are getting more exposure to reactive programming, but still at least, I don't know, we're talking to maybe like five years ago that you did this.</p><p>[00:15:41] Like yeah. I could see how that's a totally, totally foreign way to do things outside of the standard UI kit storyboard way. </p><p>[00:15:49] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:15:49] Yeah, definitely. And you know, it's not per se a problem. You know, if everybody in the project knows what you're doing and knows about this third party dependency, then it's a perfect way to develop the application.</p><p>[00:16:02] And at the time I was the only one developing the application so, you know, there is no problem. </p><p>[00:16:06] <strong>Leo Dion (Host): </strong>[00:16:06] Well, where were you in the hierarchy of the company? </p><p>[00:16:09] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:16:09] This was at the agency time where I grew from like. Being a junior or for four years to a senior. And I think, I think this, this was at a point where I was the senior, because I made a decision to do a</p><p>[00:16:23] Then I was capable of making that decision. Yeah. </p><p>[00:16:26] <strong>Leo Dion (Host): </strong>[00:16:26] And there probably were like, whatever five years ago. That was probably not a lot of Swift developers because whatever Swift is only six years old anyways. Yeah. </p><p>[00:16:36] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:16:36] That's true. This dates back even longer where We also adopted reactive cocoa with objective-C time, you know?</p><p>[00:16:43] So yes. Okay. In general, any decision to adopt it to a third party dependency? Which obviously also happens way more often than tonight to see because the time is way smaller. So if you can use a third party dependency, which gives you like a boost in development. Yeah. That's the easy choice.</p><p>[00:17:06] <strong>AppFiguresLeo Dion (Host): </strong>[00:17:06] I want her to talk to you again about app figures. You probably already know them, but their analytics and their app store optimization. I figures really is about giving makers the tools they need to get more downloads and revenue. Well, now figures can help you track competitors for how many downloads they're getting and how much money they're making to their audience, demographics and which SDKs they use.</p><p>[00:17:27] Their competitor intelligence really gives you great context, say a competitor as like a new feature or was spending in the news recently with app figures, you can see if that brought in more downloads right away. Got a great idea for an app or a game. Well with that figures that you can figure out how big that market is and how much money you could be making with it.</p><p>[00:17:48] And that's just scratching the surface, whether you're growing your app or building a new one, and figures has the tools you need that will reduce the risk, but also get you more downloads. You don't need a large budget or a data science degree to do this kind of thing. I figures has made it affordable Ansible on top of tools and figures also provides a lot of great guides and tutorials to take you step-by-step through gaining more visibility with ASO and increasing your revenue by learning from your competitors.</p><p>[00:18:16] They just released a free guide on that, actually. So go ahead, head to the link in the show notes and try out figures for free. If you like it, user special code and power 30, 30 to get 30% off for the next three months. Thank you at figures for sponsoring our show.</p><p>[00:18:36]<strong>End Sponsorship<br></strong><br></p><p>[00:18:36] So let's say you got a ginormous file. From one of your developers, like a really big file, maybe has maybe there's, it's a huge view controller. Let's say tons of lines, like we're talking thousands. How what's your philosophy fee on like cleaning up that code? Or how do you triage that in such a way that like, okay, first thing we need to do is break this up in this way.</p><p>[00:18:59] Or first thing we need to do is to deal with this. What are some like red flags that you would take care of right away? </p><p>[00:19:05] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:19:05] So the way I like to do refactoring is by being really convinced that I'm doing the right thing. And the only way I see that makes it possible is by writing unit tests. </p><p>[00:19:15] <strong>Leo Dion (Host): </strong>[00:19:15] Yeah. I was about to say the same thing.</p><p>[00:19:17] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:19:17] Yeah. You know, it's, it's, it's the only way you're for sure that the inputs results in the same output and I guess if anybody writes such a big class, a they don't care about unit testing as well. So I probably have to start writing those first. Once I have those, I would, I would take it step-by-step and rewrite like, well, maybe, maybe first look at like data sources, delegates, like those distinct responsibilities and take them out, creates a single responsibilities of them.</p><p>[00:19:50] And then that leaves you up with, with, with other kind of sectors in that class, you know, like pieces that should be in a field model. Maybe there's some network in which I can extract into networking layer. Maybe that field itself is way to bake and I need to create two new fields first, which already removes a bit of code.</p><p>[00:20:11] And as you go, it will be more and more obvious what you want to create there. Although, while I'm sorry right here, thinking out loud, I think it's maybe even better to do this beforehand where you really create that structure. So you know what you're going to do, you know, like where, where are you going to place all the pieces that you have in place?</p><p>[00:20:30] <strong>Leo Dion (Host): </strong>[00:20:30] Yeah. Like, I like the idea about unit testing, because I think like that's not just as unit testing, ensure that your code does what you expect it to do, but it also it's created at least for me, like a healthy habit of good architecture. That's one of the things and just being able to like, Build the unit tests and then build the scaffolding.</p><p>[00:20:52] So that way, like kind of like you're building almost like a bridge or a tower to where, like you have pieces in there. I didn't even know what it's called. I'm not a construction person, but like you have the pieces in there that holds the thing up, but then you are able to like remove those pieces that hold it up temporarily, which is basically your old code.</p><p>[00:21:10] Once you've set up your new code, that's better are cut textured and refactored correctly. Does that analogy make any sense? I think so. </p><p>[00:21:18] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:21:18] Yeah. Yeah, I think it does. Although it might not always be the way how to do this, you know, because it's not always possible to keep the old code in place while rewrite or well writing the new code.</p><p>[00:21:29] You know, sometimes you have to throw the way the old code first, before you can start writing and adopting the new code, but I guess, yeah. You can make the building collapsed the reflector, you know, </p><p>[00:21:42] <strong>Leo Dion (Host): </strong>[00:21:42] what, what do you mean by you have to remove the old code. Well, you know </p><p>[00:21:46] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:21:46] you have two ways of refactoring one way would be to kind of like in an AB testing way where you would have to first and side-by-side working.</p><p>[00:21:54] That would mean that, that the ultimate approach should completely stay working automatic contest in you. And the other approach would be to. Make the project kind of breaks. So you're kind of like let the building collapse and then you start rebuilding it from scratch to kind of </p><p>[00:22:11] <strong>Leo Dion (Host): </strong>[00:22:11] so kind of let it, you let the compiler fail or the app crash, because that way it, it's a way to remind you to, to, you know, understand when that thing is fully working, I guess.</p><p>[00:22:21] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:22:21] Yeah, exactly. And sometimes the new approach needs to make use of codes that already exists, but that existing code needs to be adopted for the new way of working. But to be able to do that, you're breaking the old kind of logic that was already in place. So you have to remove that kind of yeah, it's just an easier approach.</p><p>[00:22:40] If you don't have to think about the old implementation. </p><p>[00:22:43] <strong>Leo Dion (Host): </strong>[00:22:43] Yeah. Yeah. That makes sense. What other red flags do you think you'll see in code that you'd like now that needs to be taken care of right away? </p><p>[00:22:52] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:22:52] Well, what we like to do with retreads transfer is well, it's actually an open source framework we have where you can find our code guidelines, you know, like the same techs using that  source spaces. You, you notice, go in discussions you have in the community, but </p><p>[00:23:09] <strong>Leo Dion (Host): </strong>[00:23:09] linting rules basically, right? </p><p>[00:23:11] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:23:11] Exactly main thing rules we have we have Swift lint set up and we also have a few custom danger rules. They just systems which will all run during the day and, and pull requests. She, I integration we're using patronize for that, which really helps us to write consistent code and it could easily be that that costs we get.</p><p>[00:23:32] Somehow doesn't apply to those rules. So I think that's a red flag for us as well, because we want to have consistent code that at least makes it easier. That's that's one part. There is another part that you can't really force through LinkedIn, and that's like structuring code decided to go for a few model, certain naming conventions using a return keyword or not, you know, like all those kinds of decisions.</p><p>[00:23:59] You want to make sure that that class is adopting that as well. So it's kind of like family of the coat you already have in place. </p><p>[00:24:07] <strong>Leo Dion (Host): </strong>[00:24:07] Okay. So let's let me ask tabs or spaces.</p><p>[00:24:10] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:24:10] Tabs</p><p>[00:24:11] <strong>Leo Dion (Host): </strong>[00:24:11] Oh my gosh. Yeah. I don't know if we can keep her, keep doing this work. It's going to become a controversial I do, I guess. Yeah. I need two spaces. Just, just FYI. But yeah, I don't, I don't care. Like, I guess for my own part projects, I'll do two spaces, but like, if I'm on a team, I just want a rule. Right.</p><p>[00:24:34] Like, I think that's the important thing. Just have a rule if it's tabs be consistent. Like, I think that's the most important thing though, to the agreed and then. I guess like one, one thing that I, I haven't found a good Swift lint rule or Swift format rule for is one struck or one extension or one type in each file.</p><p>[00:24:57] I try to follow that rule. So like, don't have multiple classes in one file. I'll do that when I first start off. Right. But then eventually, like I split it up into like files each file for each type in each extension. And enumeration, whatever, you know what I mean? I'm trying to think what other rules I find a lot of.</p><p>[00:25:18] I don't know. Well, anything else you can think of? Do you have like a max max line limit or max limit? </p><p>[00:25:26] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:25:26] Yeah, we have the max file length later, but you know, that's always a big struggle because sometimes it's just, you know, those, those few controls that add up so many extensions, it's really hard to just.</p><p>[00:25:39] Move them over to a different file because you also want to contain them to get a kind of </p><p>[00:25:44] yeah, because I have, </p><p>[00:25:45] <strong>Leo Dion (Host): </strong>[00:25:45] when I've done view controllers like that, I usually just split them up into extensions if they're way too long. And then I try to group it based on what protocol, let's try to implement. And then that way, like, okay, this one is the view controller data source implementation.</p><p>[00:26:00] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:26:00] This is the view controller whatever table view, delegate, you know, things like that. Yeah, the downside, I find there is that it's always, you know, you need to find it in a different file, even though it does files may live together in the same folder. It's an extra step to make it discoverable, which I often kind of dislike.</p><p>[00:26:18] <strong>Leo Dion (Host): </strong>[00:26:18] Yeah. Yep. I've heard that's a big pet peeve with extensions in general. </p><p>[00:26:23] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:26:23] Yeah. Yeah. And we, we do end up doing so, but I'd rather have like a hundred lines extra in that class and make it easy to find. Instead of having the code separate. And of course all those files in the end, it's all about findability readability in your project.</p><p>[00:26:39] And if it means that it's a 600 lines file, but it's still viewable, you know, then I reached my goal. So yeah, we, we sometimes decide to use that wild market to disable the rules. </p><p>[00:26:52] <strong>Leo Dion (Host): </strong>[00:26:52] Right, right, right. Yeah. Was there any other red flags you want to talk about? Or should I just go to the next topic?</p><p>[00:26:58] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:26:58] What I find interesting about your road that you suggest that this you know, and that's, that's often something I run into is in the beginning, you start writing your field model in the same file. So you have like a few controller and the structure for your view model in the same file. As long as that's view model is really small.</p><p>[00:27:15] You don't really feel the need to create a new file because the new file will only contain like 10 lines of code or something. And it seems kind of odd to create a whole file for that small class, you know, but the thing is over time, it could easily grow, grow into like a bigger class with more responsibilities.</p><p>[00:27:35] So if I, if I look at the code we have in place that we transfer, we often never define two instances in the same file, but it's always an interesting interesting decision. </p><p>[00:27:47] <strong>Leo Dion (Host): </strong>[00:27:47] I feel like that's a habit I got from when I was a C# developer. And then I just carried that through, into JavaScript and Swift and, and it makes a lot of science and like, I've gotten to a point.</p><p>[00:27:58] I have like a, somewhere in my terminal history. I have a series of like batch and bash. Commands that basically splits the file for me, based on every little curly bracket, because I just, I do it so often. And it's just, it's easier to find stuff. If anything, like, I almost wish going back to your comment regarding extensions, like, I feel like.</p><p>[00:28:23] Maybe an Xcode 13. It'd be nice if like the find finding features worked better. I know it keeps getting improved, but that would, that would make it a lot easier to deal with like multiple files for a single class or type. </p><p>[00:28:35] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:28:35] Yeah, it's a, it's an interesting one. You know, we often run into a discussion as well in our team meetup we developed do we transfer app collect by, we transfer for three iOS engineers and. That's that makes it easy to discuss things. You know, it's not really a given that a certain way of direction is the way forward. And one of my  colleagues ofte, likes to use functions in function, which is always discussion.</p><p>[00:29:01] <strong>Leo Dion (Host): </strong>[00:29:01] That's scary. </p><p>[00:29:03] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:29:03] Scary. What is your opinion on that? </p><p>[00:29:06] <strong>Leo Dion (Host): </strong>[00:29:06] That's really scary. That's that's that should not be done, I guess. Yeah. That's kind of my feeling because yeah, it has a, it has a sloppy Javascript feel to it when you're, when you have a function in a function. Yeah. </p><p>[00:29:22] It gets used to it too, but you know, in some places he meant to convince me because it kind of works and it's kind of readable.</p><p>[00:29:31] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:29:31] But still, it feels so, you know, it's almost like a structure into a structure itself. So up to me, you know, it just feels like it's, it's like tangled into each other or, you know, it doesn't feel right. </p><p>[00:29:44] <strong>Leo Dion (Host): </strong>[00:29:44] That's a hard one. Okay. Here, I'm going to try, try to. Try to try to be coherent and explain why I don't like it and I could be totally wrong, but I'm going to try it anyways, a function in sight, a function.</p><p>[00:29:59] And the reason why it reminds me of like older Javascript is because it kind of it's masking a variable. As a function, even though it's really a variable, that's essentially private. And I understand he's like trying to like, control access that way to that function. But to me, like why not just make it a file private function in the type, rather than making it inside the function itself like that.</p><p>[00:30:24] Well in, in unit testing too, like just the unit testing of that individual function is going to be a mess, which goes back to my whole point about how like unit testing, one of the best things about it has been how it's made architecture so much better in the last 10 or 15 years that it's been popular.</p><p>[00:30:41] <strong>Antoine v.d. SwiftLee (Guest): </strong>[00:30:41] Yeah, totally. You </p><p>[00:30:42] know, and it's also not really improving the structure of the method itself. Like it's pretty hard to get an overview of what is not exactly in the method called all those inner methods, you know, and readability doesn't really </p><p>[00:30:55] approve. </p><p>[00:30:55] <strong>Leo Dion (Host): </strong>[00:30:55] Yeah. Is this, it, it reminds me of all the worst parts about Java script when I did a lot words, like even whatever ES6, whatever it is right now.</p><p>[00:31:05] Yeah. Thank you so much, Antonie. Let's go ahead and we'll continue with the rest of our interview in the next episode. Folks can find me on Twitter at Leo G Dion and my company is BrightDigit. If you have any comments, questions, or feedback, please let me know, reach out to me on Twitter. And then I would love for you to just take a few moments, retweet, whatever you liked about this episode.</p><p>[00:31:31] Just send me a reply, send me something on Twitter. Just letting me know what you've liked about this particular episode. And if you could post any reviews on Apple podcast, Spotify or Google podcast, I'd really appreciate it. We'll continue the rest of our interview with Antonie in the next episode in a few days.</p><p>[00:31:47] So be sure to subscribe and we'll talk to you.</p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sat, 14 Nov 2020 00:00:00 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/de8caf60/6bbc69eb.mp3" length="15856173" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/399587/full_1605299302-artwork.jpg"/>
      <itunes:duration>1916</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Antoine van der Lee of WeTransfer and SwiftLee about maintaining and migrating messy and old projects - how to refactor them, avoiding third party libraries, implementing a style guide, and more. 
Leo also gives some quick thoughts on this week Mac event with the M1 and let you know the latest in my conference appearances.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Antoine van der Lee of WeTransfer and SwiftLee about maintaining and migrating messy and old projects - how to refactor them, avoiding third party libraries, implementing a style guide, and more. 
Leo also gives some quick</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>App Store Review Guidelines with Paweł Madej</title>
      <itunes:episode>68</itunes:episode>
      <itunes:title>App Store Review Guidelines with Paweł Madej</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">43975a2e-1935-4109-a628-cc1241d37e1c</guid>
      <link>https://share.transistor.fm/s/1decc81f</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://pawelmadej.com">Paweł Madej</a> <ul>
<li><a href="http://twitter.com/PawelMadejCK">Twitter @PawelMadejCK</a></li>
<li><a href="https://github.com/nysander">GitHub @nysander</a></li>
<li><a href="https://bit.ly/codeconfapp">CodeConf App</a></li>
<li><a href="https://github.com/nysander/twitter-text">Twitter Text Library</a></li>
</ul>
</li></ul><p><a href="https://youtu.be/NmFHkLlxhL8"><strong>YouTube Video - https://youtu.be/NmFHkLlxhL8</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/66f6958e">Episode 67 - Documenting Your Code with Bas Broek</a></li>
<li><a href="https://share.transistor.fm/s/f6092e38">Episode 62 - Local Database Storage on iOS with Aaron Douglas</a></li>
<li><a href="https://www.relay.fm/radar/198">Under the Radar - Store Wars</a></li>
</ul><p><b>Related Links</b></p><ul>
<li>O<a href="https://www.hackingwithswift.com/store/objective-c-for-swift-developers">bjective-C For Swift Developers by Paul Hudson</a>
</li>
<li><a href="https://tidbits.com/2020/10/08/four-reasons-why-we-wont-see-third-party-apple-watch-faces-and-what-apple-is-doing-instead/">Four Reasons Why We Won’t See Third-Party Apple Watch Faces (And What Apple Is Doing Instead) by David Shayer</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance or indie apps like <a href="https://appfigures.com/resources/aso/aso-teardown-fotmob">Fotmob</a>.</li>
<li>
<a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">New competitor's report in the Appfigures dashboard</a> where you are able to view competitor downloads, build performance benchmarks, and see the new trends as they happen. <a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">Check it out here.</a>
</li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><br><a href="https://remote.nsspain.com/"><em>I will be speaking at </em><strong>NSSpain 2020...</strong></a><br>Nov 17 - 20, 2020</p><ul>
<li>One of the most known conferences about Apple platforms development is going remote this year! </li>
<li>NSSpain 2020 is an online, continuous 36 hours conference, carefully crafted by the community for the community.</li>
<li>Guests of the show Paul Hudson and Donny Wals will be speaking as well as others</li>
</ul><p>Go to <a href="https://remote.nsspain.com/"><strong>NSSpain.com</strong></a> and use promo code <em>empowerapps </em>to get 10% off</p><p><em>Also speaking at...</em></p><ul>
<li><a href="https://www.iosdevcampdc.com/"><strong>iOSDevCampDC 2020 - October 30</strong></a></li>
<li>
<a href="https://backtomac.org/"><strong>Back to the Mac - November 9</strong></a><strong> &amp; 10</strong>
</li>
</ul><p><b>Pharmacist to iOS Dev</b></p><ul>
<li>Learning Resources</li>
<li>Challenges with Documentation</li>
<li>Making CodeConf for Conference Videos</li>
<li>Using CoreML for CodeConf Subscriptions <strong>Bonus Clip</strong>
</li>
<li>Building the Twitter Text Library <strong>Bonus Clip</strong>
</li>
</ul><p><b>Getting into the App Store</b></p><ul>
<li>CodeConf - Do you have the right to the IP you're using?<ul><li><a href="https://developer.apple.com/app-store/review/guidelines/#intellectual-property">Rule 5.2 Intellectual Property</a></li></ul>
</li>
<li>CodeConf - Are you using official libraries?<ul><li><a href="https://developer.apple.com/app-store/review/guidelines/#intellectual-property">Rule 5.2.2 Third-Party Sites/Services</a></li></ul>
</li>
<li>CodeConf - Do you provide ongoing value to the customer?<ul><li><a href="https://developer.apple.com/app-store/review/guidelines/#subscriptions">Rule 3.1.2(a) Permissible uses</a></li></ul>
</li>
<li>Hey - Does your provide some functionality?<ul>
<li><a href="https://developer.apple.com/app-store/review/guidelines/#minimum-functionality">Rule 4.2 Minimum Functionality</a></li>
<li><a href="https://developer.apple.com/app-store/review/guidelines/#reader-apps">Rule 3.1.3(a) “Reader” Apps</a></li>
</ul>
</li>
<li>Wordpress - Are you avoiding in-app purchases accidentally?<ul>
<li><a href="https://developer.apple.com/app-store/review/guidelines/#in-app-purchase">Rule 3.1.1 In-App Purchase</a></li>
<li>Aaron Talking about the Automatic Wordpress Issue</li>
</ul>
</li>
<li>xCloud - Are you providing additional content?<ul>
<li><a href="https://developer.apple.com/app-store/review/guidelines/#minimum-functionality">Rule 4.2.7 Remote Desktop Clients</a></li>
<li><a href="https://developer.apple.com/app-store/review/guidelines/#streaming-games">Rule 4.9 Streaming games</a></li>
</ul>
</li>
<li>Fortnite - Are you avoiding in-app purchases purposefully?<ul>
<li><a href="https://developer.apple.com/app-store/review/guidelines/#other-business-model-issues">Rule 3.2 Other Business Model Issues </a></li>
<li><a href="https://developer.apple.com/app-store/review/guidelines/#unacceptable">Rule 3.2.2 Unacceptable</a></li>
</ul>
</li>
</ul><p><b>Other App Store Tips</b></p><ul>
<li>Avoid Bugs!</li>
<li>TestFlight Reviews vs App Store Review</li>
<li>You can be rejected later!</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><b>Transcription</b></p><p><strong>Leo Dion (Host): </strong>Thank you for joining me for another episode EmpowerApps. I'm your  host, Leo Dion. Today we have with us.  how you doing? Hello? </p><p>[00:00:12] <strong>Paweł Madej (guest): </strong>I'm fine. Thank you. </p><p>[00:00:14] <strong>Leo Dion (Host): </strong>Thank you so much for coming on the show. Really glad to have you </p><p>[00:00:17] <strong>Paweł Madej (guest): </strong>on. </p><p>[00:00:18] I'm also really happy to talk with you today. </p><p>[00:00:22] <strong>Leo Dion (Host): </strong>I'll look, go ahead and let you introduce yourself.</p><p>[00:00:25] <strong>Paweł Madej (guest): </strong>Well, I'm pharmacists almost former pharmacists, because last time I found my iOS dev job and I am also making apps for app store for myself. I'm the developer, but for the last one, 13 years, I was working in pharmacy. </p><p>[00:00:52] <strong>Leo Dion (Host): </strong>That's such a great story. How, what got you interested in doing, getting into iOS development?</p><p>[00:00:59] <strong>Paweł Madej (guest): </strong>I was looking for mobile development in three years ago and I have a background on web development. I was programming in PHP sometime ago and also some Linux administration. So it was my hope before. All my life, I think. And after awhile I started interesting in developing mobile apps. I tried for very short periods, how to develop for Android, but I found it hard for me to learn and understand it.</p><p>[00:01:39] And after. Some break. I got my iPhone burrowed and tried the iOS, how it works, how it looks and how it feels. And I liked it very much. And then my interests on iOS started, I have bought a few books. I watched the Stanford course online and then decided to that I will try to learn and make up at the same time.</p><p>[00:02:08] So this was first quarter of 19 year. So I'm year and a half in business now. </p><p>[00:02:18] <strong>Leo Dion (Host): </strong>Congratulations. That's fantastic. I'm really happy for you. What did you find to be the best resources in order to get you started with iOS development? </p><p>[00:02:33] <strong>Paweł Madej (guest): </strong>Well, at first I was looking for some reading. So blog posts but I bought also some books and with following a book.</p><p>[00:02:47] You have to think as an outer of a book. And for me, this was a little hard because I got some idea what I wanted to do. But the outer follows some idea, which he has. So this was hard for me at start to transfer this idea from the book to the idea I want to. Use and make some progress. So I started looking for ideas on the web and not the full flow, for example, how to make from a, to B to C, to C, but just the tracks.</p><p>[00:03:28] And this is how my first app start, that I have some problem to resolve and I looked for solutions. So not the learning. With following your pages of the book. And this one was StackOverflow, the blog posts. But I found also that at some point that conferences from around the world are also helping me.</p><p>[00:03:58] That I watch some idea and someone explains it in the short period of time, but it's quite to the point. So you can just use this examples or this idea and resolve your problem. So this was also learning path for me. </p><p>[00:04:20] <strong>Leo Dion (Host): </strong>I think that's really interesting because in the last episode I had Bas on and we're talking about how we learn via documentation and videos and stuff.</p><p>[00:04:28] And it's interesting that you like balanced out learning just from some sort of curriculum while also just getting questions answered on the web, you know, either Googling it or doing stack overflow or whatever. So I found that really interesting that you kind of took both modes. </p><p>[00:04:45] <strong>Paweł Madej (guest): </strong>Yeah. And I found that documentation is very helpful for me at that point.</p><p>[00:04:53] I am now, but at first, do not know where to look for and what to look for. </p><p>[00:05:02] <strong>Leo Dion (Host): </strong>You don't know what you don't know.  I think that's the biggest challenge is it's like you look at it and it's just a, you know, a mess.</p><p>[00:05:09] I want to talk to you again about app figures. You probably already know them, but their analytics and their app store optimization. AppFigures really is about giving makers the tools they need to get more downloads and revenue. Well, now figures can help you track competitors for how many downloads they're getting and how much money they're making to their audience, demographics and which SDKs they use.</p><p>[00:05:35] Their competitor intelligence really gives you great context, say a competitor as like a new feature or was mentioned in the news recently with app figures, you can see if that brought in more downloads right away. Got a great idea for an app or a game. Well with AppFigures, you can figure out how big that market is and how much money you could be making with it.</p><p>[00:05:56] And that's just scratching the surface, whether you're growing your app or building a new one, AppFigures has the tools you need that will reduce the risk, but also get you more downloads. You don't need a large budget or a data science degree to do this kind of thing. AppFigures has made it affordable and simple on top of tools AppFigures also provides a lot of great guides and tutorials to take you step-by-step through gaining more visibility with ASO and increasing your revenue by learning from your competitors.</p><p>[00:06:24] They just released a free guide on that, actually. So go ahead, head to the link in the show notes and try out AppFigures for free. If you like it, use our special code and power 30, 30 to get 30% off for the next three months. Thank you at figures for sponsoring our show.</p><p>[00:06:42] And then once you figure out kind of like the structure and the flow and what's the philosophy behind it, I think it just becomes easier to know what you're exactly looking for. Yeah. </p><p>[00:06:51] <strong>Paweł Madej (guest): </strong>That's why I started learning from documentation and looking for solutions in documentation. This year, I got around one year of experience because I was able to understand that documentation and I was able to define the problem.</p><p>[00:07:10] I look in this documentation. Because Google is helpful because you write a sentence and it throws you back hundreds of solutions or examples, but you have to in the documentation. You have to be very specific. What you look for. </p><p>[00:07:28] <strong>Leo Dion (Host): </strong>Right. And you have to make sure you understand what's jargon to use and things like that.</p><p>[00:07:32] I just recently learned term that I didn't even realize was a term that Apple use protected resource. That's an actually official term for anything that you have to ask permission for in iOS. So for instance, when you need to have like location data or health data or microphone et cetera, like, I didn't know that there was an official term for that.</p><p>[00:07:53] So I would have never known If I wanted him to look up a specific permission dialogue, that term was protected resource for all that. Like, and I've been doing this for, I don't know, 10 years at least. And that, that was news to me. I just learned about that term. So yeah. </p><p>[00:08:08] <strong>Paweł Madej (guest): </strong>Yeah. That's the moment you know that there is so many things.</p><p>[00:08:14] You have to learn yet. So for me, the one and a half year, it's quite a newbie in iOS developer community. So I learned from many people and the documentation is. Because it's drawbacks yeah. It's not in every part. Documentation is easy to use and even if it exists for something. So, </p><p>[00:08:40] <strong>Leo Dion (Host): </strong>and yeah especially if there's very specific cases, like documentation is incomplete or it could be out of date, which I've found to be quite true.</p><p>[00:08:50] <strong>Paweł Madej (guest): </strong>Yeah. That's a hard thing that you get to the documentation and find, for example, One part of the solution you're looking for, but then you follow links to another part of this thing and there is no documentation. So you will stay at the point that you do not know what to do next. </p><p>[00:09:15] <strong>Leo Dion (Host): </strong>Yes. Yeah. I'm very familiar with that.</p><p>[00:09:19] Seems like conference videos were a big help to you ended up being an inspiration for you to create your first app in the app store, right? </p><p>[00:09:26] <strong>Paweł Madej (guest): </strong>Yeah. I have watched a lot of conference videos, but I found that it's hard to find them on the web because I didn't know what conference names are or where to look for them.</p><p>[00:09:42] So when I found them, it was also because I could learn a lot from them, but not all every conference is easy to find now. So when I was making my first job it's family graves map. And so the idea came that maybe I will make some app that will contain. Lots of conference videos in one place, and this app could help many other developers in my situation, they are learning.</p><p>[00:10:22] They look for ideas for inspiration or knowledge at all. And. Having the one place to go with this conference videos would be awesome. So after I released this first app to app store on October last year, I decided that I will do this app and this app is named. Called CodeConf it's now in the app store for every user it's free to use and it contains almost 600 videos from talks from around the world.</p><p>[00:11:00] There are, most of the talks are in English language, but they're also in Russian and probably in quick time, I will have also some in Portuguese language, so that's </p><p>[00:11:14] <strong>Leo Dion (Host): </strong>awesome. That's definitely something I think the community needs. I know. I mean, there's a great WWDC app, but, or developer app, I guess now, but to have all those resources from different conferences, it's going to be fantastic.</p><p>[00:11:27] It's a great app. And thank you so much for building something like this for the community. </p><p>[00:11:31] <strong>Paweł Madej (guest): </strong>Yeah. I think this was also. Quite a thank back to community because I have learned so much from the community and this way I can also help others to learn something. I am not a blog poster or writer. I have to hard to write some blog posts.</p><p>[00:11:54] So I cannot learn people for example, this way. But providing this app and making it free for everyone makes I think easier for people to use almost 1000 people tried it as for now. That's awesome. Thanks </p><p>[00:12:13] <strong>Leo Dion (Host): </strong>a lot congratulations that's fantastic. So what were the big challenges you face trying to get this app into the app store?</p><p>[00:12:24] <strong>Paweł Madej (guest): </strong>Idea of the app was to be not a static app, for example, but to have some backend. So I have to write a backend for it. And all data is life from these backend. And during that time. When the app was ready for app store, I have found some issues with revenue. One thing, it was a newbie error that I have created In App Purchase for the app, but I didn't attach it to the app in the review process because when you are making this for the first time, you have to.</p><p>[00:13:09] Do this additional step because otherwise it's not connected one with the other. And that was one reason of the rejection of my app. Okay. The second one was that Apple treat that my that videos I have in my app are not my own. So it was illegal from their perspective for me to use them because I'm not the owner of these videos.</p><p>[00:13:44] So they were very strict with this. And I had to have official document that I have permission from conference organizers to use these videos in my app and still stream them. Because all videos are streamed from the official channels. So I use YouTube on only as I a video backgrounds for it.</p><p>[00:14:15] <strong>Leo Dion (Host): </strong>And that's really interesting. I've heard that like, so getting into the main topic, like I've heard that legal tends to be one of the like big issues that folks get into when it comes to like the ownership rights of certain content that is in your app. So if you're using like external content of any kind, you need to have ownership or permission of some kind when you're using that content.</p><p>[00:14:44] Even though it's from a third party, which I find really interesting. </p><p>[00:14:48] <strong>Paweł Madej (guest): </strong>Yeah. I found as I was sort of researching this problem, I found that even using the images in app, for example of toys that are copyrighted, there is a box with this toy and there is a name of the company which made it. And for people, this was the problem that Apple have denied it using of such images in the app also.</p><p>[00:15:21] So they are also very strict with libraries use. I think. On test flights. I was testing using Vimeo as streaming because some conferences are so on stored on Vimeo. And I have rejected one of my solutions because it was using. Not right the Vimeo tools. So there are my tools I have used.</p><p>[00:15:51] And this also, they stayed that I have to change this. </p><p>[00:15:57] <strong>Leo Dion (Host): </strong>So you were using some other like third-party plugin or library, I should say in iOS. That was not the official Vimeo library. Is that </p><p>[00:16:06] <strong>Paweł Madej (guest): </strong>correct? Yeah, I tried it and this was for tests but as I want to show my test flights users solution with the YouTube videos and Vimeo videos, and then it was, I had to change because they somewhat found that this is not the official solution for it.</p><p>[00:16:30] So, so, and for you to buy I am using official API. So it was clear to use. But on the other hand, Vimeo API is not as open as YouTube one. So at now I'm not using at all Vimeo for conferences I'm set we've. I am set with that because there are a few awesome conferences that I cannot show in my app, but maybe in some future it will change.</p><p>[00:17:03] <strong>Leo Dion (Host): </strong>Yeah. Like I know I spoke at Swift Toronto, that's on Vimeo, so, and I know a few others that were on Vimeo as well, so yeah, that is unfortunate sometimes. Really another good point. I think developers, especially Indies who try to like hack their own thing. Nope. Was it disapproved in test flight or was it disapproved for the app store?</p><p>[00:17:24] <strong>Paweł Madej (guest): </strong>No, this was on test flight. So it was not released that I pushed for the apps to review. It was a test light review. Yeah. </p><p>[00:17:36] <strong>Leo Dion (Host): </strong>Cause I know like, it seems like test flight reviews have gotten a lot stricter almost to the point where I would say the test flight review usually tends to like filter out.</p><p>[00:17:46] 90% of the issues are going to run into before you've even submitted it. To the official app store, but yeah, the whole point about like using an official API and not using an official API, it goes back to the whole thing about legality. Apple does not want stuff on their app store that might skirt official rules.</p><p>[00:18:06] <strong>Paweł Madej (guest): </strong>Yeah, it's very strict with it. And even if you try to make some hacks they find these ways that you are not using the official or legal content. And they will deny you at all. </p><p>[00:18:22] <strong>Leo Dion (Host): </strong>So were there any other issues that you ran into when you submitted CodeConf? </p><p>[00:18:28] <strong>Paweł Madej (guest): </strong>Yeah, I think the biggest one for me was to understand why Apple doesn't let me to use enough auto-renewal subscriptions because the idea of my app is to allow everyone to use it for free, without paying and viewing the content, but it some few features additional that let you make these watching and managing these videos easier or way to manage it in a very convenient way, because it allows you when you have these premium package make some favorites make a favorite speaker notifications or making creating</p><p>[00:19:20] your watch list. Yeah. So when you Browse the dogs. You can save it to their watch list and watch later, and you will not lose these stock. You have found and. That was the the first set of features I wanted to have as a premium package and reviewers, that, that this is not the ongoing content.</p><p>[00:19:50] When user is grating creating those for example, watch lists or favorites and they wanted to make something that will user use almost every time they use app when they have this subscription. And if at first I even didn't understand what they want from me to do, but as I see it and think what I can do to.</p><p>[00:20:22] Make this ongoing content, because when I compared to other apps which have enough and auto-renewable subscriptions, from my perspective as a user, I didn't felt that my app lacks of some feature that probably okay can be able to auto-renewable subscription. And I got one feature that I didn't plan to.</p><p>[00:20:50] Implement in first version of. My app, but creating it might do the review successful as they allowed me finally to use auto-renewable subscriptions and that feature was talk recommendations.</p><p>[00:21:12] <strong>Leo Dion (Host): </strong>Hello, everyone. I wanted to let you know about my speaking schedule for the rest of the year. I will in fact, be speaking at three conferences over the next month. These include. IOS dev camp DC 2020 on October 30th, as well as releasing two videos for the online conference. Back to Mac on November six and seventh, you can find links to both those conferences in the show notes below, but.</p><p>[00:21:41] In the middle of November, between the 17th and 20th of November, I will be also speaking at an S Spain 2020, which will be of course, a remote conference just as all these conferences this year are. And for those of you who don't know, and as Spain is one of the most well-known conferences about Apple platform development and.</p><p>[00:22:05] It is going to be this year, online, carefully crafted by the community for the community. And it will be going on for continuous 36 hours. This is going to be amazing. If you've been a listener of the show, you probably are familiar with some of our guests, such as Paul Hudson and Donnie walls, who will both be speaking there?</p><p>[00:22:26] I will be speaking of course, and my topic will be something that is near and dear to me. My talk and Spain 2020 will be on Swift packages, the, to dependency management of the future. If you've heard me talk about Swift packages before that, you know how much I am interested and excited to be speaking on this topic.</p><p>[00:22:49] So, if you are interested in going to an a Spain this year, then you can get a 10% discount by using the promo code and power apps. All one word again, empower apps to get 10% off your ticket, tennis, Spain, this year, I highly recommend you check this conference out. There's going to be a great set of speakers.</p><p>[00:23:10] And with 10% off, this is really reasonable to attend from the comfort of your home. Thank you to iOS dev camp DC and back to Mac for inviting me to speak this year and most especially, thank you, Anna Spain for offering a discount to our listeners and for inviting me to speak, these are some great conferences.</p><p>[00:23:30] I highly recommend you attend them. And if you do, I look forward to seeing you there. Hi,</p><p>[00:23:37] Interesting, I'm wondering, like, that seems an interesting situation where you have like in-app purchase and you just want to add certain features. Was it maybe like the type of subscription that you use that could have been the determining force? Like. Because there's other apps I've used that have third-party APIs and have in-app purchases that add certain features to the user interface.</p><p>[00:24:03] So I'm like really curious why they didn't allow your set of features such as favorites and things like that. They didn't allow those as necessarily in-app purchases. </p><p>[00:24:14] <strong>Paweł Madej (guest): </strong>I also have no idea why it was like that, but they suggested to me that. They allow me to use subscriptions, but not the outer. Okay.</p><p>[00:24:27] <strong>Leo Dion (Host): </strong>Interesting. </p><p>[00:24:29] <strong>Paweł Madej (guest): </strong>Okay. But from iOS dev perspective, it is better a lot. If you have these auto-renewable subscriptions. So I tried to make my best and, and get it's as I plan it long time before. Yeah. Yeah. </p><p>[00:24:49] <strong>Leo Dion (Host): </strong>So let's start off with the first big controversy this year, which was what the folks at band camp and their app.</p><p>[00:24:56] Hey, I don't know if you want to get into this Pawel but what exactly happened with Hey this year? </p><p>[00:25:01] <strong>Paweł Madej (guest): </strong>Well, they, I, I believe in review denied. Hey To accept to the app store which was unusable. If you do not have any account and the problem was that you could not create these accounts inside the app.</p><p>[00:25:24] Could create the account on the website and then having these credentials would log in into the, on the iOS device. Yeah. So for Apple, this was the problem. that They said that you cannot use the app that does nothing. It has to make something before it's accepted in the app store. And the problem is that.</p><p>[00:25:54] It was not the first app that has this idea that you have credentials and you log in and you start using the app because there were many other apps that use the same concept and are all of the available in </p><p>[00:26:10] <strong>Leo Dion (Host): </strong>in App Store yeah. I think like Netflix is the big elephant in the room that gets away with a lot of things that most developers can't.</p><p>[00:26:19] How did, how did this end up getting resolved? </p><p>[00:26:23] <strong>Paweł Madej (guest): </strong>Well, I decided to create. Option to make in app the real account so you were able to create the app login and use it for free for 14 days. If I remember correctly. Yeah, I think that's right. this Made Apple happy. If we can say this, that app make some features for the user.</p><p>[00:26:56] So you can create an account. You can log into this account and use the app. So it is strange, was enough for Apple to alow them back in the app store. </p><p>[00:27:08] <strong>Leo Dion (Host): </strong>Yeah. And then the other controversy we had this summer was with the folks at automatic. We actually, I had Aaron Douglas on who works on the WordPress app and we talked about the issue that WordPress ran into was.</p><p>[00:27:24] Apparently somewhere in app, you could have gotten into a web view to where you'd purchase wordpress.com hosting. So there was WordPress, which is just an open source project that you can install on any old PHP server, but then there's wordpress.com, which is basically WordPress's hosting, hosting offering that they have.</p><p>[00:27:45] And apparently there was a way in the app that the reviewer had found that you can. By hosting and that essentially skirts getting away from doing in-app purchases. And that, that was why they ended up getting rejected. And I believe like with both of these apps and including, Hey, like this wasn't the first release that got rejected.</p><p>[00:28:06] It was a later release. Where it was found. So even though your app may have already been accepted, it could get rejected later for a feature or flaw that had already existed earlier. So that's something to keep in mind. We're press, they worked it out with Apple and wasn't as big of a deal as it was made in the press.</p><p>[00:28:22] But it's still good to keep in mind that you, even if it's accidental, if you end up skirting the in-app purchase stuff, Apple gets pretty pissed about that. </p><p>[00:28:33] <strong>Paweł Madej (guest): </strong>Yeah. I think that if Apple find some. Issue with the app during the first release or during the some updates, they are very strict with their statement.</p><p>[00:28:47] They do not change their mind during some conversation or even excalation of the problem with this app, you have to. make it straight as Apple wants you to, because otherwise you and app with a full rejection or even you are out of </p><p>[00:29:08] <strong>Leo Dion (Host): </strong>App Store or. Yeah, agreed. That's the thing is like Apple has all the power in these situations.</p><p>[00:29:14] I mean, that's something to keep in mind is like from the indie developer for the biggest company in most situations, Apple's the one with all the power, unless you have an app with a large enough audience. I E Facebook, Netflix, like you're pretty much not going to be able to get away with getting.</p><p>[00:29:31] Around Apple's rules more or less. </p><p>[00:29:35] <strong>Paweł Madej (guest): </strong>Yeah. I remember the case with Facebook, as you said, maybe not with the app itself, but even if Facebook have been using not the </p><p>[00:29:46] <strong>Leo Dion (Host): </strong>enterprise certificates, is that what you're thinking? Yeah. </p><p>[00:29:50] <strong>Paweł Madej (guest): </strong>So. They were using the certificates to install the app on the devices.</p><p>[00:29:57] They are not allowed to install. Yeah. And Apple also have blocked whole Facebook and all of Facebook's devices that we're using. We've just a revocation of these enterprise certificates. So even it's such big company as Facebook, they are very strict with the rules. And I think. This consistency that every one have to use and keep up with the rules.</p><p>[00:30:27] Apple states from one perspective it's okay. But the Apple uses its guidelines as a guidelines and the, it is not, not everyone have to feel every guideline in the same manner I think, yeah this is not the very fine way from the Apple but we have to with that because companies have some better treating from Apple</p><p>[00:31:00] <strong>Leo Dion (Host): </strong>yeah, agreed. Agreed. And then before we covered the biggest, the elephant in the room, I wanted to cover the whole game streaming controversy. So there's this whole new technology where folks like Amazon, Google, Microsoft in particular have enabled. They're basically you can play games on various devices without actually having the console by basically streaming the video and streaming the input from your game controller to some server in the cloud, essentially.</p><p>[00:31:32] And then playing the video game that way. Google stadia. I forgot what the Amazon one was called. That just came out a few. Few weeks ago. </p><p>[00:31:39] <strong>Paweł Madej (guest): </strong>Yeah, I think the most, do you remember them? No, I'm sorry. I'm not a gamer. So </p><p>[00:31:45] <strong>Leo Dion (Host): </strong>I, but I know I'm not a gamer in those, those spheres, but the big one was obviously Microsoft X cloud and the controversy there.</p><p>[00:31:55] They wanted to put an app in the app store you so you can play any X-Box game you want in the cloud, on your iOS device, especially at on iPad. And basically Apple didn't allow it because of the way it sounds like it's partially the controversy of you can play any game. You want an Apple kind of wanted them to have like.</p><p>[00:32:15] A separate app for each game that would then use the service, which sounds like a mess. Both for usability and maintenance. Yeah. I dunno. What else did I miss? </p><p>[00:32:26] <strong>Paweł Madej (guest): </strong>Yeah, I think Apple is a word that with such solutions as game streaming, they are losing the power of control. Right. So content power of control is on the, provider of these streaming services then, and not the on Apple and Apple wants to keep the power on it's behalf so I think this is the main problem with this services.</p><p>[00:32:55] <strong>Leo Dion (Host): </strong>Yeah. And it's really unfortunate because you know, something like Netflix essentially does the same thing, but without interactive content, Netflix doesn't have to have a separate app icon for each show or movie. And it seems like the kind of, there's sort of a lack, there's a lack of foresight in how future technologies will affect how the iPhone is used.</p><p>[00:33:16] And I don't think when the app rules were first thought out of. Game stream, what was never thought of as an actual, like viable service on the iPhone. So like they don't have the ability to, to kind of. Take that on, in a way that's useful and fun and easy on developers to take care of it. Now it's kind of a mess, so to speak when it comes to having game streaming platforms on iOS.</p><p>[00:33:41] So now people just ended up having to use an Android tablet or an Android or a Chrome TV to do it, which is </p><p>[00:33:47] <strong>Paweł Madej (guest): </strong>unfortunate. I think. At some point, these guidelines will change because the market will be too big to lose the money from it. So I think I think that if Apple finds the way to make some profits from these streaming services and to force these providers, To give Apple money but some of the money they make from these services.</p><p>[00:34:16] And I think that then it will be possible to stream games on the iPhone or so I think the cash is all the things, </p><p>[00:34:27] <strong>Leo Dion (Host): </strong>so, yeah, I agree. And speaking of cash and gaming let's of course cover the biggest elephant in the room with Fortnite, Fortnite. I mean, they blatantly got, tried to get around the whole in-app purchase thing and that costs severely and they've kind of taken rather than acquiescing to Apple in many ways.</p><p>[00:34:49] They've just go ahead and now they're suing them and who knows how long that's going to take? </p><p>[00:34:54] <strong>Paweł Madej (guest): </strong>I have read that's the case on the cart is on May 21. So it's long before some judgment from these guys, but, and </p><p>[00:35:09] <strong>Leo Dion (Host): </strong>there's been a lot of back and forth about like their unreal tournament engine and whether Fortnite has the right to post the app on the Mac, even outside of the app store, because there's certain certifications you need in order to get an app on a Mac.</p><p>[00:35:23] <strong>Paweł Madej (guest): </strong>I think that fortnight case is. They wanted to test how Apple is strict with the rules, the rules, were open that if you have some purchases in app, you have to use enough  from Apple. You cannot do any other tricks. There are many apps that you. By outside of the app for the content, but you cannot drive users to this place when you have to buy, if you can buy these services.</p><p>[00:35:58] So you can have to find the way on his behalf. Yeah. The fortnight tried to make it very straight without any... Without keeping any rules. So, so they say they forced to your side by side in-app purchases and they're on basket for buying things. So this was, I think the most important rule of the app store.</p><p>[00:36:28] Yeah, because that was broken by fortnight. So. As I see these guys as I in the dev with some in-app purchases , I'm a little person in the markets. Very little. Yeah. And I think that Paying these 15% of a provision to the Apple and having access to the worldwide market is fair. I think that's fair because if I didn't have access to the app store, I will not have access to users from around the world.</p><p>[00:37:09] <strong>Leo Dion (Host): </strong>Yeah, that's totally fair point. And so I think. Something I wanted to really get into is just what, what are some things folks should look out for when they even, I would even go so far as to say when they have an app idea. And I think we've kind of touched on a few of those, making sure you have the legal right to use the content in your app.</p><p>[00:37:28] I think that's a big part of it. If you're using copyrighted material, make sure you have documentation that you have. You know the right to do that otherwise, you know, I'll make sure it's creative comments. </p><p>[00:37:39] <strong>Paweł Madej (guest): </strong>Yeah. I think that this guy sees is very important because every app in app store is reviewer very many ways.</p><p>[00:37:51] So, this is not only how the app works, because it should not crash for example, on the start, because it will be also rejected. Yeah. But what app does and if it's, for example, have some gambling in it. So I remember the case from, I think last year where some. Newspaper apps were rejected because Apple's site that they allow to open URLs from to the web pages, for example, from this newspaper.</p><p>[00:38:28] And they say that opening URLs allow you to go to the gambling sites. And the app was rejections for allowing gambling. So this was also the case, but, and it was rather quickly resolved, but also Apple's treat  some opening URL can be denied for the app. </p><p>[00:38:54] <strong>Leo Dion (Host): </strong>I think there's a really good article. I read recently by David Shayer on why Apple doesn't allow a third party watch faces and why we might not be ever getting third-party watch faces.</p><p>[00:39:05] There were obviously issues with battery life and buggy code and Apple's image and stuff. But the last reason I found really interesting and it pertains to our conversation here, but like the whole idea of copyright, it made me realize how important it is for Apple to make sure they don't. Do anything that crosses the line legally.</p><p>[00:39:26] And he talks about how like, Apple has been very painstakingly, like. Certain and careful about what they do with their own watch faces precisely because they don't want to mess with Apple legal. And I think it gives you some perspective about how Apple looks at even your apps in their app store and how you don't want to cross those paths</p><p>[00:39:48] <strong>Paweł Madej (guest): </strong>yeah. I think that's Apple with how it's big it's. Can be a target for suing it for many things. Yeah. So they and stood for big money, for example. Yeah. So they legal department keeps everything very strict because of that. I think that they do not want to have been sued because of some deaths issue or using by any dev illegal contents.</p><p>[00:40:24] So I think this is the thing why they are very strict with these, legal content issues. Yeah. </p><p>[00:40:31] <strong>Leo Dion (Host): </strong>Yeah. Agreed. And then the other thing you mentioned specifically with your app is taking shortcuts with third-party APIs, right? </p><p>[00:40:40] <strong>Paweł Madej (guest): </strong>That was also the case. And I think you kind of go the shortest way because even it's.</p><p>[00:40:48] May be convenient for you as a developer, because it's cheaper. It's easier to do, but even if at first it will go for the test flight review, I think day one, you want to release the app in app store. It will be rejected and you have to fix all those things before I they accept you. </p><p>[00:41:10] <strong>Leo Dion (Host): </strong>Yeah. Agreed.</p><p>[00:41:12] And then last that I think certainly not least is anything that kind of. Skirts or bends the rules when it comes to in-app purchases, whether that's trying to get around it, trying to sell something that just isn't. You know, according to Apple, following the guidelines, having any sort of browser view that kind of skirts in-app purchases.</p><p>[00:41:38] I think that that's something  just be careful of when you do it and make sure it follows the guidelines that Apple has available. </p><p>[00:41:44] <strong>Paweł Madej (guest): </strong>Yeah. And I think that maybe guidelines are not. Easy to understand in many points. Absolutely. Absolutely. Yeah. Even if you read word by word these guidelines, in many ways, you will find that it's hard to get the Apple's point, what they want you to do.</p><p>[00:42:07] And so I tried to talk with the reviewer, but on the review when you are, you will not get any tips what to do, because as they say to me on the review, they are describing or replying to features I have, but they will not tell you what feature you have to do. You should have to be accepted with for example, auto-renewable subscriptions.</p><p>[00:42:39] So I have to find it myself. What they will accept as this subscription. Yeah. So you can't, you can ask questions, but you probably won't have any answer that will help you at all. </p><p>[00:42:55] <strong>Leo Dion (Host): </strong>Yeah. I want to definitely state that, like the guy following the guidelines. Well, I'd say following the guidelines are easy and 80% of cases, it's those 20% where it's like becomes ambiguous and challenging.</p><p>[00:43:06] And I think a few tips is like one thing I've suggested to folks. Is putting your app in the app store, like do MVP in the app store to make sure that you, your MVP can be approved by Apple. What's the least amount of work. So you can just test and make sure that you're following guidelines. Before spending a lot of time building the most robust app you can possibly have and find out that the whole idea is against Apple's rules.</p><p>[00:43:33] That's something. To keep in mind. The other thing I was going to say is take advantage of the hours during WWDC I had a really great conversation with one of the folks at Apple about why I couldn't use. Imagery from Nintendo games in my watch app. For those of you who aren't familiar, heart Twitch, you can show off your heart rate when you're streaming.</p><p>[00:43:56] And I have video clips and screenshots of me playing like Mario kart, for instance, and showing my heart rate racing while I'm playing Mario kart. They didn't like that. The watch app store. And I had thought actually the reason being was that it wasn't actual watch app screenshots, but that it was.</p><p>[00:44:12] Screenshots of the TV. But in fact, the controversy was again, because I had screenshots from games of Nintendo that I didn't have the legal right to use. I would have never thought of that because it's an app store. So, you know, it was really good that I talked to somebody and got that guidance. </p><p>[00:44:28] <strong>Paweł Madej (guest): </strong>Yeah. I asked you site about screenshots.</p><p>[00:44:31] So. What about issue of friends of mine? When he has that used in screenshots, Apple Watch on device side by side with the iPhone and. At first, it was accepted. With this screenshots and after updates or reviewer denied these updates because it was showing the feature, Watch App that doesn't exist for this app.</p><p>[00:45:03] But the issue is that. One of your doesn't solve the problem or might be missed this screenshot. And for the next one, when update was released, this was the problem. And this friend had to remove the watch from screenshots and everything went fine and the app was approved. So we have to also have in mind what you show on the screenshots, because this could be also one of the, even if the app is okay, this is what you write in description.</p><p>[00:45:39] App description. What you show on the screen source also can be 0.4 for action. </p><p>[00:45:46] <strong>Leo Dion (Host): </strong>Yeah. Was there anything else we wanted to cover when it came to making sure you follow app store rules, as, as much as you can. </p><p>[00:45:55] <strong>Paweł Madej (guest): </strong>Well, I don't know what to say. </p><p>[00:45:58] <strong>Leo Dion (Host): </strong>I think that pretty much covers it as best as we can. It is definitely a challenge.</p><p>[00:46:05] And like I said, try to be flexible as far as features and also your release date. It is hard. I'm not going to tell anybody, especially for Indies and just, you know, You know, be careful what you put on the app store content that you have legally right to, and you're not trying to like skirt the laws. I have my own complaints about the app store most certainly.</p><p>[00:46:24] And I don't want to get into that in this episode, but I think like, I think we pretty much covered the basic guidelines and not trying to cheat Apple out of money. I think that's the overall one of the big rules I would say is be careful, be careful on that. </p><p>[00:46:40] <strong>Paweł Madej (guest): </strong>Yeah. I have released my first up.</p><p>[00:46:43] It was approved without any issues TestFlight went very fast and then the App Store review. Also, I was very stressed how it goes, because I didn't have this experience on releasing App and, but idea of it was very original. I think that. If you have the original idea, you do not copy the existing app one-to-one and that every feature you have in your app is the same exact copy of something.</p><p>[00:47:20] Other apps. We know all that. There are hundreds of notes up or some, a podcast app, and there are. Any app makes its own the room in app store. But if you have some original idea, you have to make sure it's worth my sending for the review and to make it available to app Store. These problems with review I think that every developer iOS developer will have.</p><p>[00:47:53] Some issues with apps to review at some point, maybe later on maybe a longer it will take for them. But finally, I think that Every idea is worth </p><p>[00:48:09] <strong>Leo Dion (Host): </strong>submitting. Yeah, I agree. And like I said, if you feel like, you know, like I did with heart Twitch, I wasn't certain that an app like that would make it into the app store.</p><p>[00:48:18] And before I thought it was completely, perfectly ready, I made sure it was approved. Before moving forward. Cause I wanted to make sure the concept was solid with Apple before, you know, spending a lot of time on an app like that. And yeah. So good luck to those out there. Big and small who are posting apps to the app store.</p><p>[00:48:36] You're going to get rejected at some point and it's okay if you do. </p><p>[00:48:41] <strong>Paweł Madej (guest): </strong>Yeah, I think it's for having this rejection is the iOS dev life, you get this rejection will better understand what they want. </p><p>[00:48:51] <strong>Leo Dion (Host): </strong>Yeah, I agree completely. Well, thank you so much for coming on the show. Where can folks find you online?</p><p>[00:48:59] <strong>Paweł Madej (guest): </strong>Well, I'm mostly on Twitter. You can find me there. </p><p>[00:49:06] <strong>Leo Dion (Host): </strong>The show notes. </p><p>[00:49:16] <strong>Paweł Madej (guest): </strong>You can find me on my sites. This is also my name and surname.com. Also in show notes. I'm also on github and I think it's replaces. You can find me, so my DMS are open.</p><p>[00:49:33] So if you want to get in touch, feel free every time. Well, thank </p><p>[00:49:38] <strong>Leo Dion (Host): </strong>you so much for coming on Paweł. People can find me on Twitter at Leo G Dion. My company is bright digit. Please take some time and go to Apple podcasts, Google podcasts, or Spotify, and give us a review. And if there's anything you want to talk about on the show.</p><p>[00:49:56] Or if you have any topic, ideas or feedback for me, please feel free to reach out to me on Twitter. My DMS are open as well. Also, you can email me leo@brightdigit.com. Thank you so much for joining us for this episode. And I look forward to speaking to thank you so </p><p>[00:50:12] <strong>Paweł Madej (guest): </strong>much.</p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://pawelmadej.com">Paweł Madej</a> <ul>
<li><a href="http://twitter.com/PawelMadejCK">Twitter @PawelMadejCK</a></li>
<li><a href="https://github.com/nysander">GitHub @nysander</a></li>
<li><a href="https://bit.ly/codeconfapp">CodeConf App</a></li>
<li><a href="https://github.com/nysander/twitter-text">Twitter Text Library</a></li>
</ul>
</li></ul><p><a href="https://youtu.be/NmFHkLlxhL8"><strong>YouTube Video - https://youtu.be/NmFHkLlxhL8</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/66f6958e">Episode 67 - Documenting Your Code with Bas Broek</a></li>
<li><a href="https://share.transistor.fm/s/f6092e38">Episode 62 - Local Database Storage on iOS with Aaron Douglas</a></li>
<li><a href="https://www.relay.fm/radar/198">Under the Radar - Store Wars</a></li>
</ul><p><b>Related Links</b></p><ul>
<li>O<a href="https://www.hackingwithswift.com/store/objective-c-for-swift-developers">bjective-C For Swift Developers by Paul Hudson</a>
</li>
<li><a href="https://tidbits.com/2020/10/08/four-reasons-why-we-wont-see-third-party-apple-watch-faces-and-what-apple-is-doing-instead/">Four Reasons Why We Won’t See Third-Party Apple Watch Faces (And What Apple Is Doing Instead) by David Shayer</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance or indie apps like <a href="https://appfigures.com/resources/aso/aso-teardown-fotmob">Fotmob</a>.</li>
<li>
<a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">New competitor's report in the Appfigures dashboard</a> where you are able to view competitor downloads, build performance benchmarks, and see the new trends as they happen. <a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">Check it out here.</a>
</li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><br><a href="https://remote.nsspain.com/"><em>I will be speaking at </em><strong>NSSpain 2020...</strong></a><br>Nov 17 - 20, 2020</p><ul>
<li>One of the most known conferences about Apple platforms development is going remote this year! </li>
<li>NSSpain 2020 is an online, continuous 36 hours conference, carefully crafted by the community for the community.</li>
<li>Guests of the show Paul Hudson and Donny Wals will be speaking as well as others</li>
</ul><p>Go to <a href="https://remote.nsspain.com/"><strong>NSSpain.com</strong></a> and use promo code <em>empowerapps </em>to get 10% off</p><p><em>Also speaking at...</em></p><ul>
<li><a href="https://www.iosdevcampdc.com/"><strong>iOSDevCampDC 2020 - October 30</strong></a></li>
<li>
<a href="https://backtomac.org/"><strong>Back to the Mac - November 9</strong></a><strong> &amp; 10</strong>
</li>
</ul><p><b>Pharmacist to iOS Dev</b></p><ul>
<li>Learning Resources</li>
<li>Challenges with Documentation</li>
<li>Making CodeConf for Conference Videos</li>
<li>Using CoreML for CodeConf Subscriptions <strong>Bonus Clip</strong>
</li>
<li>Building the Twitter Text Library <strong>Bonus Clip</strong>
</li>
</ul><p><b>Getting into the App Store</b></p><ul>
<li>CodeConf - Do you have the right to the IP you're using?<ul><li><a href="https://developer.apple.com/app-store/review/guidelines/#intellectual-property">Rule 5.2 Intellectual Property</a></li></ul>
</li>
<li>CodeConf - Are you using official libraries?<ul><li><a href="https://developer.apple.com/app-store/review/guidelines/#intellectual-property">Rule 5.2.2 Third-Party Sites/Services</a></li></ul>
</li>
<li>CodeConf - Do you provide ongoing value to the customer?<ul><li><a href="https://developer.apple.com/app-store/review/guidelines/#subscriptions">Rule 3.1.2(a) Permissible uses</a></li></ul>
</li>
<li>Hey - Does your provide some functionality?<ul>
<li><a href="https://developer.apple.com/app-store/review/guidelines/#minimum-functionality">Rule 4.2 Minimum Functionality</a></li>
<li><a href="https://developer.apple.com/app-store/review/guidelines/#reader-apps">Rule 3.1.3(a) “Reader” Apps</a></li>
</ul>
</li>
<li>Wordpress - Are you avoiding in-app purchases accidentally?<ul>
<li><a href="https://developer.apple.com/app-store/review/guidelines/#in-app-purchase">Rule 3.1.1 In-App Purchase</a></li>
<li>Aaron Talking about the Automatic Wordpress Issue</li>
</ul>
</li>
<li>xCloud - Are you providing additional content?<ul>
<li><a href="https://developer.apple.com/app-store/review/guidelines/#minimum-functionality">Rule 4.2.7 Remote Desktop Clients</a></li>
<li><a href="https://developer.apple.com/app-store/review/guidelines/#streaming-games">Rule 4.9 Streaming games</a></li>
</ul>
</li>
<li>Fortnite - Are you avoiding in-app purchases purposefully?<ul>
<li><a href="https://developer.apple.com/app-store/review/guidelines/#other-business-model-issues">Rule 3.2 Other Business Model Issues </a></li>
<li><a href="https://developer.apple.com/app-store/review/guidelines/#unacceptable">Rule 3.2.2 Unacceptable</a></li>
</ul>
</li>
</ul><p><b>Other App Store Tips</b></p><ul>
<li>Avoid Bugs!</li>
<li>TestFlight Reviews vs App Store Review</li>
<li>You can be rejected later!</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><b>Transcription</b></p><p><strong>Leo Dion (Host): </strong>Thank you for joining me for another episode EmpowerApps. I'm your  host, Leo Dion. Today we have with us.  how you doing? Hello? </p><p>[00:00:12] <strong>Paweł Madej (guest): </strong>I'm fine. Thank you. </p><p>[00:00:14] <strong>Leo Dion (Host): </strong>Thank you so much for coming on the show. Really glad to have you </p><p>[00:00:17] <strong>Paweł Madej (guest): </strong>on. </p><p>[00:00:18] I'm also really happy to talk with you today. </p><p>[00:00:22] <strong>Leo Dion (Host): </strong>I'll look, go ahead and let you introduce yourself.</p><p>[00:00:25] <strong>Paweł Madej (guest): </strong>Well, I'm pharmacists almost former pharmacists, because last time I found my iOS dev job and I am also making apps for app store for myself. I'm the developer, but for the last one, 13 years, I was working in pharmacy. </p><p>[00:00:52] <strong>Leo Dion (Host): </strong>That's such a great story. How, what got you interested in doing, getting into iOS development?</p><p>[00:00:59] <strong>Paweł Madej (guest): </strong>I was looking for mobile development in three years ago and I have a background on web development. I was programming in PHP sometime ago and also some Linux administration. So it was my hope before. All my life, I think. And after awhile I started interesting in developing mobile apps. I tried for very short periods, how to develop for Android, but I found it hard for me to learn and understand it.</p><p>[00:01:39] And after. Some break. I got my iPhone burrowed and tried the iOS, how it works, how it looks and how it feels. And I liked it very much. And then my interests on iOS started, I have bought a few books. I watched the Stanford course online and then decided to that I will try to learn and make up at the same time.</p><p>[00:02:08] So this was first quarter of 19 year. So I'm year and a half in business now. </p><p>[00:02:18] <strong>Leo Dion (Host): </strong>Congratulations. That's fantastic. I'm really happy for you. What did you find to be the best resources in order to get you started with iOS development? </p><p>[00:02:33] <strong>Paweł Madej (guest): </strong>Well, at first I was looking for some reading. So blog posts but I bought also some books and with following a book.</p><p>[00:02:47] You have to think as an outer of a book. And for me, this was a little hard because I got some idea what I wanted to do. But the outer follows some idea, which he has. So this was hard for me at start to transfer this idea from the book to the idea I want to. Use and make some progress. So I started looking for ideas on the web and not the full flow, for example, how to make from a, to B to C, to C, but just the tracks.</p><p>[00:03:28] And this is how my first app start, that I have some problem to resolve and I looked for solutions. So not the learning. With following your pages of the book. And this one was StackOverflow, the blog posts. But I found also that at some point that conferences from around the world are also helping me.</p><p>[00:03:58] That I watch some idea and someone explains it in the short period of time, but it's quite to the point. So you can just use this examples or this idea and resolve your problem. So this was also learning path for me. </p><p>[00:04:20] <strong>Leo Dion (Host): </strong>I think that's really interesting because in the last episode I had Bas on and we're talking about how we learn via documentation and videos and stuff.</p><p>[00:04:28] And it's interesting that you like balanced out learning just from some sort of curriculum while also just getting questions answered on the web, you know, either Googling it or doing stack overflow or whatever. So I found that really interesting that you kind of took both modes. </p><p>[00:04:45] <strong>Paweł Madej (guest): </strong>Yeah. And I found that documentation is very helpful for me at that point.</p><p>[00:04:53] I am now, but at first, do not know where to look for and what to look for. </p><p>[00:05:02] <strong>Leo Dion (Host): </strong>You don't know what you don't know.  I think that's the biggest challenge is it's like you look at it and it's just a, you know, a mess.</p><p>[00:05:09] I want to talk to you again about app figures. You probably already know them, but their analytics and their app store optimization. AppFigures really is about giving makers the tools they need to get more downloads and revenue. Well, now figures can help you track competitors for how many downloads they're getting and how much money they're making to their audience, demographics and which SDKs they use.</p><p>[00:05:35] Their competitor intelligence really gives you great context, say a competitor as like a new feature or was mentioned in the news recently with app figures, you can see if that brought in more downloads right away. Got a great idea for an app or a game. Well with AppFigures, you can figure out how big that market is and how much money you could be making with it.</p><p>[00:05:56] And that's just scratching the surface, whether you're growing your app or building a new one, AppFigures has the tools you need that will reduce the risk, but also get you more downloads. You don't need a large budget or a data science degree to do this kind of thing. AppFigures has made it affordable and simple on top of tools AppFigures also provides a lot of great guides and tutorials to take you step-by-step through gaining more visibility with ASO and increasing your revenue by learning from your competitors.</p><p>[00:06:24] They just released a free guide on that, actually. So go ahead, head to the link in the show notes and try out AppFigures for free. If you like it, use our special code and power 30, 30 to get 30% off for the next three months. Thank you at figures for sponsoring our show.</p><p>[00:06:42] And then once you figure out kind of like the structure and the flow and what's the philosophy behind it, I think it just becomes easier to know what you're exactly looking for. Yeah. </p><p>[00:06:51] <strong>Paweł Madej (guest): </strong>That's why I started learning from documentation and looking for solutions in documentation. This year, I got around one year of experience because I was able to understand that documentation and I was able to define the problem.</p><p>[00:07:10] I look in this documentation. Because Google is helpful because you write a sentence and it throws you back hundreds of solutions or examples, but you have to in the documentation. You have to be very specific. What you look for. </p><p>[00:07:28] <strong>Leo Dion (Host): </strong>Right. And you have to make sure you understand what's jargon to use and things like that.</p><p>[00:07:32] I just recently learned term that I didn't even realize was a term that Apple use protected resource. That's an actually official term for anything that you have to ask permission for in iOS. So for instance, when you need to have like location data or health data or microphone et cetera, like, I didn't know that there was an official term for that.</p><p>[00:07:53] So I would have never known If I wanted him to look up a specific permission dialogue, that term was protected resource for all that. Like, and I've been doing this for, I don't know, 10 years at least. And that, that was news to me. I just learned about that term. So yeah. </p><p>[00:08:08] <strong>Paweł Madej (guest): </strong>Yeah. That's the moment you know that there is so many things.</p><p>[00:08:14] You have to learn yet. So for me, the one and a half year, it's quite a newbie in iOS developer community. So I learned from many people and the documentation is. Because it's drawbacks yeah. It's not in every part. Documentation is easy to use and even if it exists for something. So, </p><p>[00:08:40] <strong>Leo Dion (Host): </strong>and yeah especially if there's very specific cases, like documentation is incomplete or it could be out of date, which I've found to be quite true.</p><p>[00:08:50] <strong>Paweł Madej (guest): </strong>Yeah. That's a hard thing that you get to the documentation and find, for example, One part of the solution you're looking for, but then you follow links to another part of this thing and there is no documentation. So you will stay at the point that you do not know what to do next. </p><p>[00:09:15] <strong>Leo Dion (Host): </strong>Yes. Yeah. I'm very familiar with that.</p><p>[00:09:19] Seems like conference videos were a big help to you ended up being an inspiration for you to create your first app in the app store, right? </p><p>[00:09:26] <strong>Paweł Madej (guest): </strong>Yeah. I have watched a lot of conference videos, but I found that it's hard to find them on the web because I didn't know what conference names are or where to look for them.</p><p>[00:09:42] So when I found them, it was also because I could learn a lot from them, but not all every conference is easy to find now. So when I was making my first job it's family graves map. And so the idea came that maybe I will make some app that will contain. Lots of conference videos in one place, and this app could help many other developers in my situation, they are learning.</p><p>[00:10:22] They look for ideas for inspiration or knowledge at all. And. Having the one place to go with this conference videos would be awesome. So after I released this first app to app store on October last year, I decided that I will do this app and this app is named. Called CodeConf it's now in the app store for every user it's free to use and it contains almost 600 videos from talks from around the world.</p><p>[00:11:00] There are, most of the talks are in English language, but they're also in Russian and probably in quick time, I will have also some in Portuguese language, so that's </p><p>[00:11:14] <strong>Leo Dion (Host): </strong>awesome. That's definitely something I think the community needs. I know. I mean, there's a great WWDC app, but, or developer app, I guess now, but to have all those resources from different conferences, it's going to be fantastic.</p><p>[00:11:27] It's a great app. And thank you so much for building something like this for the community. </p><p>[00:11:31] <strong>Paweł Madej (guest): </strong>Yeah. I think this was also. Quite a thank back to community because I have learned so much from the community and this way I can also help others to learn something. I am not a blog poster or writer. I have to hard to write some blog posts.</p><p>[00:11:54] So I cannot learn people for example, this way. But providing this app and making it free for everyone makes I think easier for people to use almost 1000 people tried it as for now. That's awesome. Thanks </p><p>[00:12:13] <strong>Leo Dion (Host): </strong>a lot congratulations that's fantastic. So what were the big challenges you face trying to get this app into the app store?</p><p>[00:12:24] <strong>Paweł Madej (guest): </strong>Idea of the app was to be not a static app, for example, but to have some backend. So I have to write a backend for it. And all data is life from these backend. And during that time. When the app was ready for app store, I have found some issues with revenue. One thing, it was a newbie error that I have created In App Purchase for the app, but I didn't attach it to the app in the review process because when you are making this for the first time, you have to.</p><p>[00:13:09] Do this additional step because otherwise it's not connected one with the other. And that was one reason of the rejection of my app. Okay. The second one was that Apple treat that my that videos I have in my app are not my own. So it was illegal from their perspective for me to use them because I'm not the owner of these videos.</p><p>[00:13:44] So they were very strict with this. And I had to have official document that I have permission from conference organizers to use these videos in my app and still stream them. Because all videos are streamed from the official channels. So I use YouTube on only as I a video backgrounds for it.</p><p>[00:14:15] <strong>Leo Dion (Host): </strong>And that's really interesting. I've heard that like, so getting into the main topic, like I've heard that legal tends to be one of the like big issues that folks get into when it comes to like the ownership rights of certain content that is in your app. So if you're using like external content of any kind, you need to have ownership or permission of some kind when you're using that content.</p><p>[00:14:44] Even though it's from a third party, which I find really interesting. </p><p>[00:14:48] <strong>Paweł Madej (guest): </strong>Yeah. I found as I was sort of researching this problem, I found that even using the images in app, for example of toys that are copyrighted, there is a box with this toy and there is a name of the company which made it. And for people, this was the problem that Apple have denied it using of such images in the app also.</p><p>[00:15:21] So they are also very strict with libraries use. I think. On test flights. I was testing using Vimeo as streaming because some conferences are so on stored on Vimeo. And I have rejected one of my solutions because it was using. Not right the Vimeo tools. So there are my tools I have used.</p><p>[00:15:51] And this also, they stayed that I have to change this. </p><p>[00:15:57] <strong>Leo Dion (Host): </strong>So you were using some other like third-party plugin or library, I should say in iOS. That was not the official Vimeo library. Is that </p><p>[00:16:06] <strong>Paweł Madej (guest): </strong>correct? Yeah, I tried it and this was for tests but as I want to show my test flights users solution with the YouTube videos and Vimeo videos, and then it was, I had to change because they somewhat found that this is not the official solution for it.</p><p>[00:16:30] So, so, and for you to buy I am using official API. So it was clear to use. But on the other hand, Vimeo API is not as open as YouTube one. So at now I'm not using at all Vimeo for conferences I'm set we've. I am set with that because there are a few awesome conferences that I cannot show in my app, but maybe in some future it will change.</p><p>[00:17:03] <strong>Leo Dion (Host): </strong>Yeah. Like I know I spoke at Swift Toronto, that's on Vimeo, so, and I know a few others that were on Vimeo as well, so yeah, that is unfortunate sometimes. Really another good point. I think developers, especially Indies who try to like hack their own thing. Nope. Was it disapproved in test flight or was it disapproved for the app store?</p><p>[00:17:24] <strong>Paweł Madej (guest): </strong>No, this was on test flight. So it was not released that I pushed for the apps to review. It was a test light review. Yeah. </p><p>[00:17:36] <strong>Leo Dion (Host): </strong>Cause I know like, it seems like test flight reviews have gotten a lot stricter almost to the point where I would say the test flight review usually tends to like filter out.</p><p>[00:17:46] 90% of the issues are going to run into before you've even submitted it. To the official app store, but yeah, the whole point about like using an official API and not using an official API, it goes back to the whole thing about legality. Apple does not want stuff on their app store that might skirt official rules.</p><p>[00:18:06] <strong>Paweł Madej (guest): </strong>Yeah, it's very strict with it. And even if you try to make some hacks they find these ways that you are not using the official or legal content. And they will deny you at all. </p><p>[00:18:22] <strong>Leo Dion (Host): </strong>So were there any other issues that you ran into when you submitted CodeConf? </p><p>[00:18:28] <strong>Paweł Madej (guest): </strong>Yeah, I think the biggest one for me was to understand why Apple doesn't let me to use enough auto-renewal subscriptions because the idea of my app is to allow everyone to use it for free, without paying and viewing the content, but it some few features additional that let you make these watching and managing these videos easier or way to manage it in a very convenient way, because it allows you when you have these premium package make some favorites make a favorite speaker notifications or making creating</p><p>[00:19:20] your watch list. Yeah. So when you Browse the dogs. You can save it to their watch list and watch later, and you will not lose these stock. You have found and. That was the the first set of features I wanted to have as a premium package and reviewers, that, that this is not the ongoing content.</p><p>[00:19:50] When user is grating creating those for example, watch lists or favorites and they wanted to make something that will user use almost every time they use app when they have this subscription. And if at first I even didn't understand what they want from me to do, but as I see it and think what I can do to.</p><p>[00:20:22] Make this ongoing content, because when I compared to other apps which have enough and auto-renewable subscriptions, from my perspective as a user, I didn't felt that my app lacks of some feature that probably okay can be able to auto-renewable subscription. And I got one feature that I didn't plan to.</p><p>[00:20:50] Implement in first version of. My app, but creating it might do the review successful as they allowed me finally to use auto-renewable subscriptions and that feature was talk recommendations.</p><p>[00:21:12] <strong>Leo Dion (Host): </strong>Hello, everyone. I wanted to let you know about my speaking schedule for the rest of the year. I will in fact, be speaking at three conferences over the next month. These include. IOS dev camp DC 2020 on October 30th, as well as releasing two videos for the online conference. Back to Mac on November six and seventh, you can find links to both those conferences in the show notes below, but.</p><p>[00:21:41] In the middle of November, between the 17th and 20th of November, I will be also speaking at an S Spain 2020, which will be of course, a remote conference just as all these conferences this year are. And for those of you who don't know, and as Spain is one of the most well-known conferences about Apple platform development and.</p><p>[00:22:05] It is going to be this year, online, carefully crafted by the community for the community. And it will be going on for continuous 36 hours. This is going to be amazing. If you've been a listener of the show, you probably are familiar with some of our guests, such as Paul Hudson and Donnie walls, who will both be speaking there?</p><p>[00:22:26] I will be speaking of course, and my topic will be something that is near and dear to me. My talk and Spain 2020 will be on Swift packages, the, to dependency management of the future. If you've heard me talk about Swift packages before that, you know how much I am interested and excited to be speaking on this topic.</p><p>[00:22:49] So, if you are interested in going to an a Spain this year, then you can get a 10% discount by using the promo code and power apps. All one word again, empower apps to get 10% off your ticket, tennis, Spain, this year, I highly recommend you check this conference out. There's going to be a great set of speakers.</p><p>[00:23:10] And with 10% off, this is really reasonable to attend from the comfort of your home. Thank you to iOS dev camp DC and back to Mac for inviting me to speak this year and most especially, thank you, Anna Spain for offering a discount to our listeners and for inviting me to speak, these are some great conferences.</p><p>[00:23:30] I highly recommend you attend them. And if you do, I look forward to seeing you there. Hi,</p><p>[00:23:37] Interesting, I'm wondering, like, that seems an interesting situation where you have like in-app purchase and you just want to add certain features. Was it maybe like the type of subscription that you use that could have been the determining force? Like. Because there's other apps I've used that have third-party APIs and have in-app purchases that add certain features to the user interface.</p><p>[00:24:03] So I'm like really curious why they didn't allow your set of features such as favorites and things like that. They didn't allow those as necessarily in-app purchases. </p><p>[00:24:14] <strong>Paweł Madej (guest): </strong>I also have no idea why it was like that, but they suggested to me that. They allow me to use subscriptions, but not the outer. Okay.</p><p>[00:24:27] <strong>Leo Dion (Host): </strong>Interesting. </p><p>[00:24:29] <strong>Paweł Madej (guest): </strong>Okay. But from iOS dev perspective, it is better a lot. If you have these auto-renewable subscriptions. So I tried to make my best and, and get it's as I plan it long time before. Yeah. Yeah. </p><p>[00:24:49] <strong>Leo Dion (Host): </strong>So let's start off with the first big controversy this year, which was what the folks at band camp and their app.</p><p>[00:24:56] Hey, I don't know if you want to get into this Pawel but what exactly happened with Hey this year? </p><p>[00:25:01] <strong>Paweł Madej (guest): </strong>Well, they, I, I believe in review denied. Hey To accept to the app store which was unusable. If you do not have any account and the problem was that you could not create these accounts inside the app.</p><p>[00:25:24] Could create the account on the website and then having these credentials would log in into the, on the iOS device. Yeah. So for Apple, this was the problem. that They said that you cannot use the app that does nothing. It has to make something before it's accepted in the app store. And the problem is that.</p><p>[00:25:54] It was not the first app that has this idea that you have credentials and you log in and you start using the app because there were many other apps that use the same concept and are all of the available in </p><p>[00:26:10] <strong>Leo Dion (Host): </strong>in App Store yeah. I think like Netflix is the big elephant in the room that gets away with a lot of things that most developers can't.</p><p>[00:26:19] How did, how did this end up getting resolved? </p><p>[00:26:23] <strong>Paweł Madej (guest): </strong>Well, I decided to create. Option to make in app the real account so you were able to create the app login and use it for free for 14 days. If I remember correctly. Yeah, I think that's right. this Made Apple happy. If we can say this, that app make some features for the user.</p><p>[00:26:56] So you can create an account. You can log into this account and use the app. So it is strange, was enough for Apple to alow them back in the app store. </p><p>[00:27:08] <strong>Leo Dion (Host): </strong>Yeah. And then the other controversy we had this summer was with the folks at automatic. We actually, I had Aaron Douglas on who works on the WordPress app and we talked about the issue that WordPress ran into was.</p><p>[00:27:24] Apparently somewhere in app, you could have gotten into a web view to where you'd purchase wordpress.com hosting. So there was WordPress, which is just an open source project that you can install on any old PHP server, but then there's wordpress.com, which is basically WordPress's hosting, hosting offering that they have.</p><p>[00:27:45] And apparently there was a way in the app that the reviewer had found that you can. By hosting and that essentially skirts getting away from doing in-app purchases. And that, that was why they ended up getting rejected. And I believe like with both of these apps and including, Hey, like this wasn't the first release that got rejected.</p><p>[00:28:06] It was a later release. Where it was found. So even though your app may have already been accepted, it could get rejected later for a feature or flaw that had already existed earlier. So that's something to keep in mind. We're press, they worked it out with Apple and wasn't as big of a deal as it was made in the press.</p><p>[00:28:22] But it's still good to keep in mind that you, even if it's accidental, if you end up skirting the in-app purchase stuff, Apple gets pretty pissed about that. </p><p>[00:28:33] <strong>Paweł Madej (guest): </strong>Yeah. I think that if Apple find some. Issue with the app during the first release or during the some updates, they are very strict with their statement.</p><p>[00:28:47] They do not change their mind during some conversation or even excalation of the problem with this app, you have to. make it straight as Apple wants you to, because otherwise you and app with a full rejection or even you are out of </p><p>[00:29:08] <strong>Leo Dion (Host): </strong>App Store or. Yeah, agreed. That's the thing is like Apple has all the power in these situations.</p><p>[00:29:14] I mean, that's something to keep in mind is like from the indie developer for the biggest company in most situations, Apple's the one with all the power, unless you have an app with a large enough audience. I E Facebook, Netflix, like you're pretty much not going to be able to get away with getting.</p><p>[00:29:31] Around Apple's rules more or less. </p><p>[00:29:35] <strong>Paweł Madej (guest): </strong>Yeah. I remember the case with Facebook, as you said, maybe not with the app itself, but even if Facebook have been using not the </p><p>[00:29:46] <strong>Leo Dion (Host): </strong>enterprise certificates, is that what you're thinking? Yeah. </p><p>[00:29:50] <strong>Paweł Madej (guest): </strong>So. They were using the certificates to install the app on the devices.</p><p>[00:29:57] They are not allowed to install. Yeah. And Apple also have blocked whole Facebook and all of Facebook's devices that we're using. We've just a revocation of these enterprise certificates. So even it's such big company as Facebook, they are very strict with the rules. And I think. This consistency that every one have to use and keep up with the rules.</p><p>[00:30:27] Apple states from one perspective it's okay. But the Apple uses its guidelines as a guidelines and the, it is not, not everyone have to feel every guideline in the same manner I think, yeah this is not the very fine way from the Apple but we have to with that because companies have some better treating from Apple</p><p>[00:31:00] <strong>Leo Dion (Host): </strong>yeah, agreed. Agreed. And then before we covered the biggest, the elephant in the room, I wanted to cover the whole game streaming controversy. So there's this whole new technology where folks like Amazon, Google, Microsoft in particular have enabled. They're basically you can play games on various devices without actually having the console by basically streaming the video and streaming the input from your game controller to some server in the cloud, essentially.</p><p>[00:31:32] And then playing the video game that way. Google stadia. I forgot what the Amazon one was called. That just came out a few. Few weeks ago. </p><p>[00:31:39] <strong>Paweł Madej (guest): </strong>Yeah, I think the most, do you remember them? No, I'm sorry. I'm not a gamer. So </p><p>[00:31:45] <strong>Leo Dion (Host): </strong>I, but I know I'm not a gamer in those, those spheres, but the big one was obviously Microsoft X cloud and the controversy there.</p><p>[00:31:55] They wanted to put an app in the app store you so you can play any X-Box game you want in the cloud, on your iOS device, especially at on iPad. And basically Apple didn't allow it because of the way it sounds like it's partially the controversy of you can play any game. You want an Apple kind of wanted them to have like.</p><p>[00:32:15] A separate app for each game that would then use the service, which sounds like a mess. Both for usability and maintenance. Yeah. I dunno. What else did I miss? </p><p>[00:32:26] <strong>Paweł Madej (guest): </strong>Yeah, I think Apple is a word that with such solutions as game streaming, they are losing the power of control. Right. So content power of control is on the, provider of these streaming services then, and not the on Apple and Apple wants to keep the power on it's behalf so I think this is the main problem with this services.</p><p>[00:32:55] <strong>Leo Dion (Host): </strong>Yeah. And it's really unfortunate because you know, something like Netflix essentially does the same thing, but without interactive content, Netflix doesn't have to have a separate app icon for each show or movie. And it seems like the kind of, there's sort of a lack, there's a lack of foresight in how future technologies will affect how the iPhone is used.</p><p>[00:33:16] And I don't think when the app rules were first thought out of. Game stream, what was never thought of as an actual, like viable service on the iPhone. So like they don't have the ability to, to kind of. Take that on, in a way that's useful and fun and easy on developers to take care of it. Now it's kind of a mess, so to speak when it comes to having game streaming platforms on iOS.</p><p>[00:33:41] So now people just ended up having to use an Android tablet or an Android or a Chrome TV to do it, which is </p><p>[00:33:47] <strong>Paweł Madej (guest): </strong>unfortunate. I think. At some point, these guidelines will change because the market will be too big to lose the money from it. So I think I think that if Apple finds the way to make some profits from these streaming services and to force these providers, To give Apple money but some of the money they make from these services.</p><p>[00:34:16] And I think that then it will be possible to stream games on the iPhone or so I think the cash is all the things, </p><p>[00:34:27] <strong>Leo Dion (Host): </strong>so, yeah, I agree. And speaking of cash and gaming let's of course cover the biggest elephant in the room with Fortnite, Fortnite. I mean, they blatantly got, tried to get around the whole in-app purchase thing and that costs severely and they've kind of taken rather than acquiescing to Apple in many ways.</p><p>[00:34:49] They've just go ahead and now they're suing them and who knows how long that's going to take? </p><p>[00:34:54] <strong>Paweł Madej (guest): </strong>I have read that's the case on the cart is on May 21. So it's long before some judgment from these guys, but, and </p><p>[00:35:09] <strong>Leo Dion (Host): </strong>there's been a lot of back and forth about like their unreal tournament engine and whether Fortnite has the right to post the app on the Mac, even outside of the app store, because there's certain certifications you need in order to get an app on a Mac.</p><p>[00:35:23] <strong>Paweł Madej (guest): </strong>I think that fortnight case is. They wanted to test how Apple is strict with the rules, the rules, were open that if you have some purchases in app, you have to use enough  from Apple. You cannot do any other tricks. There are many apps that you. By outside of the app for the content, but you cannot drive users to this place when you have to buy, if you can buy these services.</p><p>[00:35:58] So you can have to find the way on his behalf. Yeah. The fortnight tried to make it very straight without any... Without keeping any rules. So, so they say they forced to your side by side in-app purchases and they're on basket for buying things. So this was, I think the most important rule of the app store.</p><p>[00:36:28] Yeah, because that was broken by fortnight. So. As I see these guys as I in the dev with some in-app purchases , I'm a little person in the markets. Very little. Yeah. And I think that Paying these 15% of a provision to the Apple and having access to the worldwide market is fair. I think that's fair because if I didn't have access to the app store, I will not have access to users from around the world.</p><p>[00:37:09] <strong>Leo Dion (Host): </strong>Yeah, that's totally fair point. And so I think. Something I wanted to really get into is just what, what are some things folks should look out for when they even, I would even go so far as to say when they have an app idea. And I think we've kind of touched on a few of those, making sure you have the legal right to use the content in your app.</p><p>[00:37:28] I think that's a big part of it. If you're using copyrighted material, make sure you have documentation that you have. You know the right to do that otherwise, you know, I'll make sure it's creative comments. </p><p>[00:37:39] <strong>Paweł Madej (guest): </strong>Yeah. I think that this guy sees is very important because every app in app store is reviewer very many ways.</p><p>[00:37:51] So, this is not only how the app works, because it should not crash for example, on the start, because it will be also rejected. Yeah. But what app does and if it's, for example, have some gambling in it. So I remember the case from, I think last year where some. Newspaper apps were rejected because Apple's site that they allow to open URLs from to the web pages, for example, from this newspaper.</p><p>[00:38:28] And they say that opening URLs allow you to go to the gambling sites. And the app was rejections for allowing gambling. So this was also the case, but, and it was rather quickly resolved, but also Apple's treat  some opening URL can be denied for the app. </p><p>[00:38:54] <strong>Leo Dion (Host): </strong>I think there's a really good article. I read recently by David Shayer on why Apple doesn't allow a third party watch faces and why we might not be ever getting third-party watch faces.</p><p>[00:39:05] There were obviously issues with battery life and buggy code and Apple's image and stuff. But the last reason I found really interesting and it pertains to our conversation here, but like the whole idea of copyright, it made me realize how important it is for Apple to make sure they don't. Do anything that crosses the line legally.</p><p>[00:39:26] And he talks about how like, Apple has been very painstakingly, like. Certain and careful about what they do with their own watch faces precisely because they don't want to mess with Apple legal. And I think it gives you some perspective about how Apple looks at even your apps in their app store and how you don't want to cross those paths</p><p>[00:39:48] <strong>Paweł Madej (guest): </strong>yeah. I think that's Apple with how it's big it's. Can be a target for suing it for many things. Yeah. So they and stood for big money, for example. Yeah. So they legal department keeps everything very strict because of that. I think that they do not want to have been sued because of some deaths issue or using by any dev illegal contents.</p><p>[00:40:24] So I think this is the thing why they are very strict with these, legal content issues. Yeah. </p><p>[00:40:31] <strong>Leo Dion (Host): </strong>Yeah. Agreed. And then the other thing you mentioned specifically with your app is taking shortcuts with third-party APIs, right? </p><p>[00:40:40] <strong>Paweł Madej (guest): </strong>That was also the case. And I think you kind of go the shortest way because even it's.</p><p>[00:40:48] May be convenient for you as a developer, because it's cheaper. It's easier to do, but even if at first it will go for the test flight review, I think day one, you want to release the app in app store. It will be rejected and you have to fix all those things before I they accept you. </p><p>[00:41:10] <strong>Leo Dion (Host): </strong>Yeah. Agreed.</p><p>[00:41:12] And then last that I think certainly not least is anything that kind of. Skirts or bends the rules when it comes to in-app purchases, whether that's trying to get around it, trying to sell something that just isn't. You know, according to Apple, following the guidelines, having any sort of browser view that kind of skirts in-app purchases.</p><p>[00:41:38] I think that that's something  just be careful of when you do it and make sure it follows the guidelines that Apple has available. </p><p>[00:41:44] <strong>Paweł Madej (guest): </strong>Yeah. And I think that maybe guidelines are not. Easy to understand in many points. Absolutely. Absolutely. Yeah. Even if you read word by word these guidelines, in many ways, you will find that it's hard to get the Apple's point, what they want you to do.</p><p>[00:42:07] And so I tried to talk with the reviewer, but on the review when you are, you will not get any tips what to do, because as they say to me on the review, they are describing or replying to features I have, but they will not tell you what feature you have to do. You should have to be accepted with for example, auto-renewable subscriptions.</p><p>[00:42:39] So I have to find it myself. What they will accept as this subscription. Yeah. So you can't, you can ask questions, but you probably won't have any answer that will help you at all. </p><p>[00:42:55] <strong>Leo Dion (Host): </strong>Yeah. I want to definitely state that, like the guy following the guidelines. Well, I'd say following the guidelines are easy and 80% of cases, it's those 20% where it's like becomes ambiguous and challenging.</p><p>[00:43:06] And I think a few tips is like one thing I've suggested to folks. Is putting your app in the app store, like do MVP in the app store to make sure that you, your MVP can be approved by Apple. What's the least amount of work. So you can just test and make sure that you're following guidelines. Before spending a lot of time building the most robust app you can possibly have and find out that the whole idea is against Apple's rules.</p><p>[00:43:33] That's something. To keep in mind. The other thing I was going to say is take advantage of the hours during WWDC I had a really great conversation with one of the folks at Apple about why I couldn't use. Imagery from Nintendo games in my watch app. For those of you who aren't familiar, heart Twitch, you can show off your heart rate when you're streaming.</p><p>[00:43:56] And I have video clips and screenshots of me playing like Mario kart, for instance, and showing my heart rate racing while I'm playing Mario kart. They didn't like that. The watch app store. And I had thought actually the reason being was that it wasn't actual watch app screenshots, but that it was.</p><p>[00:44:12] Screenshots of the TV. But in fact, the controversy was again, because I had screenshots from games of Nintendo that I didn't have the legal right to use. I would have never thought of that because it's an app store. So, you know, it was really good that I talked to somebody and got that guidance. </p><p>[00:44:28] <strong>Paweł Madej (guest): </strong>Yeah. I asked you site about screenshots.</p><p>[00:44:31] So. What about issue of friends of mine? When he has that used in screenshots, Apple Watch on device side by side with the iPhone and. At first, it was accepted. With this screenshots and after updates or reviewer denied these updates because it was showing the feature, Watch App that doesn't exist for this app.</p><p>[00:45:03] But the issue is that. One of your doesn't solve the problem or might be missed this screenshot. And for the next one, when update was released, this was the problem. And this friend had to remove the watch from screenshots and everything went fine and the app was approved. So we have to also have in mind what you show on the screenshots, because this could be also one of the, even if the app is okay, this is what you write in description.</p><p>[00:45:39] App description. What you show on the screen source also can be 0.4 for action. </p><p>[00:45:46] <strong>Leo Dion (Host): </strong>Yeah. Was there anything else we wanted to cover when it came to making sure you follow app store rules, as, as much as you can. </p><p>[00:45:55] <strong>Paweł Madej (guest): </strong>Well, I don't know what to say. </p><p>[00:45:58] <strong>Leo Dion (Host): </strong>I think that pretty much covers it as best as we can. It is definitely a challenge.</p><p>[00:46:05] And like I said, try to be flexible as far as features and also your release date. It is hard. I'm not going to tell anybody, especially for Indies and just, you know, You know, be careful what you put on the app store content that you have legally right to, and you're not trying to like skirt the laws. I have my own complaints about the app store most certainly.</p><p>[00:46:24] And I don't want to get into that in this episode, but I think like, I think we pretty much covered the basic guidelines and not trying to cheat Apple out of money. I think that's the overall one of the big rules I would say is be careful, be careful on that. </p><p>[00:46:40] <strong>Paweł Madej (guest): </strong>Yeah. I have released my first up.</p><p>[00:46:43] It was approved without any issues TestFlight went very fast and then the App Store review. Also, I was very stressed how it goes, because I didn't have this experience on releasing App and, but idea of it was very original. I think that. If you have the original idea, you do not copy the existing app one-to-one and that every feature you have in your app is the same exact copy of something.</p><p>[00:47:20] Other apps. We know all that. There are hundreds of notes up or some, a podcast app, and there are. Any app makes its own the room in app store. But if you have some original idea, you have to make sure it's worth my sending for the review and to make it available to app Store. These problems with review I think that every developer iOS developer will have.</p><p>[00:47:53] Some issues with apps to review at some point, maybe later on maybe a longer it will take for them. But finally, I think that Every idea is worth </p><p>[00:48:09] <strong>Leo Dion (Host): </strong>submitting. Yeah, I agree. And like I said, if you feel like, you know, like I did with heart Twitch, I wasn't certain that an app like that would make it into the app store.</p><p>[00:48:18] And before I thought it was completely, perfectly ready, I made sure it was approved. Before moving forward. Cause I wanted to make sure the concept was solid with Apple before, you know, spending a lot of time on an app like that. And yeah. So good luck to those out there. Big and small who are posting apps to the app store.</p><p>[00:48:36] You're going to get rejected at some point and it's okay if you do. </p><p>[00:48:41] <strong>Paweł Madej (guest): </strong>Yeah, I think it's for having this rejection is the iOS dev life, you get this rejection will better understand what they want. </p><p>[00:48:51] <strong>Leo Dion (Host): </strong>Yeah, I agree completely. Well, thank you so much for coming on the show. Where can folks find you online?</p><p>[00:48:59] <strong>Paweł Madej (guest): </strong>Well, I'm mostly on Twitter. You can find me there. </p><p>[00:49:06] <strong>Leo Dion (Host): </strong>The show notes. </p><p>[00:49:16] <strong>Paweł Madej (guest): </strong>You can find me on my sites. This is also my name and surname.com. Also in show notes. I'm also on github and I think it's replaces. You can find me, so my DMS are open.</p><p>[00:49:33] So if you want to get in touch, feel free every time. Well, thank </p><p>[00:49:38] <strong>Leo Dion (Host): </strong>you so much for coming on Paweł. People can find me on Twitter at Leo G Dion. My company is bright digit. Please take some time and go to Apple podcasts, Google podcasts, or Spotify, and give us a review. And if there's anything you want to talk about on the show.</p><p>[00:49:56] Or if you have any topic, ideas or feedback for me, please feel free to reach out to me on Twitter. My DMS are open as well. Also, you can email me leo@brightdigit.com. Thank you so much for joining us for this episode. And I look forward to speaking to thank you so </p><p>[00:50:12] <strong>Paweł Madej (guest): </strong>much.</p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sat, 07 Nov 2020 00:00:00 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/1decc81f/2b20bb50.mp3" length="24626925" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/393606/full_1604511329-artwork.jpg"/>
      <itunes:duration>3022</itunes:duration>
      <itunes:summary>In this episode, Leo chats with Paweł Madej, pharmacist turned iOS developer on his learning experience and what pitfalls devs should know about App Store reviews. We talk about what he learned during the submission process of his app CodeConf, as well as the major App Store stories of the year: Hey, Wordpress, xCloud and of course Fortnite. </itunes:summary>
      <itunes:subtitle>In this episode, Leo chats with Paweł Madej, pharmacist turned iOS developer on his learning experience and what pitfalls devs should know about App Store reviews. We talk about what he learned during the submission process of his app CodeConf, as well as</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Documenting Your Code with Bas Broek</title>
      <itunes:episode>67</itunes:episode>
      <itunes:title>Documenting Your Code with Bas Broek</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">9d151096-e764-4275-a37e-693bfc6c6ae7</guid>
      <link>https://share.transistor.fm/s/66f6958e</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="%20https://basthomas.github.io"><strong>Bas Broek</strong></a><ul>
<li>
<a href="https://github.com/BasThomas">GitHub @BasThomas</a> </li>
<li><a href="https://twitter.com/basthomas">Twitter @basthomas</a></li>
<li><a href="https://contravariance.rocks">Contravariance - a Podcast by Bas Broek and Benedikt Terhechte</a></li>
<li><a href="https://basthomas.github.io/goodbye-swift-weekly">Goodbye Swift Weekly by Bas Broek</a></li>
<li>
<a href="https://swiftweekly.com">Swift Weekly</a> maintained by Kristaps Grinbergs</li>
</ul>
</li></ul><p><a href="https://youtu.be/4T25oqyXBLw"><strong>YouTube Video - https://youtu.be/4T25oqyXBLw</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/fca974ca">Episode 48 - Alternative Backends with Kristaps Grinbergs</a></li>
<li><a href="https://contravariance.rocks/episodes/313_show_notes.html">Contravariance Episode 313 - Bas leaves XING</a></li>
<li><a href="https://contravariance.rocks/episodes/314_show_notes.html">Contravariance Episode 314 - iPhone 12 &amp; Apple Silicon</a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.youtube.com/watch?v=V9zmHUlPMfs">Writing better APIs - Bas Broek - Do iOS 2018</a></li>
<li><a href="https://github.com/leogdion/AWESOME-AWESOME-README">Leo's AWESOME AWESOME README Guide</a></li>
<li><a href="https://github.com/realm/jazzy">Jazzy by Realm</a></li>
<li><a href="https://github.com/eneko/SourceDocs">SourceDocs by Eneko Alonso</a></li>
<li><a href="https://kapeli.com/dash">Dash by Kapeli</a></li>
<li><a href="https://heathbrothers.com/books/made-to-stick/">Made to Stick by Chip Heath and Dan Heath</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance or indie apps like <a href="https://appfigures.com/resources/aso/aso-teardown-fotmob">Fotmob</a>.</li>
<li>
<a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">New competitor's report in the Appfigures dashboard</a> where you are able to view competitor downloads, build performance benchmarks, and see the new trends as they happen. <a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">Check it out here.</a>
</li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><br><a href="https://remote.nsspain.com/"><em>I will be speaking at </em><strong>NSSpain 2020...</strong></a><br>Nov 17 - 20, 2020</p><ul>
<li>One of the most known conferences about Apple platforms development is going remote this year! </li>
<li>NSSpain 2020 is an online, continuous 36 hours conference, carefully crafted by the community for the community.</li>
<li>Guests of the show Paul Hudson and Donny Wals will be speaking as well as others</li>
</ul><p>Go to <a href="https://remote.nsspain.com/"><strong>NSSpain.com</strong></a> and use promo code <em>empowerapps </em>to get 10% off</p><p><em>Also speaking at...</em></p><ul>
<li><a href="https://www.iosdevcampdc.com/"><strong>iOSDevCampDC 2020 - October 30</strong></a></li>
<li><a href="https://backtomac.org/"><strong>Back to the Mac - November 6 &amp; 7</strong></a></li>
</ul><p><b>Apple Event Stuff</b></p><ul>
<li>iPhone 12 Upgrades</li>
<li>Apple Watch Series 6</li>
<li>HomePod mini</li>
</ul><p><b>Documentation Challenges</b></p><ul>
<li>What are some challenges with documentation?</li>
<li>How to keep documentation updated</li>
<li>How to make documentation innovative and clear</li>
<li>Building documentation for open-source projects</li>
<li>Ways to consume documentation</li>
<li>Avoiding jargon in your documentation</li>
<li>How to be thorough</li>
</ul><p><b>Documentation Process and Tooling</b></p><ul>
<li>Automating documentation via CI</li>
<li>Keeping tests, docs, and code in sync</li>
<li>Jazzy vs SourceDocs</li>
<li>Testing Your documentation</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="%20https://basthomas.github.io"><strong>Bas Broek</strong></a><ul>
<li>
<a href="https://github.com/BasThomas">GitHub @BasThomas</a> </li>
<li><a href="https://twitter.com/basthomas">Twitter @basthomas</a></li>
<li><a href="https://contravariance.rocks">Contravariance - a Podcast by Bas Broek and Benedikt Terhechte</a></li>
<li><a href="https://basthomas.github.io/goodbye-swift-weekly">Goodbye Swift Weekly by Bas Broek</a></li>
<li>
<a href="https://swiftweekly.com">Swift Weekly</a> maintained by Kristaps Grinbergs</li>
</ul>
</li></ul><p><a href="https://youtu.be/4T25oqyXBLw"><strong>YouTube Video - https://youtu.be/4T25oqyXBLw</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/fca974ca">Episode 48 - Alternative Backends with Kristaps Grinbergs</a></li>
<li><a href="https://contravariance.rocks/episodes/313_show_notes.html">Contravariance Episode 313 - Bas leaves XING</a></li>
<li><a href="https://contravariance.rocks/episodes/314_show_notes.html">Contravariance Episode 314 - iPhone 12 &amp; Apple Silicon</a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.youtube.com/watch?v=V9zmHUlPMfs">Writing better APIs - Bas Broek - Do iOS 2018</a></li>
<li><a href="https://github.com/leogdion/AWESOME-AWESOME-README">Leo's AWESOME AWESOME README Guide</a></li>
<li><a href="https://github.com/realm/jazzy">Jazzy by Realm</a></li>
<li><a href="https://github.com/eneko/SourceDocs">SourceDocs by Eneko Alonso</a></li>
<li><a href="https://kapeli.com/dash">Dash by Kapeli</a></li>
<li><a href="https://heathbrothers.com/books/made-to-stick/">Made to Stick by Chip Heath and Dan Heath</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance or indie apps like <a href="https://appfigures.com/resources/aso/aso-teardown-fotmob">Fotmob</a>.</li>
<li>
<a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">New competitor's report in the Appfigures dashboard</a> where you are able to view competitor downloads, build performance benchmarks, and see the new trends as they happen. <a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">Check it out here.</a>
</li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><br><a href="https://remote.nsspain.com/"><em>I will be speaking at </em><strong>NSSpain 2020...</strong></a><br>Nov 17 - 20, 2020</p><ul>
<li>One of the most known conferences about Apple platforms development is going remote this year! </li>
<li>NSSpain 2020 is an online, continuous 36 hours conference, carefully crafted by the community for the community.</li>
<li>Guests of the show Paul Hudson and Donny Wals will be speaking as well as others</li>
</ul><p>Go to <a href="https://remote.nsspain.com/"><strong>NSSpain.com</strong></a> and use promo code <em>empowerapps </em>to get 10% off</p><p><em>Also speaking at...</em></p><ul>
<li><a href="https://www.iosdevcampdc.com/"><strong>iOSDevCampDC 2020 - October 30</strong></a></li>
<li><a href="https://backtomac.org/"><strong>Back to the Mac - November 6 &amp; 7</strong></a></li>
</ul><p><b>Apple Event Stuff</b></p><ul>
<li>iPhone 12 Upgrades</li>
<li>Apple Watch Series 6</li>
<li>HomePod mini</li>
</ul><p><b>Documentation Challenges</b></p><ul>
<li>What are some challenges with documentation?</li>
<li>How to keep documentation updated</li>
<li>How to make documentation innovative and clear</li>
<li>Building documentation for open-source projects</li>
<li>Ways to consume documentation</li>
<li>Avoiding jargon in your documentation</li>
<li>How to be thorough</li>
</ul><p><b>Documentation Process and Tooling</b></p><ul>
<li>Automating documentation via CI</li>
<li>Keeping tests, docs, and code in sync</li>
<li>Jazzy vs SourceDocs</li>
<li>Testing Your documentation</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sat, 24 Oct 2020 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/66f6958e/598c54ea.mp3" length="20842660" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/382673/full_1603484680-artwork.jpg"/>
      <itunes:duration>2541</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Bas Broek of Contravariance about documentation, how to present it, what tools are out there and more... oh yeah something about the iPhone 12 too</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Bas Broek of Contravariance about documentation, how to present it, what tools are out there and more... oh yeah something about the iPhone 12 too</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>UI Design for Developers with Heidi Helen Pilypas</title>
      <itunes:episode>66</itunes:episode>
      <itunes:title>UI Design for Developers with Heidi Helen Pilypas</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">26d19958-b108-4b44-866d-0c14df724dcf</guid>
      <link>https://share.transistor.fm/s/35474f21</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://heidihelen.com"><strong>Heidi Helen Pilypas (web site)</strong></a><ul><li><a href="https://twitter.com/heidi_helen">Twitter @heidi_helen</a></li></ul>
</li></ul><p><a href="https://youtu.be/NTvljGAha_E"><strong>YouTube Video - https://youtu.be/NTvljGAha_E</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/21517a94"><strong>Episode 63</strong> - <strong>Apple Watch 2020 with Steve Lipton</strong></a></li>
<li><a href="https://share.transistor.fm/s/dfb18c54"><strong>Episode 57 -</strong> <strong>SwiftUI with Majid Jabrayilov - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/87165d83"><strong>Episode 35</strong> - <strong>SwiftUI - The Good, the Bad, and the Benefits</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li>
<strong>Apps designed by Heidi</strong><ul>
<li>
<a href="https://capsicum.app"><strong>Capsicum</strong></a> </li>
<li><a href="https://apps.apple.com/us/app/when-did-i/id1463692593?ls=1"><strong>When Did I...?</strong></a></li>
<li><a href="https://apps.apple.com/us/app/boomerang-double-check-translations/id1233994763?ls=1"><strong>Boomerang</strong></a></li>
</ul>
</li>
<li>
<strong>Guides</strong><ul>
<li>
<a href="https://developer.apple.com/design/human-interface-guidelines/"><strong>Guidelines for Designing for iOS from Apple </strong></a><strong>with Sketch and PS Templates</strong>
</li>
<li><a href="https://material.io/design"><strong>Material Design from Google</strong></a></li>
</ul>
</li>
<li>
<strong>What has Changed in iOS</strong><ul>
<li><a href="https://developer.apple.com/design/human-interface-guidelines/ios/system-capabilities/widgets/">Widgets</a></li>
<li><a href="https://developer.apple.com/design/human-interface-guidelines/sf-symbols/overview/">SF Symbols</a></li>
<li>
<a href="https://developer.apple.com/design/human-interface-guidelines/ios/bars/sidebars/">Sidebars</a> </li>
<li>
<a href="https://developer.apple.com/design/human-interface-guidelines/ios/controls/pickers/">Pickers</a> </li>
<li><a href="https://developer.apple.com/design/human-interface-guidelines/ios/controls/color-wells/">Color Wells</a></li>
<li><a href="https://developer.apple.com/design/human-interface-guidelines/ios/controls/pull-down-menus/">Menus</a></li>
</ul>
</li>
<li>
<strong>Tools for Developers to Get Better at Design</strong><ul>
<li><a href="https://designcode.io">Design+Code</a></li>
<li>
<a href="https://refactoringui.com">Refactoring UI</a> </li>
<li><a href="https://zeplin.io"><strong>Zeplin</strong></a></li>
</ul>
</li>
<li><a href="https://www.hackingwithswift.com/100/swiftui">100 Days of SwiftUI</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance or indie apps like <a href="https://appfigures.com/resources/aso/aso-teardown-fotmob">Fotmob</a>.</li>
<li>
<a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">New competitor's report in the Appfigures dashboard</a> where you are able to view competitor downloads, build performance benchmarks, and see the new trends as they happen. <a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">Check it out here.</a>
</li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><br><a href="https://remote.nsspain.com/"><em>I will be speaking at </em><strong>NSSpain 2020...</strong></a><br>Nov 17 - 20, 2020</p><ul>
<li>One of the most known conferences about Apple platforms development is going remote this year! </li>
<li>NSSpain 2020 is an online, continuous 36 hours conference, carefully crafted by the community for the community.</li>
<li>Guests of the show Paul Hudson and Donny Wals will be speaking as well as others</li>
</ul><p>Go to <a href="https://remote.nsspain.com/"><strong>NSSpain.com</strong></a> and use promo code <em>empowerapps </em>to get 10% off</p><p><em>Also speaking at...</em></p><ul>
<li><a href="%20https://www.iosdevcampdc.com"><strong>iOSDevCampDC 2020 - October 30</strong></a></li>
<li><a href="https://backtomac.org"><strong>Back to the Mac - November 6 &amp; 7</strong></a></li>
</ul><p><b>UI Design</b></p><ul>
<li>What has changed in iOS Design?</li>
<li>What's the difference between skeuomorphic vs flat?</li>
<li>Differences with Android and material design</li>
<li>Differences between web design</li>
<li>What's changed in iOS 14 design?</li>
<li>Differences on the iPad</li>
<li>How to design for Widgets</li>
</ul><p><b>Design and Developer Teams</b></p><ul>
<li>How developers should communicate with designers?</li>
<li>Best Tools for Getting Started</li>
<li>Best Guides and Courses for Getting Started</li>
<li>Common Mistakes</li>
<li>Pattern Libraries and Design Systems</li>
<li>Impact of SwiftUI</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><b>Transcription</b></p><p><strong>Leo Dion (Host): </strong>Welcome to another episode of empower apps. I'm your host. Leo Dion with us today is Heidi Helen. Hey, Heidi, how's it going? Hey, not too bad. So glad to have you on. We've had a lot of requests for having someone who can talk about UI design, because a lot of developers have a hard time. With UI design and designing their iOS app, or just talking to a designer.</p><p>[00:00:29] And so I'm really glad to have you on, I've looked at a lot of your work especially, Capsicum and some of the other stuff that you've done. Just awesome. Awesome stuff. I'm really excited to have you on today. </p><p>[00:00:43] <strong>Heidi Helen Pilypas (guest): </strong>Oh, thank you very much for having me. And I hope that I can describe UI design in a way that does it justice.</p><p>[00:00:51] <strong>Leo Dion (Host): </strong>And through a podcast without the, without the, the easiness of visuals. So go ahead for those who might not know who you are, I'll let you go ahead and introduce yourself. </p><p>[00:01:04] <strong>Heidi Helen Pilypas (guest): </strong>Sure. Thanks. So my name is Heidi Helen Pilypas. I live in Adelaide, South Australia. I work on a couple of apps as a designer, so.</p><p>[00:01:18] My main apps are Capsicum. And when did I, Capsicum is an app for planning your day tracking habits and telling your story when inspired by beautiful paper planners. And then when did I is an app for. Tracking when you do things like anything you want, really, it could be making a bed, it could be brushing your teeth.</p><p>[00:01:42] It could be flossing. It could be changing the oil in your car, or even when you took your medication. </p><p>[00:01:48] <strong>Leo Dion (Host): </strong>That's awesome. How long have you been working on those apps? </p><p>[00:01:52] <strong>Heidi Helen Pilypas (guest): </strong>I've been working on apps for a couple of years now. I first started in 2011 when I. Got my first iPhone in a very mod way, I should say. Cause what, what happened was I was just in love with all of the apps and I was artistic myself.</p><p>[00:02:14] I went to university and studied a bachelor of visual arts and I always love drawing and painting as a kid. And I eventually like got more into design. So when I saw apps. I really wanted to get one of every area of my life, including logging my dreams. And there was an app called dream journal and I downloaded it and I noticed a few little things that can use improvement.</p><p>[00:02:43] And the app had an area for you to write a support request to the developer. So I sent off an email with. A PDF document that I made, where I had screenshots and I had areas and notes about things that could use improving. And I was like, so excited about sending this email. Like I just thought, like I was really passionate about it and that would be really useful.</p><p>[00:03:08] However, it can also be confronting to someone to get told there's all these issues. This is what's wrong with it. And to my surprise, like I got a positive response actually. And. The developer thanked me and that developer was Ishmael shahbaz who I work with today on our, on our apps, including Capsicum and a couple of others.</p><p>[00:03:31] And yeah, over the years, we, we eventually built up to larger projects. It started with me helping him with a few design elements for one of his apps. And then it grew to more. I learned all about iOS app design through him, coaching and mentoring me. That's </p><p>[00:03:52] <strong>Leo Dion (Host): </strong>awesome. My so I got my bachelor's in computer science and I've always had like a, I wouldn't say a passion, but a desire to get better at UI design.</p><p>[00:04:03] I ended up getting a graduate degree in digital media and art technology. Cause I was just so interested in UI and I feel like in the last. 15 years. My UI design skills have definitely like atrophied. So it's something I'm really interested in. So. Excited to have, have you on, you've been doing this for quite a while.</p><p>[00:04:23] It sounds like. What do you think has really changed when it comes to like UI design for the iPhone? </p><p>[00:04:29] <strong>Heidi Helen Pilypas (guest): </strong>Let me see. A lot of things change over time with design patterns. So when I first got my iPhone flat design, wasn't so much of a thing. It was heavily skeuomorphic. Things were very much influenced by the real world around us.</p><p>[00:04:50] So you had actual textures in the notes app for instance of paper, texture, and stitching in the nav bar. And. Then with iOS 7 things changed, things became more flat. And I actually really liked that. I actually really jumped on that. And I, when I looked at the old designs, I started thinking they were really outdated and like, Really thinking flat is the way in flat is the answer.</p><p>[00:05:21] Yes. </p><p>[00:05:21] <strong>Leo Dion (Host): </strong>Yeah. I really, I agree. I like the flat design I've seen this recently. I've switched over to big Sur and you've kind of seen that as well with big Sur, like that kind of design update where everything is flat. </p><p>[00:05:35] <strong>Heidi Helen Pilypas (guest): </strong>Yeah. So eventually though, over time, I've actually come to appreciate like both.</p><p>[00:05:42] Skeuomorphism and flat. And I really like marrying the two together to get something that is the best of both worlds. </p><p>[00:05:51] <strong>Leo Dion (Host): </strong>What's a good example of an app that you think does that </p><p>[00:05:55] <strong>Heidi Helen Pilypas (guest): </strong>we try and do in Capsicum actually, because we want it to remind people of. Like paper notebooks, but we also want it to be a digital experience that has the versitilty of what you can do on a phone and an iPad.</p><p>[00:06:18]<strong>AppFigures Sponsorship Start<br></strong><br></p><p>[00:06:18] <strong>Leo Dion (Host): </strong>So here's the thing you're probably thinking to yourself. I want a build a brand new app, or maybe you already have an app in the app store. I think now is probably the time you're going to want to really optimize that app in the app store. And what I mean by that, make it easy for people to find it and for people to download it.</p><p>[00:06:39] It's one thing that you can build this great app for the iPhone 12 or iOS 14, or watchOS 7. It's another thing. Being able to help folks who have their brand new iPhone or their hand me down, being able to find all these new apps. And this is where at figures really comes in. There give you everything.</p><p>[00:06:58] You need to do this all in one place. So if you have a really good idea or an app idea, and you want to see how many people are searching for that, AppFigures is going to be your spot. If you already have an app in the app store, and you want to see what words you need to use or what terms you need to use so that people can find you easily AppFigures is for you.</p><p>[00:07:19] And it's really easy. All you have to do is use our promo code and power 30, 30 to get 30% off for the next three months. That's it. That's on asking a lot in AppFigures they don't just have this really great universal analytics dashboard. They also provide a lot of other great app store tools for optimization.</p><p>[00:07:38] And that's really the name of the game. That's going to improve your visibility and that's going to help you find more users and figures has more than a decade of providing mobile analytics and insights. And they also have this new tool called the competitor intelligence. Dashboard. And that allows you to track competitor downloads and understand what strategies you're gonna use so that you can grow your bottom line.</p><p>[00:08:03] That's the thing. You can have a great idea. You can get users. Maybe by personally reaching out to them. But if you can improve your visibility on the app store, that's really the name of the game. So go ahead, head over to app figures.com to try app figures for free. If you like it, both the new and existing customers can use the special code, empower 30, 30 to get 30% off for the next three months.</p><p>[00:08:27] So go ahead, give it a shot and let me know what you think. And if you need any help, try out some of those new app tear downs that Ariel has been doing. They've been fantastic and they've been really providing a lot of help to me. And I think to a lot of folks to what they need to do to get their app store apps up and working.</p><p>[00:08:45] So go ahead and try it out with the empower 30, 30, you get 30% off for the next three months, or try the link in the show notes below. Thank you AppFigures for sponsoring our show.</p><p>[00:09:02]<strong>AppFigures Sponsorship End<br></strong><br></p><p>[00:09:02] So it sounds like you communicate with Ish quite a bit. What have you found really works with, you know, your two person team, but would work with any other team when it comes to like. Being able to design an app and communicate clearly for the both of you </p><p>[00:09:20] <strong>Heidi Helen Pilypas (guest): </strong>communication starts with mutual respect. For one another, understanding you both have different skills to bring to the table with ish.</p><p>[00:09:32] He knows all about coding and development. I don't often understand a lot of the constraints, so it's really helpful for me to listen when he gives me feedback on things that I don't know like I sometimes design things that don't actually, I sometimes design things that might not actually work with the constraints of iOS.</p><p>[00:09:58] So he's able to tell me, and I'm able to adapt. </p><p>[00:10:02] <strong>Leo Dion (Host): </strong>Can you give an example of something like that? Cause like what I run into, when I talk to designers, they're more acquainted with like, for instance, Android and they'll design it because that's what they're more acquainted to. And then it's like, yeah, well we don't have a back button on our phones in iOS or like, that seems to me, like the biggest hurdle with designers is like, or, or they just design an app universally.</p><p>[00:10:28] Right. And then they don't realize that different operating systems have different patterns. Sure. </p><p>[00:10:34] <strong>Heidi Helen Pilypas (guest): </strong>That's exactly right. Different operating systems have different guidelines about what fits into them. I have briefly studied material design, which is developed by Google and that is a pattern or a system that's.</p><p>[00:10:53] Heavily used with Android apps. However, it can also be used on the web and an iOS app, </p><p>[00:10:59] <strong>Leo Dion (Host): </strong>right. Especially like Google apps use </p><p>[00:11:00] <strong>Heidi Helen Pilypas (guest): </strong>that. But then iOS has their own components, things that are completely different. Like when I studied material design, for instance, it had a floating action button as part of the operating system, but that's not something that.</p><p>[00:11:20] That's not something that comes with iOS. So you have to do things in different ways that respect the platforms. Like there's more than one way of presenting information to people. There's like, like you could do a menu or you could do like a modal view or you could, you can actually have different navigation and buttons and things.</p><p>[00:11:42] So it really, it really depends on. The platform you're designing for. It's useful to familiarize yourself with the guidelines. So Apple has their human interface guidelines on their developer website. They have guidelines for iOS, macOS, watchOS, and TVs T V O S. And they update it every year as operating system evolves.</p><p>[00:12:11] So. I, I read that to find out what is new. And I, I read it when I first started so that I got a good idea of what iOS supports. </p><p>[00:12:24] <strong>Leo Dion (Host): </strong>What have you seen anything new as far as like iOS 14 this year? That's changed in the guidelines. Yeah. There's </p><p>[00:12:30] <strong>Heidi Helen Pilypas (guest): </strong>quite a lot of new things. One thing that many people are excited about is widgets on the home screen.</p><p>[00:12:37] <strong>Leo Dion (Host): </strong>Yeah. Yeah. Ask David Smith that </p><p>[00:12:41] <strong>Heidi Helen Pilypas (guest): </strong>David Smith actually has changed the landscape in a lot of ways with how people use their phones. </p><p>[00:12:48] <strong>Leo Dion (Host): </strong>I find it interesting how, like one of the big features, I think people are attracted by is like the customization I was listening to the latest ATP. And they were just talking about how like, Apple is very much, like you said, they have certain guidelines and they like try to keep it fairly strict, but people like really want to customize their home screen to the like.</p><p>[00:13:08] To the nth degree, even if it might look hideous to other folks, and like, you've seen this with like widgets, you can customize colors and fonts. I know David added that recently. And then like the big thing I've heard is, I don't know if you've heard about this, but like custom icons where people hack shortcuts to use custom icons so that it can like really customize their home screen as much as they want.</p><p>[00:13:33] And I find that really interesting, especially with like UI design, because we tend to be like, this looks pretty, this doesn't. And we try to like give people guidelines, but people want to like personalize. They want to personalize to the nth degree as much as they can. </p><p>[00:13:46] <strong>Heidi Helen Pilypas (guest): </strong>Exactly. And I think that's great as an option for users to have to make something more of their own.</p><p>[00:13:53] <strong>Leo Dion (Host): </strong>Have you done anything on the watch? I </p><p>[00:13:56] <strong>Heidi Helen Pilypas (guest): </strong>have looked into the watch before for projects that I've worked on. I'm not in great debt, </p><p>[00:14:04] <strong>Leo Dion (Host): </strong>but you have done iPad. Correct. What is like the big differences you've seen with doing UI design on the phone versus the iPad? </p><p>[00:14:14] <strong>Heidi Helen Pilypas (guest): </strong>Well, the iPad has much more real estate recently in iOS 14.</p><p>[00:14:21] Apple also announced that you can have multiple column formats. With the split view previously could have liked to, but now it can have more than that. And now I've had design can also be heavily sidebar based so you can navigate your app using the sidebar, like maybe instead of using a tab bar, for instance, you can put navigation elements in there.</p><p>[00:14:52] And then on an iPhone, you would have those in a tab bar, cause you don't have room for a sidebar. So you would have. A slightly different presentation of your app, depending on what screen you're using. </p><p>[00:15:07] <strong>Leo Dion (Host): </strong>So it sounds to me like screen sizes are our big deal. As far as like designing, like one thing I love to use on my iPad is like split screen to where I'll have something on one side and something on the other.</p><p>[00:15:20] And by the time we release this episode, we'll have. Probably new iPhones out the iPhone 12 with its new screen sizes. So what are some tips or things that you've dealt with when you're talking with Ish, especially when it comes to designing an app so that it can adapt to, you know, the new screen sizes that we have with the new iPhones or cars.</p><p>[00:15:45] Like they seem to be changing every year pretty much. What have you found is like really helpful for, for your communication with your developers in order to make sure that your designs are like adaptable or responsive? </p><p>[00:15:58] <strong>Heidi Helen Pilypas (guest): </strong>Well, I usually mock things up in multiple sizes. I, I usually pick a standard iPhone size and mock up something on there and also.</p><p>[00:16:12] A standard, iPad size. However, there are variations with many different sizes. I leave, I leave a lot of the rescaling up to ish to do because I don't, I don't fully understand it all. I try and work the best with guidelines that I read examples. I see. And I use. Also a third party library from Apple in sketch that has all of that.</p><p>[00:16:45] User interface components. </p><p>[00:16:47] <strong>Leo Dion (Host): </strong>Oh yeah. I know you mean, so like where you can go, like people have like, like usually like a dribble site or what's the other big UI design resource where you can pretty much Oh yeah. Apple has that too. Well, we'll put a link to that where you can pretty much like they have the Photoshop version and then the sketch version where you can like use the drag little widgets in your program, your good graphic design program.</p><p>[00:17:10] Is that what you're talking about? </p><p>[00:17:13] <strong>Heidi Helen Pilypas (guest): </strong>Okay. It's like a pattern library. You can download it for your user interface, design tool of choice. So I use sketch. They do have, they do have a Figma version now I think, and Photoshop as well. And even keynote, a lot of people are Apple design in Keynote. I've heard.</p><p>[00:17:39] <strong>Leo Dion (Host): </strong>Nice. What are some like good tools for, for a developer to get started with like designing their app? Like, for me, I used to be much more into like, Just opening up X code and dragging things into the storyboard and see how they look or, you know, now I guess it'd be more like writing the Swift UI code in order to design my app because I find it to be more consistent with how I actually look.</p><p>[00:18:08] But then like there's obviously benefits to pulling up a graphics program and doing what you're doing with catch what, like, what are some ways that I can really. Pick up more UI design skills and better design my apps </p><p>[00:18:23] <strong>Heidi Helen Pilypas (guest): </strong>sure. Sorry. Some, some good examples. Of tools I used when I was learning design design plus code, which has several courses, including how to use sketch, but it also has UI design for developers.</p><p>[00:18:41] I did a course on learning iOS design from it, which helped me get started. And it was kind of like the missing manual I needed because even though I read the human interface guidelines from Apple, I still wasn't always fully sure where to start and even like what font sizes to pick and stuff. So it really, it really helped me to get more of an idea.</p><p>[00:19:08] That's right. He founded it. He's got </p><p>[00:19:10] <strong>Leo Dion (Host): </strong>a lot of stuff. </p><p>[00:19:12] <strong>Heidi Helen Pilypas (guest): </strong>Exactly. And then there's. Another thing I came across, which is refactoring UI. It's a book written from a developer's perspective who over learnt tips and tricks from his designer. So that's worth checking out as well. I'll tell you a little bit about my process though.</p><p>[00:19:31] So when I am working on designing an app, I think about features that the user wants and that will help them. Solve their problem. So Capsicum, which I'm working on right now, a major redesign, actually, we already have a lot of features in there and I'm just, I'm trying to make it a lot better at the moment, using both what's new in iOS in terms of design, but also.</p><p>[00:20:03] Improving it based on feedback and my personal preferences, even of what is better. So what I do is I first actually draw something. I use linear sketch on my iPad to do that. However, you could also just use a piece of paper and I actually draw like a rectangle of the screen. And then I start trying to figure out what I want to happen on there.</p><p>[00:20:31] So. I'll draw all the elements and put all of the information that I want to go on there. And while I'm drawing it, I can like it. It's coming to my mind what I'm going to need to use. And I find that better than like just starting. In software, because that can involve a lot of trial and error and even creating things from scratch, which is quite timely.</p><p>[00:20:57] So if you just draw it first, you kind of get a better idea before you go and create it in your graphic program or even in code. </p><p>[00:21:07] <strong>Leo Dion (Host): </strong>That sounds really cool. I want to try that, that app out. What was it called again? </p><p>[00:21:11] <strong>Heidi Helen Pilypas (guest): </strong>Linear Sketch by icon factory. </p><p>[00:21:15] <strong>Leo Dion (Host): </strong>Is it compatible with the Apple pencil? </p><p>[00:21:17] <strong>Heidi Helen Pilypas (guest): </strong>Yes, it is. This is one thing I love about it.</p><p>[00:21:20] <strong>Leo Dion (Host): </strong>I was going to say I want to use my pencil a lot more so. And yeah, I, I'm always looking for a way to like, use the iPad more for, for sketching and things like that. So that sounds awesome. So we did briefly touch on widgets and what they've brought to iOS 14. Have you done any work with widgets?</p><p>[00:21:41] Yep. </p><p>[00:21:41] <strong>Heidi Helen Pilypas (guest): </strong>I'm currently working on something, although I'm not ready to share the details just yet. </p><p>[00:21:47] <strong>Leo Dion (Host): </strong>If you can. What have you found are like some of the big challenges or guidelines that you've started to follow when it comes to building widgets? </p><p>[00:21:56] <strong>Heidi Helen Pilypas (guest): </strong>I would say about widgets that it's about focusing one idea.</p><p>[00:22:01] So there's. There's lots of things in an app. There's lots of features and you don't want to cram too much into a widget. You can actually have multiple widgets for one app. So, yeah. Focus on one idea and. Make it easy and glanceable so that people can find out information really quickly when they look at it, you don't want it to be too dense or crowded.</p><p>[00:22:34]<strong>Speaker Schedule Start<br></strong><br></p><p>[00:22:34] <strong>Leo Dion (Host): </strong>Hey folks, I wanted to take the opportunity to let you know about my public speaking schedule. I'll be speaking at three conferences over the next. Two months. By the time you hear this, I will have a couple of videos out with the online conference, back to Mac. It's basically a YouTube playlist of videos from a lot of great folks in the Swift developer community.</p><p>[00:22:56] We also have the iOS dev camp DC, which will be on October 30th as well. I'll be speaking there. And then last but not least is NS Spain, which is an awesome conference. That's been going on every year. As with 2020, this is, of course it will be a remote conference. So you can save some money and not have to fly to Spain this year.</p><p>[00:23:18] But NSSpain is one of the most known conferences about Apple platforms and it's going to be a continuous 36 hour conference, which sounds awesome. I will be speaking on 50 packages, dependency management of the future. And as you probably know, I use Swift packages quite a bit. So I'm really excited to speak on this topic.</p><p>[00:23:42] There's a list of other great speakers that you'll want to check out as well. If you are interested in attending and seeing some of the great conferences, you can check out  NSSpain.com but you can also use the promo code EmpowerApps to get 10% off. So you have no reason not to attend this fantastic conference again, that promo code is empower apps, E M P O w E R a P P S.</p><p>[00:24:10] And get 10% off your ticket to NS Spain this year. So definitely check that out. Thank you so much for listening to the show, the list of conferences and the promo code for NSSpain will be in the show notes for this episode. And I look forward to seeing you remotely at these conferences this year. Thank you again,</p><p>[00:24:33]<strong>Speaker Schedule End<br></strong><br></p><p>[00:24:33] it sounds a lot like watch complications in a lot of ways, like from what I've heard from people who do watch complications, like essentially is moving. It's it's doing the same thing except on the iPhone home screen. And like, I like you use the term glanceable cause that's exactly what it is. It's like, I just want to get all the information I need quickly by just looking at my home phone screen.</p><p>[00:24:55] <strong>Heidi Helen Pilypas (guest): </strong>Exactly I will say like with watches, like I find like all the little apps, like you still have to open them to get lots of information, but I find that. Widgets on the home screen are a lot more easy to look at on the iPhone. </p><p>[00:25:14] <strong>Leo Dion (Host): </strong>Right. I agree because like the weather on the watch or temperature, for instance, it'll only tell me the temperature right now, but I'm actually more interested in the forecast.</p><p>[00:25:23] Whereas the weather widget on the phone, like actually give me like a graph to see, Oh, Hey, this is sweater. This is sweater, weather, this isn't shorts weather, which is what would I really care about when I'm looking at the weather? So, yeah. That's really interesting. Have you worked with any apps that had a web interface or an Android interface and you had to like deal with the hurdle of having to communicate the differences with iOS versus.</p><p>[00:25:56] The web or versus Android, we kind of touched briefly on Android, I guess, but like, as far as like, how would you explain to somebody what the big differences with iPhone apps designing those as opposed to designing a webpage? </p><p>[00:26:11] <strong>Heidi Helen Pilypas (guest): </strong>I have worked with one Android app actually was the first thing I started with, with my designing UI journey.</p><p>[00:26:22] Even though I don't own an Android phone. So that was a bit challenging. Like I have an iPhone, I read the guidelines from Google's material design, which helped me get a big understanding about what's available in the operating system. I think. It is important to know. There are differences between Android and iOS and web.</p><p>[00:26:47] Like you can't just take a website and have it look exactly the same on the iPhone or exactly the same on an Android phone. You have to consider, you have to consider what the differences are and what is the best experience for the user of that device. Yeah, </p><p>[00:27:07] <strong>Leo Dion (Host): </strong>it seems like a lot of companies and businesses, they just want to take the shortcut and we constantly get this question about like cross-platform tools.</p><p>[00:27:17] Like I just want to build it once and have it use everywhere. And I mean, it's okay when you're first starting off, I think, but like, if you really want a good looking app, Building it natively and designing it for that native interface is always like the best guideline to follow in the long run. It seems like, you know, even on the desktop, you see this with Slack, for instance, where it's like, it's all built in electron and it looks the same, but it has its own little quirks and ways of doing things like that could be a headache, honestly, for, for some Mac users.</p><p>[00:27:53] <strong>Heidi Helen Pilypas (guest): </strong>You want to do things that the user of that operating system is familiar with. You don't want to make people have to relearn how to interact with everything. So iOS has navigation bars and tab bars and tool bars you don't want to suddenly redesign the whole way that is done in a way that isn't familiar to people.</p><p>[00:28:18] <strong>Leo Dion (Host): </strong>Ironically, like on the desktop, I'm a cheapskate. And I use gimp and Inkscape for like graphic design right now, but I'm, I'm willing to spend some money, but I haven't found the ideal desktop app yet. And like those apps, like they use some cross-platform stuff. It is a mess to like, like half of the keyboard shortcuts work or they work differently and they're all built on this, like cross-platform layer and yeah, they're graphic design apps, but they're, I know why people spend money on graphic design apps because these ones are just like, The interface is totally not matching with the pattern that you would expect on that less.</p><p>[00:28:57] So, yeah, I need to, I, I need to spend some money on sketch or something cause yeah. It's it's okay. It works. Okay. But I could use a better app. </p><p>[00:29:06] <strong>Heidi Helen Pilypas (guest): </strong>I definitely highly recommend sketch. I've been using it for several years. </p><p>[00:29:11] <strong>Leo Dion (Host): </strong>It seems like that's been the most popular one. What are some other mistakes that you've seen teams make, or maybe you've made mistakes that you've made that you wish you knew about earlier when it came to like building an app with when, when I'm talking about is like, when you've tried to like communicate different ideas or built concepts between you and whoever you're working with on an iOS app, </p><p>[00:29:37] <strong>Heidi Helen Pilypas (guest): </strong>one mistake is a lack of communication.</p><p>[00:29:40] And an example of that is. Just say I mock up a design that I would like implemented. And then when I get a beta to test the app, I find things I completely different, not how I like laid it out or not using the specs that I specified. And what would help with that is for the developer to say the design of.</p><p>[00:30:12] For instance, something like, I wasn't able to do this because of platform constraints or I'm not finished yet. I'm still, I'm still going with implementing this or even just consulting the designer before doing certain things. So they. Know what you're doing and don't freak out when it's changed. </p><p>[00:30:36] <strong>Leo Dion (Host): </strong>I think another thing is communicating with the designer.</p><p>[00:30:40] Not necessarily just that it won't work, but sometimes yeah. Communicating with them that something is very customized or like that's not the default behavior. It's going to take X hours for me to develop this specific thing. Because I think to a lot of designers, they don't realize like what exactly is built in and baked into iOS and what is like really customized that they may have seen in a really like, Popular or well-designed app.</p><p>[00:31:09] Right. You know, for instance, like you said, with, with the with the action button, right. That material design has like, it's going to take a lot of work or you're going to have to import some third-party library and it's, it's going to be a headache to maintain and I think it's helpful that those considerations are communicated with the designer.</p><p>[00:31:28] <strong>Heidi Helen Pilypas (guest): </strong>Yeah. It's very easy as a new designer to not necessarily respect the platforms, guidelines. Or not know what will and won't work, but over time you actually do learn and do come become more familiar with it. And a developer and designer can both help each other by communicating that, like what works well from the platform.</p><p>[00:31:55] But even if you do know the rules or guidelines, it is good to know. When maybe you can break them is first of all, good to understand them. But at times you can break them, you can actually do something custom. And that comes back to your goals as well. What you're trying to achieve, like maybe you really want to delight users and blow them away with a really unique experience.</p><p>[00:32:22] Maybe you want to remind them, like we do in Capsicum of a paper notebook. However, even when I say that, like, There's certain things that when it comes to digital that are different from real life and are hard to convey. And it is okay to have controls that don't remind people of paper as well. Like you just have to know what your goals are and what you're able to achieve with what the constraints are as well.</p><p>[00:32:54] <strong>Leo Dion (Host): </strong>One issue that I think designers can run into is designing everything like as customized as possible, but not designing it in a consistent way. And I've seen this idea in, from web design folks about like atomic web design. I don't know if you've heard of it, but the idea of where like, You design it like a bullet or a button or a radio button or a checkbox and as add-on essentially.</p><p>[00:33:20] And then you build molecules, which is like a whole like list or checkbox list. And then it grows from there. Essentially. Have you seen anything as far as like an iOS design where you have this idea of like, Keeping consistency by designing specific features, obviously like Apple has made it pretty encourages a much more default design, but like what have you found?</p><p>[00:33:44] Has there been anything like this atomic design idea, which helps with consistency and your iOS app? </p><p>[00:33:51] <strong>Heidi Helen Pilypas (guest): </strong>So atomic design can work with iOS because it's a methodology that is for all user interfaces, even though. The author of it is a web designer himself. So I have been reading about it in preparation for this podcast and learning little bit about it.</p><p>[00:34:14] And I will say that when it comes to iOS and working together with a team. On an iOS project that a pattern library helps. And I believe that is something that Brad frost covers with atomic design. So a pattern library is like components that you use in your design when you design something or even work in a team of multiple designers, you don't want.</p><p>[00:34:44] Everything to be designed from scratch every single time, because that's going to lead to inconsistencies. You want to, you want to have like a system that you can refer to so you can use a pattern library for that our design system is even larger than a pattern library. Like a design system includes more than just your components.</p><p>[00:35:10] Like a design system might include like, Colors in my include descriptions of why you're doing things and where you're using them. It's a lot more documented. But anyway, going back to a pattern library for my projects, I use symbols and sketch, which are reusable components. And like I mentioned earlier, I use a third party library from Apple that contains a little of their standard UI components.</p><p>[00:35:43] And I do aim to use system controls where possible, because they do require less work to implement and users are more familiar with them. And I, I create custom UI when it adds linked to the project or it meets a specific need. And then I export my designs to Zeplin, which is a software. That both me, my developer used to help with collaboration.</p><p>[00:36:11] It has tools to inspect the design, like spacing and sizes. So you can find out what the designer wants when implementing it into design to make it consistent. And you can also export individual components like a button. Does that plan. So that helps other team members know what the specifications are.</p><p>[00:36:35] And you, you could build your pattern library in Zeplin if you wanted, but there's probably many other tools and places where you could build them. </p><p>[00:36:44] <strong>Leo Dion (Host): </strong>I'm really curious if like Swift UI is going to make it easier to create like pattern libraries. Cause then you could codify everything if you were ish worked with, well, I guess more ish worked with Swift UI.</p><p>[00:36:56] <strong>Heidi Helen Pilypas (guest): </strong>Yeah. Ish has been working this with SwiftUI we're actually. Rebuilding Capsicum in Swift UI. </p><p>[00:37:04] Oh, </p><p>[00:37:04] <strong>Heidi Helen Pilypas (guest): </strong>all the way I believe so. </p><p>[00:37:07] <strong>Leo Dion (Host): </strong>Wow. What is he talked to you about as far as, like how that might change UI design for the both of you? </p><p>[00:37:16] <strong>Heidi Helen Pilypas (guest): </strong>He has let me know sometimes that certain things aren't possible with Swift UI yet.</p><p>[00:37:22] So I might have to adapt my design sometimes like Swift UI. Is evolving. So it adds more functionality over time. </p><p>[00:37:33] <strong>Leo Dion (Host): </strong>Have you been brave enough to look at any Swift UI code yet? </p><p>[00:37:37] <strong>Heidi Helen Pilypas (guest): </strong>I have actually, I actually started doing a hundred days of Swift UI from Paul Hudson on his hacking with Swift website I've gotten about 30 days into it.</p><p>[00:37:50] But I'm. Also I'm a little bit out of touch at the moment, cause I've had a lengthy break while I work on redesigning Capsicum. And I really need to get back to it too. </p><p>[00:38:02] <strong>Leo Dion (Host): </strong>What's your initial feeling about designing with Swift UI as a designer? I guess my </p><p>[00:38:09] <strong>Heidi Helen Pilypas (guest): </strong>initial feeling is that he makes it. Easy to build out the interface.</p><p>[00:38:19] He has modifiers that I can use to specify things like padding that makes it easier to build things from what I've heard, because prior to , it was a lot more complicated to write code and. It required a lot more lines and a lot more knowledge to do something and what you can do with Swift UI. </p><p>[00:38:50] <strong>Leo Dion (Host): </strong>Yeah, I agree.</p><p>[00:38:51] I think it's. Brings the ease of like HTML editing to building iOS interfaces. And like, I don't know if you've done worked with any of the preview stuff that you can do in X code, but like, you can actually see what you're doing source of truth is, is the term I've heard. Whereas like, Doing it in Swift or objective C doing your UI.</p><p>[00:39:15] That way is a pain in the neck. And then with storyboards or zips, you can never do it textually. You had to open up and do it in the GUI. And that was always a pain in </p><p>[00:39:24] <strong>Heidi Helen Pilypas (guest): </strong>the neck. Yeah, no, I haven't used the old system and I think for developers who know that the old and current system, since that's still.</p><p>[00:39:39] Still an option and very much encouraged to use as well. Learning's 52. I can still be a learning curve and still require lots of patience skills to learn. So if you come to it brand-new without any coding background before doing it, I think it's a good place to start. </p><p>[00:40:05] <strong>Leo Dion (Host): </strong>Have you talked about putting.</p><p>[00:40:08] Capsicum on the Mac. </p><p>[00:40:11] <strong>Heidi Helen Pilypas (guest): </strong>Yes. We have one thing with using Swift UI and having a really good iPad is that that can come over to the Mac really easy. </p><p>[00:40:22] <strong>Leo Dion (Host): </strong>So it sounds like you're, you're thinking of doing Catalyst, I guess. </p><p>[00:40:25] <strong>Heidi Helen Pilypas (guest): </strong>Well, I don't know if we need, need to use Catalyst or not, because I think I've read that.</p><p>[00:40:34] use Catalyst for apps that, that aren't pure Swift UI, but with Swift UI, you can, you should be able to work on the Mac. I really, yeah. </p><p>[00:40:44] <strong>Leo Dion (Host): </strong>You're you're exactly correct. Yes. </p><p>[00:40:47] <strong>Heidi Helen Pilypas (guest): </strong>Depends. I think on, on what our code needs in, as we get further along, ish would definitely know more about that than me, but our first focus is on.</p><p>[00:41:03] Like really getting it to look good on the iPad. Because even though when we originally started working on Capsicum, we really wanted it to be good on iPad because that is the size of a notebook. Typically it's larger than an iPhone. Like I still focused on iPhone designs when I was. Creating mock-ups on my computer and I didn't have an iPad right.</p><p>[00:41:30] At the beginning of us working on it either. So it was something that I didn't prioritize as much, but now as we're really. Working on a big remake to make it even better. It is something we're prioritizing it's like Ish is always wanting to prioritize. But I, I was, I was hesitant one and I was taking my time with that.</p><p>[00:41:55] But now that's really what we're working on </p><p>[00:41:58] <strong>Leo Dion (Host): </strong>before we close out. Was there anything else you wanted to mention as far as some of the new stuff that we have in iOS 14? </p><p>[00:42:06] <strong>Heidi Helen Pilypas (guest): </strong>Yeah, there is actually. So with iOS 14, As I mentioned previously, there are widgets, but there's also a bunch of other new things.</p><p>[00:42:15] There's new date pickers, menus and page controls that are quick to scrub with your finger. There are also 715 new SF symbols. So SF symbols are symbols. Apple provides that integrate with the San Francisco font, which is the system font on iOS. </p><p>[00:42:35] <strong>Leo Dion (Host): </strong>I love SF symbols. And now they have it working in MacOs as well, which is awesome.</p><p>[00:42:41] <strong>Heidi Helen Pilypas (guest): </strong>Yeah. I really like it too. It just, it just makes using symbols in your apps so much more consistent because they're scalable to different accessibility sizes as well. And they, they work next to text labels. Really well. So they also now support multiple colors and they have several out of the box that work with multiple colors and they also have more localized symbols as well for languages that have some different script characters and also left to right text support.</p><p>[00:43:23] And then on iPad, we also have introduction of the sidebar and multiple </p><p>[00:43:28] <strong>Leo Dion (Host): </strong>columns. Yeah. That's something to think about the, the left to right. And right to left text and dealing with internationalization. I think people should consider that when they're designing their app is what it's going to look like on other languages.</p><p>[00:43:44] Exactly. Well, thank you so much for coming on Heidi. Really appreciate it. Where can people find you online? </p><p>[00:43:51] <strong>Heidi Helen Pilypas (guest): </strong>People can find me on Twitter at Heidi "underscore" Helen. I also have a website, Heidi hillen.com don't have much on it right now, but hopefully over time I will have more blog posts on there. And more examples of my work.</p><p>[00:44:11] It's just kind of. At the beginning of my website at the moment, you can also check out my apps, Capsicum there's a website for that Capsicum.app. And also my app. When did I, I tracking when you do things that is, when did I, whendidi.app? And they're both available on the iOS app store, not available for Android or any other platforms at the moment.</p><p>[00:44:40] Anyway. Yeah. </p><p>[00:44:42] <strong>Leo Dion (Host): </strong>Well, thank you so much for coming on we'll have links to that in the show notes as well. Folks can find me on Twitter at Leo G Dion. My company is bright at digit. If you could take some time to add a review to Apple podcast or Google. Podcasts or Spotify I'd really appreciate it. And if there's anything that you want to talk about, or you want to hear more about, please let me know, send me a DM on Twitter or send me a tweet and let me know what you think really appreciate it.</p><p>[00:45:21] And we look forward to talking to you again. Thank you.</p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://heidihelen.com"><strong>Heidi Helen Pilypas (web site)</strong></a><ul><li><a href="https://twitter.com/heidi_helen">Twitter @heidi_helen</a></li></ul>
</li></ul><p><a href="https://youtu.be/NTvljGAha_E"><strong>YouTube Video - https://youtu.be/NTvljGAha_E</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/21517a94"><strong>Episode 63</strong> - <strong>Apple Watch 2020 with Steve Lipton</strong></a></li>
<li><a href="https://share.transistor.fm/s/dfb18c54"><strong>Episode 57 -</strong> <strong>SwiftUI with Majid Jabrayilov - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/87165d83"><strong>Episode 35</strong> - <strong>SwiftUI - The Good, the Bad, and the Benefits</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li>
<strong>Apps designed by Heidi</strong><ul>
<li>
<a href="https://capsicum.app"><strong>Capsicum</strong></a> </li>
<li><a href="https://apps.apple.com/us/app/when-did-i/id1463692593?ls=1"><strong>When Did I...?</strong></a></li>
<li><a href="https://apps.apple.com/us/app/boomerang-double-check-translations/id1233994763?ls=1"><strong>Boomerang</strong></a></li>
</ul>
</li>
<li>
<strong>Guides</strong><ul>
<li>
<a href="https://developer.apple.com/design/human-interface-guidelines/"><strong>Guidelines for Designing for iOS from Apple </strong></a><strong>with Sketch and PS Templates</strong>
</li>
<li><a href="https://material.io/design"><strong>Material Design from Google</strong></a></li>
</ul>
</li>
<li>
<strong>What has Changed in iOS</strong><ul>
<li><a href="https://developer.apple.com/design/human-interface-guidelines/ios/system-capabilities/widgets/">Widgets</a></li>
<li><a href="https://developer.apple.com/design/human-interface-guidelines/sf-symbols/overview/">SF Symbols</a></li>
<li>
<a href="https://developer.apple.com/design/human-interface-guidelines/ios/bars/sidebars/">Sidebars</a> </li>
<li>
<a href="https://developer.apple.com/design/human-interface-guidelines/ios/controls/pickers/">Pickers</a> </li>
<li><a href="https://developer.apple.com/design/human-interface-guidelines/ios/controls/color-wells/">Color Wells</a></li>
<li><a href="https://developer.apple.com/design/human-interface-guidelines/ios/controls/pull-down-menus/">Menus</a></li>
</ul>
</li>
<li>
<strong>Tools for Developers to Get Better at Design</strong><ul>
<li><a href="https://designcode.io">Design+Code</a></li>
<li>
<a href="https://refactoringui.com">Refactoring UI</a> </li>
<li><a href="https://zeplin.io"><strong>Zeplin</strong></a></li>
</ul>
</li>
<li><a href="https://www.hackingwithswift.com/100/swiftui">100 Days of SwiftUI</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance or indie apps like <a href="https://appfigures.com/resources/aso/aso-teardown-fotmob">Fotmob</a>.</li>
<li>
<a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">New competitor's report in the Appfigures dashboard</a> where you are able to view competitor downloads, build performance benchmarks, and see the new trends as they happen. <a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">Check it out here.</a>
</li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><br><a href="https://remote.nsspain.com/"><em>I will be speaking at </em><strong>NSSpain 2020...</strong></a><br>Nov 17 - 20, 2020</p><ul>
<li>One of the most known conferences about Apple platforms development is going remote this year! </li>
<li>NSSpain 2020 is an online, continuous 36 hours conference, carefully crafted by the community for the community.</li>
<li>Guests of the show Paul Hudson and Donny Wals will be speaking as well as others</li>
</ul><p>Go to <a href="https://remote.nsspain.com/"><strong>NSSpain.com</strong></a> and use promo code <em>empowerapps </em>to get 10% off</p><p><em>Also speaking at...</em></p><ul>
<li><a href="%20https://www.iosdevcampdc.com"><strong>iOSDevCampDC 2020 - October 30</strong></a></li>
<li><a href="https://backtomac.org"><strong>Back to the Mac - November 6 &amp; 7</strong></a></li>
</ul><p><b>UI Design</b></p><ul>
<li>What has changed in iOS Design?</li>
<li>What's the difference between skeuomorphic vs flat?</li>
<li>Differences with Android and material design</li>
<li>Differences between web design</li>
<li>What's changed in iOS 14 design?</li>
<li>Differences on the iPad</li>
<li>How to design for Widgets</li>
</ul><p><b>Design and Developer Teams</b></p><ul>
<li>How developers should communicate with designers?</li>
<li>Best Tools for Getting Started</li>
<li>Best Guides and Courses for Getting Started</li>
<li>Common Mistakes</li>
<li>Pattern Libraries and Design Systems</li>
<li>Impact of SwiftUI</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><b>Transcription</b></p><p><strong>Leo Dion (Host): </strong>Welcome to another episode of empower apps. I'm your host. Leo Dion with us today is Heidi Helen. Hey, Heidi, how's it going? Hey, not too bad. So glad to have you on. We've had a lot of requests for having someone who can talk about UI design, because a lot of developers have a hard time. With UI design and designing their iOS app, or just talking to a designer.</p><p>[00:00:29] And so I'm really glad to have you on, I've looked at a lot of your work especially, Capsicum and some of the other stuff that you've done. Just awesome. Awesome stuff. I'm really excited to have you on today. </p><p>[00:00:43] <strong>Heidi Helen Pilypas (guest): </strong>Oh, thank you very much for having me. And I hope that I can describe UI design in a way that does it justice.</p><p>[00:00:51] <strong>Leo Dion (Host): </strong>And through a podcast without the, without the, the easiness of visuals. So go ahead for those who might not know who you are, I'll let you go ahead and introduce yourself. </p><p>[00:01:04] <strong>Heidi Helen Pilypas (guest): </strong>Sure. Thanks. So my name is Heidi Helen Pilypas. I live in Adelaide, South Australia. I work on a couple of apps as a designer, so.</p><p>[00:01:18] My main apps are Capsicum. And when did I, Capsicum is an app for planning your day tracking habits and telling your story when inspired by beautiful paper planners. And then when did I is an app for. Tracking when you do things like anything you want, really, it could be making a bed, it could be brushing your teeth.</p><p>[00:01:42] It could be flossing. It could be changing the oil in your car, or even when you took your medication. </p><p>[00:01:48] <strong>Leo Dion (Host): </strong>That's awesome. How long have you been working on those apps? </p><p>[00:01:52] <strong>Heidi Helen Pilypas (guest): </strong>I've been working on apps for a couple of years now. I first started in 2011 when I. Got my first iPhone in a very mod way, I should say. Cause what, what happened was I was just in love with all of the apps and I was artistic myself.</p><p>[00:02:14] I went to university and studied a bachelor of visual arts and I always love drawing and painting as a kid. And I eventually like got more into design. So when I saw apps. I really wanted to get one of every area of my life, including logging my dreams. And there was an app called dream journal and I downloaded it and I noticed a few little things that can use improvement.</p><p>[00:02:43] And the app had an area for you to write a support request to the developer. So I sent off an email with. A PDF document that I made, where I had screenshots and I had areas and notes about things that could use improving. And I was like, so excited about sending this email. Like I just thought, like I was really passionate about it and that would be really useful.</p><p>[00:03:08] However, it can also be confronting to someone to get told there's all these issues. This is what's wrong with it. And to my surprise, like I got a positive response actually. And. The developer thanked me and that developer was Ishmael shahbaz who I work with today on our, on our apps, including Capsicum and a couple of others.</p><p>[00:03:31] And yeah, over the years, we, we eventually built up to larger projects. It started with me helping him with a few design elements for one of his apps. And then it grew to more. I learned all about iOS app design through him, coaching and mentoring me. That's </p><p>[00:03:52] <strong>Leo Dion (Host): </strong>awesome. My so I got my bachelor's in computer science and I've always had like a, I wouldn't say a passion, but a desire to get better at UI design.</p><p>[00:04:03] I ended up getting a graduate degree in digital media and art technology. Cause I was just so interested in UI and I feel like in the last. 15 years. My UI design skills have definitely like atrophied. So it's something I'm really interested in. So. Excited to have, have you on, you've been doing this for quite a while.</p><p>[00:04:23] It sounds like. What do you think has really changed when it comes to like UI design for the iPhone? </p><p>[00:04:29] <strong>Heidi Helen Pilypas (guest): </strong>Let me see. A lot of things change over time with design patterns. So when I first got my iPhone flat design, wasn't so much of a thing. It was heavily skeuomorphic. Things were very much influenced by the real world around us.</p><p>[00:04:50] So you had actual textures in the notes app for instance of paper, texture, and stitching in the nav bar. And. Then with iOS 7 things changed, things became more flat. And I actually really liked that. I actually really jumped on that. And I, when I looked at the old designs, I started thinking they were really outdated and like, Really thinking flat is the way in flat is the answer.</p><p>[00:05:21] Yes. </p><p>[00:05:21] <strong>Leo Dion (Host): </strong>Yeah. I really, I agree. I like the flat design I've seen this recently. I've switched over to big Sur and you've kind of seen that as well with big Sur, like that kind of design update where everything is flat. </p><p>[00:05:35] <strong>Heidi Helen Pilypas (guest): </strong>Yeah. So eventually though, over time, I've actually come to appreciate like both.</p><p>[00:05:42] Skeuomorphism and flat. And I really like marrying the two together to get something that is the best of both worlds. </p><p>[00:05:51] <strong>Leo Dion (Host): </strong>What's a good example of an app that you think does that </p><p>[00:05:55] <strong>Heidi Helen Pilypas (guest): </strong>we try and do in Capsicum actually, because we want it to remind people of. Like paper notebooks, but we also want it to be a digital experience that has the versitilty of what you can do on a phone and an iPad.</p><p>[00:06:18]<strong>AppFigures Sponsorship Start<br></strong><br></p><p>[00:06:18] <strong>Leo Dion (Host): </strong>So here's the thing you're probably thinking to yourself. I want a build a brand new app, or maybe you already have an app in the app store. I think now is probably the time you're going to want to really optimize that app in the app store. And what I mean by that, make it easy for people to find it and for people to download it.</p><p>[00:06:39] It's one thing that you can build this great app for the iPhone 12 or iOS 14, or watchOS 7. It's another thing. Being able to help folks who have their brand new iPhone or their hand me down, being able to find all these new apps. And this is where at figures really comes in. There give you everything.</p><p>[00:06:58] You need to do this all in one place. So if you have a really good idea or an app idea, and you want to see how many people are searching for that, AppFigures is going to be your spot. If you already have an app in the app store, and you want to see what words you need to use or what terms you need to use so that people can find you easily AppFigures is for you.</p><p>[00:07:19] And it's really easy. All you have to do is use our promo code and power 30, 30 to get 30% off for the next three months. That's it. That's on asking a lot in AppFigures they don't just have this really great universal analytics dashboard. They also provide a lot of other great app store tools for optimization.</p><p>[00:07:38] And that's really the name of the game. That's going to improve your visibility and that's going to help you find more users and figures has more than a decade of providing mobile analytics and insights. And they also have this new tool called the competitor intelligence. Dashboard. And that allows you to track competitor downloads and understand what strategies you're gonna use so that you can grow your bottom line.</p><p>[00:08:03] That's the thing. You can have a great idea. You can get users. Maybe by personally reaching out to them. But if you can improve your visibility on the app store, that's really the name of the game. So go ahead, head over to app figures.com to try app figures for free. If you like it, both the new and existing customers can use the special code, empower 30, 30 to get 30% off for the next three months.</p><p>[00:08:27] So go ahead, give it a shot and let me know what you think. And if you need any help, try out some of those new app tear downs that Ariel has been doing. They've been fantastic and they've been really providing a lot of help to me. And I think to a lot of folks to what they need to do to get their app store apps up and working.</p><p>[00:08:45] So go ahead and try it out with the empower 30, 30, you get 30% off for the next three months, or try the link in the show notes below. Thank you AppFigures for sponsoring our show.</p><p>[00:09:02]<strong>AppFigures Sponsorship End<br></strong><br></p><p>[00:09:02] So it sounds like you communicate with Ish quite a bit. What have you found really works with, you know, your two person team, but would work with any other team when it comes to like. Being able to design an app and communicate clearly for the both of you </p><p>[00:09:20] <strong>Heidi Helen Pilypas (guest): </strong>communication starts with mutual respect. For one another, understanding you both have different skills to bring to the table with ish.</p><p>[00:09:32] He knows all about coding and development. I don't often understand a lot of the constraints, so it's really helpful for me to listen when he gives me feedback on things that I don't know like I sometimes design things that don't actually, I sometimes design things that might not actually work with the constraints of iOS.</p><p>[00:09:58] So he's able to tell me, and I'm able to adapt. </p><p>[00:10:02] <strong>Leo Dion (Host): </strong>Can you give an example of something like that? Cause like what I run into, when I talk to designers, they're more acquainted with like, for instance, Android and they'll design it because that's what they're more acquainted to. And then it's like, yeah, well we don't have a back button on our phones in iOS or like, that seems to me, like the biggest hurdle with designers is like, or, or they just design an app universally.</p><p>[00:10:28] Right. And then they don't realize that different operating systems have different patterns. Sure. </p><p>[00:10:34] <strong>Heidi Helen Pilypas (guest): </strong>That's exactly right. Different operating systems have different guidelines about what fits into them. I have briefly studied material design, which is developed by Google and that is a pattern or a system that's.</p><p>[00:10:53] Heavily used with Android apps. However, it can also be used on the web and an iOS app, </p><p>[00:10:59] <strong>Leo Dion (Host): </strong>right. Especially like Google apps use </p><p>[00:11:00] <strong>Heidi Helen Pilypas (guest): </strong>that. But then iOS has their own components, things that are completely different. Like when I studied material design, for instance, it had a floating action button as part of the operating system, but that's not something that.</p><p>[00:11:20] That's not something that comes with iOS. So you have to do things in different ways that respect the platforms. Like there's more than one way of presenting information to people. There's like, like you could do a menu or you could do like a modal view or you could, you can actually have different navigation and buttons and things.</p><p>[00:11:42] So it really, it really depends on. The platform you're designing for. It's useful to familiarize yourself with the guidelines. So Apple has their human interface guidelines on their developer website. They have guidelines for iOS, macOS, watchOS, and TVs T V O S. And they update it every year as operating system evolves.</p><p>[00:12:11] So. I, I read that to find out what is new. And I, I read it when I first started so that I got a good idea of what iOS supports. </p><p>[00:12:24] <strong>Leo Dion (Host): </strong>What have you seen anything new as far as like iOS 14 this year? That's changed in the guidelines. Yeah. There's </p><p>[00:12:30] <strong>Heidi Helen Pilypas (guest): </strong>quite a lot of new things. One thing that many people are excited about is widgets on the home screen.</p><p>[00:12:37] <strong>Leo Dion (Host): </strong>Yeah. Yeah. Ask David Smith that </p><p>[00:12:41] <strong>Heidi Helen Pilypas (guest): </strong>David Smith actually has changed the landscape in a lot of ways with how people use their phones. </p><p>[00:12:48] <strong>Leo Dion (Host): </strong>I find it interesting how, like one of the big features, I think people are attracted by is like the customization I was listening to the latest ATP. And they were just talking about how like, Apple is very much, like you said, they have certain guidelines and they like try to keep it fairly strict, but people like really want to customize their home screen to the like.</p><p>[00:13:08] To the nth degree, even if it might look hideous to other folks, and like, you've seen this with like widgets, you can customize colors and fonts. I know David added that recently. And then like the big thing I've heard is, I don't know if you've heard about this, but like custom icons where people hack shortcuts to use custom icons so that it can like really customize their home screen as much as they want.</p><p>[00:13:33] And I find that really interesting, especially with like UI design, because we tend to be like, this looks pretty, this doesn't. And we try to like give people guidelines, but people want to like personalize. They want to personalize to the nth degree as much as they can. </p><p>[00:13:46] <strong>Heidi Helen Pilypas (guest): </strong>Exactly. And I think that's great as an option for users to have to make something more of their own.</p><p>[00:13:53] <strong>Leo Dion (Host): </strong>Have you done anything on the watch? I </p><p>[00:13:56] <strong>Heidi Helen Pilypas (guest): </strong>have looked into the watch before for projects that I've worked on. I'm not in great debt, </p><p>[00:14:04] <strong>Leo Dion (Host): </strong>but you have done iPad. Correct. What is like the big differences you've seen with doing UI design on the phone versus the iPad? </p><p>[00:14:14] <strong>Heidi Helen Pilypas (guest): </strong>Well, the iPad has much more real estate recently in iOS 14.</p><p>[00:14:21] Apple also announced that you can have multiple column formats. With the split view previously could have liked to, but now it can have more than that. And now I've had design can also be heavily sidebar based so you can navigate your app using the sidebar, like maybe instead of using a tab bar, for instance, you can put navigation elements in there.</p><p>[00:14:52] And then on an iPhone, you would have those in a tab bar, cause you don't have room for a sidebar. So you would have. A slightly different presentation of your app, depending on what screen you're using. </p><p>[00:15:07] <strong>Leo Dion (Host): </strong>So it sounds to me like screen sizes are our big deal. As far as like designing, like one thing I love to use on my iPad is like split screen to where I'll have something on one side and something on the other.</p><p>[00:15:20] And by the time we release this episode, we'll have. Probably new iPhones out the iPhone 12 with its new screen sizes. So what are some tips or things that you've dealt with when you're talking with Ish, especially when it comes to designing an app so that it can adapt to, you know, the new screen sizes that we have with the new iPhones or cars.</p><p>[00:15:45] Like they seem to be changing every year pretty much. What have you found is like really helpful for, for your communication with your developers in order to make sure that your designs are like adaptable or responsive? </p><p>[00:15:58] <strong>Heidi Helen Pilypas (guest): </strong>Well, I usually mock things up in multiple sizes. I, I usually pick a standard iPhone size and mock up something on there and also.</p><p>[00:16:12] A standard, iPad size. However, there are variations with many different sizes. I leave, I leave a lot of the rescaling up to ish to do because I don't, I don't fully understand it all. I try and work the best with guidelines that I read examples. I see. And I use. Also a third party library from Apple in sketch that has all of that.</p><p>[00:16:45] User interface components. </p><p>[00:16:47] <strong>Leo Dion (Host): </strong>Oh yeah. I know you mean, so like where you can go, like people have like, like usually like a dribble site or what's the other big UI design resource where you can pretty much Oh yeah. Apple has that too. Well, we'll put a link to that where you can pretty much like they have the Photoshop version and then the sketch version where you can like use the drag little widgets in your program, your good graphic design program.</p><p>[00:17:10] Is that what you're talking about? </p><p>[00:17:13] <strong>Heidi Helen Pilypas (guest): </strong>Okay. It's like a pattern library. You can download it for your user interface, design tool of choice. So I use sketch. They do have, they do have a Figma version now I think, and Photoshop as well. And even keynote, a lot of people are Apple design in Keynote. I've heard.</p><p>[00:17:39] <strong>Leo Dion (Host): </strong>Nice. What are some like good tools for, for a developer to get started with like designing their app? Like, for me, I used to be much more into like, Just opening up X code and dragging things into the storyboard and see how they look or, you know, now I guess it'd be more like writing the Swift UI code in order to design my app because I find it to be more consistent with how I actually look.</p><p>[00:18:08] But then like there's obviously benefits to pulling up a graphics program and doing what you're doing with catch what, like, what are some ways that I can really. Pick up more UI design skills and better design my apps </p><p>[00:18:23] <strong>Heidi Helen Pilypas (guest): </strong>sure. Sorry. Some, some good examples. Of tools I used when I was learning design design plus code, which has several courses, including how to use sketch, but it also has UI design for developers.</p><p>[00:18:41] I did a course on learning iOS design from it, which helped me get started. And it was kind of like the missing manual I needed because even though I read the human interface guidelines from Apple, I still wasn't always fully sure where to start and even like what font sizes to pick and stuff. So it really, it really helped me to get more of an idea.</p><p>[00:19:08] That's right. He founded it. He's got </p><p>[00:19:10] <strong>Leo Dion (Host): </strong>a lot of stuff. </p><p>[00:19:12] <strong>Heidi Helen Pilypas (guest): </strong>Exactly. And then there's. Another thing I came across, which is refactoring UI. It's a book written from a developer's perspective who over learnt tips and tricks from his designer. So that's worth checking out as well. I'll tell you a little bit about my process though.</p><p>[00:19:31] So when I am working on designing an app, I think about features that the user wants and that will help them. Solve their problem. So Capsicum, which I'm working on right now, a major redesign, actually, we already have a lot of features in there and I'm just, I'm trying to make it a lot better at the moment, using both what's new in iOS in terms of design, but also.</p><p>[00:20:03] Improving it based on feedback and my personal preferences, even of what is better. So what I do is I first actually draw something. I use linear sketch on my iPad to do that. However, you could also just use a piece of paper and I actually draw like a rectangle of the screen. And then I start trying to figure out what I want to happen on there.</p><p>[00:20:31] So. I'll draw all the elements and put all of the information that I want to go on there. And while I'm drawing it, I can like it. It's coming to my mind what I'm going to need to use. And I find that better than like just starting. In software, because that can involve a lot of trial and error and even creating things from scratch, which is quite timely.</p><p>[00:20:57] So if you just draw it first, you kind of get a better idea before you go and create it in your graphic program or even in code. </p><p>[00:21:07] <strong>Leo Dion (Host): </strong>That sounds really cool. I want to try that, that app out. What was it called again? </p><p>[00:21:11] <strong>Heidi Helen Pilypas (guest): </strong>Linear Sketch by icon factory. </p><p>[00:21:15] <strong>Leo Dion (Host): </strong>Is it compatible with the Apple pencil? </p><p>[00:21:17] <strong>Heidi Helen Pilypas (guest): </strong>Yes, it is. This is one thing I love about it.</p><p>[00:21:20] <strong>Leo Dion (Host): </strong>I was going to say I want to use my pencil a lot more so. And yeah, I, I'm always looking for a way to like, use the iPad more for, for sketching and things like that. So that sounds awesome. So we did briefly touch on widgets and what they've brought to iOS 14. Have you done any work with widgets?</p><p>[00:21:41] Yep. </p><p>[00:21:41] <strong>Heidi Helen Pilypas (guest): </strong>I'm currently working on something, although I'm not ready to share the details just yet. </p><p>[00:21:47] <strong>Leo Dion (Host): </strong>If you can. What have you found are like some of the big challenges or guidelines that you've started to follow when it comes to building widgets? </p><p>[00:21:56] <strong>Heidi Helen Pilypas (guest): </strong>I would say about widgets that it's about focusing one idea.</p><p>[00:22:01] So there's. There's lots of things in an app. There's lots of features and you don't want to cram too much into a widget. You can actually have multiple widgets for one app. So, yeah. Focus on one idea and. Make it easy and glanceable so that people can find out information really quickly when they look at it, you don't want it to be too dense or crowded.</p><p>[00:22:34]<strong>Speaker Schedule Start<br></strong><br></p><p>[00:22:34] <strong>Leo Dion (Host): </strong>Hey folks, I wanted to take the opportunity to let you know about my public speaking schedule. I'll be speaking at three conferences over the next. Two months. By the time you hear this, I will have a couple of videos out with the online conference, back to Mac. It's basically a YouTube playlist of videos from a lot of great folks in the Swift developer community.</p><p>[00:22:56] We also have the iOS dev camp DC, which will be on October 30th as well. I'll be speaking there. And then last but not least is NS Spain, which is an awesome conference. That's been going on every year. As with 2020, this is, of course it will be a remote conference. So you can save some money and not have to fly to Spain this year.</p><p>[00:23:18] But NSSpain is one of the most known conferences about Apple platforms and it's going to be a continuous 36 hour conference, which sounds awesome. I will be speaking on 50 packages, dependency management of the future. And as you probably know, I use Swift packages quite a bit. So I'm really excited to speak on this topic.</p><p>[00:23:42] There's a list of other great speakers that you'll want to check out as well. If you are interested in attending and seeing some of the great conferences, you can check out  NSSpain.com but you can also use the promo code EmpowerApps to get 10% off. So you have no reason not to attend this fantastic conference again, that promo code is empower apps, E M P O w E R a P P S.</p><p>[00:24:10] And get 10% off your ticket to NS Spain this year. So definitely check that out. Thank you so much for listening to the show, the list of conferences and the promo code for NSSpain will be in the show notes for this episode. And I look forward to seeing you remotely at these conferences this year. Thank you again,</p><p>[00:24:33]<strong>Speaker Schedule End<br></strong><br></p><p>[00:24:33] it sounds a lot like watch complications in a lot of ways, like from what I've heard from people who do watch complications, like essentially is moving. It's it's doing the same thing except on the iPhone home screen. And like, I like you use the term glanceable cause that's exactly what it is. It's like, I just want to get all the information I need quickly by just looking at my home phone screen.</p><p>[00:24:55] <strong>Heidi Helen Pilypas (guest): </strong>Exactly I will say like with watches, like I find like all the little apps, like you still have to open them to get lots of information, but I find that. Widgets on the home screen are a lot more easy to look at on the iPhone. </p><p>[00:25:14] <strong>Leo Dion (Host): </strong>Right. I agree because like the weather on the watch or temperature, for instance, it'll only tell me the temperature right now, but I'm actually more interested in the forecast.</p><p>[00:25:23] Whereas the weather widget on the phone, like actually give me like a graph to see, Oh, Hey, this is sweater. This is sweater, weather, this isn't shorts weather, which is what would I really care about when I'm looking at the weather? So, yeah. That's really interesting. Have you worked with any apps that had a web interface or an Android interface and you had to like deal with the hurdle of having to communicate the differences with iOS versus.</p><p>[00:25:56] The web or versus Android, we kind of touched briefly on Android, I guess, but like, as far as like, how would you explain to somebody what the big differences with iPhone apps designing those as opposed to designing a webpage? </p><p>[00:26:11] <strong>Heidi Helen Pilypas (guest): </strong>I have worked with one Android app actually was the first thing I started with, with my designing UI journey.</p><p>[00:26:22] Even though I don't own an Android phone. So that was a bit challenging. Like I have an iPhone, I read the guidelines from Google's material design, which helped me get a big understanding about what's available in the operating system. I think. It is important to know. There are differences between Android and iOS and web.</p><p>[00:26:47] Like you can't just take a website and have it look exactly the same on the iPhone or exactly the same on an Android phone. You have to consider, you have to consider what the differences are and what is the best experience for the user of that device. Yeah, </p><p>[00:27:07] <strong>Leo Dion (Host): </strong>it seems like a lot of companies and businesses, they just want to take the shortcut and we constantly get this question about like cross-platform tools.</p><p>[00:27:17] Like I just want to build it once and have it use everywhere. And I mean, it's okay when you're first starting off, I think, but like, if you really want a good looking app, Building it natively and designing it for that native interface is always like the best guideline to follow in the long run. It seems like, you know, even on the desktop, you see this with Slack, for instance, where it's like, it's all built in electron and it looks the same, but it has its own little quirks and ways of doing things like that could be a headache, honestly, for, for some Mac users.</p><p>[00:27:53] <strong>Heidi Helen Pilypas (guest): </strong>You want to do things that the user of that operating system is familiar with. You don't want to make people have to relearn how to interact with everything. So iOS has navigation bars and tab bars and tool bars you don't want to suddenly redesign the whole way that is done in a way that isn't familiar to people.</p><p>[00:28:18] <strong>Leo Dion (Host): </strong>Ironically, like on the desktop, I'm a cheapskate. And I use gimp and Inkscape for like graphic design right now, but I'm, I'm willing to spend some money, but I haven't found the ideal desktop app yet. And like those apps, like they use some cross-platform stuff. It is a mess to like, like half of the keyboard shortcuts work or they work differently and they're all built on this, like cross-platform layer and yeah, they're graphic design apps, but they're, I know why people spend money on graphic design apps because these ones are just like, The interface is totally not matching with the pattern that you would expect on that less.</p><p>[00:28:57] So, yeah, I need to, I, I need to spend some money on sketch or something cause yeah. It's it's okay. It works. Okay. But I could use a better app. </p><p>[00:29:06] <strong>Heidi Helen Pilypas (guest): </strong>I definitely highly recommend sketch. I've been using it for several years. </p><p>[00:29:11] <strong>Leo Dion (Host): </strong>It seems like that's been the most popular one. What are some other mistakes that you've seen teams make, or maybe you've made mistakes that you've made that you wish you knew about earlier when it came to like building an app with when, when I'm talking about is like, when you've tried to like communicate different ideas or built concepts between you and whoever you're working with on an iOS app, </p><p>[00:29:37] <strong>Heidi Helen Pilypas (guest): </strong>one mistake is a lack of communication.</p><p>[00:29:40] And an example of that is. Just say I mock up a design that I would like implemented. And then when I get a beta to test the app, I find things I completely different, not how I like laid it out or not using the specs that I specified. And what would help with that is for the developer to say the design of.</p><p>[00:30:12] For instance, something like, I wasn't able to do this because of platform constraints or I'm not finished yet. I'm still, I'm still going with implementing this or even just consulting the designer before doing certain things. So they. Know what you're doing and don't freak out when it's changed. </p><p>[00:30:36] <strong>Leo Dion (Host): </strong>I think another thing is communicating with the designer.</p><p>[00:30:40] Not necessarily just that it won't work, but sometimes yeah. Communicating with them that something is very customized or like that's not the default behavior. It's going to take X hours for me to develop this specific thing. Because I think to a lot of designers, they don't realize like what exactly is built in and baked into iOS and what is like really customized that they may have seen in a really like, Popular or well-designed app.</p><p>[00:31:09] Right. You know, for instance, like you said, with, with the with the action button, right. That material design has like, it's going to take a lot of work or you're going to have to import some third-party library and it's, it's going to be a headache to maintain and I think it's helpful that those considerations are communicated with the designer.</p><p>[00:31:28] <strong>Heidi Helen Pilypas (guest): </strong>Yeah. It's very easy as a new designer to not necessarily respect the platforms, guidelines. Or not know what will and won't work, but over time you actually do learn and do come become more familiar with it. And a developer and designer can both help each other by communicating that, like what works well from the platform.</p><p>[00:31:55] But even if you do know the rules or guidelines, it is good to know. When maybe you can break them is first of all, good to understand them. But at times you can break them, you can actually do something custom. And that comes back to your goals as well. What you're trying to achieve, like maybe you really want to delight users and blow them away with a really unique experience.</p><p>[00:32:22] Maybe you want to remind them, like we do in Capsicum of a paper notebook. However, even when I say that, like, There's certain things that when it comes to digital that are different from real life and are hard to convey. And it is okay to have controls that don't remind people of paper as well. Like you just have to know what your goals are and what you're able to achieve with what the constraints are as well.</p><p>[00:32:54] <strong>Leo Dion (Host): </strong>One issue that I think designers can run into is designing everything like as customized as possible, but not designing it in a consistent way. And I've seen this idea in, from web design folks about like atomic web design. I don't know if you've heard of it, but the idea of where like, You design it like a bullet or a button or a radio button or a checkbox and as add-on essentially.</p><p>[00:33:20] And then you build molecules, which is like a whole like list or checkbox list. And then it grows from there. Essentially. Have you seen anything as far as like an iOS design where you have this idea of like, Keeping consistency by designing specific features, obviously like Apple has made it pretty encourages a much more default design, but like what have you found?</p><p>[00:33:44] Has there been anything like this atomic design idea, which helps with consistency and your iOS app? </p><p>[00:33:51] <strong>Heidi Helen Pilypas (guest): </strong>So atomic design can work with iOS because it's a methodology that is for all user interfaces, even though. The author of it is a web designer himself. So I have been reading about it in preparation for this podcast and learning little bit about it.</p><p>[00:34:14] And I will say that when it comes to iOS and working together with a team. On an iOS project that a pattern library helps. And I believe that is something that Brad frost covers with atomic design. So a pattern library is like components that you use in your design when you design something or even work in a team of multiple designers, you don't want.</p><p>[00:34:44] Everything to be designed from scratch every single time, because that's going to lead to inconsistencies. You want to, you want to have like a system that you can refer to so you can use a pattern library for that our design system is even larger than a pattern library. Like a design system includes more than just your components.</p><p>[00:35:10] Like a design system might include like, Colors in my include descriptions of why you're doing things and where you're using them. It's a lot more documented. But anyway, going back to a pattern library for my projects, I use symbols and sketch, which are reusable components. And like I mentioned earlier, I use a third party library from Apple that contains a little of their standard UI components.</p><p>[00:35:43] And I do aim to use system controls where possible, because they do require less work to implement and users are more familiar with them. And I, I create custom UI when it adds linked to the project or it meets a specific need. And then I export my designs to Zeplin, which is a software. That both me, my developer used to help with collaboration.</p><p>[00:36:11] It has tools to inspect the design, like spacing and sizes. So you can find out what the designer wants when implementing it into design to make it consistent. And you can also export individual components like a button. Does that plan. So that helps other team members know what the specifications are.</p><p>[00:36:35] And you, you could build your pattern library in Zeplin if you wanted, but there's probably many other tools and places where you could build them. </p><p>[00:36:44] <strong>Leo Dion (Host): </strong>I'm really curious if like Swift UI is going to make it easier to create like pattern libraries. Cause then you could codify everything if you were ish worked with, well, I guess more ish worked with Swift UI.</p><p>[00:36:56] <strong>Heidi Helen Pilypas (guest): </strong>Yeah. Ish has been working this with SwiftUI we're actually. Rebuilding Capsicum in Swift UI. </p><p>[00:37:04] Oh, </p><p>[00:37:04] <strong>Heidi Helen Pilypas (guest): </strong>all the way I believe so. </p><p>[00:37:07] <strong>Leo Dion (Host): </strong>Wow. What is he talked to you about as far as, like how that might change UI design for the both of you? </p><p>[00:37:16] <strong>Heidi Helen Pilypas (guest): </strong>He has let me know sometimes that certain things aren't possible with Swift UI yet.</p><p>[00:37:22] So I might have to adapt my design sometimes like Swift UI. Is evolving. So it adds more functionality over time. </p><p>[00:37:33] <strong>Leo Dion (Host): </strong>Have you been brave enough to look at any Swift UI code yet? </p><p>[00:37:37] <strong>Heidi Helen Pilypas (guest): </strong>I have actually, I actually started doing a hundred days of Swift UI from Paul Hudson on his hacking with Swift website I've gotten about 30 days into it.</p><p>[00:37:50] But I'm. Also I'm a little bit out of touch at the moment, cause I've had a lengthy break while I work on redesigning Capsicum. And I really need to get back to it too. </p><p>[00:38:02] <strong>Leo Dion (Host): </strong>What's your initial feeling about designing with Swift UI as a designer? I guess my </p><p>[00:38:09] <strong>Heidi Helen Pilypas (guest): </strong>initial feeling is that he makes it. Easy to build out the interface.</p><p>[00:38:19] He has modifiers that I can use to specify things like padding that makes it easier to build things from what I've heard, because prior to , it was a lot more complicated to write code and. It required a lot more lines and a lot more knowledge to do something and what you can do with Swift UI. </p><p>[00:38:50] <strong>Leo Dion (Host): </strong>Yeah, I agree.</p><p>[00:38:51] I think it's. Brings the ease of like HTML editing to building iOS interfaces. And like, I don't know if you've done worked with any of the preview stuff that you can do in X code, but like, you can actually see what you're doing source of truth is, is the term I've heard. Whereas like, Doing it in Swift or objective C doing your UI.</p><p>[00:39:15] That way is a pain in the neck. And then with storyboards or zips, you can never do it textually. You had to open up and do it in the GUI. And that was always a pain in </p><p>[00:39:24] <strong>Heidi Helen Pilypas (guest): </strong>the neck. Yeah, no, I haven't used the old system and I think for developers who know that the old and current system, since that's still.</p><p>[00:39:39] Still an option and very much encouraged to use as well. Learning's 52. I can still be a learning curve and still require lots of patience skills to learn. So if you come to it brand-new without any coding background before doing it, I think it's a good place to start. </p><p>[00:40:05] <strong>Leo Dion (Host): </strong>Have you talked about putting.</p><p>[00:40:08] Capsicum on the Mac. </p><p>[00:40:11] <strong>Heidi Helen Pilypas (guest): </strong>Yes. We have one thing with using Swift UI and having a really good iPad is that that can come over to the Mac really easy. </p><p>[00:40:22] <strong>Leo Dion (Host): </strong>So it sounds like you're, you're thinking of doing Catalyst, I guess. </p><p>[00:40:25] <strong>Heidi Helen Pilypas (guest): </strong>Well, I don't know if we need, need to use Catalyst or not, because I think I've read that.</p><p>[00:40:34] use Catalyst for apps that, that aren't pure Swift UI, but with Swift UI, you can, you should be able to work on the Mac. I really, yeah. </p><p>[00:40:44] <strong>Leo Dion (Host): </strong>You're you're exactly correct. Yes. </p><p>[00:40:47] <strong>Heidi Helen Pilypas (guest): </strong>Depends. I think on, on what our code needs in, as we get further along, ish would definitely know more about that than me, but our first focus is on.</p><p>[00:41:03] Like really getting it to look good on the iPad. Because even though when we originally started working on Capsicum, we really wanted it to be good on iPad because that is the size of a notebook. Typically it's larger than an iPhone. Like I still focused on iPhone designs when I was. Creating mock-ups on my computer and I didn't have an iPad right.</p><p>[00:41:30] At the beginning of us working on it either. So it was something that I didn't prioritize as much, but now as we're really. Working on a big remake to make it even better. It is something we're prioritizing it's like Ish is always wanting to prioritize. But I, I was, I was hesitant one and I was taking my time with that.</p><p>[00:41:55] But now that's really what we're working on </p><p>[00:41:58] <strong>Leo Dion (Host): </strong>before we close out. Was there anything else you wanted to mention as far as some of the new stuff that we have in iOS 14? </p><p>[00:42:06] <strong>Heidi Helen Pilypas (guest): </strong>Yeah, there is actually. So with iOS 14, As I mentioned previously, there are widgets, but there's also a bunch of other new things.</p><p>[00:42:15] There's new date pickers, menus and page controls that are quick to scrub with your finger. There are also 715 new SF symbols. So SF symbols are symbols. Apple provides that integrate with the San Francisco font, which is the system font on iOS. </p><p>[00:42:35] <strong>Leo Dion (Host): </strong>I love SF symbols. And now they have it working in MacOs as well, which is awesome.</p><p>[00:42:41] <strong>Heidi Helen Pilypas (guest): </strong>Yeah. I really like it too. It just, it just makes using symbols in your apps so much more consistent because they're scalable to different accessibility sizes as well. And they, they work next to text labels. Really well. So they also now support multiple colors and they have several out of the box that work with multiple colors and they also have more localized symbols as well for languages that have some different script characters and also left to right text support.</p><p>[00:43:23] And then on iPad, we also have introduction of the sidebar and multiple </p><p>[00:43:28] <strong>Leo Dion (Host): </strong>columns. Yeah. That's something to think about the, the left to right. And right to left text and dealing with internationalization. I think people should consider that when they're designing their app is what it's going to look like on other languages.</p><p>[00:43:44] Exactly. Well, thank you so much for coming on Heidi. Really appreciate it. Where can people find you online? </p><p>[00:43:51] <strong>Heidi Helen Pilypas (guest): </strong>People can find me on Twitter at Heidi "underscore" Helen. I also have a website, Heidi hillen.com don't have much on it right now, but hopefully over time I will have more blog posts on there. And more examples of my work.</p><p>[00:44:11] It's just kind of. At the beginning of my website at the moment, you can also check out my apps, Capsicum there's a website for that Capsicum.app. And also my app. When did I, I tracking when you do things that is, when did I, whendidi.app? And they're both available on the iOS app store, not available for Android or any other platforms at the moment.</p><p>[00:44:40] Anyway. Yeah. </p><p>[00:44:42] <strong>Leo Dion (Host): </strong>Well, thank you so much for coming on we'll have links to that in the show notes as well. Folks can find me on Twitter at Leo G Dion. My company is bright at digit. If you could take some time to add a review to Apple podcast or Google. Podcasts or Spotify I'd really appreciate it. And if there's anything that you want to talk about, or you want to hear more about, please let me know, send me a DM on Twitter or send me a tweet and let me know what you think really appreciate it.</p><p>[00:45:21] And we look forward to talking to you again. Thank you.</p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sat, 17 Oct 2020 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/35474f21/9bc7b676.mp3" length="22349902" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/367788/full_1601995933-artwork.jpg"/>
      <itunes:duration>2729</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Heidi Helen Pilypas about UI Design. We talk communication for developers, iOS 14 updates, Widgets, and SwiftUI.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Heidi Helen Pilypas about UI Design. We talk communication for developers, iOS 14 updates, Widgets, and SwiftUI.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Understanding Git with Ben Chatelain</title>
      <itunes:episode>65</itunes:episode>
      <itunes:title>Understanding Git with Ben Chatelain</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">f8a6d526-8d6e-4248-bdc2-8440deb7119a</guid>
      <link>https://share.transistor.fm/s/8226bebf</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/phatblat"><strong>Ben Chatelain (@phatblat)</strong></a><ul>
<li>
<a href="https://github.com/phatblat">Github @phatblat</a> - for great commit message examples!</li>
<li><a href="https://www.twitch.tv/phatblat">😎Some Cool DJ Sets 😎</a></li>
</ul>
</li></ul><p><a href="https://youtu.be/C0Ymu7vx_ko"><strong>YouTube Video - https://youtu.be/C0Ymu7vx_ko</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/4011273d"><strong>Episode 29 - Managing iOS Development with Peter Witham</strong></a></li>
<li><a href="https://share.transistor.fm/s/e38854fe"><strong>Episode 46 - Developer Community (Part 2) with Dave Verwer</strong></a></li>
<li><a href="https://share.transistor.fm/s/2445da70"><strong>Episode 64 - A Very Remote Year with Jacob Gorban</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li>
<a href="https://www.pluralsight.com/courses/codemash-session-96">A Brief History of Version Control : Codemash by Brian Meeker</a> </li>
<li><a href="https://en.wikipedia.org/wiki/Microsoft_Visual_SourceSafe">MS Visual SourceSafe 👴</a></li>
<li><a href="https://en.wikipedia.org/wiki/Concurrent_Versions_System">CVS 👴</a></li>
<li><a href="https://www.youtube.com/watch?v=rCrzDaiMP4M&amp;list=PLnD_TKDSaFyVd00l0Py7LnIZxpyF9jeYj&amp;index=14">Level up Your Git Commits with Gitmoji! </a></li>
<li><a href="https://www.git-tower.com/mac">Tower</a></li>
<li><a href="https://git-scm.com/book/en/v2">Pro Git Book</a></li>
<li><a href="https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow">Gitflow</a></li>
<li><a href="https://trunkbaseddevelopment.com/">Trunk Based Development</a></li>
<li>
<a href="https://github.com/mas-cli/mas">mas</a> - A simple command line interface for the Mac App Store</li>
<li><a href="%20https://dangitgit.com/en">Dangit, Git!?!</a></li>
<li>`git log -g` (a better reflog)</li>
<li>Tip: <em>always delete topic branches after merging a PR (or have </em><a href="https://docs.github.com/en/free-pro-team@latest/github/administering-a-repository/managing-the-automatic-deletion-of-branches"><em>GitHub do it for you</em></a><em>)</em>
</li>
<li>Ben’s git shortcuts as <a href="https://github.com/search?q=git+repo%3Aphatblat%2Fdotfiles+extension%3Afish&amp;type=Code&amp;ref=advsearch&amp;l=&amp;l=">fish shell functions</a><ul>
<li>
<a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/amendne.fish">amendne</a> - amend the last commit, reusing the existing commit message</li>
<li>
<a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/bundle-pull.fish">bundle-pull</a> - transports a dirty working copy from one machine to another. </li>
<li>
<a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/git_bundle_create.fish#L37">git_bundle_create</a> - creates a <a href="https://git-scm.com/docs/git-bundle">git bundle</a> by stashing a dirty working copy</li>
<li>
<a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/ignore.fish">ignore</a> - adds file paths to .gitignore file</li>
<li>
<a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/lg.fish">lg</a>, <a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/lga.fish">lga</a> - minimal yet pimped out history graph</li>
<li>
<a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/new.fish">new</a> - show new commits received after a pull</li>
<li>
<a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/pop.fish">pop</a> - remove the last commit, but keep the changes in the working copy</li>
<li>
<a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/publish.fish">publish</a> - push a new branch to a remote</li>
<li>
<a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/review.fish">review</a> - inspect the last commit</li>
<li>
<a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/rewrite.fish">rewrite</a> - uses filter-repo to correct an author email typo (destructive)</li>
<li>
<a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/scrub.fish">scrub</a> - uses filter-branch to delete files from history (destructive)</li>
<li>
<a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/root.fish">root</a> - prints the path to the root of the local repo</li>
<li>
<a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/stash.fish">stash</a>, <a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/stsave.fish">stsave</a>, <a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/stlist.fish">stlist</a>, <a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/stshow.fish">stshow</a>, <a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/stpop.fish">stpop</a>, <a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/stdrop.fish">stdrop</a> - functions for working with stashes</li>
<li>
<a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/suri.fish">suri</a> - submodule update recursive init</li>
</ul>
</li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance or indie apps like <a href="https://appfigures.com/resources/aso/aso-teardown-fotmob">Fotmob</a>.</li>
<li>
<a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">New competitor's report in the Appfigures dashboard</a> where you are able to view competitor downloads, build performance benchmarks, and see the new trends as they happen. <a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">Check it out here.</a>
</li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><br><a href="https://transistor.fm/?via=empowerapps"><strong>Transistor.Fm</strong></a><br><em>Your podcast's publishing platform<br></em>Transistor not only hosts your podcast but also:</p><ul>
<li>
<strong>Help distribute your podcast with integrations</strong> to Apple Podcasts, Spotify, Google Podcasts, YouTube, and Mailchimp</li>
<li>
<strong>Deep analytics</strong> including average downloads per episode, popular podcast apps, number of subscribers, trends</li>
<li>
<strong>Professional support</strong> for creatives, businesses, and professional podcasters when it comes to hosting and analytics</li>
</ul><p><a href="https://transistor.fm/how-to-start-a-podcast/?via=empowerapps"><strong>How do you start a podcast?</strong></a><br><a href="https://transistor.fm/how-to-start-a-podcast/?via=empowerapps">https://transistor.fm/how-to-start-a-podcast/?via=empowerapps</a></p><p>Try it today with<a href="https://transistor.fm/?via=empowerapps"> this special link:</a><br><a href="https://transistor.fm/?via=empowerapps">https://transistor.fm/?via=empowerapps</a></p><p><b>Git Tips and Tricks</b></p><ul>
<li>Know the Git Terminal Command</li>
<li>What Xcode can help with</li>
<li>How Tower Helps</li>
<li>Gitflow vs Trunk Based</li>
<li>What are the different ways to branch</li>
<li>merge vs squash vs rebase</li>
<li>Dealing with Git Submodules 😱</li>
<li>Merging Xcode Projects and Storyboards 🤬</li>
<li>Creating great commit messages</li>
</ul><p><b>Git Terminology</b></p><ul>
<li>How is a Pull Request useful</li>
<li>How Branches work in Git</li>
<li>How to use Tags in Git</li>
<li>What is a Pull Request draft?</li>
<li>What is a Git Stash?</li>
<li>What is Gitmoji?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/phatblat"><strong>Ben Chatelain (@phatblat)</strong></a><ul>
<li>
<a href="https://github.com/phatblat">Github @phatblat</a> - for great commit message examples!</li>
<li><a href="https://www.twitch.tv/phatblat">😎Some Cool DJ Sets 😎</a></li>
</ul>
</li></ul><p><a href="https://youtu.be/C0Ymu7vx_ko"><strong>YouTube Video - https://youtu.be/C0Ymu7vx_ko</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/4011273d"><strong>Episode 29 - Managing iOS Development with Peter Witham</strong></a></li>
<li><a href="https://share.transistor.fm/s/e38854fe"><strong>Episode 46 - Developer Community (Part 2) with Dave Verwer</strong></a></li>
<li><a href="https://share.transistor.fm/s/2445da70"><strong>Episode 64 - A Very Remote Year with Jacob Gorban</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li>
<a href="https://www.pluralsight.com/courses/codemash-session-96">A Brief History of Version Control : Codemash by Brian Meeker</a> </li>
<li><a href="https://en.wikipedia.org/wiki/Microsoft_Visual_SourceSafe">MS Visual SourceSafe 👴</a></li>
<li><a href="https://en.wikipedia.org/wiki/Concurrent_Versions_System">CVS 👴</a></li>
<li><a href="https://www.youtube.com/watch?v=rCrzDaiMP4M&amp;list=PLnD_TKDSaFyVd00l0Py7LnIZxpyF9jeYj&amp;index=14">Level up Your Git Commits with Gitmoji! </a></li>
<li><a href="https://www.git-tower.com/mac">Tower</a></li>
<li><a href="https://git-scm.com/book/en/v2">Pro Git Book</a></li>
<li><a href="https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow">Gitflow</a></li>
<li><a href="https://trunkbaseddevelopment.com/">Trunk Based Development</a></li>
<li>
<a href="https://github.com/mas-cli/mas">mas</a> - A simple command line interface for the Mac App Store</li>
<li><a href="%20https://dangitgit.com/en">Dangit, Git!?!</a></li>
<li>`git log -g` (a better reflog)</li>
<li>Tip: <em>always delete topic branches after merging a PR (or have </em><a href="https://docs.github.com/en/free-pro-team@latest/github/administering-a-repository/managing-the-automatic-deletion-of-branches"><em>GitHub do it for you</em></a><em>)</em>
</li>
<li>Ben’s git shortcuts as <a href="https://github.com/search?q=git+repo%3Aphatblat%2Fdotfiles+extension%3Afish&amp;type=Code&amp;ref=advsearch&amp;l=&amp;l=">fish shell functions</a><ul>
<li>
<a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/amendne.fish">amendne</a> - amend the last commit, reusing the existing commit message</li>
<li>
<a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/bundle-pull.fish">bundle-pull</a> - transports a dirty working copy from one machine to another. </li>
<li>
<a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/git_bundle_create.fish#L37">git_bundle_create</a> - creates a <a href="https://git-scm.com/docs/git-bundle">git bundle</a> by stashing a dirty working copy</li>
<li>
<a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/ignore.fish">ignore</a> - adds file paths to .gitignore file</li>
<li>
<a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/lg.fish">lg</a>, <a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/lga.fish">lga</a> - minimal yet pimped out history graph</li>
<li>
<a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/new.fish">new</a> - show new commits received after a pull</li>
<li>
<a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/pop.fish">pop</a> - remove the last commit, but keep the changes in the working copy</li>
<li>
<a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/publish.fish">publish</a> - push a new branch to a remote</li>
<li>
<a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/review.fish">review</a> - inspect the last commit</li>
<li>
<a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/rewrite.fish">rewrite</a> - uses filter-repo to correct an author email typo (destructive)</li>
<li>
<a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/scrub.fish">scrub</a> - uses filter-branch to delete files from history (destructive)</li>
<li>
<a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/root.fish">root</a> - prints the path to the root of the local repo</li>
<li>
<a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/stash.fish">stash</a>, <a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/stsave.fish">stsave</a>, <a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/stlist.fish">stlist</a>, <a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/stshow.fish">stshow</a>, <a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/stpop.fish">stpop</a>, <a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/stdrop.fish">stdrop</a> - functions for working with stashes</li>
<li>
<a href="https://github.com/phatblat/dotfiles/blob/master/.config/fish/functions/suri.fish">suri</a> - submodule update recursive init</li>
</ul>
</li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance or indie apps like <a href="https://appfigures.com/resources/aso/aso-teardown-fotmob">Fotmob</a>.</li>
<li>
<a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">New competitor's report in the Appfigures dashboard</a> where you are able to view competitor downloads, build performance benchmarks, and see the new trends as they happen. <a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">Check it out here.</a>
</li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><br><a href="https://transistor.fm/?via=empowerapps"><strong>Transistor.Fm</strong></a><br><em>Your podcast's publishing platform<br></em>Transistor not only hosts your podcast but also:</p><ul>
<li>
<strong>Help distribute your podcast with integrations</strong> to Apple Podcasts, Spotify, Google Podcasts, YouTube, and Mailchimp</li>
<li>
<strong>Deep analytics</strong> including average downloads per episode, popular podcast apps, number of subscribers, trends</li>
<li>
<strong>Professional support</strong> for creatives, businesses, and professional podcasters when it comes to hosting and analytics</li>
</ul><p><a href="https://transistor.fm/how-to-start-a-podcast/?via=empowerapps"><strong>How do you start a podcast?</strong></a><br><a href="https://transistor.fm/how-to-start-a-podcast/?via=empowerapps">https://transistor.fm/how-to-start-a-podcast/?via=empowerapps</a></p><p>Try it today with<a href="https://transistor.fm/?via=empowerapps"> this special link:</a><br><a href="https://transistor.fm/?via=empowerapps">https://transistor.fm/?via=empowerapps</a></p><p><b>Git Tips and Tricks</b></p><ul>
<li>Know the Git Terminal Command</li>
<li>What Xcode can help with</li>
<li>How Tower Helps</li>
<li>Gitflow vs Trunk Based</li>
<li>What are the different ways to branch</li>
<li>merge vs squash vs rebase</li>
<li>Dealing with Git Submodules 😱</li>
<li>Merging Xcode Projects and Storyboards 🤬</li>
<li>Creating great commit messages</li>
</ul><p><b>Git Terminology</b></p><ul>
<li>How is a Pull Request useful</li>
<li>How Branches work in Git</li>
<li>How to use Tags in Git</li>
<li>What is a Pull Request draft?</li>
<li>What is a Git Stash?</li>
<li>What is Gitmoji?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sat, 10 Oct 2020 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/8226bebf/b8716204.mp3" length="27582193" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/365802/full_1601913251-artwork.jpg"/>
      <itunes:duration>3386</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Ben Chatelain about Git. They chat about branching strategies, merging strategies, Xcode headaches, and... using emojis in your commit messages!😱🥳👏</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Ben Chatelain about Git. They chat about branching strategies, merging strategies, Xcode headaches, and... using emojis in your commit messages!😱🥳👏</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>A Very Remote Year with Jacob Gorban</title>
      <itunes:episode>64</itunes:episode>
      <itunes:title>A Very Remote Year with Jacob Gorban</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">c22afa54-be57-467c-bdad-421bd0a6ee18</guid>
      <link>https://share.transistor.fm/s/2445da70</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://gorban.org"><strong>Jacob Gorban </strong></a><strong>- </strong><a href="https://twitter.com/jacobgorban"><strong>Twitter @jacobgorban</strong></a><ul><li><a href="https://www.apparentsoft.com"><strong>Apparent Software</strong></a></li></ul>
</li></ul><p><a href="https://youtu.be/wKGEc-9YFGs"><strong>Youtube Video - https://youtu.be/wKGEc-9YFGs</strong></a></p><p><b>Related Episodes</b></p><ul><li><a href="https://share.transistor.fm/s/4011273d"><strong>Episode 29 -</strong> <strong>Managing iOS Development with Peter Witham</strong></a></li></ul><p><b>Related Links</b></p><ul><li><a href="https://tuple.app"><strong>Tuple</strong></a></li></ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance or indie apps like <a href="https://appfigures.com/resources/aso/aso-teardown-fotmob">Fotmob</a>.</li>
<li>
<a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">New competitor's report in the Appfigures dashboard</a> where you are able to view competitor downloads, build performance benchmarks, and see the new trends as they happen. <a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">Check it out here.</a>
</li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><br><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><strong>Linode</strong></a><br><em>A cloud experience developers love</em></p><ul>
<li>Great for Setting Up a Backend for Your App</li>
<li>Variety of VM Configurations and Settings</li>
<li>Reasonable Pricing Starting at $5 per month</li>
<li>Global Data Centers</li>
<li><strong>The Developer Cloud Simplified</strong></li>
</ul><p>Try it today with<a href="https://transistor.fm/?via=empowerapps"> </a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7">this special link:<br>https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7</a></p><p>Check out <a href="https://orchardnest.com">OrchardNest</a> Today:<br>https://orchardnest.com</p><p><b>Remote Work Guidelines</b></p><ul>
<li>Dealing with Communication</li>
<li>Slack Guidelines for Channels and DMs</li>
<li>How to stay in touch</li>
<li>Scheduling Meetings</li>
</ul><p><b>Remote Work and Software Development</b></p><ul>
<li>Mentoring Junior Developers</li>
<li>Encouraging Communication</li>
<li>Doing Code Reviews and Pull-Requests</li>
<li>Organizing Testing on Devices </li>
<li>Using the right tool for Project Management</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><b>Transcript</b></p><p><strong>Leo Dion (Host): </strong>Thank you for joining me for another episode, a empower apps. I'm your host, Leo Dion I'm with Brightdigit specializing in development in the Swift space and Apple space as well. Today we have with us, Jacob Corban. Hey Jacob, how are you doing? </p><p><strong>Jacob Gorban (guest): </strong>Good. Thank you. </p><p><strong>Leo Dion (Host): </strong>So Jacob, I've known you for, I wanna say like the first time we met would have been like release notes, maybe. Did you go to Release Notes? </p><p><strong>Jacob Gorban (guest): </strong>I've been to all of them. Yes. </p><p><strong>Leo Dion (Host): </strong>Yeah. That's probably the first time I met you back in 2015 back in the good old days when we actually like travel and go to conferences and stuff. I miss those days. I've done. Gosh, two conferences this year that have been I've spoken at that have been remote.</p><p>I've got. Three more conferences actually, by the end of the year that I'll be speaking at all remote, all from the convenience of this wonderful home office here, which has its advantages. Assuming nobody's home along with me, who's little and requires a lot of attention. I think we're kind of in the same boat actually.</p><p>There's there's been an adjustment for me, certainly because I have a lot of family members who live in this house. I don't know about you, but like I've worked for mostly for 12 years now. 10 years almost. So what's, what's new to me this year has just been dealing with like me and my wife scheduling and taking care of the kids while we're working, which you know, that's the big curve ball this year with COVID and everything with 2020.</p><p>How about you? Has there been any big adjustments working remotely this year? Well, </p><p><strong>Jacob Gorban (guest): </strong>I was in this like a situation kind of as your, that I was already working remotely. I've been an Indie since 2009, like full-time Indie. So like on this front it was fine. Like I didn't have to adjust to working remotely.</p><p>But as you, as you have, like, I have like my kids and there's like a school age. They're not very small, so like it's easier, but. No, they were at home and most of the time I have my, one of my kids at home right now. And I could ask him to be quiet. It's like for the next door. Well, while we're your core is not bothering me with anything.</p><p>So there's none of that. It was like, it was fine. </p><p><strong>Leo Dion (Host): </strong>Yeah. How long have you been an indie and kind of tell us a little bit about some of the stuff that you've been making over the last 15, 10 years. </p><p><strong>Jacob Gorban (guest): </strong>Like I started dabbling in Mac development on the side, like how did they job? In 2005, I got my first Mac and I was already like a hobby developer.</p><p>And usually when I kind of tried the new operating system, they like to try those. I would try it to see how do we develop for those. And, and so I tried to do something for the Mac, which I had like almost like an app we try on different platforms to do like you know, my go-to project.</p><p>And I did that. And eventually on the Mac, I like the, like the, the software environment. I started to learn about cocoa and how this works and all these new concepts that are in cocoa and. I also started to lag the you know, the community of the cocoa developers. So at that time they were very open and helpful and they could see that all people do business with that.</p><p>And that kind of, Oh, I never considered that really, that much like doing software and, and selling them directly. And so this first app that kind of, it grew into like the first app in the business. This is what's now one of my Mac apps ImageStreamer. So now it's in version of it's version four, but you know, back then was the 1.0, like the ugly 0.1 0.0.</p><p>So I would continue to studying on the side. And by 2009 it was still not earning anything. I'm not sure, but I found that like part-time partner and we started to work on the new application, which is a CashCreator, which we also kind of still have and developing the second version of and I decided to try and make it like indie full-time.</p><p>And I know gave my notice at the day job and, and it's been a pretty, like a very luckier ride, but kinda, it was, it was fine. Like, I don't know, maybe I made less money, but I had a much more fulfilling and kind of relaxed life then as a day job, I guess. </p><p><strong>Leo Dion (Host): </strong>Yeah. I'm in the same boat - going independent.</p><p>Has been one of the best decisions I've made in my life and just there's ups and downs financially. Most certainly. But like I did take that over the flex, the flexibility, and like just the lifestyle over, you know, it's worth the benefits quite a bit. Yeah. </p><p><strong>Jacob Gorban (guest): </strong>Yeah. For, for me, I had like such a, I had a long commute.</p><p>I had a, you know, pressure. I didn't see my family. So like all these, like. Again, so many lifestyle benefits from going into that kind of adapt ways all day, like financial promise, like we could have, or like possibly now I do work also consult for a, for a different company remotely as well. So my time is split between like managing my own products, my own team, and And doing the consulting work.</p><p><strong>Leo Dion (Host): </strong>Yeah. Yeah. Same thing here doing the consulting work and doing the independent stuff. </p><p><strong>Sponsorship</strong>Hey folks. So here's the thing you're probably thinking to yourself. I want to build a brand new app or maybe you already have an app in the app store. I think now is probably the time you're going to want to really optimize that app.</p><p>In the app store. What I mean by that, make it easy for people to find it. And for people to download it. It's one thing that you can build this great app for the iPhone 12 or iOS 14, or watch at West seven. It's another thing. Being able to help folks who have their brand new iPhone or their hand me down, being able to find all these new apps.</p><p>And this is where AppFigures really comes in there. Give you everything you need to do this all in one place. So if you have a really good idea or an app idea, and you want to see how many people are searching for that, I figures is going to be your spot. If you already have an app in the app store, and you want to see what words you need to use or what terms you need to use so that people can find you easily.</p><p>AppFigures is for you. And it's really easy. All you have to do is use their promo code and power 30, 30 to get 30% off for the next three months. That's it. That's on asking a lot. And AppFigures is that they don't just have this really great universal analytics dashboard. They also provide a lot of other great apps, store tools for optimization, and that's really the name of the game.</p><p>That's going to improve your visibility and that's going to help you find more users. And figures has more than a decade of providing mobile analytics and insights. And they also have this new tool called the competitor intelligence dashboard, and that allows you to track competitor downloads and understand what strategies you're going to use so that you can grow your bottom line.</p><p>That's the thing. You can have a great idea. You can get users. Maybe by personally reaching out to them. But if you can improve your visibility on the app store, that's really the name of the game. So go ahead, head over to appfigures.com to try and figures for free. If you like it, both the new and existing customers can use the special code, empower 30, 30 to get 30% off for the next three months.</p><p>So go ahead, give it a shot and let me know what you think. And if you need any help, try out some of those new app tear downs that Ariel has been doing. They've been fantastic and they've been really providing a lot of help to me. And I think to a lot of folks to what they need to do to get their app store apps up and working.</p><p>So go ahead and try it out with the empower 30 30, you get 30% off for the next three months, or try the link in the show notes below. Thank you AppFigures for sponsoring our show.</p><p><strong>End Sponsorship<br></strong><br></p><p>So has any of your clients or anybody that you've worked with have had to adjust - not necessarily for you, but for the other folks that they work with have had to adjust to dealing with remote teams and managing a remote team. </p><p><strong>Jacob Gorban (guest): </strong>My client knows. So because I have one client and I've worked for them for the last five years.</p><p>So it's a very kind of consistent work environment and they are mostly remote as they already were. So unless maybe, I don't know, maybe they're a sales team, which was kind of had a local presence. As, as far as developers that were already to remote. So I guess they had to do like, just again, only if you adjustments, </p><p><strong>Leo Dion (Host): </strong>that's good to hear cause I think like some companies have had a really difficult time adjusting to being remote this year. What are some of like the biggest lessons you've seen from other teams going remote or having to go remote?</p><p><strong>Jacob Gorban (guest): </strong>I think the biggest lesson is that it can be done. Right. So I think they many companies like wouldn't believe right. They can work remotely. Like there would be more downside than upside, I guess. </p><p><strong>Leo Dion (Host): </strong>Yeah, it certainly seems like this year it's accelerated. It's been going on very slowly, as soon as technology caught up. I just, I remember like 20 years ago when we had all the situation with the airport, it's after September 11th, like conferencing, video conferencing became this big attraction and then it kind of died out.</p><p>Whereas like this year, a lot of companies have accelerated and found a lot of benefits do it financially, specifically when it comes to real estate to not having to have offices for folks, but it seems like this year it's really accelerated that that move to remote. </p><p><strong>Jacob Gorban (guest): </strong>Yeah. I think one of these examples is like maybe one's the largest Canadians, software companies, Shopify.</p><p>Right? So they were all like in, I think Ottawa region if I'm not  mistaken and so again, with the COVID situation, so people start to work from home. They gave people like, you know, some money to, you know, like buy a chair or whatever, like for the home office and you know, a couple of months. And they said, Oh, we will, that will be what they call like the digital first company.</p><p>Right? Like, so like the new hires we will default to working remotely and maybe, yeah, maybe they can, there was another company in Canada in the news of that. Like, I think the largest software company, that's going to answer a price company. And they said, Oh, we will just, yeah, like many people will not return home and we will just, you know, sell one of our buildings.</p><p><strong>Leo Dion (Host): </strong>Right, right. That's that's the thing is like the ability not to have to pay for rent on a building is a big attraction. So what do you think are some lessons that folks should come away with when it comes to like dealing with a remote team? </p><p><strong>Jacob Gorban (guest): </strong>You know, remote work is it's all about communication, right?</p><p>So the communication style changes. And if you, when you work in, you know, at an office, you can, you know, just knock on somebody's door or the chair, right. Or the backend, and, and ask a question kind of remotely it's different tools. Right? So the first of all, The company or the team, right. They have to decide what tools they use for communication.</p><p>And for many as it was already like, you know, maybe using Slack, maybe it's like one of the most popular for a smaller companies. And this is what kind of we're using. It appears in software as well. So you have to agree on like what the style is. Well, Communicating right. How you respond and, and, and have expectations about like what's the reasonable, like time to, for people to respond.</p><p>Or it's kind of, it's a big topic, but like communication. Right. And I think the larger the company, the more, I guess, guidelines, the company should have like the, either the HR people or the, you know, the. The leaders of the company set some kind of guidelines for like how people should talk on Slack, like how to respond and and what to expect.</p><p>And like my clients who are a bigger company than mine. Yeah, they do have that and it helps. </p><p><strong>Leo Dion (Host): </strong>So what are some, like, what do you mean by guidelines? Exactly. </p><p><strong>Jacob Gorban (guest): </strong>Well, it could be first of all. Okay. If you have multiple channels. So like what to post on each channel, if it's like you need to responds then again on Slack, you can have these like emoji responses.</p><p>Right. And so like, maybe even just know that you've seen like somebody wrote, maybe it's an announcement. So just maybe put an item, like an emoji that you've seen this announcement. Right. Stuff like that. Yeah. </p><p><strong>Leo Dion (Host): </strong>Like a reaction emoji essentially. Yeah. And I think like for me, the, the guideline has always been, is like, Email is usually the slowest form of communication.</p><p>Like that's something that you're expecting like a few days, then you have the emergency. Of using like something like a text message personally, texting somebody, if you like, if it's really, really important. And to me, like Slack is somewhere in between where it's like, you want to get a hold of someone in a conversational manner, but you don't want it to be as slow as email, but it's not an emergency.</p><p>And that's like kind of where Slack or Microsoft teams is. The other one I've seen. As far as like communicating with folks, I am on gosh, like 20 slacks, at least, I don't know how many you are, but it's like every specific agency and every specific geographical area technology. And then of course, every time I pick up a new client, they're on their own little Slack workspace.</p><p>So I feel like I've become an expert in Slack accidentally over the last few years. The other thing I was going to say is like using mentions in a healthy way and making sure you are using DMS and channels properly. So what I mean by that is like a mention is a good way to get ahold of someone who's just not going to be like babysitting a specific channel in Slack.</p><p>And the other thing is like, some things could be DMS, but if it's something that could be helpful to a whole team, it might be worth putting that in a specific channel. That's. Let's say you have Android folks or iOS folks. Like if it's something to the helpful to the whole iOS team, you may want to ask that question in the whole iOS team as opposed to DMS.</p><p>Is there any other slick Slack tips you've run into? </p><p><strong>Jacob Gorban (guest): </strong>I think this thing like about posting in the correct, like channel or the am is the important. Like decision for everybody to make. Right. It's similar to, like, you wouldn't want to invite everybody to a meeting and kind of waste their time if they're not related to the questions you're asking.</p><p>Right. And this may be what leads to sometimes like proliferation of Slack channels, like even on smaller groups. Right. Because maybe somebody is No. I know like a manager maybe needs like, you know, both see the marketing and the development side, but maybe the you know, the marketing team doesn't necessarily want to see the development chatter and vice versa.</p><p>So yeah, this kind of etiquette, I think becomes important and not mentioning if you don't have to, like, or if it's not really origin. And yes, I do feel kind of the same about like the email versus Slack versus text message kind of urgency or like hierarchy. So Slack is, yeah, I would like, like to have a reply relatively soon, but it probably, yeah.</p><p>Today or like the next big start of day. Right. I like, especially if you're working like across time zones. So in my team I have a. Some people are like basically the same time zone, but I have a developer in, in Poland. And so you know, and I mean, I'm in Canada, so we have our time difference.</p><p>And so that's fine. Right. Let's say if I'm messaging him and he's already in those working. And so he replies the next day and it's fine, right? Same for me. </p><p><strong>Leo Dion (Host): </strong>I think that's a, that's one of the things, time zones, definitely something I've had to get used to as I've worked with more people. And just being comfortable with that, but like this idea of asynchronous communication you've talked about like how, when you're in a workplace, you can just tap on somebody's shoulder or just go to somebody's cube and say, Hey, I got a question for you.</p><p>You really have to do that with Slack. And you have to have like a healthy attitude of knowing that somebody is not going to like message you back right away. And. I like that. Cause I always hated being interrupted. In an actual office, I always found that to be unhelpful. And I think a lot of companies, they just don't like that.</p><p>They want to be able to get ahold of you all the time and constantly interrupt you. And I think that's, that's I I'm hoping that the remote team thing. Teaches companies, good habits communicating in an asynchronous manner, because if you really need to like talk to someone and you really need to like meet with someone, and that's what scheduling meetings is really about.</p><p>I don't know how you've found it over the last few years. </p><p><strong>Jacob Gorban (guest): </strong>I like Apparent Software software. I do try something different now. So like the regular timing for like meetings and whatnot, it happened like we had like the weekly meeting where you have a small team. Right. So it kind of, we all get on the, yeah. On the call and it's like, you know, the development, the marketing, the design, we kind of all, I'll hop onto the call and and we'll have our like weekly status and decisions and kind of task for the next week.</p><p>I did find, well, sometimes it's just. Hmm of takes too long a time. So like if somebody gets either stuck on like, on something, or they're not, you know, banging their head and they're just afraid to ask like, like again, in a different environment, maybe they would just, you know, come by and ask and say, Oh, I have difficulty with that either because of Slack or again, maybe like personal styles, people will sometimes keep kind of to themselves and kind of keep trying to solve the problem instead of like, asking for help with where.</p><p>This could save a lot of time. And so I did ask for now, like for like from developer and designer too. And kind of, we try and get an experiment where they will like end of day will, you know, right in the, okay. I've been working on that and then maybe I'll be working on that tomorrow. And then if I had any difficulties or the difficulties, </p><p><strong>Leo Dion (Host): </strong>it's basically like a standup, that's what it kind of sounds like.</p><p><strong>Jacob Gorban (guest): </strong>It's like a daily standup. Yes. But instead of like in the, in the morning, especially because again, we're at different timezone and everybody's remote. So like we don't do it like set timers. So people just usually that candles their day, whatever time to decide that we'll kind of say. Okay. I did that and I, I see where the developer, so like my developer, she's like a junior developer, so, you know, I help him, like, I'm mentoring him.</p><p>And and thus you know, like I can see, Oh, like maybe he's stuck here or maybe he says, I'm stuck here and I can help it more, like quicker than previously. He was sometimes like, wait several days before it kind of, I don't know, maybe mustering the courage to ask or whatever, like it might be, he didn't feel.</p><p>Comfortable asking. And so I wanted to encourage, encourage that it doesn't necessarily mean that we'll reply, right, right away. Maybe even get maybe a man maybe in a different time zone, the, or maybe I'm busy with my client's work or whatever, but at least it will be, you know, it will not take more than a day or like probably several hours to get to the point.</p><p>And, and so far again, this experiment to find it, it helps It helps me to understand again, where am I? Kind of, my team stands on, like, especially with regards to the weekly tasks or whatever. And with the development it's helps me help the developer. Quicker and, and that's also kind of run the project maybe with Quaker as well.</p><p><strong>Leo Dion (Host): </strong>That's a really good, good point about the junior developer. How do you create an encouraging environment for them to ask questions? Because I can see how somebody might be intimidated by that. Especially a junior who might think, you know, Oh, they're not going to think. I'm very good if I ask these questions.</p><p>So I should just keep my mouth shut. Waste time. </p><p><strong>Jacob Gorban (guest): </strong>Yeah, we'll just as we started and, and this developer did work in a different place. Like for several months, like, as his first job where he wasn't encouraged to ask for help and it was kind of like, I guess, reprimanded for it because he was wasting other people's time.</p><p>And of course it wasn't very helpful for him. And and when w when we started to work together, it was very kind of, you know, I was encouraging that right from the start saying, you know, if you have any questions, like, you know, asking me and like, I, I never reprimand or anything. Right. Like, I, I try, I try to explain, I tried to explain to the, I will ask questions.</p><p>So like, he, he will try to get to the answer by himself. So like he learns how maybe like to think right. Or how to use the tools or so encourage the learning. But I think it was, he was maybe still, maybe just. Trying to learn by himself. Again, he's a self-taught developer, so, you know, I'm a self-taught developer, so it kind of makes sense for me.</p><p>Okay. I was banging my hands sometimes, like we know for hours or days to find the, to find the solution to something, but. Sometimes it's would have been nice to have a, you know, an experienced developer to ask in the beginning, the beginning of my career. And especially like, you know what, there was no stack overflow and then no slacks for like different topics.</p><p>Right. So punch cards, right. Well, not that far away, but, but you know, I've used tapes and like a lot before the Mac, right. I was using, yeah. I don't think discs is that the expectation we had before this, before the diskettes and floppy disks, before that, I meant like the tapes. So I just encourage that.</p><p>And I think the, now with the, like the kind of the daily stand-up kind of reports, which sometimes it's like, she would just say, Oh, I'm stuck home. Right. And this would be kind of the report and then kind of try to help him and and kind of guide them to the solution. So I think this helps, right, because just, just to save everybody's time. </p><p><strong>Leo Dion (Host): </strong>Yeah. And I think like daily stand-ups are a great way to encourage like that kind of communication. Cause he's forced to basically say what he's stuck on and also realize he's not the only one who's stuck on stuff and has quit pending questions. </p><p><strong>Jacob Gorban (guest): </strong>Yeah. Yeah. Yeah. In this case we don't do that.</p><p>Like. Publicly. So they, they just each message me, but especially because what, okay. One is the developer one is a designer, right? So like they don't necessarily kind of interact as far as like their tasks. Don't. Don't meet. Usually unless the designer works specifically like software, then maybe it would be, it would change, but it's not the case.</p><p>Now. Now the designer works more with the marketing </p><p><strong>Sponsorship (Linode)Leo Dion (Host): </strong>Folks, I wanted to let you know about Linode. Linode is one of my favorite cloud server tools out there. As far as hosting is concerned, you may have seen my latest project, orchard nest, where I have built a website completely in Swift. For showcasing some of the latest and greatest blog posts, podcasts, and videos in the Swift community.</p><p>And that site is completely hosted on Linode. In fact, I can tell you that the server is in Newark, but they have servers all around the world, everywhere from Toronto to Mumbai. So you can set up anywhere or you can set up load balancing and share your site everywhere as well. But it has been a really fantastic tool in building Orchardnest.</p><p>And really it does a great job showing me like various CPU usage and IP for traffic, IP, six traffic, disc IO, et cetera. It's been awesome. And it's been consistently running. Great. And I think it's a really great. You get a lot for your price, especially for developers who really want to build stuff hands-on and get the developer tools.</p><p>They need to start their brand new server project. So go ahead and give Leno shot. The link to Linode is in the show notes below. Use that to let them know that you heard about Linode from the show. They've been awesome. I've really enjoyed hosting orchard nest on. Linode orchard nest.com. It's been fantastic.</p><p>They have all sorts of great tools. Get yourself a nice, simple Ubuntu server and start working on that vapor application you want to today using Lin ode. Again, use the link in the show notes below to let them know you heard about Linode from us. And hopefully you can get started on your new project today.</p><p><strong>End Sponsorship</strong>What are some other big challenges that you've seen with like developing software and remote remote teams? </p><p><strong>Jacob Gorban (guest): </strong>I guess the code review. Right. And I know today there are tools for that, that kind of should help with that, but I'm still didn't. Like, I didn't try any of those. So with the developer, it's usually either we just, Oh, you know, open, you know, I would open on my Xcode or he would paste a bit of code and I will kind of go from there and local again, like open the project and Xcode then see what's there and kind of guide him this way.</p><p>But you know, like remembering from my you know, day job days and Yeah. Lucky even the university, like having somebody like right by your shoulder, like where we actually like looking at the same screen at the same time, like when, like, you know, one person navigation of the other kinds of, you know, talks with checks, this kind of was helpful and I don't use any of those tools yet. </p><p><strong>Leo Dion (Host): </strong>Yeah, I know, like couple's a big one. That's been in a lot of circles I've seen people have been raving about. There is some stuff with like get hub and get lab, for instance, where you can do like code reviews within a poll request. There's things like that.</p><p>That's good for like asynchronous, like, Oh, I want to review a code, but you still like, like you're saying kind of, you need to have like a call, like a phone call or something where you can like, say, Hey, this is exactly what I meant about like, How you need to change this specific architecture here and like go over that stuff.</p><p>And I kind of, I, yeah, I completely agree with you, especially with like a junior developer, they need like the handholding essentially to know like how to fix some of the issues in the </p><p><strong>Jacob Gorban (guest): </strong>code. Yeah. Yes. And the simplest would be just screen sharing. So we send them let's go like a Google meet or something and share this screen.</p><p>And this kind of a simple, you know, like two people's share, looking at the same school, </p><p><strong>Leo Dion (Host): </strong>speaking of, Git and version control, what are some issues you see crop up with remote teams when it comes to that? Anything in particular? </p><p><strong>Jacob Gorban (guest): </strong>I'm not very like detailed about how to work with get Well, we do use get, and, and we do use branches and, you know, we merged them and and all that, but again, we're not a large team.</p><p>Yeah. I mean, it still helps. And I'm trying to do like the, you know, the kind of like the version, not the version, like feature branches. It's I know it's always a struggle for me as well. Like how I tell me to do the commits. Right. I would usually not spend the time to like rebase and commit, but I will try to make.</p><p>The best I can during the commits. Right. So I can, okay, this is a fixed thing. I fixed that. Or I added this feature. I'm trying something. Okay. I will try to commit that. But with larger features, something's complicated, right? If you need to like, develop a new feature that goes like, along with the UI and the, I know like the kind of like the backend and sometimes it's just all has to grow together.</p><p>So I will just have like a work in progress commit, right. Maybe like end of the day. And not necessarily break this up because sometimes it's really hard to break up like a wide, like why it's fraught of development or why kind of you go across the whole, like cross-section of the app, let's say right?</p><p><strong>Leo Dion (Host): </strong>Yeah. We'll be talking more about actually in the next episode, I have Ben Chatelain coming on to talk about, Git, and Gitmoji is and all the different things people need to know about when it comes to git. So definitely you want to catch that next episode when it comes out probably next week.</p><p><strong>Jacob Gorban (guest): </strong>I'm make sure to listen. </p><p><strong>Leo Dion (Host): </strong>It's just such a deep, deep subject there's always like 500 ways of, of doing stuff even more than you just realize. So one of the issues specifically in the Apple space is dealing with like team management and developer teams and certificates and all that stuff.</p><p>How do you deal with that as a, like with your indie team, essentially </p><p><strong>Jacob Gorban (guest): </strong>within the limits of what they ordered, they allow, right? Like the With the teams and development, it's pretty, I guess, straightforward, right? You are the developer, you add, you allow them access to specific apps. So the, the, the developer I have in Poland, so he works on like, Oh yeah, iOS app, we have called Socialite.</p><p>And so he has the basically I call him, I called the rise. To not to commit dab to the, for review and to the app store, both he and the, like the product, like marketing person. She also has access to that Susanna with the provisioning. Yeah. You know, it's, it's always a headache. Like I never quite understand provisioning like 100% how this works and we just solve as it goes like, luckily Xcode became better with managing that for non-development devices. So this is fine for the Mac apps. I do the releases </p><p><strong>Leo Dion (Host): </strong>Are you in the app store? </p><p><strong>Jacob Gorban (guest): </strong>Yes, but okay. Both apps store and direct for the Mac app? Of course. </p><p><strong>Leo Dion (Host): </strong>What other challenges do you face developing like in the Apple space and still being remote team?</p><p><strong>Jacob Gorban (guest): </strong>Well, for me, like, again, In the Apple space, that was always remote. So like, I don't know the other way, but I would, I would think that like the larger the team gets and maybe like the, if you have like a QA, then, you know, like a remote team will have to have like their own devices. Right. Everybody's so like you cannot share maybe, you know, those devices and stuff like that.</p><p>So that might be a, you know, a bit of a problem for like some teams that they have like to spend more on maybe on Monday. On the equipment for remote team, I thought them that I don't think there's anything like special about Apple development versus like other types of developments. Right. Because it's just because like for Apple, we usually develop for the devices.</p><p>And so everybody has to have the devices or, or you have to, Oh, you have to ask. Right. So maybe if I have the you know, I have this kind of iPhone and the other person has like these kinds of I-phones and okay. Everybody has to you know test a little bit. Right. And this is like the other thing again, because there is no pool of devices in one place.</p><p><strong>Leo Dion (Host): </strong>And then the other thing, do you use any sort of continuous integration? </p><p><strong>Jacob Gorban (guest): </strong>No, no, no, we don't. We like just this such a small team and I used to have it at one point I used to have like an xcode server at like Mac mini colo. They changed name names, and they was using that for 'em. Oh, for one of the Mac apps when I was working with a different remote development team.</p><p>And so I had this set up and then when, you know, this app has a test for the, like the data model and selected around the tests, you know, went into, so it wasn't the way helpful, but when they start working with a team and it was pretty kind of stable and just managing and paying for that, then they eventually, after maybe a couple of years siding. I disabled that account. I thought of maybe having something like that at home. Like but I don't know, like I'm still not at that scale where I see that as a, you know, as a problem that they need to. </p><p><strong>Leo Dion (Host): </strong>Right. So Jacob, before we close out, One of the biggest challenges. I think folks face, especially with asynchronous communication and such is, you know, we kind of touched on it with our junior developer, but how can you make sure that team members are spending less time like waiting for something that they're stuck on. And that work is constantly queued up. So that way, if there's something they're waiting on, they can always work on something else. What, what are some ways that you've found to like really help your team stay active? </p><p><strong>Jacob Gorban (guest): </strong>I can relate to the question because I was once, like on a different remote contract where I wasn't the situation where I would sometimes get stuck in, like I would finish my task and would not get the next task.</p><p>And this was also acorss ocean, like my client was across the ocean, so I would have to wait till maybe the next evening for me. Yeah to get them that next task. And of course it wasn't very, yeah. You know, very helpful. Right. Because I, I couldn't build. And so yeah, in my case, like with my team what I'm trying to do is yes, I'm trying to make sure we have the tasks.</p><p>So one thing is, well, we have these weekly meetings and like, we go through them and I would usually try to make sure I can, we have several things going on at the same time. Like if there's like smaller things. And so often. We will have like more tasks may be queued, kind of we can fit in the week. Right.</p><p>But just, just in case something goes quicker. You know, people can, can go and if somebody is stuck on something, like one thing I get more. So maybe in like in marketing and design again, we have like a multitude of tasks and so like they can jump maybe to something else right now, like while they're waiting, maybe for, you know, for answer, I think designers that does that quite a lot.</p><p>He has not necessarily, he's waiting for an answer, but he is just like a variety of tasks and he would split his time, I guess, based on his like preferences or mood or anything. Right. But at any case, like there's always enough task. With the developer, I think like one thing is, well, first of all, you can give like larger tasks, right?</p><p>So like, just that they're not kind of finished like in the middle of the week and waiting for the next weekly. The other thing is. Is, what's kind of like, we talked about the word introduced, like the daily, right? Like, like the daily stand up for my job. Right. And this way, if they get stuck, then okay.</p><p>Then to get stuck for a long time. And what helps with that also is for a development project, especially like, right. There's like they plan the projects, and, and like ahead of time and breaks into smaller tasks. Right? So like, again, if you take, maybe, I dunno, like either it's waterfall or agile, like whatever methodology you're using, but.</p><p>Just just having like the tasks and maybe I signed them ahead of time, even. Right. And so like the developer finishes one. Okay. He knows this was the next one. What can I help with that is also have some kind of, you know, like a project management tool or or maybe some other things like tools. So like we use aSana mostly for both the design and the development.</p><p>Okay. Sundays, maybe not like the first choice for development teams and, you know, people use the as are like JIRA, maybe like you hadn't the in the most like heavy case. And yeah, but you know, designers, don't like JIRA and kind of, it's not for, for that marketing and the sun is kind of, it's like a good middle ground.</p><p>You can make us work for it. Like software tickets again, it's not as good, but you can make integrations or like find integration that integrate with you know, like backend tools if you need like Git or GitHub or anything. But we use it more like lightweight, but it has tools now that work well, like the timeline, and it's easy enough to use that.</p><p>Like everybody. Like, it was like different contractors. I worked with like, everybody find this up, comfortable using a Asana. And so this is kind of the heart of the business. And so like the all long-term task and like the planning and the software, like issues or they like the sprints, we all manage that.</p><p><strong>Leo Dion (Host): </strong>Okay, cool. Thank you so much, Jacob, for coming on the show really appreciate it. </p><p><strong>Jacob Gorban (guest): </strong>No, thank you for inviting me. </p><p><strong>Leo Dion (Host): </strong>Where can people find you online? </p><p><strong>Jacob Gorban (guest): </strong>Well my personal account, like I'm mostly most active on Twitter and Twitter was like a godsend in the early days of indie development on the right, in the cocoa space.</p><p>And like wherever I go to conferences, people you know, exchange Twitter handles. So mine is just the Jacob Gorbin's are just like the full, full name. I also, I right. Like, you know, through micro the blog. So like my personal home page, also like a gorban.org. Like my last name, G O R B a n.org.</p><p>Okay. And the company is Apparent Software, but the domain is a apparentsoft.com. </p><p>If people have any questions can reach us on Twitter. I am at Leo G Dion and my company is BrightDigit. Thank you for joining us. And we look forward to talking again. Bye-bye.</p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://gorban.org"><strong>Jacob Gorban </strong></a><strong>- </strong><a href="https://twitter.com/jacobgorban"><strong>Twitter @jacobgorban</strong></a><ul><li><a href="https://www.apparentsoft.com"><strong>Apparent Software</strong></a></li></ul>
</li></ul><p><a href="https://youtu.be/wKGEc-9YFGs"><strong>Youtube Video - https://youtu.be/wKGEc-9YFGs</strong></a></p><p><b>Related Episodes</b></p><ul><li><a href="https://share.transistor.fm/s/4011273d"><strong>Episode 29 -</strong> <strong>Managing iOS Development with Peter Witham</strong></a></li></ul><p><b>Related Links</b></p><ul><li><a href="https://tuple.app"><strong>Tuple</strong></a></li></ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance or indie apps like <a href="https://appfigures.com/resources/aso/aso-teardown-fotmob">Fotmob</a>.</li>
<li>
<a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">New competitor's report in the Appfigures dashboard</a> where you are able to view competitor downloads, build performance benchmarks, and see the new trends as they happen. <a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">Check it out here.</a>
</li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><br><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><strong>Linode</strong></a><br><em>A cloud experience developers love</em></p><ul>
<li>Great for Setting Up a Backend for Your App</li>
<li>Variety of VM Configurations and Settings</li>
<li>Reasonable Pricing Starting at $5 per month</li>
<li>Global Data Centers</li>
<li><strong>The Developer Cloud Simplified</strong></li>
</ul><p>Try it today with<a href="https://transistor.fm/?via=empowerapps"> </a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7">this special link:<br>https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7</a></p><p>Check out <a href="https://orchardnest.com">OrchardNest</a> Today:<br>https://orchardnest.com</p><p><b>Remote Work Guidelines</b></p><ul>
<li>Dealing with Communication</li>
<li>Slack Guidelines for Channels and DMs</li>
<li>How to stay in touch</li>
<li>Scheduling Meetings</li>
</ul><p><b>Remote Work and Software Development</b></p><ul>
<li>Mentoring Junior Developers</li>
<li>Encouraging Communication</li>
<li>Doing Code Reviews and Pull-Requests</li>
<li>Organizing Testing on Devices </li>
<li>Using the right tool for Project Management</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><b>Transcript</b></p><p><strong>Leo Dion (Host): </strong>Thank you for joining me for another episode, a empower apps. I'm your host, Leo Dion I'm with Brightdigit specializing in development in the Swift space and Apple space as well. Today we have with us, Jacob Corban. Hey Jacob, how are you doing? </p><p><strong>Jacob Gorban (guest): </strong>Good. Thank you. </p><p><strong>Leo Dion (Host): </strong>So Jacob, I've known you for, I wanna say like the first time we met would have been like release notes, maybe. Did you go to Release Notes? </p><p><strong>Jacob Gorban (guest): </strong>I've been to all of them. Yes. </p><p><strong>Leo Dion (Host): </strong>Yeah. That's probably the first time I met you back in 2015 back in the good old days when we actually like travel and go to conferences and stuff. I miss those days. I've done. Gosh, two conferences this year that have been I've spoken at that have been remote.</p><p>I've got. Three more conferences actually, by the end of the year that I'll be speaking at all remote, all from the convenience of this wonderful home office here, which has its advantages. Assuming nobody's home along with me, who's little and requires a lot of attention. I think we're kind of in the same boat actually.</p><p>There's there's been an adjustment for me, certainly because I have a lot of family members who live in this house. I don't know about you, but like I've worked for mostly for 12 years now. 10 years almost. So what's, what's new to me this year has just been dealing with like me and my wife scheduling and taking care of the kids while we're working, which you know, that's the big curve ball this year with COVID and everything with 2020.</p><p>How about you? Has there been any big adjustments working remotely this year? Well, </p><p><strong>Jacob Gorban (guest): </strong>I was in this like a situation kind of as your, that I was already working remotely. I've been an Indie since 2009, like full-time Indie. So like on this front it was fine. Like I didn't have to adjust to working remotely.</p><p>But as you, as you have, like, I have like my kids and there's like a school age. They're not very small, so like it's easier, but. No, they were at home and most of the time I have my, one of my kids at home right now. And I could ask him to be quiet. It's like for the next door. Well, while we're your core is not bothering me with anything.</p><p>So there's none of that. It was like, it was fine. </p><p><strong>Leo Dion (Host): </strong>Yeah. How long have you been an indie and kind of tell us a little bit about some of the stuff that you've been making over the last 15, 10 years. </p><p><strong>Jacob Gorban (guest): </strong>Like I started dabbling in Mac development on the side, like how did they job? In 2005, I got my first Mac and I was already like a hobby developer.</p><p>And usually when I kind of tried the new operating system, they like to try those. I would try it to see how do we develop for those. And, and so I tried to do something for the Mac, which I had like almost like an app we try on different platforms to do like you know, my go-to project.</p><p>And I did that. And eventually on the Mac, I like the, like the, the software environment. I started to learn about cocoa and how this works and all these new concepts that are in cocoa and. I also started to lag the you know, the community of the cocoa developers. So at that time they were very open and helpful and they could see that all people do business with that.</p><p>And that kind of, Oh, I never considered that really, that much like doing software and, and selling them directly. And so this first app that kind of, it grew into like the first app in the business. This is what's now one of my Mac apps ImageStreamer. So now it's in version of it's version four, but you know, back then was the 1.0, like the ugly 0.1 0.0.</p><p>So I would continue to studying on the side. And by 2009 it was still not earning anything. I'm not sure, but I found that like part-time partner and we started to work on the new application, which is a CashCreator, which we also kind of still have and developing the second version of and I decided to try and make it like indie full-time.</p><p>And I know gave my notice at the day job and, and it's been a pretty, like a very luckier ride, but kinda, it was, it was fine. Like, I don't know, maybe I made less money, but I had a much more fulfilling and kind of relaxed life then as a day job, I guess. </p><p><strong>Leo Dion (Host): </strong>Yeah. I'm in the same boat - going independent.</p><p>Has been one of the best decisions I've made in my life and just there's ups and downs financially. Most certainly. But like I did take that over the flex, the flexibility, and like just the lifestyle over, you know, it's worth the benefits quite a bit. Yeah. </p><p><strong>Jacob Gorban (guest): </strong>Yeah. For, for me, I had like such a, I had a long commute.</p><p>I had a, you know, pressure. I didn't see my family. So like all these, like. Again, so many lifestyle benefits from going into that kind of adapt ways all day, like financial promise, like we could have, or like possibly now I do work also consult for a, for a different company remotely as well. So my time is split between like managing my own products, my own team, and And doing the consulting work.</p><p><strong>Leo Dion (Host): </strong>Yeah. Yeah. Same thing here doing the consulting work and doing the independent stuff. </p><p><strong>Sponsorship</strong>Hey folks. So here's the thing you're probably thinking to yourself. I want to build a brand new app or maybe you already have an app in the app store. I think now is probably the time you're going to want to really optimize that app.</p><p>In the app store. What I mean by that, make it easy for people to find it. And for people to download it. It's one thing that you can build this great app for the iPhone 12 or iOS 14, or watch at West seven. It's another thing. Being able to help folks who have their brand new iPhone or their hand me down, being able to find all these new apps.</p><p>And this is where AppFigures really comes in there. Give you everything you need to do this all in one place. So if you have a really good idea or an app idea, and you want to see how many people are searching for that, I figures is going to be your spot. If you already have an app in the app store, and you want to see what words you need to use or what terms you need to use so that people can find you easily.</p><p>AppFigures is for you. And it's really easy. All you have to do is use their promo code and power 30, 30 to get 30% off for the next three months. That's it. That's on asking a lot. And AppFigures is that they don't just have this really great universal analytics dashboard. They also provide a lot of other great apps, store tools for optimization, and that's really the name of the game.</p><p>That's going to improve your visibility and that's going to help you find more users. And figures has more than a decade of providing mobile analytics and insights. And they also have this new tool called the competitor intelligence dashboard, and that allows you to track competitor downloads and understand what strategies you're going to use so that you can grow your bottom line.</p><p>That's the thing. You can have a great idea. You can get users. Maybe by personally reaching out to them. But if you can improve your visibility on the app store, that's really the name of the game. So go ahead, head over to appfigures.com to try and figures for free. If you like it, both the new and existing customers can use the special code, empower 30, 30 to get 30% off for the next three months.</p><p>So go ahead, give it a shot and let me know what you think. And if you need any help, try out some of those new app tear downs that Ariel has been doing. They've been fantastic and they've been really providing a lot of help to me. And I think to a lot of folks to what they need to do to get their app store apps up and working.</p><p>So go ahead and try it out with the empower 30 30, you get 30% off for the next three months, or try the link in the show notes below. Thank you AppFigures for sponsoring our show.</p><p><strong>End Sponsorship<br></strong><br></p><p>So has any of your clients or anybody that you've worked with have had to adjust - not necessarily for you, but for the other folks that they work with have had to adjust to dealing with remote teams and managing a remote team. </p><p><strong>Jacob Gorban (guest): </strong>My client knows. So because I have one client and I've worked for them for the last five years.</p><p>So it's a very kind of consistent work environment and they are mostly remote as they already were. So unless maybe, I don't know, maybe they're a sales team, which was kind of had a local presence. As, as far as developers that were already to remote. So I guess they had to do like, just again, only if you adjustments, </p><p><strong>Leo Dion (Host): </strong>that's good to hear cause I think like some companies have had a really difficult time adjusting to being remote this year. What are some of like the biggest lessons you've seen from other teams going remote or having to go remote?</p><p><strong>Jacob Gorban (guest): </strong>I think the biggest lesson is that it can be done. Right. So I think they many companies like wouldn't believe right. They can work remotely. Like there would be more downside than upside, I guess. </p><p><strong>Leo Dion (Host): </strong>Yeah, it certainly seems like this year it's accelerated. It's been going on very slowly, as soon as technology caught up. I just, I remember like 20 years ago when we had all the situation with the airport, it's after September 11th, like conferencing, video conferencing became this big attraction and then it kind of died out.</p><p>Whereas like this year, a lot of companies have accelerated and found a lot of benefits do it financially, specifically when it comes to real estate to not having to have offices for folks, but it seems like this year it's really accelerated that that move to remote. </p><p><strong>Jacob Gorban (guest): </strong>Yeah. I think one of these examples is like maybe one's the largest Canadians, software companies, Shopify.</p><p>Right? So they were all like in, I think Ottawa region if I'm not  mistaken and so again, with the COVID situation, so people start to work from home. They gave people like, you know, some money to, you know, like buy a chair or whatever, like for the home office and you know, a couple of months. And they said, Oh, we will, that will be what they call like the digital first company.</p><p>Right? Like, so like the new hires we will default to working remotely and maybe, yeah, maybe they can, there was another company in Canada in the news of that. Like, I think the largest software company, that's going to answer a price company. And they said, Oh, we will just, yeah, like many people will not return home and we will just, you know, sell one of our buildings.</p><p><strong>Leo Dion (Host): </strong>Right, right. That's that's the thing is like the ability not to have to pay for rent on a building is a big attraction. So what do you think are some lessons that folks should come away with when it comes to like dealing with a remote team? </p><p><strong>Jacob Gorban (guest): </strong>You know, remote work is it's all about communication, right?</p><p>So the communication style changes. And if you, when you work in, you know, at an office, you can, you know, just knock on somebody's door or the chair, right. Or the backend, and, and ask a question kind of remotely it's different tools. Right? So the first of all, The company or the team, right. They have to decide what tools they use for communication.</p><p>And for many as it was already like, you know, maybe using Slack, maybe it's like one of the most popular for a smaller companies. And this is what kind of we're using. It appears in software as well. So you have to agree on like what the style is. Well, Communicating right. How you respond and, and, and have expectations about like what's the reasonable, like time to, for people to respond.</p><p>Or it's kind of, it's a big topic, but like communication. Right. And I think the larger the company, the more, I guess, guidelines, the company should have like the, either the HR people or the, you know, the. The leaders of the company set some kind of guidelines for like how people should talk on Slack, like how to respond and and what to expect.</p><p>And like my clients who are a bigger company than mine. Yeah, they do have that and it helps. </p><p><strong>Leo Dion (Host): </strong>So what are some, like, what do you mean by guidelines? Exactly. </p><p><strong>Jacob Gorban (guest): </strong>Well, it could be first of all. Okay. If you have multiple channels. So like what to post on each channel, if it's like you need to responds then again on Slack, you can have these like emoji responses.</p><p>Right. And so like, maybe even just know that you've seen like somebody wrote, maybe it's an announcement. So just maybe put an item, like an emoji that you've seen this announcement. Right. Stuff like that. Yeah. </p><p><strong>Leo Dion (Host): </strong>Like a reaction emoji essentially. Yeah. And I think like for me, the, the guideline has always been, is like, Email is usually the slowest form of communication.</p><p>Like that's something that you're expecting like a few days, then you have the emergency. Of using like something like a text message personally, texting somebody, if you like, if it's really, really important. And to me, like Slack is somewhere in between where it's like, you want to get a hold of someone in a conversational manner, but you don't want it to be as slow as email, but it's not an emergency.</p><p>And that's like kind of where Slack or Microsoft teams is. The other one I've seen. As far as like communicating with folks, I am on gosh, like 20 slacks, at least, I don't know how many you are, but it's like every specific agency and every specific geographical area technology. And then of course, every time I pick up a new client, they're on their own little Slack workspace.</p><p>So I feel like I've become an expert in Slack accidentally over the last few years. The other thing I was going to say is like using mentions in a healthy way and making sure you are using DMS and channels properly. So what I mean by that is like a mention is a good way to get ahold of someone who's just not going to be like babysitting a specific channel in Slack.</p><p>And the other thing is like, some things could be DMS, but if it's something that could be helpful to a whole team, it might be worth putting that in a specific channel. That's. Let's say you have Android folks or iOS folks. Like if it's something to the helpful to the whole iOS team, you may want to ask that question in the whole iOS team as opposed to DMS.</p><p>Is there any other slick Slack tips you've run into? </p><p><strong>Jacob Gorban (guest): </strong>I think this thing like about posting in the correct, like channel or the am is the important. Like decision for everybody to make. Right. It's similar to, like, you wouldn't want to invite everybody to a meeting and kind of waste their time if they're not related to the questions you're asking.</p><p>Right. And this may be what leads to sometimes like proliferation of Slack channels, like even on smaller groups. Right. Because maybe somebody is No. I know like a manager maybe needs like, you know, both see the marketing and the development side, but maybe the you know, the marketing team doesn't necessarily want to see the development chatter and vice versa.</p><p>So yeah, this kind of etiquette, I think becomes important and not mentioning if you don't have to, like, or if it's not really origin. And yes, I do feel kind of the same about like the email versus Slack versus text message kind of urgency or like hierarchy. So Slack is, yeah, I would like, like to have a reply relatively soon, but it probably, yeah.</p><p>Today or like the next big start of day. Right. I like, especially if you're working like across time zones. So in my team I have a. Some people are like basically the same time zone, but I have a developer in, in Poland. And so you know, and I mean, I'm in Canada, so we have our time difference.</p><p>And so that's fine. Right. Let's say if I'm messaging him and he's already in those working. And so he replies the next day and it's fine, right? Same for me. </p><p><strong>Leo Dion (Host): </strong>I think that's a, that's one of the things, time zones, definitely something I've had to get used to as I've worked with more people. And just being comfortable with that, but like this idea of asynchronous communication you've talked about like how, when you're in a workplace, you can just tap on somebody's shoulder or just go to somebody's cube and say, Hey, I got a question for you.</p><p>You really have to do that with Slack. And you have to have like a healthy attitude of knowing that somebody is not going to like message you back right away. And. I like that. Cause I always hated being interrupted. In an actual office, I always found that to be unhelpful. And I think a lot of companies, they just don't like that.</p><p>They want to be able to get ahold of you all the time and constantly interrupt you. And I think that's, that's I I'm hoping that the remote team thing. Teaches companies, good habits communicating in an asynchronous manner, because if you really need to like talk to someone and you really need to like meet with someone, and that's what scheduling meetings is really about.</p><p>I don't know how you've found it over the last few years. </p><p><strong>Jacob Gorban (guest): </strong>I like Apparent Software software. I do try something different now. So like the regular timing for like meetings and whatnot, it happened like we had like the weekly meeting where you have a small team. Right. So it kind of, we all get on the, yeah. On the call and it's like, you know, the development, the marketing, the design, we kind of all, I'll hop onto the call and and we'll have our like weekly status and decisions and kind of task for the next week.</p><p>I did find, well, sometimes it's just. Hmm of takes too long a time. So like if somebody gets either stuck on like, on something, or they're not, you know, banging their head and they're just afraid to ask like, like again, in a different environment, maybe they would just, you know, come by and ask and say, Oh, I have difficulty with that either because of Slack or again, maybe like personal styles, people will sometimes keep kind of to themselves and kind of keep trying to solve the problem instead of like, asking for help with where.</p><p>This could save a lot of time. And so I did ask for now, like for like from developer and designer too. And kind of, we try and get an experiment where they will like end of day will, you know, right in the, okay. I've been working on that and then maybe I'll be working on that tomorrow. And then if I had any difficulties or the difficulties, </p><p><strong>Leo Dion (Host): </strong>it's basically like a standup, that's what it kind of sounds like.</p><p><strong>Jacob Gorban (guest): </strong>It's like a daily standup. Yes. But instead of like in the, in the morning, especially because again, we're at different timezone and everybody's remote. So like we don't do it like set timers. So people just usually that candles their day, whatever time to decide that we'll kind of say. Okay. I did that and I, I see where the developer, so like my developer, she's like a junior developer, so, you know, I help him, like, I'm mentoring him.</p><p>And and thus you know, like I can see, Oh, like maybe he's stuck here or maybe he says, I'm stuck here and I can help it more, like quicker than previously. He was sometimes like, wait several days before it kind of, I don't know, maybe mustering the courage to ask or whatever, like it might be, he didn't feel.</p><p>Comfortable asking. And so I wanted to encourage, encourage that it doesn't necessarily mean that we'll reply, right, right away. Maybe even get maybe a man maybe in a different time zone, the, or maybe I'm busy with my client's work or whatever, but at least it will be, you know, it will not take more than a day or like probably several hours to get to the point.</p><p>And, and so far again, this experiment to find it, it helps It helps me to understand again, where am I? Kind of, my team stands on, like, especially with regards to the weekly tasks or whatever. And with the development it's helps me help the developer. Quicker and, and that's also kind of run the project maybe with Quaker as well.</p><p><strong>Leo Dion (Host): </strong>That's a really good, good point about the junior developer. How do you create an encouraging environment for them to ask questions? Because I can see how somebody might be intimidated by that. Especially a junior who might think, you know, Oh, they're not going to think. I'm very good if I ask these questions.</p><p>So I should just keep my mouth shut. Waste time. </p><p><strong>Jacob Gorban (guest): </strong>Yeah, we'll just as we started and, and this developer did work in a different place. Like for several months, like, as his first job where he wasn't encouraged to ask for help and it was kind of like, I guess, reprimanded for it because he was wasting other people's time.</p><p>And of course it wasn't very helpful for him. And and when w when we started to work together, it was very kind of, you know, I was encouraging that right from the start saying, you know, if you have any questions, like, you know, asking me and like, I, I never reprimand or anything. Right. Like, I, I try, I try to explain, I tried to explain to the, I will ask questions.</p><p>So like, he, he will try to get to the answer by himself. So like he learns how maybe like to think right. Or how to use the tools or so encourage the learning. But I think it was, he was maybe still, maybe just. Trying to learn by himself. Again, he's a self-taught developer, so, you know, I'm a self-taught developer, so it kind of makes sense for me.</p><p>Okay. I was banging my hands sometimes, like we know for hours or days to find the, to find the solution to something, but. Sometimes it's would have been nice to have a, you know, an experienced developer to ask in the beginning, the beginning of my career. And especially like, you know what, there was no stack overflow and then no slacks for like different topics.</p><p>Right. So punch cards, right. Well, not that far away, but, but you know, I've used tapes and like a lot before the Mac, right. I was using, yeah. I don't think discs is that the expectation we had before this, before the diskettes and floppy disks, before that, I meant like the tapes. So I just encourage that.</p><p>And I think the, now with the, like the kind of the daily stand-up kind of reports, which sometimes it's like, she would just say, Oh, I'm stuck home. Right. And this would be kind of the report and then kind of try to help him and and kind of guide them to the solution. So I think this helps, right, because just, just to save everybody's time. </p><p><strong>Leo Dion (Host): </strong>Yeah. And I think like daily stand-ups are a great way to encourage like that kind of communication. Cause he's forced to basically say what he's stuck on and also realize he's not the only one who's stuck on stuff and has quit pending questions. </p><p><strong>Jacob Gorban (guest): </strong>Yeah. Yeah. Yeah. In this case we don't do that.</p><p>Like. Publicly. So they, they just each message me, but especially because what, okay. One is the developer one is a designer, right? So like they don't necessarily kind of interact as far as like their tasks. Don't. Don't meet. Usually unless the designer works specifically like software, then maybe it would be, it would change, but it's not the case.</p><p>Now. Now the designer works more with the marketing </p><p><strong>Sponsorship (Linode)Leo Dion (Host): </strong>Folks, I wanted to let you know about Linode. Linode is one of my favorite cloud server tools out there. As far as hosting is concerned, you may have seen my latest project, orchard nest, where I have built a website completely in Swift. For showcasing some of the latest and greatest blog posts, podcasts, and videos in the Swift community.</p><p>And that site is completely hosted on Linode. In fact, I can tell you that the server is in Newark, but they have servers all around the world, everywhere from Toronto to Mumbai. So you can set up anywhere or you can set up load balancing and share your site everywhere as well. But it has been a really fantastic tool in building Orchardnest.</p><p>And really it does a great job showing me like various CPU usage and IP for traffic, IP, six traffic, disc IO, et cetera. It's been awesome. And it's been consistently running. Great. And I think it's a really great. You get a lot for your price, especially for developers who really want to build stuff hands-on and get the developer tools.</p><p>They need to start their brand new server project. So go ahead and give Leno shot. The link to Linode is in the show notes below. Use that to let them know that you heard about Linode from the show. They've been awesome. I've really enjoyed hosting orchard nest on. Linode orchard nest.com. It's been fantastic.</p><p>They have all sorts of great tools. Get yourself a nice, simple Ubuntu server and start working on that vapor application you want to today using Lin ode. Again, use the link in the show notes below to let them know you heard about Linode from us. And hopefully you can get started on your new project today.</p><p><strong>End Sponsorship</strong>What are some other big challenges that you've seen with like developing software and remote remote teams? </p><p><strong>Jacob Gorban (guest): </strong>I guess the code review. Right. And I know today there are tools for that, that kind of should help with that, but I'm still didn't. Like, I didn't try any of those. So with the developer, it's usually either we just, Oh, you know, open, you know, I would open on my Xcode or he would paste a bit of code and I will kind of go from there and local again, like open the project and Xcode then see what's there and kind of guide him this way.</p><p>But you know, like remembering from my you know, day job days and Yeah. Lucky even the university, like having somebody like right by your shoulder, like where we actually like looking at the same screen at the same time, like when, like, you know, one person navigation of the other kinds of, you know, talks with checks, this kind of was helpful and I don't use any of those tools yet. </p><p><strong>Leo Dion (Host): </strong>Yeah, I know, like couple's a big one. That's been in a lot of circles I've seen people have been raving about. There is some stuff with like get hub and get lab, for instance, where you can do like code reviews within a poll request. There's things like that.</p><p>That's good for like asynchronous, like, Oh, I want to review a code, but you still like, like you're saying kind of, you need to have like a call, like a phone call or something where you can like, say, Hey, this is exactly what I meant about like, How you need to change this specific architecture here and like go over that stuff.</p><p>And I kind of, I, yeah, I completely agree with you, especially with like a junior developer, they need like the handholding essentially to know like how to fix some of the issues in the </p><p><strong>Jacob Gorban (guest): </strong>code. Yeah. Yes. And the simplest would be just screen sharing. So we send them let's go like a Google meet or something and share this screen.</p><p>And this kind of a simple, you know, like two people's share, looking at the same school, </p><p><strong>Leo Dion (Host): </strong>speaking of, Git and version control, what are some issues you see crop up with remote teams when it comes to that? Anything in particular? </p><p><strong>Jacob Gorban (guest): </strong>I'm not very like detailed about how to work with get Well, we do use get, and, and we do use branches and, you know, we merged them and and all that, but again, we're not a large team.</p><p>Yeah. I mean, it still helps. And I'm trying to do like the, you know, the kind of like the version, not the version, like feature branches. It's I know it's always a struggle for me as well. Like how I tell me to do the commits. Right. I would usually not spend the time to like rebase and commit, but I will try to make.</p><p>The best I can during the commits. Right. So I can, okay, this is a fixed thing. I fixed that. Or I added this feature. I'm trying something. Okay. I will try to commit that. But with larger features, something's complicated, right? If you need to like, develop a new feature that goes like, along with the UI and the, I know like the kind of like the backend and sometimes it's just all has to grow together.</p><p>So I will just have like a work in progress commit, right. Maybe like end of the day. And not necessarily break this up because sometimes it's really hard to break up like a wide, like why it's fraught of development or why kind of you go across the whole, like cross-section of the app, let's say right?</p><p><strong>Leo Dion (Host): </strong>Yeah. We'll be talking more about actually in the next episode, I have Ben Chatelain coming on to talk about, Git, and Gitmoji is and all the different things people need to know about when it comes to git. So definitely you want to catch that next episode when it comes out probably next week.</p><p><strong>Jacob Gorban (guest): </strong>I'm make sure to listen. </p><p><strong>Leo Dion (Host): </strong>It's just such a deep, deep subject there's always like 500 ways of, of doing stuff even more than you just realize. So one of the issues specifically in the Apple space is dealing with like team management and developer teams and certificates and all that stuff.</p><p>How do you deal with that as a, like with your indie team, essentially </p><p><strong>Jacob Gorban (guest): </strong>within the limits of what they ordered, they allow, right? Like the With the teams and development, it's pretty, I guess, straightforward, right? You are the developer, you add, you allow them access to specific apps. So the, the, the developer I have in Poland, so he works on like, Oh yeah, iOS app, we have called Socialite.</p><p>And so he has the basically I call him, I called the rise. To not to commit dab to the, for review and to the app store, both he and the, like the product, like marketing person. She also has access to that Susanna with the provisioning. Yeah. You know, it's, it's always a headache. Like I never quite understand provisioning like 100% how this works and we just solve as it goes like, luckily Xcode became better with managing that for non-development devices. So this is fine for the Mac apps. I do the releases </p><p><strong>Leo Dion (Host): </strong>Are you in the app store? </p><p><strong>Jacob Gorban (guest): </strong>Yes, but okay. Both apps store and direct for the Mac app? Of course. </p><p><strong>Leo Dion (Host): </strong>What other challenges do you face developing like in the Apple space and still being remote team?</p><p><strong>Jacob Gorban (guest): </strong>Well, for me, like, again, In the Apple space, that was always remote. So like, I don't know the other way, but I would, I would think that like the larger the team gets and maybe like the, if you have like a QA, then, you know, like a remote team will have to have like their own devices. Right. Everybody's so like you cannot share maybe, you know, those devices and stuff like that.</p><p>So that might be a, you know, a bit of a problem for like some teams that they have like to spend more on maybe on Monday. On the equipment for remote team, I thought them that I don't think there's anything like special about Apple development versus like other types of developments. Right. Because it's just because like for Apple, we usually develop for the devices.</p><p>And so everybody has to have the devices or, or you have to, Oh, you have to ask. Right. So maybe if I have the you know, I have this kind of iPhone and the other person has like these kinds of I-phones and okay. Everybody has to you know test a little bit. Right. And this is like the other thing again, because there is no pool of devices in one place.</p><p><strong>Leo Dion (Host): </strong>And then the other thing, do you use any sort of continuous integration? </p><p><strong>Jacob Gorban (guest): </strong>No, no, no, we don't. We like just this such a small team and I used to have it at one point I used to have like an xcode server at like Mac mini colo. They changed name names, and they was using that for 'em. Oh, for one of the Mac apps when I was working with a different remote development team.</p><p>And so I had this set up and then when, you know, this app has a test for the, like the data model and selected around the tests, you know, went into, so it wasn't the way helpful, but when they start working with a team and it was pretty kind of stable and just managing and paying for that, then they eventually, after maybe a couple of years siding. I disabled that account. I thought of maybe having something like that at home. Like but I don't know, like I'm still not at that scale where I see that as a, you know, as a problem that they need to. </p><p><strong>Leo Dion (Host): </strong>Right. So Jacob, before we close out, One of the biggest challenges. I think folks face, especially with asynchronous communication and such is, you know, we kind of touched on it with our junior developer, but how can you make sure that team members are spending less time like waiting for something that they're stuck on. And that work is constantly queued up. So that way, if there's something they're waiting on, they can always work on something else. What, what are some ways that you've found to like really help your team stay active? </p><p><strong>Jacob Gorban (guest): </strong>I can relate to the question because I was once, like on a different remote contract where I wasn't the situation where I would sometimes get stuck in, like I would finish my task and would not get the next task.</p><p>And this was also acorss ocean, like my client was across the ocean, so I would have to wait till maybe the next evening for me. Yeah to get them that next task. And of course it wasn't very, yeah. You know, very helpful. Right. Because I, I couldn't build. And so yeah, in my case, like with my team what I'm trying to do is yes, I'm trying to make sure we have the tasks.</p><p>So one thing is, well, we have these weekly meetings and like, we go through them and I would usually try to make sure I can, we have several things going on at the same time. Like if there's like smaller things. And so often. We will have like more tasks may be queued, kind of we can fit in the week. Right.</p><p>But just, just in case something goes quicker. You know, people can, can go and if somebody is stuck on something, like one thing I get more. So maybe in like in marketing and design again, we have like a multitude of tasks and so like they can jump maybe to something else right now, like while they're waiting, maybe for, you know, for answer, I think designers that does that quite a lot.</p><p>He has not necessarily, he's waiting for an answer, but he is just like a variety of tasks and he would split his time, I guess, based on his like preferences or mood or anything. Right. But at any case, like there's always enough task. With the developer, I think like one thing is, well, first of all, you can give like larger tasks, right?</p><p>So like, just that they're not kind of finished like in the middle of the week and waiting for the next weekly. The other thing is. Is, what's kind of like, we talked about the word introduced, like the daily, right? Like, like the daily stand up for my job. Right. And this way, if they get stuck, then okay.</p><p>Then to get stuck for a long time. And what helps with that also is for a development project, especially like, right. There's like they plan the projects, and, and like ahead of time and breaks into smaller tasks. Right? So like, again, if you take, maybe, I dunno, like either it's waterfall or agile, like whatever methodology you're using, but.</p><p>Just just having like the tasks and maybe I signed them ahead of time, even. Right. And so like the developer finishes one. Okay. He knows this was the next one. What can I help with that is also have some kind of, you know, like a project management tool or or maybe some other things like tools. So like we use aSana mostly for both the design and the development.</p><p>Okay. Sundays, maybe not like the first choice for development teams and, you know, people use the as are like JIRA, maybe like you hadn't the in the most like heavy case. And yeah, but you know, designers, don't like JIRA and kind of, it's not for, for that marketing and the sun is kind of, it's like a good middle ground.</p><p>You can make us work for it. Like software tickets again, it's not as good, but you can make integrations or like find integration that integrate with you know, like backend tools if you need like Git or GitHub or anything. But we use it more like lightweight, but it has tools now that work well, like the timeline, and it's easy enough to use that.</p><p>Like everybody. Like, it was like different contractors. I worked with like, everybody find this up, comfortable using a Asana. And so this is kind of the heart of the business. And so like the all long-term task and like the planning and the software, like issues or they like the sprints, we all manage that.</p><p><strong>Leo Dion (Host): </strong>Okay, cool. Thank you so much, Jacob, for coming on the show really appreciate it. </p><p><strong>Jacob Gorban (guest): </strong>No, thank you for inviting me. </p><p><strong>Leo Dion (Host): </strong>Where can people find you online? </p><p><strong>Jacob Gorban (guest): </strong>Well my personal account, like I'm mostly most active on Twitter and Twitter was like a godsend in the early days of indie development on the right, in the cocoa space.</p><p>And like wherever I go to conferences, people you know, exchange Twitter handles. So mine is just the Jacob Gorbin's are just like the full, full name. I also, I right. Like, you know, through micro the blog. So like my personal home page, also like a gorban.org. Like my last name, G O R B a n.org.</p><p>Okay. And the company is Apparent Software, but the domain is a apparentsoft.com. </p><p>If people have any questions can reach us on Twitter. I am at Leo G Dion and my company is BrightDigit. Thank you for joining us. And we look forward to talking again. Bye-bye.</p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sat, 03 Oct 2020 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/2445da70/ab8300b1.mp3" length="18758093" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/364198/full_1601637118-artwork.jpg"/>
      <itunes:duration>2281</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Jacob Gorban about being remote and what they've learning over the years being remote such as communication, keeping teams productive, managing iOS development and more.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Jacob Gorban about being remote and what they've learning over the years being remote such as communication, keeping teams productive, managing iOS development and more.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Apple Watch 2020 with Steve Lipton</title>
      <itunes:episode>63</itunes:episode>
      <itunes:title>Apple Watch 2020 with Steve Lipton</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">1e8b5d9e-ff54-4dfe-8a5e-778ad6c67070</guid>
      <link>https://share.transistor.fm/s/21517a94</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/steve_lipton"><strong>Steve Lipton- Twitter @Steve_Lipton</strong></a><ul>
<li><a href="https://www.linkedin.com/in/steven-j-lipton">LinkedIn</a></li>
<li><a href="https://makeapppie.com/">MakeAppPie</a></li>
<li><a href="https://linkedin-learning.pxf.io/YxZgj">iOS Development Tips Weekly</a></li>
<li><a href="https://linkedin-learning.pxf.io/myDLO">LinkedIn Learning Courses</a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/3d4c7634"><strong>Episode 18</strong> - <strong>WWDC 2019 - Apple Watch with Gary Sabo</strong></a></li>
<li><a href="https://share.transistor.fm/s/eaeed04a"><strong>Episode 32</strong> - <strong>Training Your Team with Steve Lipton</strong></a></li>
<li><a href="https://share.transistor.fm/s/dfb18c54"><strong>Episode 57</strong> - <strong>SwiftUI with Majid Jabrayilov - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/87165d83"><strong>Episode 35</strong> - <strong>SwiftUI - The Good, the Bad, and the Benefits</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://transistor.fm/?via=empowerapps"><strong>Transistor.Fm</strong></a><br><em>Your podcast's publishing platform<br></em>Transistor not only hosts your podcast but also:</p><ul>
<li>
<strong>Help distribute your podcast with integrations</strong> to Apple Podcasts, Spotify, Google Podcasts, YouTube, and Mailchimp</li>
<li>
<strong>Deep analytics</strong> including average downloads per episode, popular podcast apps, number of subscribers, trends</li>
<li>
<strong>Professional support</strong> for creatives, businesses, and professional podcasters when it comes to hosting and analytics</li>
</ul><p><a href="https://transistor.fm/how-to-start-a-podcast/?via=empowerapps"><strong>How do you start a podcast?</strong></a><br><a href="https://transistor.fm/how-to-start-a-podcast/?via=empowerapps">https://transistor.fm/how-to-start-a-podcast/?via=empowerapps</a></p><p>Try it today with<a href="https://transistor.fm/?via=empowerapps"> this special link:</a><br><a href="https://transistor.fm/?via=empowerapps">https://transistor.fm/?via=empowerapps</a></p><p><b>Apple September Event</b></p><ul>
<li>Is your app ready for iOS 14?!?! 🤯</li>
<li>Why Blood Oxygen? What is VO2 max?</li>
<li>Family Setup</li>
<li>Series 6 vs Series 3 vs new SE?</li>
</ul><p><b>State of Apple Watch Development</b></p><ul>
<li>Building Complications in SwiftUI</li>
<li>Custom Watch Faces?</li>
<li>When will the Apple Watch be fully independent?</li>
<li>Why build an Apple Watch app?</li>
<li>When should you build a companion watchOS app?</li>
<li>Is Touch ID coming back?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><b>Transcript</b></p><p><strong>Leo Dion (Host): </strong>Did you get all your apps ready for iOS 14? </p><p>[00:00:02] <strong>Steve Lipton (guest): </strong>Fortunately, I didn't have it. Wow. That was one mess. I did not have to get into this was watching everybody else's mess. </p><p>[00:00:11] <strong>Leo Dion (Host): </strong>Yeah, exactly. It was just, I felt for people on Twitter. Cause a lot of folks were just kind of like, okay, the new versions coming out tomorrow and like.</p><p>[00:00:21] It was difficult just to get to the right to GM version and the betas still, you know, there were issues with submitting to the app store. Yeah. It, I don't get it. Do you, do you understand the logic behind it? </p><p>[00:00:36] <strong>Steve Lipton (guest): </strong>I don't, the I've I've made some guesses that they backed themselves into a corner that they wanted to launch with.</p><p>[00:00:45] I watch  for the watch. And that meant that they had updated in order to get that for Friday. So when they did that, they then had said, okay, everyone has to go up to normal. And so we didn't get our normal warning about a GMC, why they didn't put the GMC last week. That's a good question. </p><p>[00:01:04] <strong>Leo Dion (Host): </strong>Or why you're not just waiting to release the watch next week too.</p><p>[00:01:07] Like yeah, exactly. I mean, just a week, it's out like either asking for a long time. So yeah, that's, that was really strange. What, I think. I th ink you can get away with like having an app not be updated for a few days, but still like the headache of it. It's just, just crazy already in a year with like issues with developer, the developer  .</p><p>[00:01:34] Yes. </p><p>[00:01:34] <strong>Steve Lipton (guest): </strong>It was stressing a community that's already been stressed. Yeah, we're going to see, I mean, there's lots of subtle errors that are going to start. I've already seen a few with the betas and I warned ahead to those developers, but, I mean, we're going to see some issues that people are going to now.</p><p>[00:01:53] Yeah. iOS 14, only on the iPad, this eyes, the ones I've seen the worst of and start to get some bugs that they never expected. A scribble is going to cause a nightmare and a half. as I can see already, I've seen three apps that where you expect to be able to use a pencil, to do a control, they put a text control there.</p><p>[00:02:18] So it, it. It goes to scribble. Instead it goes to the Tech's control. It goes with their actual control. So, I mean, we're going to see things like that. And, those kinds of things are going to show up and nobody had really enough warning to know. I gotta get, make sure I hit this right. So we're going to get a couple of those.</p><p>[00:02:36] I've seen one of the ones that I was really frustrated with is, and now I'm starting to see bugs from them too. Is Niantic. </p><p>[00:02:44] <strong>Leo Dion (Host): </strong>Yeah, I saw your post about Pokemon go </p><p>[00:02:47] <strong>Steve Lipton (guest): </strong>blocked out Pokemon, go from beta developers. Jeez. and so you totally crashed on a beta a minute. I went to iOS 14. It worked perfectly. So they, they, first of all, lost me as a customer because I have been able to play.</p><p>[00:03:05] And that's a game that's based on addiction. Right. And if you lose interest, you're not going to go back to it. So they lost me as a customer. </p><p>[00:03:13] <strong>Leo Dion (Host): </strong>This isn't a great year to play Pokemon go </p><p>[00:03:15] <strong>Steve Lipton (guest): </strong>anyways. Yeah. It's been a bad year. I mean, they made enough, they made plenty of changes to try to get around that. But it's the other side of that is they had the opportunity to get developer instead of user input and say, okay, this is wrong.</p><p>[00:03:32] This was wrong. This was wrong. This is wrong. From people who had some clue about what they're talking about and then integrate that into a better thing. They're now getting that there's huge latency issues, which is what the post I've been seeing today. Huge latency issues in the new iOS 14 version. And now they're saying, Oh, you have to reboot and you have to do this, go, go read the whole manual and whole bunch of stuff like that.</p><p>[00:03:57] So, I mean, It's going to be handled badly and I'm sure a lot of people are gonna be handling it badly. Yeah.</p><p>[00:04:06] <strong>Leo Dion (Host): </strong>Welcome to another episode of empower apps. I'm your host? Leo Dionne. I'm the principal software developer at bright digit. Today we have with us, Steve Lipton. Hey Steve. How you doing? </p><p>[00:04:18] <strong>Steve Lipton (guest): </strong>Brady? Good. How are you? </p><p>[00:04:20] <strong>Leo Dion (Host): </strong>Good really glad to have you on, we'd been talking to in the summer about having you on one, the new Apple watch event happens and you did that fantastic workshop at three 60 iDev on Apple watch development, something I'm passionate about.</p><p>[00:04:34] So I'm really glad to have you on to talk about. This subject, I'll let you go ahead and introduce yourself and what you do. </p><p>[00:04:41] <strong>Steve Lipton (guest): </strong>Hi, I'm Steve. And, I am first of all, a CIO at a medical device company called scientific device laboratories. I spend most of my iOS time really working with LinkedIn learning to do.</p><p>[00:04:57] Courses for iOS development. I have a weekly tips show on LinkedIn learning called iOS developer tips weekly. And I have been writing lots of courses. The most popular one right now is of course, Swift UI essential. And I have updated the watch LS to watch a seven, which is, should be out sometime in October.</p><p>[00:05:20] so you'll see all the new stuff and how to use it. And I write lots of courses. I'm on number 23, I think now or something. Yeah. I like that of the numbers I've have recorded. So there's been a bunch of them in there. </p><p>[00:05:31] <strong>Leo Dion (Host): </strong>Yeah. So we had a big event this week concerning mostly the Apple watch. Maybe before we get into the Apple watch, let's cover the other stuff.</p><p>[00:05:41] We talked already about the release of iOS 14, but we have a new iPad air. Are you getting any new iPad air? </p><p>[00:05:49] <strong>Steve Lipton (guest): </strong>No. And I don't think I'm going to do it this time. What </p><p>[00:05:51] <strong>Leo Dion (Host): </strong>do you have? What kind of iPad do you have right now? </p><p>[00:05:53] <strong>Steve Lipton (guest): </strong>I have an iPad generation six and an iPad. Pro, I think that's the generation two and generation four, iPad mini.</p><p>[00:06:03] And I'm using all of them right now. So I don't need another one yet. </p><p>[00:06:08] <strong>Leo Dion (Host): </strong>Yeah, I'm in the same boat. I got a, I think it's six gen iPad and second gen iPad. Pro 12.9. I really like, but yeah, I have no interest. I don't understand the like product line with the iPad right now because like iPad air is in a weird position and it also puts iPad pro in an awkward position because technically it has a faster processor.</p><p>[00:06:32] So yeah, it'll be interesting to see because. IPad covers so much of a consumption market. Like being able to walk stuff, you know, I've had areas sorta like a midline pro-sumer device. Really? </p><p>[00:06:47] <strong>Steve Lipton (guest): </strong>Yeah. I'm actually surprised my. My big rooting for an iPad was actually my mini. I would love to see a mini with a pen.</p><p>[00:06:56] <strong>Leo Dion (Host): </strong>Oh, so the mini doesn't support pencil? </p><p>[00:06:58] <strong>Steve Lipton (guest): </strong>Not the ones I have seen have anything to do with pencils so far, I would like to see the most advanced possible thing you can throw in a mini minis are not as popular. I know that, but I'm a big fan of the mini it's super easy to throw in a pocket and hits that.</p><p>[00:07:14] Space where if I'm going to read, be reading a novel or doing some notes, it works a lot better for me. To have that around and try and even lug one of the other iPads. </p><p>[00:07:26] <strong>Leo Dion (Host): </strong>How about a larger phone? Cause that's kind of where people thought that like the iPad mini wasn't necessary because of the fact that phone sizes have gotten so much bigger.</p><p>[00:07:36] <strong>Steve Lipton (guest): </strong>I have the biggest phone, I've got a pro max and that's still small compared to my mini. I can't draw on my phone, but I can draw my mini. So it would be something as an artist. That's something that I could do some doodling and some scribbling and get some sketches out that I could then put on some of the other ones.</p><p>[00:07:55] I can't do that on my phone. It's still too small. </p><p>[00:07:57] <strong>Leo Dion (Host): </strong>Yeah. So let's get into the Apple watch. We have a new Apple watch this year, this series six. and it seems like the big feature with the series six is blood oxygen. I don't get it. Maybe you might have a better explanation of why this is such a hot feature, but it's like, it's more concerned with like wellness necessarily than fitness.</p><p>[00:08:26] What have you seen as far as the blood oxygen and stuff that you think is going to make it such a hot selling point? </p><p>[00:08:32] <strong>Steve Lipton (guest): </strong>I think there's two things that are going to come out of this one. It's always what I come back to is Apple has arcs. They have character arcs, just like a story has arcs. This is another step on that arc for the real Holy grail.</p><p>[00:08:46] That really Holy grail is going to be blood sugar. This is another way of figuring out by blood color, what your health is. Eventually, you're going to be able to do this hopefully to blood sugar. And that brings in the whole diabetic market. </p><p>[00:08:59] <strong>Leo Dion (Host): </strong>Yeah. Oh yeah. Definitely. I could see that.</p><p>[00:09:05] I wanted to let you know about the host of our podcast. Transistor FM transistor has been an awesome podcast hosts for the last two years of Houston. What I really like about it is all the great features. It offers people who want to really run a professional podcast. I love the automated integrations with Apple podcasts, Google podcasts, Spotify, MailChimp, et cetera.</p><p>[00:09:28] They offer really great analytics, which I use quite frequently and they have updated their UI to look fantastic and be usable on the iPad as well. One thing I've been thinking about lately with a lot of the stuff in the news is the importance of running a independent podcast. We all know about stories about you tubers and app developers, running into issues with all sorts of gatekeepers.</p><p>[00:09:56] And one of the places where we have that kind of independence is in podcasting. Unfortunately, there's some hosts which can have an order amount of control over your podcast and act like a gatekeeper, like many of, some of these other companies that we've been hearing about lately. Things like ad insertion or control over how your podcast is published and broadcasted, things like that.</p><p>[00:10:23] That if you're running a professional podcast is either risky or can lower the quality of your show. So thinking about transistor is that you own the podcast. It is yours, and you have that complete independence. It works on multiple platforms. So you're not locked down to someone like Spotify. For instance, you have a completely open RSS feed, but also they have a lot of tools to help you run a professional podcast as well, like the analytics, but also things like being able to have a private RSS link.</p><p>[00:10:55] If you want to run some sort of, membership, Service along with your podcast as well, or you want to be able to only allow certain people to listen to your show, which I think is awesome and a really great feature. So again, I highly recommend checking transistor out. Let them know you heard about transistor from us.</p><p>[00:11:17] Go to the link in the show notes below to give transistor a try today for 14 days.</p><p>[00:11:26] So you think it's the same idea? Using machine learning based on blood color to figure out like essentially blood sugar. </p><p>[00:11:35] <strong>Steve Lipton (guest): </strong>Yeah. They're getting, they're getting close to it. And that's what they're trying. I think that's what they're trying to do. They've got a huge number of patents for some kind of technology that was like that a while back in 2018.</p><p>[00:11:46] So this is something that I think they're working on. That the diabetic side of it, the blood sugar side of it, it needs a lot more testing is going to probably not going to be able to go through FDA as a Denovo, which is a new technology permission from FDA. So they're going to have to go through the whole.</p><p>[00:12:05] Range of things. So that's gonna take longer the other side of blood Oak too. There's a lot of good uses for blow to some of the studies they were mentioning. Cause they're now doing a whole bunch of studies to get hard data about what's going to be done. And they mentioned that in the event, the big ones going to be asthma people with asthma, we'll get an early warning sign of a possible attack of asthma because their blood Oh, two will go down.</p><p>[00:12:32] And so there'll be able to watch for those kinds of alerts and get to their inhaler before they start to have an episode. So, I mean, those people are gonna be using it to an extent. I think the most exciting one of the ones, the ones that we're talking about is looking at not using temperature, which is horribly unreliable for telling you if you're going to be getting sick.</p><p>[00:12:59] And go to  for looking if you're getting sick, because if you're having a respiratory illness, It may start to change your normal blood. Oh, too far before you see any other symptoms, </p><p>[00:13:12] <strong>Leo Dion (Host): </strong>I would assume like symptoms like temperature or more based on the immune response than necessarily like getting sick.</p><p>[00:13:18] Okay. That makes sense. </p><p>[00:13:20] <strong>Steve Lipton (guest): </strong>So you're actually looking at what it's actually changing and that's something that they had. That was one of the studies they were talking about. That study is going to be very interesting. If we can move to more of a blood oath too, if you go in the hospital. One of the first things they'll be doing after they pop an Ivy in you is they will be watching blood too.</p><p>[00:13:40] There'll be watching pulse and the pulse oximetry, which is the blood Oh two. And they'll put this thing on, on your finger, </p><p>[00:13:46] right? </p><p>[00:13:47] <strong>Leo Dion (Host): </strong>It's going to say it's the thing on the thinker when </p><p>[00:13:49] <strong>Steve Lipton (guest): </strong>you put something on finger and they watched that really carefully, because that tells them a lot about what's going on in the lungs.</p><p>[00:13:56] without a lot of invasiveness </p><p>[00:13:59] <strong>Leo Dion (Host): </strong>now, I don't think we have anything as developers available to us as far as blood oath to right now. Well, I guess you'd have health care, but I don't know if that's like those specific sensors are going to be available through health kit necessarily. Do you know? </p><p>[00:14:16] <strong>Steve Lipton (guest): </strong>I don't know.</p><p>[00:14:17] I haven't looked because they just popped us in and I haven't loaded the GMC yet, but. I suspect that you'll be able to look at the data because I could see the data on the health app. </p><p>[00:14:27] <strong>Leo Dion (Host): </strong>Right. That's essentially what we see is developed. </p><p>[00:14:31] <strong>Steve Lipton (guest): </strong>We'll be seeing the data. We won't be able to get to the actual sensors, but we'll be able to see the data itself and then start tracking that.</p><p>[00:14:39] I'm sure there's going to be ways of tracking it. I mean, there's probably gonna be in their survey systems ways of doing it and we can probably work backwards from that. </p><p>[00:14:49] <strong>Leo Dion (Host): </strong>I would imagine it's, it's essentially going to be available like through a healthcare query of some sort, and then you could, you could access it that way, which is pretty, pretty sweet.</p><p>[00:14:58] So I'm wondering, like, what would it be the difference between. Is there anything special as far as the developer's concerned with series six and how you access that through healthcare, as opposed to what's available to us, like on a. Standard older AppleWatch so, yeah, that'll be really interesting to see how much they open that up.</p><p>[00:15:18] <strong>Steve Lipton (guest): </strong>It's going to be interesting to see that opening it up, how it's going to be playing into some of the other places that you may be using it. they talked a lot about VO2 max, which they up the range in  in iOS 14, where you'll be able to see some of the other performance stats. Where are they going to start playing with the, adding the blood?</p><p>[00:15:40] Oh two with the VO2 max to get your cardiac rates, even more your cardiopulmonary rates, I should say, to figure what's your overall fitness is where that's going to go and where other developers, where developers can play with that is going to be interesting. but like I said, I haven't looked yet, so I don't, I'm not a hundred percent sure what's going to go on with that.</p><p>[00:16:00] <strong>Leo Dion (Host): </strong>Could you briefly explain exactly what VO2 max is as opposed to blood oxygen, </p><p>[00:16:06] <strong>Steve Lipton (guest): </strong>essentially VO, it's another measure of fitness. Very often. You will see it involved with treadmill, cardiac tests. Okay. And what they do, this is where I usually see people do it VO2 max, the most accurate way of doing it is they will be taking your.</p><p>[00:16:26] Heart rates and other information, your breathing rates and stuff like that on a treadmill and they'll stretch. And during a stress test, they'll pull that all the way up as far as they can to figure out what your upper limit is. </p><p>[00:16:40] <strong>Leo Dion (Host): </strong>As far as how much oxygen you can hold in your </p><p>[00:16:42] <strong>Steve Lipton (guest): </strong>how much oxygen and how and how far your breath is going.</p><p>[00:16:46] And at that point, that gives you some idea of your fitness. Now that's actually changing as you're doing things about how much this combination. Comes into play. Yeah, it's the maximal oxygen consumption and it's really based on Durance fitness, but what a lot of people do is they start using VO2 max, as an idea of how healthy you are, because you're going to have an idea of your cardio-respiratory fitness based on the VO2 max.</p><p>[00:17:15] And I was looking to see if I could find a scale for it, about where people are post to go. I do not see one easily find-able so I won't be able to say that, tell you that, but yeah, you can look in some of the health journals with stuff about where those numbers are supposed to be. </p><p>[00:17:31] <strong>Leo Dion (Host): </strong>Yeah. I'm just reading Wikipedia.</p><p>[00:17:34] Apparently like athletes typically have like a 80 milliliters per kilogram. So like that would obviously be like very healthy. Right. You know, I don't know what the typical VO2 max would be for someone, but then that makes sense. And I, I understand what you mean by like a stress test and stuff. So </p><p>[00:17:54] <strong>Steve Lipton (guest): </strong>yeah.</p><p>[00:17:54] I mean, just give you some idea. It's been there for a while. If you get too low, then you've got an issue. That's what, the big thing that the change in, in iOS 14 is all about is if you get too low, Then you're probably going to having some problems and you may want to go see a doctor about them. Yeah.</p><p>[00:18:14] While I was seriously training here, I have a good example here. So December is 2017. I'm just gonna give you one of my numbers to give you an idea. I was the middle of training for the Disney marathon. so I was about ready to run the marathon, which I ran in the 2018, in January of 2018. And my, my VO2 max was 38.6 as I've been sitting around.</p><p>[00:18:36] So I'll give you my number just as COVID started and I didn't get to do anything. It dropped down to 31. So I started losing my fitness over that period of time. Okay. Okay. So it's a good way of say, Oh, your fitness is not being as good as you can and you can watch trends. I mean, they got the usual trend type stuff.</p><p>[00:18:55] <strong>Leo Dion (Host): </strong>Okay. Yeah, that's awesome. And it's interesting talking about story arc, how much they've basically like lean into the whole fitness and health thing. Like, it's not, I don't want to say it's like a one 80, but it's like a big shift from where the Apple watch used to be a, when it first debuted five years ago.</p><p>[00:19:14] So they're just, they keep going in that direction. As far as health and fitness are concerned. </p><p>[00:19:20] <strong>Steve Lipton (guest): </strong>I think that's really. When you look at the wearables market in general, I mean, they are dominating it, but if you look at the wear wearables market in general, before and after the Apple watch came out, those are the people who are going to be using wearables.</p><p>[00:19:36] you get the fashion a little bit first. And I really thought about this even when the first Apple watches came out, and I got a generation one literally to run with it, and I had a Nike watch that had a GPS in it. I didn't have the GPS in the first versions of my Apple watch, but I had it in the phone and I just ran with my phone.</p><p>[00:19:58] But. It worked really well between the phone GPS and my watch. I was able to get the data I needed and it did a better job than I had with the Nike watch. </p><p>[00:20:08] <strong>Leo Dion (Host): </strong>Yeah. I have the same exact watch too. I had the Nike, it was like a Nike plus watch with the GPS on it. And then, yeah, I got the Apple watch and it was like, I was in the same boat.</p><p>[00:20:18] I got the series zero and then the series one. And it's like, yeah, I had to carry my phone around and everything. And like they've, they've kept making it better and better to the point where like, I don't think watch, I think they essentially like </p><p>[00:20:31] <strong>Steve Lipton (guest): </strong>they have their own </p><p>[00:20:33] <strong>Leo Dion (Host): </strong>Apple watch essentially, that you can buy with the custom watch face.</p><p>[00:20:37] And that's like their way of selling that watch now. </p><p>[00:20:41] <strong>Steve Lipton (guest): </strong>Yeah, I think that's pretty much where they've gone. And I think what Apple is doing is they saw it in that first bunch and they were pretty clear. I think even back then they knew the health market was going to be big and they kept figuring out here's a great place to stick some sensors that you can't stick elsewhere.</p><p>[00:20:58] And the question becomes, first of all, how do you put those sensors in? How do you communicate with those sensors? I think the early watches. The bigger question was trying to get a communication between the watch and the phone was crap. </p><p>[00:21:13] <strong>Leo Dion (Host): </strong>Yes. Yeah. And now we've gotten to a point where it seems like they're willing to, to use more of the wifi and kind of just depend on the internet for communicating with the phone, as opposed to like directly communicating through Bluetooth or wifi or whatever it tries to use with watch connectivity.</p><p>[00:21:31] <strong>Steve Lipton (guest): </strong>Yeah. They're doing a lot of things. I was very interested. Not I'm interested in it as, as a, as a product and service, but I'm more interested in the Apple fitness plus of what they're doing with the watch. where you're going to get some real time data from your watch directly to your other devices.</p><p>[00:21:50] It's going to, if it's an Apple TV or your phone or your iPad, it's going to be putting your stats from your watch directly on the screen as you're watching your workout. which is saying how well the communication has been compared to what I recorded. My watchOS. I think it was watching us. For course, you usually have a wait five seconds before you got some something from the watch to the phone.</p><p>[00:22:24] That's a big difference. </p><p>[00:22:25] <strong>Leo Dion (Host): </strong>There's a big difference. and it seems that like I'm curious where watch connectivity is going to be. Oh, well, let's, let's talk a bit about family setup. That was a big deal that they brought up. it's a feature as a parent. I'm interested in it, not necessarily now, but. It's really interesting how we're making the watch more and more independent.</p><p>[00:22:50] And it seems like this is the first kind of like them testing the waters of making the watch more independent. I feel like cell connection was first. And then this, obviously this requires a cell connection, which I find really interesting to me. Like as a parent, though, the expense of buying a watch and the responsibility of my children and at the age they're at kind of.</p><p>[00:23:14] Makes me not interested in doing it now, but I think at some point I think is a hand me down. I would be interested in maybe, you know, handing down one of my Apple watches once I got old enough to where I feel like they can actually carry that around. But that seems really cool. Like that they're kind of it.</p><p>[00:23:32] And quite frankly, Apple is not like very key. I don't want to, I don't know how to put it. Apple seems a bit. ignorance of how their software is not an ideal fit for families in a lot of ways, compared to some other companies that do. And so, you know, this isn't ideal, but it's definitely a good first step.</p><p>[00:23:59] If you're a parent and you want to know where your kid is and being able to contact them. </p><p>[00:24:04] <strong>Steve Lipton (guest): </strong>Yeah, I think where you're going with, it has been one of the sore points with Apple. I know there were some developers that ran into some trouble in trying to get apps, to work with family type situations.</p><p>[00:24:18] And I think this is a response to that, but, you know, I, I see a couple of things that are important for developers along the way. Is we really start, have to thinking about independent watch apps. </p><p>[00:24:29] <strong>Leo Dion (Host): </strong>Oh, for sure. </p><p>[00:24:29] <strong>Steve Lipton (guest): </strong>Yeah. and we can't think of going the traditional route. Anything, anything new is gotta be an independent watch app if you want to be using the family type situations because it's not going to sell it's, there's going to be the markets for things are going to be the kids.</p><p>[00:24:49] If this works. Along with the parents. And again, as that, as they mentioned in the end, the event, the more important one for me is not the kids. It's the mom and dads, right? It's the fall protection that you get some notification about the fall protection. That if you've got someone who's not all there yet or not all there anymore, right.</p><p>[00:25:12] Those issues I think are going to be even more important for this, then the kids, they didn't. They were trying to be sensitive to that by not by glossing over it more, but I think having, having better control over the fall issues and all those things where you can make sure that mom or grandma get to where they need to go, I think it's even more important than necessarily the kids.</p><p>[00:25:39] I mean, people think the emotional side of it is people think about the kids, but having to deal with a parent or grandparent who is not completely mobile and may not be completely in control of their faculties anymore. I think this is going to be a bigger issue for them than it is even for the kids.</p><p>[00:26:00] <strong>Leo Dion (Host): </strong>Yeah. Yeah. And of course, Hopefully being able to convince them to keep the watch on and I think is really important. Yeah. I think that was one thing. The developers I noticed on Twitter were saying it's like, it is basically a requirement for your app to be independent in order to work on one of these family setup situations.</p><p>[00:26:19] Otherwise you kind of. It's not going to work. I've built an independent Hartwich, which I've built. That's an independent watch app. It's not hard to do really, to make sure that your watch is independent, the container situations, but strange. But yeah, it should be like every watch option, essentially be able to be independent at this point in 2020.</p><p>[00:26:40] <strong>Steve Lipton (guest): </strong>Yeah. I would agree. There are a few places where I see that you really need some connection for some things. If you have a phone app, for example, that really is just having the watches and accessory of the phone. There might be somewhere where you want to continue to use it. some of my workout apps, for example, fall into that category where, or sometimes when, you know, Camera is a great example of another one where you're going to have it.</p><p>[00:27:08] That is the remote for the camera on your watch is only going to be a remote. There's not much more it can do. There is no, at least not yet any forward facing camera on your, on your watch. So you're not taking selfies with your watch. You're taking selfies with your phone, right? </p><p>[00:27:25] <strong>Leo Dion (Host): </strong>Yep. So with the. Family set up, they require a series four with the LTE connection.</p><p>[00:27:34] Right. And so part of their way to, kind of. Make a cheaper device that can hopefully sell to kids or families. Essentially we have the new Apple watch se, which I find really interesting. And then on top of it, they're still selling the series three, which is not compatible with family set up, which I find really strange.</p><p>[00:27:55] Exactly why they're, they're still selling the series three because for developers, first of all, you have a whole display class now that you still have to support. And then on top of it, it's not gonna even work if you try to do family setup. So I find that really weird. I almost feel like they should just stop selling the series three and just sell the se.</p><p>[00:28:14] And the series six. I don't quite understand it. You know what I mean? </p><p>[00:28:18] <strong>Steve Lipton (guest): </strong>Yeah. I have no idea why they're picked the series three. There's like three things that I could think of about the series three that make it not the best option for the next watch that you want to use. I mean, the biggest ones, the complications, I mean the complications change from series three of the series four.</p><p>[00:28:36] So you've got all the new watch faces all of the complications that are around a watch. All the color ones that all started with series four and later. So your street doesn't have those. So you're missing out on tons of the watch faces that could be on this watch. So people are watching that video from the event and see, Oh, I could put on, you know, I have the, I have the, a, which one do I have now on now?</p><p>[00:29:03] one of the timer ones, they, The new timer one and they can't get it on. That's a serious story </p><p>[00:29:09] <strong>Leo Dion (Host): </strong>top of it. Like, what is the next cheap? If you're going to get a smartwatch non-Apple watch, what would it be like the next cheapest watch to a series three? Like as a Fitbit? Like, are there like a hundred dollars smartwatches or what?</p><p>[00:29:22] Well, </p><p>[00:29:22] <strong>Steve Lipton (guest): </strong>yeah, I think there's things I haven't looked in a long time, but I think there's in the Fitbit range. I think there's a few that are below that. And I think there's some that are above that. Like, I don't understand that it's in the range. </p><p>[00:29:34] <strong>Leo Dion (Host): </strong>Yeah. Because it's like the series three is 200 bucks, which is still very expensive for somebody who's not willing to spend that kind of money.</p><p>[00:29:42] And then you go to the se and then he got live. It's out another $80 for the se, but then you also need to spend another $120 or $130 to make it work with family setup because you need the self connection. And it's like the pricing, the pricing that doesn't make. A lot of sense to me. And obviously Apple's really good at pricing.</p><p>[00:30:04] So maybe I shouldn't say that, but like, it, it seems like either go, you make the se </p><p>[00:30:10] <strong>Steve Lipton (guest): </strong>really affordable. </p><p>[00:30:12] <strong>Leo Dion (Host): </strong>Or Andrew dropped the series three and then it wouldn't make a lot more sense and have a much more coherent line or make the series three really cheap, rather than just 200 bucks. Cause that isn't, that just isn't like necessarily cheap enough almost to me be worthwhile.</p><p>[00:30:30] And I understand like they're trying to saturate the market and I think that's partly partially part of it. Maybe </p><p>[00:30:36] <strong>Steve Lipton (guest): </strong>I think the series three solves a. Problem that Apple can run into. People have always said they don't have a really good low end. I think if I look at my phone from a distance, I can tell that I have an iPhone or an Android phone.</p><p>[00:30:54] It's usually relatively easy to tell it's getting harder with my current one. If you're not, if you're looking at it from the front and you're looking from the back. All that, that huge camera races, everything. But so, but you can tell from a phone. So for status reasons, I think it's purely for social proof reasons.</p><p>[00:31:12] Okay. If you look at an Apple, watch, an Apple watch will always look like an Apple watch. It doesn't look like anybody else's watch. It's very unique in its shape as far as watches that are out there. And I think if you want to say, Oh, I am cool because I have an Apple watch. Watch three works. For that particular purpose.</p><p>[00:31:33] And so they're leaving it in for that purpose as purely status. I don't think functionally it's a great watch anymore. I mean, I just moved from my it's sitting over here on my, on my counter here. I just moved to a, to a watch five, a couple of months ago. And the difference between this watch and that watch is amazing.</p><p>[00:31:54] And I would never want to go back to that. Watch it did a good job for what it was doing, but when I wanted to add more complications, which was the biggest reason I needed it, it fails. It does not have the ability to do color. So all the color complications aren't there, it means that all the new stuff we can do with Swift UI complications can happen.</p><p>[00:32:18] And that's going to be the next stage about what the other big nuke next stage that Apple is going to be playing with, has to do with those complications. </p><p>[00:32:26] <strong>Leo Dion (Host): </strong>So let's start getting into it and talking about all the new changes in watchOS seven and specifically complications. You did that workshop that I went to this summer on building complications.</p><p>[00:32:38] What's your thought about now this introduction of Swifty Y into the, watch face, essentially. </p><p>[00:32:46] <strong>Steve Lipton (guest): </strong>I think there's. Again, it's one of those character arcs that we're talking about. It's one of the most complained about character arcs. There is on the Apple, watch this customizing your watch face. We are, are about four views away from a completely customized watch face.</p><p>[00:33:04] And this is the next step in doing that is the two things that are added to watch OSR. One is that you can share your watch face. Two is the kinds of complications you can put on there. And so we've got new complications that are completely Swift UI views. and you get a nice little rectangle and you can put whatever you want in there, as long as it is an interactive.</p><p>[00:33:31] So as long as there's no buttons or sliders or anything like that, or gestures of any kind, you can put whatever you want in that spot, which is amazing. And we've got. Those complications. We have ones where you're able to customize some of the templates they already have with Swift UI. And with those pieces coming into play, plus you can have more than one complication for a given app.</p><p>[00:34:02] So you're gonna have one complication that might be that big Swift UI one. That's doing all the data that you need to do or showing you where you were on a map and your stages for your pizza delivery or something like that. But underneath that, you might have an order button for the pizza. You could build your own watch face with three or four complications.</p><p>[00:34:25] Save it, email it to your customers who have an Apple watch. They can then get the app for it and all that and all the parts of that. And then they can start using that. Face for doing all your stuff that you have for your app. It makes, you know, you get five or six buttons that you can use for your app, right on your watch face.</p><p>[00:34:49] Now, some people may customize that again and say, Oh, I don't need that button. I can put that button for something else. Like say, you know, I'd always put my battery. Cause I always like, I'm always paranoid about my battery, but I'm. We're seeing a movement more and more towards that customization. And I found one of the most interesting of those was the stripes.</p><p>[00:35:11] And I don't know if you've played yet with the stripes watch face yet. </p><p>[00:35:14] <strong>Leo Dion (Host): </strong>Not really. So here's, here's kind of, my deal is I, I like having a watch face with a lot of information on there. Yeah, me too. And I look at some of these like art, the, the new, The one with the face face, right? Yeah. You got that. You got stripes and it's like, why would I have one of those if I can't see the weather or I can't see like my calendar, that's why I look at my watch.</p><p>[00:35:41] Cause I want to look at like, whatever I'm trying to keep track of throughout the day. so like while I think these watch faces really look nice, it feels a little bit. Like disconnected from Apple that they make these beautiful watch faces, but they have like so actual little information and it's like, I understand for fashion purposes, why you do that?</p><p>[00:36:01] But like, it can't, they make one that's like at least has like two or three complications on it. So I can like have something nice looking while at the same time being able to see what's going. </p><p>[00:36:13] <strong>Steve Lipton (guest): </strong>I think what they're doing particularly with stripes is those are experiments and. How you can build with clock yet.</p><p>[00:36:24] It's the parts of the clock that we haven't seen yet, which I expect to see in watch OS eight, maybe nine. Because if you look at stripes, if you actually play with it, I wouldn't wear it either. I mean, I'm a, I'm an infograph person to say the least. If I don't have six complications on my watch, I'm not, I'm not happy.</p><p>[00:36:44] Right. But for me, what I saw as I play with those. Yeah. Great. That's a nice art thing. That's. That might be fun. I'm emoji might be cute, but it's only got a very small complication on it that you could put the date or one line of text, actually two lines of text. And that Stripe ones though, you're changing the entire background.</p><p>[00:37:07] You're saying how many stripes you want and what color you want those stripes? Now you're using selections. If you look at it on the watch, I mean, if you look on the watch app, but you're actually changing backgrounds. And that's probably not a very hard Swift you, I thing to do, if you know enough about Swift UI, to know that you've got a stack, you're saying how big the stack is and you're putting in a color index and then you just run it through a color and then you just say, okay, I've got those four colors.</p><p>[00:37:36] I'll pop that out. That's not hard. But that used me. The indication that being able to change the background is something they're experimenting with. They'll see how other, how the customers, the users will be looking at it. And then they can say, okay, that technology worked next. WWDC will say, Hey, you can start changing the backgrounds.</p><p>[00:38:01] <strong>Leo Dion (Host): </strong>Yeah. There you go. That might be something we'll see. And watch OSA is like changing backgrounds and then, yeah. And then watch last night, like really opening up clock hit. </p><p>[00:38:10] <strong>Steve Lipton (guest): </strong>I mean, there's only four things that are missing the backgrounds, the hands, which. Again, it's a very small view is just actually three views.</p><p>[00:38:21] And all you're doing is you're changing the game graphic in the view of the three hands. you decide if you're gonna have a second hand, but you're going to have the other two hands. So those are not that hard to actually think about. Those could be, it can be very simple views, a template for the complications and the dial.</p><p>[00:38:40] And that's it. I mean, you might have a digital version, which would be another thing that you'd be throwing in there of how to do it, but you'd have, they probably still stick with some kind of template where you would put a dial with a certain number of complications and you know what most of these still look like either utilitarian or infograph, there's only, still the four major.</p><p>[00:39:03] Types of watch faces still there. Right? There's not that huge, a difference between them, right? Those four templates, the hands colors of hands or images of hands, that's it? Yep. We're not that far. From custom watches. So </p><p>[00:39:24] <strong>Leo Dion (Host): </strong>we'll probably get custom watches, but it seems like one of the big limitations, what I'm really interested to see is what comes out of the reviews for the series six is it seems like there's still limitations as far as like how much you can use the network, but.</p><p>[00:39:41] Also like how much an app can use the battery. Because like, from what I've seen is like apps can be pretty aggressively shut down. I don't know how much that's changed in iOS seven necessarily, but. It seems like that's one of the limitations of building an app for the watch is the fact that the battery is so limited.</p><p>[00:40:01] Do you think, do you think Joel seven and series six, it might be time to start thinking about building a watch app or building companion watch app for your iPhone app. </p><p>[00:40:12] <strong>Steve Lipton (guest): </strong>I really it's one of those things where it really depends on the app. I don't think everyone should be making a watch app. there's a lot of stuff that is totally worthless for a watch app.</p><p>[00:40:24] In fact, I think there's a lot of watch apps that you don't even need. The app. I think the bigger issue is whether you're going to have a complication or not. I think it's 50 50, about how many times people really need an app and how many times people need a complication. I think the apps themselves may be nothing more than the platform.</p><p>[00:40:49] For the complications, because lot of what I'm seeing when I use my hands, I don't watch. And when I see other people use their watch is they're not interacting with the watch. I mean, I did that summer course. For example, I made an order form on a watch to order a pizza. In reality. That's not something that people will be doing is sitting there, scrolling away, trying to hit buttons.</p><p>[00:41:16] And I find that's not something that's a very good use of that small amount of real estate. They'll do that on their phones. Instead, what they'll do is they would like to look at their watch and know where when the delivery time is going to be </p><p>[00:41:29] <strong>Leo Dion (Host): </strong>exactly </p><p>[00:41:30] <strong>Steve Lipton (guest): </strong>you're not. And I think that's one of the problems that.</p><p>[00:41:34] Is true about the watch right now is a lot of people are still app centered. And really the watch is really complication centered and we're moving to that direction where it's, whatever you see on your watch face is what you're really going to do. I rarely dive into my watch to do things. The fitness apps are one of the few places where I will actually dive into my watch, do something my meditation app to start my meditation timer.</p><p>[00:42:03] Why that particular company doesn't put a complication. I don't know, but that's one of those places. I would love a complication where I could just push the button and it goes right into that. </p><p>[00:42:14] <strong>Leo Dion (Host): </strong>Or like any, like you said, any sort of health tracking, like, like for it, my app, Hartwich, doesn't have a complication because all I'm really you're doing is using the watch as a sensor.</p><p>[00:42:26] Like I'm not really, there's nothing you're tracking of, actively per se. So like, yeah. I don't know how you'd get away with. Having something that's just a complication without an app. At some point, you like, you're going to need a way to interact with the complication in order to like, like when you tap on a complication and it should open up the app, that just makes total sense.</p><p>[00:42:51] So it'd be hard for me to ever see Apple say, Hey, you can build an app without an app. That's just a complication. </p><p>[00:42:58] <strong>Steve Lipton (guest): </strong>I agree with that. I think the app is really a base for a complication. For many apps for many situations, I think there are apps that need to be apps. And when they're actively working with sensors, I think that's totally true.</p><p>[00:43:14] The ECG is another good example of that. The only thing that complication will ever do is launch it. Right. But for many apps we need to, what I'm saying is we want to be looking at complications. As valuable as apps, we're not necessarily going to be building an app. We're going to be building complications that give us information on our watch face the app may either launch something else, namely something that might be on the phone.</p><p>[00:43:45] And there has to be better communication between them, the launch it on the phone, or it may be something that you're going to be using onboard sensors to do something. I don't see the kinds of apps that you would see on a phone ever work well on a watch. I think that's been the biggest weakness of, of watchOS development.</p><p>[00:44:08] Cause I've noticed that watch does not get the kind of hits Mike horses as I'd get on iPhone courses and where they die off in watching the courses is very interesting as like, okay, I don't see where this would go. Because it's not the right environment for a lot of kinds of apps. The phone is a better place.</p><p>[00:44:30] <strong>Leo Dion (Host): </strong>Do you think would be like your biggest takeaway or lesson you would have for an iOS developer, especially, especially like a manager or a CTO. Who's thinking like I'm going to build an iPhone app </p><p>[00:44:43] <strong>Steve Lipton (guest): </strong>where </p><p>[00:44:43] <strong>Leo Dion (Host): </strong>they should start thinking, Hey, maybe this needs a watch iOS companion. </p><p>[00:44:48] <strong>Steve Lipton (guest): </strong>I would say the places where you would see a good watchOS companion.</p><p>[00:44:53] Is one something that you're going to be using sensors or timing directly on your watch. So that would be the direct types of uses for a watch itself. The other place I would see it. And you can say something like, I'll pick on ESPN is a good example where you have data. That's getting pushed to the watch from your servers.</p><p>[00:45:22] So that people have certain information. So be it news or sports or weather or things like that, those kinds of things, where people are really interested in seeing it right now on the second where they don't want to even open their phone to see it. That's the places you want to be using the watch. Yeah, I </p><p>[00:45:43] <strong>Leo Dion (Host): </strong>think secondary, we haven't mentioned this yet, but secondary to complications or notifications.</p><p>[00:45:49] because that's another way that you're going to be able to engage with your customer and your user. And besides complications is whatever complex notifications you might show up on the watch, because that's the other way they're going to, they're going to take notice of you. </p><p>[00:46:04] <strong>Steve Lipton (guest): </strong>Yes. And that's something that's very important.</p><p>[00:46:06] I did not get in there. And I thank you for bringing that up. Cause notifications also has been super enhanced with Swift UI. So we're starting, we're going to start to see with those a lot more of the interactivity, even in the notification, to do certain things, you can put real buttons in, not just the few that you could do it with.</p><p>[00:46:29] Watch get, you could do whatever you really wanted. And you could start to put into those situations, more interaction as you're giving those notifications. So yeah, I see that is definitely something that's going to come up too. Is pop up on the screen. Hey, this is now Don. Your pizza's on its way, whatever it may be.</p><p>[00:46:51] Yeah, definitely. </p><p>[00:46:53] <strong>Leo Dion (Host): </strong>So before we close out, is there anything you wanted to mention as far as the future of the Apple watch or just developing on the Apple watch in general and what you think, do you think Apple has really done this year and where do you think they're headed? </p><p>[00:47:09] <strong>Steve Lipton (guest): </strong>I still think it's the transition.</p><p>[00:47:11] I think we got a huge head blow last year with Swift UI. This year, Swift UI is. Starting to settle in. I think with the watch in particular, it's now one of those things where you really should consider Swift UI. If you're making something new, you don't have any legacy issues that Swift UI will, will start to dominate.</p><p>[00:47:35] The watch development market, because it is so much easier than the option, the alternative. </p><p>[00:47:41] <strong>Leo Dion (Host): </strong>And you could totally tell that's where swiftUI started? </p><p>[00:47:47] <strong>Steve Lipton (guest): </strong>Yeah, it was, I mean, starting with stacks. I mean, I brought it up in one of my other talks that I did recently is we started with stacks. What we now have eight stack the stack and the stack.</p><p>[00:47:59] We started that with the watch because the watch was not going to be able to handle a full. Xcode storyboard. And a lot of the stuff that you see in the wash, it makes total sense in terms of Swift UI. Yes. Thank </p><p>[00:48:13] <strong>Leo Dion (Host): </strong>you so much for coming on Steve. It was really great to have you on and talk about the Apple watch.</p><p>[00:48:18] <strong>Steve Lipton (guest): </strong>Thank you. It was good being here. </p><p>[00:48:19] <strong>Leo Dion (Host): </strong>Where can people find you online? </p><p>[00:48:22] <strong>Steve Lipton (guest): </strong>You can find me at, on LinkedIn and you can just look for Steven Lipton. you can also find me on Twitter. And that would be at Steve_Lipton. And you can also write me steve@makeapppie.com. </p><p>[00:48:42] <strong>Leo Dion (Host): </strong>Thank you so much, folks in find me on Twitter @leogdion, my company is @brightdigit</p><p>[00:48:49] please take some time to go to Apple podcast or Google podcast if I can get it posted soon enough, Amazon just did that today. I would love some reviews on there and, feel free to DM and share this on Twitter. If you have any questions or comments about the show, thank you again. And we look forward to talking to you in the next episode.</p><p>[00:49:14] <strong>Steve Lipton (guest): </strong>Thank you.</p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/steve_lipton"><strong>Steve Lipton- Twitter @Steve_Lipton</strong></a><ul>
<li><a href="https://www.linkedin.com/in/steven-j-lipton">LinkedIn</a></li>
<li><a href="https://makeapppie.com/">MakeAppPie</a></li>
<li><a href="https://linkedin-learning.pxf.io/YxZgj">iOS Development Tips Weekly</a></li>
<li><a href="https://linkedin-learning.pxf.io/myDLO">LinkedIn Learning Courses</a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/3d4c7634"><strong>Episode 18</strong> - <strong>WWDC 2019 - Apple Watch with Gary Sabo</strong></a></li>
<li><a href="https://share.transistor.fm/s/eaeed04a"><strong>Episode 32</strong> - <strong>Training Your Team with Steve Lipton</strong></a></li>
<li><a href="https://share.transistor.fm/s/dfb18c54"><strong>Episode 57</strong> - <strong>SwiftUI with Majid Jabrayilov - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/87165d83"><strong>Episode 35</strong> - <strong>SwiftUI - The Good, the Bad, and the Benefits</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://transistor.fm/?via=empowerapps"><strong>Transistor.Fm</strong></a><br><em>Your podcast's publishing platform<br></em>Transistor not only hosts your podcast but also:</p><ul>
<li>
<strong>Help distribute your podcast with integrations</strong> to Apple Podcasts, Spotify, Google Podcasts, YouTube, and Mailchimp</li>
<li>
<strong>Deep analytics</strong> including average downloads per episode, popular podcast apps, number of subscribers, trends</li>
<li>
<strong>Professional support</strong> for creatives, businesses, and professional podcasters when it comes to hosting and analytics</li>
</ul><p><a href="https://transistor.fm/how-to-start-a-podcast/?via=empowerapps"><strong>How do you start a podcast?</strong></a><br><a href="https://transistor.fm/how-to-start-a-podcast/?via=empowerapps">https://transistor.fm/how-to-start-a-podcast/?via=empowerapps</a></p><p>Try it today with<a href="https://transistor.fm/?via=empowerapps"> this special link:</a><br><a href="https://transistor.fm/?via=empowerapps">https://transistor.fm/?via=empowerapps</a></p><p><b>Apple September Event</b></p><ul>
<li>Is your app ready for iOS 14?!?! 🤯</li>
<li>Why Blood Oxygen? What is VO2 max?</li>
<li>Family Setup</li>
<li>Series 6 vs Series 3 vs new SE?</li>
</ul><p><b>State of Apple Watch Development</b></p><ul>
<li>Building Complications in SwiftUI</li>
<li>Custom Watch Faces?</li>
<li>When will the Apple Watch be fully independent?</li>
<li>Why build an Apple Watch app?</li>
<li>When should you build a companion watchOS app?</li>
<li>Is Touch ID coming back?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><b>Transcript</b></p><p><strong>Leo Dion (Host): </strong>Did you get all your apps ready for iOS 14? </p><p>[00:00:02] <strong>Steve Lipton (guest): </strong>Fortunately, I didn't have it. Wow. That was one mess. I did not have to get into this was watching everybody else's mess. </p><p>[00:00:11] <strong>Leo Dion (Host): </strong>Yeah, exactly. It was just, I felt for people on Twitter. Cause a lot of folks were just kind of like, okay, the new versions coming out tomorrow and like.</p><p>[00:00:21] It was difficult just to get to the right to GM version and the betas still, you know, there were issues with submitting to the app store. Yeah. It, I don't get it. Do you, do you understand the logic behind it? </p><p>[00:00:36] <strong>Steve Lipton (guest): </strong>I don't, the I've I've made some guesses that they backed themselves into a corner that they wanted to launch with.</p><p>[00:00:45] I watch  for the watch. And that meant that they had updated in order to get that for Friday. So when they did that, they then had said, okay, everyone has to go up to normal. And so we didn't get our normal warning about a GMC, why they didn't put the GMC last week. That's a good question. </p><p>[00:01:04] <strong>Leo Dion (Host): </strong>Or why you're not just waiting to release the watch next week too.</p><p>[00:01:07] Like yeah, exactly. I mean, just a week, it's out like either asking for a long time. So yeah, that's, that was really strange. What, I think. I th ink you can get away with like having an app not be updated for a few days, but still like the headache of it. It's just, just crazy already in a year with like issues with developer, the developer  .</p><p>[00:01:34] Yes. </p><p>[00:01:34] <strong>Steve Lipton (guest): </strong>It was stressing a community that's already been stressed. Yeah, we're going to see, I mean, there's lots of subtle errors that are going to start. I've already seen a few with the betas and I warned ahead to those developers, but, I mean, we're going to see some issues that people are going to now.</p><p>[00:01:53] Yeah. iOS 14, only on the iPad, this eyes, the ones I've seen the worst of and start to get some bugs that they never expected. A scribble is going to cause a nightmare and a half. as I can see already, I've seen three apps that where you expect to be able to use a pencil, to do a control, they put a text control there.</p><p>[00:02:18] So it, it. It goes to scribble. Instead it goes to the Tech's control. It goes with their actual control. So, I mean, we're going to see things like that. And, those kinds of things are going to show up and nobody had really enough warning to know. I gotta get, make sure I hit this right. So we're going to get a couple of those.</p><p>[00:02:36] I've seen one of the ones that I was really frustrated with is, and now I'm starting to see bugs from them too. Is Niantic. </p><p>[00:02:44] <strong>Leo Dion (Host): </strong>Yeah, I saw your post about Pokemon go </p><p>[00:02:47] <strong>Steve Lipton (guest): </strong>blocked out Pokemon, go from beta developers. Jeez. and so you totally crashed on a beta a minute. I went to iOS 14. It worked perfectly. So they, they, first of all, lost me as a customer because I have been able to play.</p><p>[00:03:05] And that's a game that's based on addiction. Right. And if you lose interest, you're not going to go back to it. So they lost me as a customer. </p><p>[00:03:13] <strong>Leo Dion (Host): </strong>This isn't a great year to play Pokemon go </p><p>[00:03:15] <strong>Steve Lipton (guest): </strong>anyways. Yeah. It's been a bad year. I mean, they made enough, they made plenty of changes to try to get around that. But it's the other side of that is they had the opportunity to get developer instead of user input and say, okay, this is wrong.</p><p>[00:03:32] This was wrong. This was wrong. This is wrong. From people who had some clue about what they're talking about and then integrate that into a better thing. They're now getting that there's huge latency issues, which is what the post I've been seeing today. Huge latency issues in the new iOS 14 version. And now they're saying, Oh, you have to reboot and you have to do this, go, go read the whole manual and whole bunch of stuff like that.</p><p>[00:03:57] So, I mean, It's going to be handled badly and I'm sure a lot of people are gonna be handling it badly. Yeah.</p><p>[00:04:06] <strong>Leo Dion (Host): </strong>Welcome to another episode of empower apps. I'm your host? Leo Dionne. I'm the principal software developer at bright digit. Today we have with us, Steve Lipton. Hey Steve. How you doing? </p><p>[00:04:18] <strong>Steve Lipton (guest): </strong>Brady? Good. How are you? </p><p>[00:04:20] <strong>Leo Dion (Host): </strong>Good really glad to have you on, we'd been talking to in the summer about having you on one, the new Apple watch event happens and you did that fantastic workshop at three 60 iDev on Apple watch development, something I'm passionate about.</p><p>[00:04:34] So I'm really glad to have you on to talk about. This subject, I'll let you go ahead and introduce yourself and what you do. </p><p>[00:04:41] <strong>Steve Lipton (guest): </strong>Hi, I'm Steve. And, I am first of all, a CIO at a medical device company called scientific device laboratories. I spend most of my iOS time really working with LinkedIn learning to do.</p><p>[00:04:57] Courses for iOS development. I have a weekly tips show on LinkedIn learning called iOS developer tips weekly. And I have been writing lots of courses. The most popular one right now is of course, Swift UI essential. And I have updated the watch LS to watch a seven, which is, should be out sometime in October.</p><p>[00:05:20] so you'll see all the new stuff and how to use it. And I write lots of courses. I'm on number 23, I think now or something. Yeah. I like that of the numbers I've have recorded. So there's been a bunch of them in there. </p><p>[00:05:31] <strong>Leo Dion (Host): </strong>Yeah. So we had a big event this week concerning mostly the Apple watch. Maybe before we get into the Apple watch, let's cover the other stuff.</p><p>[00:05:41] We talked already about the release of iOS 14, but we have a new iPad air. Are you getting any new iPad air? </p><p>[00:05:49] <strong>Steve Lipton (guest): </strong>No. And I don't think I'm going to do it this time. What </p><p>[00:05:51] <strong>Leo Dion (Host): </strong>do you have? What kind of iPad do you have right now? </p><p>[00:05:53] <strong>Steve Lipton (guest): </strong>I have an iPad generation six and an iPad. Pro, I think that's the generation two and generation four, iPad mini.</p><p>[00:06:03] And I'm using all of them right now. So I don't need another one yet. </p><p>[00:06:08] <strong>Leo Dion (Host): </strong>Yeah, I'm in the same boat. I got a, I think it's six gen iPad and second gen iPad. Pro 12.9. I really like, but yeah, I have no interest. I don't understand the like product line with the iPad right now because like iPad air is in a weird position and it also puts iPad pro in an awkward position because technically it has a faster processor.</p><p>[00:06:32] So yeah, it'll be interesting to see because. IPad covers so much of a consumption market. Like being able to walk stuff, you know, I've had areas sorta like a midline pro-sumer device. Really? </p><p>[00:06:47] <strong>Steve Lipton (guest): </strong>Yeah. I'm actually surprised my. My big rooting for an iPad was actually my mini. I would love to see a mini with a pen.</p><p>[00:06:56] <strong>Leo Dion (Host): </strong>Oh, so the mini doesn't support pencil? </p><p>[00:06:58] <strong>Steve Lipton (guest): </strong>Not the ones I have seen have anything to do with pencils so far, I would like to see the most advanced possible thing you can throw in a mini minis are not as popular. I know that, but I'm a big fan of the mini it's super easy to throw in a pocket and hits that.</p><p>[00:07:14] Space where if I'm going to read, be reading a novel or doing some notes, it works a lot better for me. To have that around and try and even lug one of the other iPads. </p><p>[00:07:26] <strong>Leo Dion (Host): </strong>How about a larger phone? Cause that's kind of where people thought that like the iPad mini wasn't necessary because of the fact that phone sizes have gotten so much bigger.</p><p>[00:07:36] <strong>Steve Lipton (guest): </strong>I have the biggest phone, I've got a pro max and that's still small compared to my mini. I can't draw on my phone, but I can draw my mini. So it would be something as an artist. That's something that I could do some doodling and some scribbling and get some sketches out that I could then put on some of the other ones.</p><p>[00:07:55] I can't do that on my phone. It's still too small. </p><p>[00:07:57] <strong>Leo Dion (Host): </strong>Yeah. So let's get into the Apple watch. We have a new Apple watch this year, this series six. and it seems like the big feature with the series six is blood oxygen. I don't get it. Maybe you might have a better explanation of why this is such a hot feature, but it's like, it's more concerned with like wellness necessarily than fitness.</p><p>[00:08:26] What have you seen as far as the blood oxygen and stuff that you think is going to make it such a hot selling point? </p><p>[00:08:32] <strong>Steve Lipton (guest): </strong>I think there's two things that are going to come out of this one. It's always what I come back to is Apple has arcs. They have character arcs, just like a story has arcs. This is another step on that arc for the real Holy grail.</p><p>[00:08:46] That really Holy grail is going to be blood sugar. This is another way of figuring out by blood color, what your health is. Eventually, you're going to be able to do this hopefully to blood sugar. And that brings in the whole diabetic market. </p><p>[00:08:59] <strong>Leo Dion (Host): </strong>Yeah. Oh yeah. Definitely. I could see that.</p><p>[00:09:05] I wanted to let you know about the host of our podcast. Transistor FM transistor has been an awesome podcast hosts for the last two years of Houston. What I really like about it is all the great features. It offers people who want to really run a professional podcast. I love the automated integrations with Apple podcasts, Google podcasts, Spotify, MailChimp, et cetera.</p><p>[00:09:28] They offer really great analytics, which I use quite frequently and they have updated their UI to look fantastic and be usable on the iPad as well. One thing I've been thinking about lately with a lot of the stuff in the news is the importance of running a independent podcast. We all know about stories about you tubers and app developers, running into issues with all sorts of gatekeepers.</p><p>[00:09:56] And one of the places where we have that kind of independence is in podcasting. Unfortunately, there's some hosts which can have an order amount of control over your podcast and act like a gatekeeper, like many of, some of these other companies that we've been hearing about lately. Things like ad insertion or control over how your podcast is published and broadcasted, things like that.</p><p>[00:10:23] That if you're running a professional podcast is either risky or can lower the quality of your show. So thinking about transistor is that you own the podcast. It is yours, and you have that complete independence. It works on multiple platforms. So you're not locked down to someone like Spotify. For instance, you have a completely open RSS feed, but also they have a lot of tools to help you run a professional podcast as well, like the analytics, but also things like being able to have a private RSS link.</p><p>[00:10:55] If you want to run some sort of, membership, Service along with your podcast as well, or you want to be able to only allow certain people to listen to your show, which I think is awesome and a really great feature. So again, I highly recommend checking transistor out. Let them know you heard about transistor from us.</p><p>[00:11:17] Go to the link in the show notes below to give transistor a try today for 14 days.</p><p>[00:11:26] So you think it's the same idea? Using machine learning based on blood color to figure out like essentially blood sugar. </p><p>[00:11:35] <strong>Steve Lipton (guest): </strong>Yeah. They're getting, they're getting close to it. And that's what they're trying. I think that's what they're trying to do. They've got a huge number of patents for some kind of technology that was like that a while back in 2018.</p><p>[00:11:46] So this is something that I think they're working on. That the diabetic side of it, the blood sugar side of it, it needs a lot more testing is going to probably not going to be able to go through FDA as a Denovo, which is a new technology permission from FDA. So they're going to have to go through the whole.</p><p>[00:12:05] Range of things. So that's gonna take longer the other side of blood Oak too. There's a lot of good uses for blow to some of the studies they were mentioning. Cause they're now doing a whole bunch of studies to get hard data about what's going to be done. And they mentioned that in the event, the big ones going to be asthma people with asthma, we'll get an early warning sign of a possible attack of asthma because their blood Oh, two will go down.</p><p>[00:12:32] And so there'll be able to watch for those kinds of alerts and get to their inhaler before they start to have an episode. So, I mean, those people are gonna be using it to an extent. I think the most exciting one of the ones, the ones that we're talking about is looking at not using temperature, which is horribly unreliable for telling you if you're going to be getting sick.</p><p>[00:12:59] And go to  for looking if you're getting sick, because if you're having a respiratory illness, It may start to change your normal blood. Oh, too far before you see any other symptoms, </p><p>[00:13:12] <strong>Leo Dion (Host): </strong>I would assume like symptoms like temperature or more based on the immune response than necessarily like getting sick.</p><p>[00:13:18] Okay. That makes sense. </p><p>[00:13:20] <strong>Steve Lipton (guest): </strong>So you're actually looking at what it's actually changing and that's something that they had. That was one of the studies they were talking about. That study is going to be very interesting. If we can move to more of a blood oath too, if you go in the hospital. One of the first things they'll be doing after they pop an Ivy in you is they will be watching blood too.</p><p>[00:13:40] There'll be watching pulse and the pulse oximetry, which is the blood Oh two. And they'll put this thing on, on your finger, </p><p>[00:13:46] right? </p><p>[00:13:47] <strong>Leo Dion (Host): </strong>It's going to say it's the thing on the thinker when </p><p>[00:13:49] <strong>Steve Lipton (guest): </strong>you put something on finger and they watched that really carefully, because that tells them a lot about what's going on in the lungs.</p><p>[00:13:56] without a lot of invasiveness </p><p>[00:13:59] <strong>Leo Dion (Host): </strong>now, I don't think we have anything as developers available to us as far as blood oath to right now. Well, I guess you'd have health care, but I don't know if that's like those specific sensors are going to be available through health kit necessarily. Do you know? </p><p>[00:14:16] <strong>Steve Lipton (guest): </strong>I don't know.</p><p>[00:14:17] I haven't looked because they just popped us in and I haven't loaded the GMC yet, but. I suspect that you'll be able to look at the data because I could see the data on the health app. </p><p>[00:14:27] <strong>Leo Dion (Host): </strong>Right. That's essentially what we see is developed. </p><p>[00:14:31] <strong>Steve Lipton (guest): </strong>We'll be seeing the data. We won't be able to get to the actual sensors, but we'll be able to see the data itself and then start tracking that.</p><p>[00:14:39] I'm sure there's going to be ways of tracking it. I mean, there's probably gonna be in their survey systems ways of doing it and we can probably work backwards from that. </p><p>[00:14:49] <strong>Leo Dion (Host): </strong>I would imagine it's, it's essentially going to be available like through a healthcare query of some sort, and then you could, you could access it that way, which is pretty, pretty sweet.</p><p>[00:14:58] So I'm wondering, like, what would it be the difference between. Is there anything special as far as the developer's concerned with series six and how you access that through healthcare, as opposed to what's available to us, like on a. Standard older AppleWatch so, yeah, that'll be really interesting to see how much they open that up.</p><p>[00:15:18] <strong>Steve Lipton (guest): </strong>It's going to be interesting to see that opening it up, how it's going to be playing into some of the other places that you may be using it. they talked a lot about VO2 max, which they up the range in  in iOS 14, where you'll be able to see some of the other performance stats. Where are they going to start playing with the, adding the blood?</p><p>[00:15:40] Oh two with the VO2 max to get your cardiac rates, even more your cardiopulmonary rates, I should say, to figure what's your overall fitness is where that's going to go and where other developers, where developers can play with that is going to be interesting. but like I said, I haven't looked yet, so I don't, I'm not a hundred percent sure what's going to go on with that.</p><p>[00:16:00] <strong>Leo Dion (Host): </strong>Could you briefly explain exactly what VO2 max is as opposed to blood oxygen, </p><p>[00:16:06] <strong>Steve Lipton (guest): </strong>essentially VO, it's another measure of fitness. Very often. You will see it involved with treadmill, cardiac tests. Okay. And what they do, this is where I usually see people do it VO2 max, the most accurate way of doing it is they will be taking your.</p><p>[00:16:26] Heart rates and other information, your breathing rates and stuff like that on a treadmill and they'll stretch. And during a stress test, they'll pull that all the way up as far as they can to figure out what your upper limit is. </p><p>[00:16:40] <strong>Leo Dion (Host): </strong>As far as how much oxygen you can hold in your </p><p>[00:16:42] <strong>Steve Lipton (guest): </strong>how much oxygen and how and how far your breath is going.</p><p>[00:16:46] And at that point, that gives you some idea of your fitness. Now that's actually changing as you're doing things about how much this combination. Comes into play. Yeah, it's the maximal oxygen consumption and it's really based on Durance fitness, but what a lot of people do is they start using VO2 max, as an idea of how healthy you are, because you're going to have an idea of your cardio-respiratory fitness based on the VO2 max.</p><p>[00:17:15] And I was looking to see if I could find a scale for it, about where people are post to go. I do not see one easily find-able so I won't be able to say that, tell you that, but yeah, you can look in some of the health journals with stuff about where those numbers are supposed to be. </p><p>[00:17:31] <strong>Leo Dion (Host): </strong>Yeah. I'm just reading Wikipedia.</p><p>[00:17:34] Apparently like athletes typically have like a 80 milliliters per kilogram. So like that would obviously be like very healthy. Right. You know, I don't know what the typical VO2 max would be for someone, but then that makes sense. And I, I understand what you mean by like a stress test and stuff. So </p><p>[00:17:54] <strong>Steve Lipton (guest): </strong>yeah.</p><p>[00:17:54] I mean, just give you some idea. It's been there for a while. If you get too low, then you've got an issue. That's what, the big thing that the change in, in iOS 14 is all about is if you get too low, Then you're probably going to having some problems and you may want to go see a doctor about them. Yeah.</p><p>[00:18:14] While I was seriously training here, I have a good example here. So December is 2017. I'm just gonna give you one of my numbers to give you an idea. I was the middle of training for the Disney marathon. so I was about ready to run the marathon, which I ran in the 2018, in January of 2018. And my, my VO2 max was 38.6 as I've been sitting around.</p><p>[00:18:36] So I'll give you my number just as COVID started and I didn't get to do anything. It dropped down to 31. So I started losing my fitness over that period of time. Okay. Okay. So it's a good way of say, Oh, your fitness is not being as good as you can and you can watch trends. I mean, they got the usual trend type stuff.</p><p>[00:18:55] <strong>Leo Dion (Host): </strong>Okay. Yeah, that's awesome. And it's interesting talking about story arc, how much they've basically like lean into the whole fitness and health thing. Like, it's not, I don't want to say it's like a one 80, but it's like a big shift from where the Apple watch used to be a, when it first debuted five years ago.</p><p>[00:19:14] So they're just, they keep going in that direction. As far as health and fitness are concerned. </p><p>[00:19:20] <strong>Steve Lipton (guest): </strong>I think that's really. When you look at the wearables market in general, I mean, they are dominating it, but if you look at the wear wearables market in general, before and after the Apple watch came out, those are the people who are going to be using wearables.</p><p>[00:19:36] you get the fashion a little bit first. And I really thought about this even when the first Apple watches came out, and I got a generation one literally to run with it, and I had a Nike watch that had a GPS in it. I didn't have the GPS in the first versions of my Apple watch, but I had it in the phone and I just ran with my phone.</p><p>[00:19:58] But. It worked really well between the phone GPS and my watch. I was able to get the data I needed and it did a better job than I had with the Nike watch. </p><p>[00:20:08] <strong>Leo Dion (Host): </strong>Yeah. I have the same exact watch too. I had the Nike, it was like a Nike plus watch with the GPS on it. And then, yeah, I got the Apple watch and it was like, I was in the same boat.</p><p>[00:20:18] I got the series zero and then the series one. And it's like, yeah, I had to carry my phone around and everything. And like they've, they've kept making it better and better to the point where like, I don't think watch, I think they essentially like </p><p>[00:20:31] <strong>Steve Lipton (guest): </strong>they have their own </p><p>[00:20:33] <strong>Leo Dion (Host): </strong>Apple watch essentially, that you can buy with the custom watch face.</p><p>[00:20:37] And that's like their way of selling that watch now. </p><p>[00:20:41] <strong>Steve Lipton (guest): </strong>Yeah, I think that's pretty much where they've gone. And I think what Apple is doing is they saw it in that first bunch and they were pretty clear. I think even back then they knew the health market was going to be big and they kept figuring out here's a great place to stick some sensors that you can't stick elsewhere.</p><p>[00:20:58] And the question becomes, first of all, how do you put those sensors in? How do you communicate with those sensors? I think the early watches. The bigger question was trying to get a communication between the watch and the phone was crap. </p><p>[00:21:13] <strong>Leo Dion (Host): </strong>Yes. Yeah. And now we've gotten to a point where it seems like they're willing to, to use more of the wifi and kind of just depend on the internet for communicating with the phone, as opposed to like directly communicating through Bluetooth or wifi or whatever it tries to use with watch connectivity.</p><p>[00:21:31] <strong>Steve Lipton (guest): </strong>Yeah. They're doing a lot of things. I was very interested. Not I'm interested in it as, as a, as a product and service, but I'm more interested in the Apple fitness plus of what they're doing with the watch. where you're going to get some real time data from your watch directly to your other devices.</p><p>[00:21:50] It's going to, if it's an Apple TV or your phone or your iPad, it's going to be putting your stats from your watch directly on the screen as you're watching your workout. which is saying how well the communication has been compared to what I recorded. My watchOS. I think it was watching us. For course, you usually have a wait five seconds before you got some something from the watch to the phone.</p><p>[00:22:24] That's a big difference. </p><p>[00:22:25] <strong>Leo Dion (Host): </strong>There's a big difference. and it seems that like I'm curious where watch connectivity is going to be. Oh, well, let's, let's talk a bit about family setup. That was a big deal that they brought up. it's a feature as a parent. I'm interested in it, not necessarily now, but. It's really interesting how we're making the watch more and more independent.</p><p>[00:22:50] And it seems like this is the first kind of like them testing the waters of making the watch more independent. I feel like cell connection was first. And then this, obviously this requires a cell connection, which I find really interesting to me. Like as a parent, though, the expense of buying a watch and the responsibility of my children and at the age they're at kind of.</p><p>[00:23:14] Makes me not interested in doing it now, but I think at some point I think is a hand me down. I would be interested in maybe, you know, handing down one of my Apple watches once I got old enough to where I feel like they can actually carry that around. But that seems really cool. Like that they're kind of it.</p><p>[00:23:32] And quite frankly, Apple is not like very key. I don't want to, I don't know how to put it. Apple seems a bit. ignorance of how their software is not an ideal fit for families in a lot of ways, compared to some other companies that do. And so, you know, this isn't ideal, but it's definitely a good first step.</p><p>[00:23:59] If you're a parent and you want to know where your kid is and being able to contact them. </p><p>[00:24:04] <strong>Steve Lipton (guest): </strong>Yeah, I think where you're going with, it has been one of the sore points with Apple. I know there were some developers that ran into some trouble in trying to get apps, to work with family type situations.</p><p>[00:24:18] And I think this is a response to that, but, you know, I, I see a couple of things that are important for developers along the way. Is we really start, have to thinking about independent watch apps. </p><p>[00:24:29] <strong>Leo Dion (Host): </strong>Oh, for sure. </p><p>[00:24:29] <strong>Steve Lipton (guest): </strong>Yeah. and we can't think of going the traditional route. Anything, anything new is gotta be an independent watch app if you want to be using the family type situations because it's not going to sell it's, there's going to be the markets for things are going to be the kids.</p><p>[00:24:49] If this works. Along with the parents. And again, as that, as they mentioned in the end, the event, the more important one for me is not the kids. It's the mom and dads, right? It's the fall protection that you get some notification about the fall protection. That if you've got someone who's not all there yet or not all there anymore, right.</p><p>[00:25:12] Those issues I think are going to be even more important for this, then the kids, they didn't. They were trying to be sensitive to that by not by glossing over it more, but I think having, having better control over the fall issues and all those things where you can make sure that mom or grandma get to where they need to go, I think it's even more important than necessarily the kids.</p><p>[00:25:39] I mean, people think the emotional side of it is people think about the kids, but having to deal with a parent or grandparent who is not completely mobile and may not be completely in control of their faculties anymore. I think this is going to be a bigger issue for them than it is even for the kids.</p><p>[00:26:00] <strong>Leo Dion (Host): </strong>Yeah. Yeah. And of course, Hopefully being able to convince them to keep the watch on and I think is really important. Yeah. I think that was one thing. The developers I noticed on Twitter were saying it's like, it is basically a requirement for your app to be independent in order to work on one of these family setup situations.</p><p>[00:26:19] Otherwise you kind of. It's not going to work. I've built an independent Hartwich, which I've built. That's an independent watch app. It's not hard to do really, to make sure that your watch is independent, the container situations, but strange. But yeah, it should be like every watch option, essentially be able to be independent at this point in 2020.</p><p>[00:26:40] <strong>Steve Lipton (guest): </strong>Yeah. I would agree. There are a few places where I see that you really need some connection for some things. If you have a phone app, for example, that really is just having the watches and accessory of the phone. There might be somewhere where you want to continue to use it. some of my workout apps, for example, fall into that category where, or sometimes when, you know, Camera is a great example of another one where you're going to have it.</p><p>[00:27:08] That is the remote for the camera on your watch is only going to be a remote. There's not much more it can do. There is no, at least not yet any forward facing camera on your, on your watch. So you're not taking selfies with your watch. You're taking selfies with your phone, right? </p><p>[00:27:25] <strong>Leo Dion (Host): </strong>Yep. So with the. Family set up, they require a series four with the LTE connection.</p><p>[00:27:34] Right. And so part of their way to, kind of. Make a cheaper device that can hopefully sell to kids or families. Essentially we have the new Apple watch se, which I find really interesting. And then on top of it, they're still selling the series three, which is not compatible with family set up, which I find really strange.</p><p>[00:27:55] Exactly why they're, they're still selling the series three because for developers, first of all, you have a whole display class now that you still have to support. And then on top of it, it's not gonna even work if you try to do family setup. So I find that really weird. I almost feel like they should just stop selling the series three and just sell the se.</p><p>[00:28:14] And the series six. I don't quite understand it. You know what I mean? </p><p>[00:28:18] <strong>Steve Lipton (guest): </strong>Yeah. I have no idea why they're picked the series three. There's like three things that I could think of about the series three that make it not the best option for the next watch that you want to use. I mean, the biggest ones, the complications, I mean the complications change from series three of the series four.</p><p>[00:28:36] So you've got all the new watch faces all of the complications that are around a watch. All the color ones that all started with series four and later. So your street doesn't have those. So you're missing out on tons of the watch faces that could be on this watch. So people are watching that video from the event and see, Oh, I could put on, you know, I have the, I have the, a, which one do I have now on now?</p><p>[00:29:03] one of the timer ones, they, The new timer one and they can't get it on. That's a serious story </p><p>[00:29:09] <strong>Leo Dion (Host): </strong>top of it. Like, what is the next cheap? If you're going to get a smartwatch non-Apple watch, what would it be like the next cheapest watch to a series three? Like as a Fitbit? Like, are there like a hundred dollars smartwatches or what?</p><p>[00:29:22] Well, </p><p>[00:29:22] <strong>Steve Lipton (guest): </strong>yeah, I think there's things I haven't looked in a long time, but I think there's in the Fitbit range. I think there's a few that are below that. And I think there's some that are above that. Like, I don't understand that it's in the range. </p><p>[00:29:34] <strong>Leo Dion (Host): </strong>Yeah. Because it's like the series three is 200 bucks, which is still very expensive for somebody who's not willing to spend that kind of money.</p><p>[00:29:42] And then you go to the se and then he got live. It's out another $80 for the se, but then you also need to spend another $120 or $130 to make it work with family setup because you need the self connection. And it's like the pricing, the pricing that doesn't make. A lot of sense to me. And obviously Apple's really good at pricing.</p><p>[00:30:04] So maybe I shouldn't say that, but like, it, it seems like either go, you make the se </p><p>[00:30:10] <strong>Steve Lipton (guest): </strong>really affordable. </p><p>[00:30:12] <strong>Leo Dion (Host): </strong>Or Andrew dropped the series three and then it wouldn't make a lot more sense and have a much more coherent line or make the series three really cheap, rather than just 200 bucks. Cause that isn't, that just isn't like necessarily cheap enough almost to me be worthwhile.</p><p>[00:30:30] And I understand like they're trying to saturate the market and I think that's partly partially part of it. Maybe </p><p>[00:30:36] <strong>Steve Lipton (guest): </strong>I think the series three solves a. Problem that Apple can run into. People have always said they don't have a really good low end. I think if I look at my phone from a distance, I can tell that I have an iPhone or an Android phone.</p><p>[00:30:54] It's usually relatively easy to tell it's getting harder with my current one. If you're not, if you're looking at it from the front and you're looking from the back. All that, that huge camera races, everything. But so, but you can tell from a phone. So for status reasons, I think it's purely for social proof reasons.</p><p>[00:31:12] Okay. If you look at an Apple, watch, an Apple watch will always look like an Apple watch. It doesn't look like anybody else's watch. It's very unique in its shape as far as watches that are out there. And I think if you want to say, Oh, I am cool because I have an Apple watch. Watch three works. For that particular purpose.</p><p>[00:31:33] And so they're leaving it in for that purpose as purely status. I don't think functionally it's a great watch anymore. I mean, I just moved from my it's sitting over here on my, on my counter here. I just moved to a, to a watch five, a couple of months ago. And the difference between this watch and that watch is amazing.</p><p>[00:31:54] And I would never want to go back to that. Watch it did a good job for what it was doing, but when I wanted to add more complications, which was the biggest reason I needed it, it fails. It does not have the ability to do color. So all the color complications aren't there, it means that all the new stuff we can do with Swift UI complications can happen.</p><p>[00:32:18] And that's going to be the next stage about what the other big nuke next stage that Apple is going to be playing with, has to do with those complications. </p><p>[00:32:26] <strong>Leo Dion (Host): </strong>So let's start getting into it and talking about all the new changes in watchOS seven and specifically complications. You did that workshop that I went to this summer on building complications.</p><p>[00:32:38] What's your thought about now this introduction of Swifty Y into the, watch face, essentially. </p><p>[00:32:46] <strong>Steve Lipton (guest): </strong>I think there's. Again, it's one of those character arcs that we're talking about. It's one of the most complained about character arcs. There is on the Apple, watch this customizing your watch face. We are, are about four views away from a completely customized watch face.</p><p>[00:33:04] And this is the next step in doing that is the two things that are added to watch OSR. One is that you can share your watch face. Two is the kinds of complications you can put on there. And so we've got new complications that are completely Swift UI views. and you get a nice little rectangle and you can put whatever you want in there, as long as it is an interactive.</p><p>[00:33:31] So as long as there's no buttons or sliders or anything like that, or gestures of any kind, you can put whatever you want in that spot, which is amazing. And we've got. Those complications. We have ones where you're able to customize some of the templates they already have with Swift UI. And with those pieces coming into play, plus you can have more than one complication for a given app.</p><p>[00:34:02] So you're gonna have one complication that might be that big Swift UI one. That's doing all the data that you need to do or showing you where you were on a map and your stages for your pizza delivery or something like that. But underneath that, you might have an order button for the pizza. You could build your own watch face with three or four complications.</p><p>[00:34:25] Save it, email it to your customers who have an Apple watch. They can then get the app for it and all that and all the parts of that. And then they can start using that. Face for doing all your stuff that you have for your app. It makes, you know, you get five or six buttons that you can use for your app, right on your watch face.</p><p>[00:34:49] Now, some people may customize that again and say, Oh, I don't need that button. I can put that button for something else. Like say, you know, I'd always put my battery. Cause I always like, I'm always paranoid about my battery, but I'm. We're seeing a movement more and more towards that customization. And I found one of the most interesting of those was the stripes.</p><p>[00:35:11] And I don't know if you've played yet with the stripes watch face yet. </p><p>[00:35:14] <strong>Leo Dion (Host): </strong>Not really. So here's, here's kind of, my deal is I, I like having a watch face with a lot of information on there. Yeah, me too. And I look at some of these like art, the, the new, The one with the face face, right? Yeah. You got that. You got stripes and it's like, why would I have one of those if I can't see the weather or I can't see like my calendar, that's why I look at my watch.</p><p>[00:35:41] Cause I want to look at like, whatever I'm trying to keep track of throughout the day. so like while I think these watch faces really look nice, it feels a little bit. Like disconnected from Apple that they make these beautiful watch faces, but they have like so actual little information and it's like, I understand for fashion purposes, why you do that?</p><p>[00:36:01] But like, it can't, they make one that's like at least has like two or three complications on it. So I can like have something nice looking while at the same time being able to see what's going. </p><p>[00:36:13] <strong>Steve Lipton (guest): </strong>I think what they're doing particularly with stripes is those are experiments and. How you can build with clock yet.</p><p>[00:36:24] It's the parts of the clock that we haven't seen yet, which I expect to see in watch OS eight, maybe nine. Because if you look at stripes, if you actually play with it, I wouldn't wear it either. I mean, I'm a, I'm an infograph person to say the least. If I don't have six complications on my watch, I'm not, I'm not happy.</p><p>[00:36:44] Right. But for me, what I saw as I play with those. Yeah. Great. That's a nice art thing. That's. That might be fun. I'm emoji might be cute, but it's only got a very small complication on it that you could put the date or one line of text, actually two lines of text. And that Stripe ones though, you're changing the entire background.</p><p>[00:37:07] You're saying how many stripes you want and what color you want those stripes? Now you're using selections. If you look at it on the watch, I mean, if you look on the watch app, but you're actually changing backgrounds. And that's probably not a very hard Swift you, I thing to do, if you know enough about Swift UI, to know that you've got a stack, you're saying how big the stack is and you're putting in a color index and then you just run it through a color and then you just say, okay, I've got those four colors.</p><p>[00:37:36] I'll pop that out. That's not hard. But that used me. The indication that being able to change the background is something they're experimenting with. They'll see how other, how the customers, the users will be looking at it. And then they can say, okay, that technology worked next. WWDC will say, Hey, you can start changing the backgrounds.</p><p>[00:38:01] <strong>Leo Dion (Host): </strong>Yeah. There you go. That might be something we'll see. And watch OSA is like changing backgrounds and then, yeah. And then watch last night, like really opening up clock hit. </p><p>[00:38:10] <strong>Steve Lipton (guest): </strong>I mean, there's only four things that are missing the backgrounds, the hands, which. Again, it's a very small view is just actually three views.</p><p>[00:38:21] And all you're doing is you're changing the game graphic in the view of the three hands. you decide if you're gonna have a second hand, but you're going to have the other two hands. So those are not that hard to actually think about. Those could be, it can be very simple views, a template for the complications and the dial.</p><p>[00:38:40] And that's it. I mean, you might have a digital version, which would be another thing that you'd be throwing in there of how to do it, but you'd have, they probably still stick with some kind of template where you would put a dial with a certain number of complications and you know what most of these still look like either utilitarian or infograph, there's only, still the four major.</p><p>[00:39:03] Types of watch faces still there. Right? There's not that huge, a difference between them, right? Those four templates, the hands colors of hands or images of hands, that's it? Yep. We're not that far. From custom watches. So </p><p>[00:39:24] <strong>Leo Dion (Host): </strong>we'll probably get custom watches, but it seems like one of the big limitations, what I'm really interested to see is what comes out of the reviews for the series six is it seems like there's still limitations as far as like how much you can use the network, but.</p><p>[00:39:41] Also like how much an app can use the battery. Because like, from what I've seen is like apps can be pretty aggressively shut down. I don't know how much that's changed in iOS seven necessarily, but. It seems like that's one of the limitations of building an app for the watch is the fact that the battery is so limited.</p><p>[00:40:01] Do you think, do you think Joel seven and series six, it might be time to start thinking about building a watch app or building companion watch app for your iPhone app. </p><p>[00:40:12] <strong>Steve Lipton (guest): </strong>I really it's one of those things where it really depends on the app. I don't think everyone should be making a watch app. there's a lot of stuff that is totally worthless for a watch app.</p><p>[00:40:24] In fact, I think there's a lot of watch apps that you don't even need. The app. I think the bigger issue is whether you're going to have a complication or not. I think it's 50 50, about how many times people really need an app and how many times people need a complication. I think the apps themselves may be nothing more than the platform.</p><p>[00:40:49] For the complications, because lot of what I'm seeing when I use my hands, I don't watch. And when I see other people use their watch is they're not interacting with the watch. I mean, I did that summer course. For example, I made an order form on a watch to order a pizza. In reality. That's not something that people will be doing is sitting there, scrolling away, trying to hit buttons.</p><p>[00:41:16] And I find that's not something that's a very good use of that small amount of real estate. They'll do that on their phones. Instead, what they'll do is they would like to look at their watch and know where when the delivery time is going to be </p><p>[00:41:29] <strong>Leo Dion (Host): </strong>exactly </p><p>[00:41:30] <strong>Steve Lipton (guest): </strong>you're not. And I think that's one of the problems that.</p><p>[00:41:34] Is true about the watch right now is a lot of people are still app centered. And really the watch is really complication centered and we're moving to that direction where it's, whatever you see on your watch face is what you're really going to do. I rarely dive into my watch to do things. The fitness apps are one of the few places where I will actually dive into my watch, do something my meditation app to start my meditation timer.</p><p>[00:42:03] Why that particular company doesn't put a complication. I don't know, but that's one of those places. I would love a complication where I could just push the button and it goes right into that. </p><p>[00:42:14] <strong>Leo Dion (Host): </strong>Or like any, like you said, any sort of health tracking, like, like for it, my app, Hartwich, doesn't have a complication because all I'm really you're doing is using the watch as a sensor.</p><p>[00:42:26] Like I'm not really, there's nothing you're tracking of, actively per se. So like, yeah. I don't know how you'd get away with. Having something that's just a complication without an app. At some point, you like, you're going to need a way to interact with the complication in order to like, like when you tap on a complication and it should open up the app, that just makes total sense.</p><p>[00:42:51] So it'd be hard for me to ever see Apple say, Hey, you can build an app without an app. That's just a complication. </p><p>[00:42:58] <strong>Steve Lipton (guest): </strong>I agree with that. I think the app is really a base for a complication. For many apps for many situations, I think there are apps that need to be apps. And when they're actively working with sensors, I think that's totally true.</p><p>[00:43:14] The ECG is another good example of that. The only thing that complication will ever do is launch it. Right. But for many apps we need to, what I'm saying is we want to be looking at complications. As valuable as apps, we're not necessarily going to be building an app. We're going to be building complications that give us information on our watch face the app may either launch something else, namely something that might be on the phone.</p><p>[00:43:45] And there has to be better communication between them, the launch it on the phone, or it may be something that you're going to be using onboard sensors to do something. I don't see the kinds of apps that you would see on a phone ever work well on a watch. I think that's been the biggest weakness of, of watchOS development.</p><p>[00:44:08] Cause I've noticed that watch does not get the kind of hits Mike horses as I'd get on iPhone courses and where they die off in watching the courses is very interesting as like, okay, I don't see where this would go. Because it's not the right environment for a lot of kinds of apps. The phone is a better place.</p><p>[00:44:30] <strong>Leo Dion (Host): </strong>Do you think would be like your biggest takeaway or lesson you would have for an iOS developer, especially, especially like a manager or a CTO. Who's thinking like I'm going to build an iPhone app </p><p>[00:44:43] <strong>Steve Lipton (guest): </strong>where </p><p>[00:44:43] <strong>Leo Dion (Host): </strong>they should start thinking, Hey, maybe this needs a watch iOS companion. </p><p>[00:44:48] <strong>Steve Lipton (guest): </strong>I would say the places where you would see a good watchOS companion.</p><p>[00:44:53] Is one something that you're going to be using sensors or timing directly on your watch. So that would be the direct types of uses for a watch itself. The other place I would see it. And you can say something like, I'll pick on ESPN is a good example where you have data. That's getting pushed to the watch from your servers.</p><p>[00:45:22] So that people have certain information. So be it news or sports or weather or things like that, those kinds of things, where people are really interested in seeing it right now on the second where they don't want to even open their phone to see it. That's the places you want to be using the watch. Yeah, I </p><p>[00:45:43] <strong>Leo Dion (Host): </strong>think secondary, we haven't mentioned this yet, but secondary to complications or notifications.</p><p>[00:45:49] because that's another way that you're going to be able to engage with your customer and your user. And besides complications is whatever complex notifications you might show up on the watch, because that's the other way they're going to, they're going to take notice of you. </p><p>[00:46:04] <strong>Steve Lipton (guest): </strong>Yes. And that's something that's very important.</p><p>[00:46:06] I did not get in there. And I thank you for bringing that up. Cause notifications also has been super enhanced with Swift UI. So we're starting, we're going to start to see with those a lot more of the interactivity, even in the notification, to do certain things, you can put real buttons in, not just the few that you could do it with.</p><p>[00:46:29] Watch get, you could do whatever you really wanted. And you could start to put into those situations, more interaction as you're giving those notifications. So yeah, I see that is definitely something that's going to come up too. Is pop up on the screen. Hey, this is now Don. Your pizza's on its way, whatever it may be.</p><p>[00:46:51] Yeah, definitely. </p><p>[00:46:53] <strong>Leo Dion (Host): </strong>So before we close out, is there anything you wanted to mention as far as the future of the Apple watch or just developing on the Apple watch in general and what you think, do you think Apple has really done this year and where do you think they're headed? </p><p>[00:47:09] <strong>Steve Lipton (guest): </strong>I still think it's the transition.</p><p>[00:47:11] I think we got a huge head blow last year with Swift UI. This year, Swift UI is. Starting to settle in. I think with the watch in particular, it's now one of those things where you really should consider Swift UI. If you're making something new, you don't have any legacy issues that Swift UI will, will start to dominate.</p><p>[00:47:35] The watch development market, because it is so much easier than the option, the alternative. </p><p>[00:47:41] <strong>Leo Dion (Host): </strong>And you could totally tell that's where swiftUI started? </p><p>[00:47:47] <strong>Steve Lipton (guest): </strong>Yeah, it was, I mean, starting with stacks. I mean, I brought it up in one of my other talks that I did recently is we started with stacks. What we now have eight stack the stack and the stack.</p><p>[00:47:59] We started that with the watch because the watch was not going to be able to handle a full. Xcode storyboard. And a lot of the stuff that you see in the wash, it makes total sense in terms of Swift UI. Yes. Thank </p><p>[00:48:13] <strong>Leo Dion (Host): </strong>you so much for coming on Steve. It was really great to have you on and talk about the Apple watch.</p><p>[00:48:18] <strong>Steve Lipton (guest): </strong>Thank you. It was good being here. </p><p>[00:48:19] <strong>Leo Dion (Host): </strong>Where can people find you online? </p><p>[00:48:22] <strong>Steve Lipton (guest): </strong>You can find me at, on LinkedIn and you can just look for Steven Lipton. you can also find me on Twitter. And that would be at Steve_Lipton. And you can also write me steve@makeapppie.com. </p><p>[00:48:42] <strong>Leo Dion (Host): </strong>Thank you so much, folks in find me on Twitter @leogdion, my company is @brightdigit</p><p>[00:48:49] please take some time to go to Apple podcast or Google podcast if I can get it posted soon enough, Amazon just did that today. I would love some reviews on there and, feel free to DM and share this on Twitter. If you have any questions or comments about the show, thank you again. And we look forward to talking to you in the next episode.</p><p>[00:49:14] <strong>Steve Lipton (guest): </strong>Thank you.</p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Fri, 18 Sep 2020 21:05:02 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/21517a94/ac42f9f8.mp3" length="23984659" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/349434/full_1600348274-artwork.jpg"/>
      <itunes:duration>2962</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Steve Lipton about the Apple Watch. We go into detail on the September Apple Event, watchOS 7, iOS 14 release, Apple Watch Series 6, and more.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Steve Lipton about the Apple Watch. We go into detail on the September Apple Event, watchOS 7, iOS 14 release, Apple Watch Series 6, and more.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Local Database Storage on iOS with Aaron Douglas</title>
      <itunes:episode>62</itunes:episode>
      <itunes:title>Local Database Storage on iOS with Aaron Douglas</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">bb7855d0-d020-4f28-8a7f-cb4ec24d4fb3</guid>
      <link>https://share.transistor.fm/s/f6092e38</link>
      <description>
        <![CDATA[<p><a href="https://www.youtube.com/watch?v=RMAczbuXgKo"><strong>Bonus! We talked about Automattic and Apple here...</strong></a></p><p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/astralbodies"><strong>Aaron Douglas (@astralbodies)</strong></a><ul>
<li>
<a href="https://aaron.blog/">The Dangling Pointer</a> (homepage)</li>
<li><a href="https://store.raywenderlich.com/products/core-data-by-tutorials"><strong>Core Data by Tutorials</strong></a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/14bb74b2"><strong>Episode 61 - Machine Learning and Core ML with Jameson Toole</strong></a></li>
<li><a href="https://share.transistor.fm/s/dfb18c54"><strong>Episode 57 - SwiftUI with Majid Jabrayilov - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/17f05dbf"><strong>Episode 49 - Vapor 4 with Tibor Bödecs</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.donnywals.com/fetching-objects-from-core-data-in-a-swiftui-project/">Fetching objects from Core Data in a SwiftUI project by Donny Wals</a></li>
<li><a href="https://inessential.com/2020/05/18/why_netnewswire_is_fast">Why NetNewsWire Is Fast by Brent Simmons</a></li>
<li><a href="https://hibernate.org/">Hibernate</a></li>
<li>Libraries<ul>
<li><a href="https://github.com/stephencelis/SQLite.swift">stephencelis/SQLite.swift</a></li>
<li><a href="https://github.com/ccgus/fmdb">ccgus/fmdb</a></li>
<li>
<a href="https://github.com/groue/GRDB.swift">GRDB.swift</a> </li>
</ul>
</li>
<li>Tools<ul>
<li><a href="https://github.com/ChristianKienle/Core-Data-Editor">ChristianKienle/Core-Data-Editor</a></li>
<li><a href="https://simpholders.com">SimPholders</a></li>
</ul>
</li>
<li>Alternatives<ul>
<li>
<a href="https://realm.io/">Realm</a> </li>
<li><a href="https://parseplatform.org/">Parse</a></li>
</ul>
</li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance or indie apps like <a href="https://appfigures.com/resources/aso/aso-teardown-fotmob">Fotmob</a>.</li>
<li>
<a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">New competitor's report in the Appfigures dashboard</a> where you are able to view competitor downloads, build performance benchmarks, and see the new trends as they happen. <a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">Check it out here.</a>
</li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><br><a href="https://transistor.fm/?via=empowerapps"><strong>Transistor.Fm</strong></a><br><em>Your podcast's publishing platform<br></em>Transistor not only hosts your podcast but also:</p><ul>
<li>
<strong>Help distribute your podcast with integrations</strong> to Apple Podcasts, Spotify, Google Podcasts, YouTube, and Mailchimp</li>
<li>
<strong>Deep analytics</strong> including average downloads per episode, popular podcast apps, number of subscribers, trends</li>
<li>
<strong>Professional support</strong> for creatives, businesses, and professional podcasters when it comes to hosting and analytics</li>
</ul><p><a href="https://transistor.fm/how-to-start-a-podcast/?via=empowerapps"><strong>How do you start a podcast?</strong></a><br><a href="https://transistor.fm/how-to-start-a-podcast/?via=empowerapps">https://transistor.fm/how-to-start-a-podcast/?via=empowerapps</a></p><p>Try it today with<a href="https://transistor.fm/?via=empowerapps"> this special link:</a><br><a href="https://transistor.fm/?via=empowerapps">https://transistor.fm/?via=empowerapps</a></p><p><b>Why Local Storage?</b></p><ul>
<li>Local cache is import for speed and being off-line</li>
<li>Benefits of a flat file vs local database</li>
<li>Why not run a server on your iPhone?</li>
</ul><p><b>Why SQLite</b></p><ul>
<li>How SQLite works?</li>
<li>What's missing from SQLite as opposed to a relational database server?</li>
<li>How to get started with SQLite in Swift?</li>
<li>Dealing with data types in SQLite</li>
<li>What is Journaling and Why not use it?</li>
</ul><p><b>Why CoreData</b></p><ul>
<li>What is Object Relational Mapping?</li>
<li>What is an Object Graph?</li>
<li>What is a Context?</li>
<li>Why use Core Data vs SQLite?</li>
<li>Challenges in Dealing with Migrations</li>
</ul><p><b>CoreData Tips and Tricks</b></p><ul>
<li>Optimizations in CoreData</li>
<li>How to Debug CoreData</li>
<li>Building for Cross-Platform</li>
<li>Testing Different Versions</li>
<li>How Syncing to makes your app more tolerant based on API changes</li>
<li>Dealing with CloudKit</li>
<li>Dealing with SwiftUI</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><a href="https://www.youtube.com/watch?v=RMAczbuXgKo"><strong>Bonus! We talked about Automattic and Apple here...</strong></a></p><p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/astralbodies"><strong>Aaron Douglas (@astralbodies)</strong></a><ul>
<li>
<a href="https://aaron.blog/">The Dangling Pointer</a> (homepage)</li>
<li><a href="https://store.raywenderlich.com/products/core-data-by-tutorials"><strong>Core Data by Tutorials</strong></a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/14bb74b2"><strong>Episode 61 - Machine Learning and Core ML with Jameson Toole</strong></a></li>
<li><a href="https://share.transistor.fm/s/dfb18c54"><strong>Episode 57 - SwiftUI with Majid Jabrayilov - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/17f05dbf"><strong>Episode 49 - Vapor 4 with Tibor Bödecs</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.donnywals.com/fetching-objects-from-core-data-in-a-swiftui-project/">Fetching objects from Core Data in a SwiftUI project by Donny Wals</a></li>
<li><a href="https://inessential.com/2020/05/18/why_netnewswire_is_fast">Why NetNewsWire Is Fast by Brent Simmons</a></li>
<li><a href="https://hibernate.org/">Hibernate</a></li>
<li>Libraries<ul>
<li><a href="https://github.com/stephencelis/SQLite.swift">stephencelis/SQLite.swift</a></li>
<li><a href="https://github.com/ccgus/fmdb">ccgus/fmdb</a></li>
<li>
<a href="https://github.com/groue/GRDB.swift">GRDB.swift</a> </li>
</ul>
</li>
<li>Tools<ul>
<li><a href="https://github.com/ChristianKienle/Core-Data-Editor">ChristianKienle/Core-Data-Editor</a></li>
<li><a href="https://simpholders.com">SimPholders</a></li>
</ul>
</li>
<li>Alternatives<ul>
<li>
<a href="https://realm.io/">Realm</a> </li>
<li><a href="https://parseplatform.org/">Parse</a></li>
</ul>
</li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance or indie apps like <a href="https://appfigures.com/resources/aso/aso-teardown-fotmob">Fotmob</a>.</li>
<li>
<a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">New competitor's report in the Appfigures dashboard</a> where you are able to view competitor downloads, build performance benchmarks, and see the new trends as they happen. <a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">Check it out here.</a>
</li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><br><a href="https://transistor.fm/?via=empowerapps"><strong>Transistor.Fm</strong></a><br><em>Your podcast's publishing platform<br></em>Transistor not only hosts your podcast but also:</p><ul>
<li>
<strong>Help distribute your podcast with integrations</strong> to Apple Podcasts, Spotify, Google Podcasts, YouTube, and Mailchimp</li>
<li>
<strong>Deep analytics</strong> including average downloads per episode, popular podcast apps, number of subscribers, trends</li>
<li>
<strong>Professional support</strong> for creatives, businesses, and professional podcasters when it comes to hosting and analytics</li>
</ul><p><a href="https://transistor.fm/how-to-start-a-podcast/?via=empowerapps"><strong>How do you start a podcast?</strong></a><br><a href="https://transistor.fm/how-to-start-a-podcast/?via=empowerapps">https://transistor.fm/how-to-start-a-podcast/?via=empowerapps</a></p><p>Try it today with<a href="https://transistor.fm/?via=empowerapps"> this special link:</a><br><a href="https://transistor.fm/?via=empowerapps">https://transistor.fm/?via=empowerapps</a></p><p><b>Why Local Storage?</b></p><ul>
<li>Local cache is import for speed and being off-line</li>
<li>Benefits of a flat file vs local database</li>
<li>Why not run a server on your iPhone?</li>
</ul><p><b>Why SQLite</b></p><ul>
<li>How SQLite works?</li>
<li>What's missing from SQLite as opposed to a relational database server?</li>
<li>How to get started with SQLite in Swift?</li>
<li>Dealing with data types in SQLite</li>
<li>What is Journaling and Why not use it?</li>
</ul><p><b>Why CoreData</b></p><ul>
<li>What is Object Relational Mapping?</li>
<li>What is an Object Graph?</li>
<li>What is a Context?</li>
<li>Why use Core Data vs SQLite?</li>
<li>Challenges in Dealing with Migrations</li>
</ul><p><b>CoreData Tips and Tricks</b></p><ul>
<li>Optimizations in CoreData</li>
<li>How to Debug CoreData</li>
<li>Building for Cross-Platform</li>
<li>Testing Different Versions</li>
<li>How Syncing to makes your app more tolerant based on API changes</li>
<li>Dealing with CloudKit</li>
<li>Dealing with SwiftUI</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sat, 05 Sep 2020 08:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/f6092e38/ec730a04.mp3" length="26862136" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/289487/full_1597693251-artwork.jpg"/>
      <itunes:duration>3307</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Aaron Douglas from Automattic and Ray Wenderlich author on local database storage on iOS. Why you should do it? What the difference between SQLite and Core Data? ... and more</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Aaron Douglas from Automattic and Ray Wenderlich author on local database storage on iOS. Why you should do it? What the difference between SQLite and Core Data? ... and more</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Machine Learning and Core ML with Jameson Toole</title>
      <itunes:episode>61</itunes:episode>
      <itunes:title>Machine Learning and Core ML with Jameson Toole</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">80f0682b-098f-436b-9426-f364057a6368</guid>
      <link>https://share.transistor.fm/s/14bb74b2</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/jamesonthecrow"><strong>Jameson Toole (@jamesonthecrow)</strong></a><ul>
<li>
<a href="https://www.fritz.ai"><strong>Fritz AI</strong></a><strong> - </strong><a href="https://twitter.com/fritzlabs"><strong>Twitter (@fritzlabs)</strong></a>
</li>
<li><a href="https://heartbeat.fritz.ai"><strong>Heartbeat - Fritz AI Development Blog and Tutorials</strong></a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul><li><a href="https://share.transistor.fm/s/52ef1db7"><strong>Episode 37 - Machine Learning with Kevin Scott</strong></a></li></ul><p><strong>WWDC Videos - We Loved</strong></p><ul>
<li><a href="https://developer.apple.com/wwdc20/10043"><strong>Build an Action Classifier with Create ML</strong></a></li>
<li><a href="https://developer.apple.com/wwdc20/10653"><strong>Detect Body and Hand Pose with Vision</strong></a></li>
<li><a href="https://developer.apple.com/wwdc20/10657"><strong>Make apps smarter with Natural Language</strong></a></li>
<li><a href="https://developer.apple.com/wwdc20/10156"><strong>Control training in Create ML with Swift</strong></a></li>
<li><a href="https://developer.apple.com/wwdc20/10153"><strong>Get models on device using Core ML Converters</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance or indie apps like <a href="https://appfigures.com/resources/aso/aso-teardown-fotmob">Fotmob</a>.</li>
<li>
<a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">New competitor's report in the Appfigures dashboard</a> where you are able to view competitor downloads, build performance benchmarks, and see the new trends as they happen. <a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">Check it out here.</a>
</li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><br><a href="https://transistor.fm/?via=empowerapps"><strong>Transistor.Fm</strong></a><br><em>Your podcast's publishing platform<br></em>Transistor not only hosts your podcast but also:</p><ul>
<li>
<strong>Help distribute your podcast with integrations</strong> to Apple Podcasts, Spotify, Google Podcasts, YouTube, and Mailchimp</li>
<li>
<strong>Deep analytics</strong> including average downloads per episode, popular podcast apps, number of subscribers, trends</li>
<li>
<strong>Professional support</strong> for creatives, businesses, and professional podcasters when it comes to hosting and analytics</li>
</ul><p>Try it today with<a href="https://transistor.fm/?via=empowerapps"> this special link:</a><br><a href="https://transistor.fm/?via=empowerapps">https://transistor.fm/?via=empowerapps</a></p><p><b>Preparing for Machine Learning</b></p><ul>
<li>What does it mean to build a <em>Model?</em>
</li>
<li>What tasks are you trying to perform?</li>
<li>How do you prep data for a model?</li>
<li>How do you collect data for a model?</li>
</ul><p><b>Deciding the Machine Learning Task</b></p><ul>
<li>What types of task can ML do?</li>
<li>What's the difference between recommendation and recognition?</li>
<li>What is supervised learning?</li>
<li>What does Apple provide for building models?</li>
<li>How does the Vision framework work?</li>
<li>Why should you consider Machine Learning on Device?</li>
<li>How can you process Speech?</li>
<li>How does choosing the processor affect training?</li>
</ul><p><b>Making ML Part of the Project</b></p><ul>
<li>How to iterate over models?</li>
<li>How do you acquire that first set of data?</li>
<li>What is <em>synthetic data</em>?</li>
<li>How do you implement unit testing in Machine Learning?</li>
</ul><p><b>ML and WWDC 2020</b></p><ul>
<li>How does Apple Silicon on the Mac affect Machine Learning? </li>
<li>What advances in Machine Learning came out of WWDC 2020?</li>
<li>How WWDC 2020 reveals how ML continues to evolve?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/jamesonthecrow"><strong>Jameson Toole (@jamesonthecrow)</strong></a><ul>
<li>
<a href="https://www.fritz.ai"><strong>Fritz AI</strong></a><strong> - </strong><a href="https://twitter.com/fritzlabs"><strong>Twitter (@fritzlabs)</strong></a>
</li>
<li><a href="https://heartbeat.fritz.ai"><strong>Heartbeat - Fritz AI Development Blog and Tutorials</strong></a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul><li><a href="https://share.transistor.fm/s/52ef1db7"><strong>Episode 37 - Machine Learning with Kevin Scott</strong></a></li></ul><p><strong>WWDC Videos - We Loved</strong></p><ul>
<li><a href="https://developer.apple.com/wwdc20/10043"><strong>Build an Action Classifier with Create ML</strong></a></li>
<li><a href="https://developer.apple.com/wwdc20/10653"><strong>Detect Body and Hand Pose with Vision</strong></a></li>
<li><a href="https://developer.apple.com/wwdc20/10657"><strong>Make apps smarter with Natural Language</strong></a></li>
<li><a href="https://developer.apple.com/wwdc20/10156"><strong>Control training in Create ML with Swift</strong></a></li>
<li><a href="https://developer.apple.com/wwdc20/10153"><strong>Get models on device using Core ML Converters</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance or indie apps like <a href="https://appfigures.com/resources/aso/aso-teardown-fotmob">Fotmob</a>.</li>
<li>
<a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">New competitor's report in the Appfigures dashboard</a> where you are able to view competitor downloads, build performance benchmarks, and see the new trends as they happen. <a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">Check it out here.</a>
</li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><br><a href="https://transistor.fm/?via=empowerapps"><strong>Transistor.Fm</strong></a><br><em>Your podcast's publishing platform<br></em>Transistor not only hosts your podcast but also:</p><ul>
<li>
<strong>Help distribute your podcast with integrations</strong> to Apple Podcasts, Spotify, Google Podcasts, YouTube, and Mailchimp</li>
<li>
<strong>Deep analytics</strong> including average downloads per episode, popular podcast apps, number of subscribers, trends</li>
<li>
<strong>Professional support</strong> for creatives, businesses, and professional podcasters when it comes to hosting and analytics</li>
</ul><p>Try it today with<a href="https://transistor.fm/?via=empowerapps"> this special link:</a><br><a href="https://transistor.fm/?via=empowerapps">https://transistor.fm/?via=empowerapps</a></p><p><b>Preparing for Machine Learning</b></p><ul>
<li>What does it mean to build a <em>Model?</em>
</li>
<li>What tasks are you trying to perform?</li>
<li>How do you prep data for a model?</li>
<li>How do you collect data for a model?</li>
</ul><p><b>Deciding the Machine Learning Task</b></p><ul>
<li>What types of task can ML do?</li>
<li>What's the difference between recommendation and recognition?</li>
<li>What is supervised learning?</li>
<li>What does Apple provide for building models?</li>
<li>How does the Vision framework work?</li>
<li>Why should you consider Machine Learning on Device?</li>
<li>How can you process Speech?</li>
<li>How does choosing the processor affect training?</li>
</ul><p><b>Making ML Part of the Project</b></p><ul>
<li>How to iterate over models?</li>
<li>How do you acquire that first set of data?</li>
<li>What is <em>synthetic data</em>?</li>
<li>How do you implement unit testing in Machine Learning?</li>
</ul><p><b>ML and WWDC 2020</b></p><ul>
<li>How does Apple Silicon on the Mac affect Machine Learning? </li>
<li>What advances in Machine Learning came out of WWDC 2020?</li>
<li>How WWDC 2020 reveals how ML continues to evolve?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sat, 22 Aug 2020 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/14bb74b2/7d5f7659.mp3" length="21692111" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/289486/full_1597244881-artwork.jpg"/>
      <itunes:duration>2648</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Jameson Toole Co-founder / CTO of FritzAI about CoreML and Machine Learning. We talk about the process of introducing ML into your app, the different capabilities of CoreML, as well as the updates which have come out of WWDC 2020.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Jameson Toole Co-founder / CTO of FritzAI about CoreML and Machine Learning. We talk about the process of introducing ML into your app, the different capabilities of CoreML, as well as the updates which have come out of WWD</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>The Future of Mac Development with Lucas Derraugh - Part 2</title>
      <itunes:episode>60</itunes:episode>
      <itunes:title>The Future of Mac Development with Lucas Derraugh - Part 2</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">9c6011cb-ddd6-44de-8d62-99e96a1bab24</guid>
      <link>https://share.transistor.fm/s/c73ba3e5</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://derraugh.com/">Lucas Derraugh</a> <ul>
<li><a href="https://twitter.com/LucasDerraugh">@LucasDerraugh on Twitter</a></li>
<li>
<a href="https://github.com/lucasderraugh">lucasderraugh on GitHub</a> </li>
<li><a href="https://www.youtube.com/AppleProgramming">AppleProgramming on YouTube</a></li>
<li><a href="https://www.youtube.com/playlist?list=PLgTh9sDnKCUOYFoYOOQ-Xb42jcGyrPCLe">Responder Chain</a></li>
<li><a href="https://gitup.co/">GitUp App</a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/416088a5"><strong>Episode 59 - The Future of Mac Development with Lucas Derraugh - Part 1</strong></a></li>
<li><a href="https://share.transistor.fm/s/dfb18c54"><strong>Episode 57 - SwiftUI with Majid Jabrayilov - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/44dc8297"><strong>Episode 56 - SwiftUI with Majid Jabrayilov - Part 1</strong></a></li>
<li><a href="https://share.transistor.fm/s/51c9a342"><strong>Episode 55 - WWDC 2020 and Xcode 12 with Vadim Shpakovski - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/2c23d28a"><strong>Episode 54 - WWDC 2020 and Xcode 12 with Vadim Shpakovski - Part 1</strong></a></li>
<li><a href="https://share.transistor.fm/s/8f940315"><strong>Episode 53 - WWDC 2020 - Quick Thoughts</strong></a></li>
<li><a href="https://share.transistor.fm/s/4f8b37d3"><strong>Episode 20 - WWDC 2019 - Mac Development with Daniel Jalkut</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li>Responder Chain Episodes<ul>
<li><a href="https://youtu.be/025MQ25CQWc">Ivan Sapozhnik on Creating Menu Bar Apps</a></li>
<li><a href="https://youtu.be/UinUhCCvWuA">Malin Sundberg on SwiftUI for macOS</a></li>
<li><a href="https://youtu.be/j5TA4C_VNc0">Leo talks about Asset Catalogs and Speculid</a></li>
</ul>
</li>
<li><a href="https://twitter.com/leogdion/status/1291014206624538627?s=20">Speculid Update for Big Sur</a></li>
</ul><p><strong>WWDC Videos - We Loved</strong></p><ul>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10104/"><strong>Adopt the new look of macOS</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10143/"><strong>What’s new in Mac Catalyst</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10056/"><strong>Optimize the interface of your Mac Catalyst app</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10041/"><strong>What's new in SwiftUI</strong></a></li>
<li>
<a href="https://developer.apple.com/videos/play/wwdc2020/10214/"><strong>Port your Mac app to Apple Silicon</strong></a>   </li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance or indie apps like <a href="https://appfigures.com/resources/aso/aso-teardown-fotmob">Fotmob</a>.</li>
<li>
<a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">New competitor's report in the Appfigures dashboard</a> where you are able to view competitor downloads, build performance benchmarks, and see the new trends as they happen. <a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">Check it out here.</a>
</li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><b>Apple Silicon</b></p><ul>
<li>Are you getting a <a href="https://developer.apple.com/programs/universal/">DTK</a>?</li>
<li>What the future of <a href="https://9to5mac.com/2020/06/24/windows-virtualization-mac-apple-silicon/">Windows on the Mac</a>?</li>
<li>Running <a href="https://developer.apple.com/documentation/hypervisor">Virtual Machines</a> and Docker on Apple Silicon</li>
<li>What are the battery life improvements with Apple Silicon?</li>
<li>Migrating Apps using C and C++ Libraries</li>
</ul><p><b>macOS Big Sur</b></p><ul>
<li>Challenges running on older machines</li>
<li>New UI Updates</li>
<li>Building UI by staying with Apple's APIs</li>
<li>Ensuring Keyboard Support</li>
<li>Ensuring Discoverability for "Pros"</li>
</ul><p><b>Distributing Mac Apps</b></p><ul>
<li>App Store vs Selling Your Self</li>
<li>Challenges with Sandboxing</li>
<li>Dealing with Notarization</li>
<li>Dealing with Permissions Dialogs</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://derraugh.com/">Lucas Derraugh</a> <ul>
<li><a href="https://twitter.com/LucasDerraugh">@LucasDerraugh on Twitter</a></li>
<li>
<a href="https://github.com/lucasderraugh">lucasderraugh on GitHub</a> </li>
<li><a href="https://www.youtube.com/AppleProgramming">AppleProgramming on YouTube</a></li>
<li><a href="https://www.youtube.com/playlist?list=PLgTh9sDnKCUOYFoYOOQ-Xb42jcGyrPCLe">Responder Chain</a></li>
<li><a href="https://gitup.co/">GitUp App</a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/416088a5"><strong>Episode 59 - The Future of Mac Development with Lucas Derraugh - Part 1</strong></a></li>
<li><a href="https://share.transistor.fm/s/dfb18c54"><strong>Episode 57 - SwiftUI with Majid Jabrayilov - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/44dc8297"><strong>Episode 56 - SwiftUI with Majid Jabrayilov - Part 1</strong></a></li>
<li><a href="https://share.transistor.fm/s/51c9a342"><strong>Episode 55 - WWDC 2020 and Xcode 12 with Vadim Shpakovski - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/2c23d28a"><strong>Episode 54 - WWDC 2020 and Xcode 12 with Vadim Shpakovski - Part 1</strong></a></li>
<li><a href="https://share.transistor.fm/s/8f940315"><strong>Episode 53 - WWDC 2020 - Quick Thoughts</strong></a></li>
<li><a href="https://share.transistor.fm/s/4f8b37d3"><strong>Episode 20 - WWDC 2019 - Mac Development with Daniel Jalkut</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li>Responder Chain Episodes<ul>
<li><a href="https://youtu.be/025MQ25CQWc">Ivan Sapozhnik on Creating Menu Bar Apps</a></li>
<li><a href="https://youtu.be/UinUhCCvWuA">Malin Sundberg on SwiftUI for macOS</a></li>
<li><a href="https://youtu.be/j5TA4C_VNc0">Leo talks about Asset Catalogs and Speculid</a></li>
</ul>
</li>
<li><a href="https://twitter.com/leogdion/status/1291014206624538627?s=20">Speculid Update for Big Sur</a></li>
</ul><p><strong>WWDC Videos - We Loved</strong></p><ul>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10104/"><strong>Adopt the new look of macOS</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10143/"><strong>What’s new in Mac Catalyst</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10056/"><strong>Optimize the interface of your Mac Catalyst app</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10041/"><strong>What's new in SwiftUI</strong></a></li>
<li>
<a href="https://developer.apple.com/videos/play/wwdc2020/10214/"><strong>Port your Mac app to Apple Silicon</strong></a>   </li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance or indie apps like <a href="https://appfigures.com/resources/aso/aso-teardown-fotmob">Fotmob</a>.</li>
<li>
<a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">New competitor's report in the Appfigures dashboard</a> where you are able to view competitor downloads, build performance benchmarks, and see the new trends as they happen. <a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">Check it out here.</a>
</li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><b>Apple Silicon</b></p><ul>
<li>Are you getting a <a href="https://developer.apple.com/programs/universal/">DTK</a>?</li>
<li>What the future of <a href="https://9to5mac.com/2020/06/24/windows-virtualization-mac-apple-silicon/">Windows on the Mac</a>?</li>
<li>Running <a href="https://developer.apple.com/documentation/hypervisor">Virtual Machines</a> and Docker on Apple Silicon</li>
<li>What are the battery life improvements with Apple Silicon?</li>
<li>Migrating Apps using C and C++ Libraries</li>
</ul><p><b>macOS Big Sur</b></p><ul>
<li>Challenges running on older machines</li>
<li>New UI Updates</li>
<li>Building UI by staying with Apple's APIs</li>
<li>Ensuring Keyboard Support</li>
<li>Ensuring Discoverability for "Pros"</li>
</ul><p><b>Distributing Mac Apps</b></p><ul>
<li>App Store vs Selling Your Self</li>
<li>Challenges with Sandboxing</li>
<li>Dealing with Notarization</li>
<li>Dealing with Permissions Dialogs</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Wed, 12 Aug 2020 08:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/c73ba3e5/de584c65.mp3" length="21827898" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/296451/full_1594917886-artwork.jpg"/>
      <itunes:duration>2667</itunes:duration>
      <itunes:summary>In this two-part episode, Leo talks with Lucas Derraugh about the future of macOS development. In this second part, we talk about distributing mac apps, Apple Silicon, and the UI changes with Big Sur.</itunes:summary>
      <itunes:subtitle>In this two-part episode, Leo talks with Lucas Derraugh about the future of macOS development. In this second part, we talk about distributing mac apps, Apple Silicon, and the UI changes with Big Sur.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>The Future of Mac Development with Lucas Derraugh - Part 1</title>
      <itunes:episode>59</itunes:episode>
      <itunes:title>The Future of Mac Development with Lucas Derraugh - Part 1</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">60098ed1-d2b1-43c4-b4ab-348133acadad</guid>
      <link>https://share.transistor.fm/s/416088a5</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://derraugh.com">Lucas Derraugh</a> <ul>
<li><a href="https://twitter.com/LucasDerraugh">@LucasDerraugh on Twitter</a></li>
<li>
<a href="https://github.com/lucasderraugh">lucasderraugh on GitHub</a> </li>
<li><a href="https://www.youtube.com/AppleProgramming">AppleProgramming on YouTube</a></li>
<li><a href="https://www.youtube.com/playlist?list=PLgTh9sDnKCUOYFoYOOQ-Xb42jcGyrPCLe">Responder Chain</a></li>
<li><a href="https://gitup.co">GitUp App</a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/dfb18c54"><strong>Episode 57 - SwiftUI with Majid Jabrayilov - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/44dc8297"><strong>Episode 56 - SwiftUI with Majid Jabrayilov - Part 1</strong></a></li>
<li><a href="https://share.transistor.fm/s/51c9a342"><strong>Episode 55 - WWDC 2020 and Xcode 12 with Vadim Shpakovski - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/2c23d28a"><strong>Episode 54 - WWDC 2020 and Xcode 12 with Vadim Shpakovski - Part 1</strong></a></li>
<li><a href="https://share.transistor.fm/s/8f940315"><strong>Episode 53 - WWDC 2020 - Quick Thoughts</strong></a></li>
<li><a href="https://share.transistor.fm/s/4f8b37d3"><strong>Episode 20 - WWDC 2019 - Mac Development with Daniel Jalkut</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li>Responder Chain Episodes<ul>
<li><a href="https://youtu.be/025MQ25CQWc">Ivan Sapozhnik on Creating Menu Bar Apps</a></li>
<li><a href="https://youtu.be/UinUhCCvWuA">Malin Sundberg on SwiftUI for macOS</a></li>
<li><a href="https://youtu.be/j5TA4C_VNc0">Leo talks about Asset Catalogs and Speculid</a></li>
</ul>
</li>
<li><a href="https://twitter.com/leogdion/status/1291014206624538627?s=20">Speculid Update for Big Sur</a></li>
</ul><p><strong>WWDC Videos - We Loved</strong></p><ul>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10104/"><strong>Adopt the new look of macOS</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10143/"><strong>What’s new in Mac Catalyst</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10056/"><strong>Optimize the interface of your Mac Catalyst app</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10041/"><strong>What's new in SwiftUI</strong></a></li>
<li>
<a href="https://developer.apple.com/videos/play/wwdc2020/10214/"><strong>Port your Mac app to Apple Silicon</strong></a>   </li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance or indie apps like <a href="https://appfigures.com/resources/aso/aso-teardown-fotmob">Fotmob</a>.</li>
<li>
<a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">New competitor's report in the Appfigures dashboard</a> where you are able to view competitor downloads, build performance benchmarks, and see the new trends as they happen. <a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">Check it out here.</a>
</li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://360idev.com/"><strong>360iDev - August 16 - 19 (Remote)</strong></a></p><ul>
<li>The Leading indie iOS/Mac (and watchOS, and tvOS) Developer conference</li>
<li>It's all about Community and Code!</li>
<li>Four days of hands-on training, amazing sessions, and the great community. All Swift.</li>
</ul><p>Use the promo code <strong>WeAreSwift </strong>to get <a href="https://360idev.com/"><strong>20% off registration.</strong></a></p><p><b>WWDC and Mac</b></p><ul>
<li>Emphasis on Mac Development</li>
<li>Why should iOS developers get into Mac development?</li>
<li>iPad Pro Apps vs Mac Pro Apps</li>
<li>Challenges of SwiftUI vs AppKit</li>
<li>Improvements to AppKit</li>
<li>Widgets on macOS</li>
<li>SwiftUI Updates for Document-Based Apps</li>
<li>Electron vs Native</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://derraugh.com">Lucas Derraugh</a> <ul>
<li><a href="https://twitter.com/LucasDerraugh">@LucasDerraugh on Twitter</a></li>
<li>
<a href="https://github.com/lucasderraugh">lucasderraugh on GitHub</a> </li>
<li><a href="https://www.youtube.com/AppleProgramming">AppleProgramming on YouTube</a></li>
<li><a href="https://www.youtube.com/playlist?list=PLgTh9sDnKCUOYFoYOOQ-Xb42jcGyrPCLe">Responder Chain</a></li>
<li><a href="https://gitup.co">GitUp App</a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/dfb18c54"><strong>Episode 57 - SwiftUI with Majid Jabrayilov - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/44dc8297"><strong>Episode 56 - SwiftUI with Majid Jabrayilov - Part 1</strong></a></li>
<li><a href="https://share.transistor.fm/s/51c9a342"><strong>Episode 55 - WWDC 2020 and Xcode 12 with Vadim Shpakovski - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/2c23d28a"><strong>Episode 54 - WWDC 2020 and Xcode 12 with Vadim Shpakovski - Part 1</strong></a></li>
<li><a href="https://share.transistor.fm/s/8f940315"><strong>Episode 53 - WWDC 2020 - Quick Thoughts</strong></a></li>
<li><a href="https://share.transistor.fm/s/4f8b37d3"><strong>Episode 20 - WWDC 2019 - Mac Development with Daniel Jalkut</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li>Responder Chain Episodes<ul>
<li><a href="https://youtu.be/025MQ25CQWc">Ivan Sapozhnik on Creating Menu Bar Apps</a></li>
<li><a href="https://youtu.be/UinUhCCvWuA">Malin Sundberg on SwiftUI for macOS</a></li>
<li><a href="https://youtu.be/j5TA4C_VNc0">Leo talks about Asset Catalogs and Speculid</a></li>
</ul>
</li>
<li><a href="https://twitter.com/leogdion/status/1291014206624538627?s=20">Speculid Update for Big Sur</a></li>
</ul><p><strong>WWDC Videos - We Loved</strong></p><ul>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10104/"><strong>Adopt the new look of macOS</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10143/"><strong>What’s new in Mac Catalyst</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10056/"><strong>Optimize the interface of your Mac Catalyst app</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10041/"><strong>What's new in SwiftUI</strong></a></li>
<li>
<a href="https://developer.apple.com/videos/play/wwdc2020/10214/"><strong>Port your Mac app to Apple Silicon</strong></a>   </li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance or indie apps like <a href="https://appfigures.com/resources/aso/aso-teardown-fotmob">Fotmob</a>.</li>
<li>
<a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">New competitor's report in the Appfigures dashboard</a> where you are able to view competitor downloads, build performance benchmarks, and see the new trends as they happen. <a href="https://appfigures.com/reports/competitors?utm_source=empowerapps">Check it out here.</a>
</li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://360idev.com/"><strong>360iDev - August 16 - 19 (Remote)</strong></a></p><ul>
<li>The Leading indie iOS/Mac (and watchOS, and tvOS) Developer conference</li>
<li>It's all about Community and Code!</li>
<li>Four days of hands-on training, amazing sessions, and the great community. All Swift.</li>
</ul><p>Use the promo code <strong>WeAreSwift </strong>to get <a href="https://360idev.com/"><strong>20% off registration.</strong></a></p><p><b>WWDC and Mac</b></p><ul>
<li>Emphasis on Mac Development</li>
<li>Why should iOS developers get into Mac development?</li>
<li>iPad Pro Apps vs Mac Pro Apps</li>
<li>Challenges of SwiftUI vs AppKit</li>
<li>Improvements to AppKit</li>
<li>Widgets on macOS</li>
<li>SwiftUI Updates for Document-Based Apps</li>
<li>Electron vs Native</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Fri, 07 Aug 2020 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/416088a5/29e278bb.mp3" length="22753006" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/288360/full_1594917868-artwork.jpg"/>
      <itunes:duration>2783</itunes:duration>
      <itunes:summary>In this two-part episode, Leo talks with Lucas Derraugh about the future of macOS development. In this first part, we talk about why should iOS developers get into Mac development, the difference in iPad vs Mac app markets, SwiftUI vs AppKit, as well as Native vs Electron.</itunes:summary>
      <itunes:subtitle>In this two-part episode, Leo talks with Lucas Derraugh about the future of macOS development. In this first part, we talk about why should iOS developers get into Mac development, the difference in iPad vs Mac app markets, SwiftUI vs AppKit, as well as N</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Big Bad Bluetooth with Leah Vogel</title>
      <itunes:episode>58</itunes:episode>
      <itunes:title>Big Bad Bluetooth with Leah Vogel</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">a8030d76-d95e-4e81-b09e-8ebd6acc3a7a</guid>
      <link>https://share.transistor.fm/s/638f2668</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/leah_m_vogel"><strong>Leah Vogel - Twitter: @leah_m_vogel</strong></a><ul>
<li><a href="https://www.linkedin.com/in/leahvogel/"><strong>LinkedIn</strong></a></li>
<li><a href="https://medium.com/@vogeleah"><strong>Medium</strong></a></li>
<li><a href="https://www.youtube.com/watch?v=5l_HMtWvtJw&amp;t=27s"><strong>UIKonf 2020 - Leah Vogel - Who’s Afraid of the Big Bad BLE</strong></a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/03d8db53"><strong>Episode 40 - Handling Errors Correctly with Jeff Kelley</strong></a></li>
<li><a href="https://share.transistor.fm/s/8f940315"><strong>Episode 53 - WWDC 2020 - Quick Thoughts</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10668/"><strong>WWDC 2020 - Meet Nearby Interaction</strong></a></li>
<li><a href="https://apps.apple.com/us/app/bluesee-ble-debugger/id1336679524?mt=12"><strong>BlueSee BLE Debugger</strong></a></li>
</ul><p><strong>WWDC Videos - We Loved</strong></p><ul>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10048/"><strong>Build complications in SwiftUI</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10046/"><strong>Create complications for Apple Watch</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10037/"><strong>App essentials in SwiftUI</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10039/"><strong>Build document-based apps in SwiftUI</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance. </li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><b>Bluetooth 101</b></p><ul>
<li>Origins of Bluetooth</li>
<li>Where Bluetooth is a good fit?</li>
<li>What is Peripheral?</li>
<li>Profiles, Services and Characteristics</li>
<li>What's the difference between Classic and BLE?</li>
<li>How to measure signal strength?</li>
<li>How to pull extra information from a Characteristic?</li>
</ul><p><b>Development Challenges  </b></p><ul>
<li>Similarities with Networking</li>
<li>Decoding and Encoding Data from Bluetooth</li>
<li>Why Mocking is Important in iOS Development</li>
<li>Using the Mac for Testing APIs</li>
<li>Dealing with Connectivity Issues</li>
<li>Connection Peculiarities</li>
<li>How can Bluetooth be misused?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/leah_m_vogel"><strong>Leah Vogel - Twitter: @leah_m_vogel</strong></a><ul>
<li><a href="https://www.linkedin.com/in/leahvogel/"><strong>LinkedIn</strong></a></li>
<li><a href="https://medium.com/@vogeleah"><strong>Medium</strong></a></li>
<li><a href="https://www.youtube.com/watch?v=5l_HMtWvtJw&amp;t=27s"><strong>UIKonf 2020 - Leah Vogel - Who’s Afraid of the Big Bad BLE</strong></a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/03d8db53"><strong>Episode 40 - Handling Errors Correctly with Jeff Kelley</strong></a></li>
<li><a href="https://share.transistor.fm/s/8f940315"><strong>Episode 53 - WWDC 2020 - Quick Thoughts</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10668/"><strong>WWDC 2020 - Meet Nearby Interaction</strong></a></li>
<li><a href="https://apps.apple.com/us/app/bluesee-ble-debugger/id1336679524?mt=12"><strong>BlueSee BLE Debugger</strong></a></li>
</ul><p><strong>WWDC Videos - We Loved</strong></p><ul>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10048/"><strong>Build complications in SwiftUI</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10046/"><strong>Create complications for Apple Watch</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10037/"><strong>App essentials in SwiftUI</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10039/"><strong>Build document-based apps in SwiftUI</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance. </li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><b>Bluetooth 101</b></p><ul>
<li>Origins of Bluetooth</li>
<li>Where Bluetooth is a good fit?</li>
<li>What is Peripheral?</li>
<li>Profiles, Services and Characteristics</li>
<li>What's the difference between Classic and BLE?</li>
<li>How to measure signal strength?</li>
<li>How to pull extra information from a Characteristic?</li>
</ul><p><b>Development Challenges  </b></p><ul>
<li>Similarities with Networking</li>
<li>Decoding and Encoding Data from Bluetooth</li>
<li>Why Mocking is Important in iOS Development</li>
<li>Using the Mac for Testing APIs</li>
<li>Dealing with Connectivity Issues</li>
<li>Connection Peculiarities</li>
<li>How can Bluetooth be misused?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Fri, 31 Jul 2020 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/638f2668/992e1d32.mp3" length="22070201" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/288358/full_1594588611-artwork.jpg"/>
      <itunes:duration>2693</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Leah Vogel, Mobile Team Lead and iOS developer at OrCam Technologies about the ins and outs of Bluetooth technology: the origins, the terminology, the Core Bluetooth API and more.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Leah Vogel, Mobile Team Lead and iOS developer at OrCam Technologies about the ins and outs of Bluetooth technology: the origins, the terminology, the Core Bluetooth API and more.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>SwiftUI with Majid Jabrayilov - Part 2</title>
      <itunes:episode>57</itunes:episode>
      <itunes:title>SwiftUI with Majid Jabrayilov - Part 2</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">8dc77175-dae2-4ab8-9f95-92c7288d39f1</guid>
      <link>https://share.transistor.fm/s/dfb18c54</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://swiftwithmajid.com/"><strong>Majid Jabrayilov</strong></a><ul>
<li><a href="https://swiftwithmajid.com/"><strong>SwiftWithMajid.com</strong></a></li>
<li><a href="http://weekly.swiftwithmajid.com"><strong>SwiftUI Weekly</strong></a></li>
<li><a href="https://twitter.com/mecid"><strong>Twitter @mecid</strong></a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/44dc8297"><strong>Episode 56 - SwiftUI with Majid Jabrayilov - Part 1</strong></a></li>
<li><a href="https://share.transistor.fm/s/51c9a342"><strong>Episode 55 - WWDC 2020 and Xcode 12 with Vadim Shpakovski - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/2c23d28a"><strong>Episode 54 - WWDC 2020 and Xcode 12 with Vadim Shpakovski - Part 1</strong></a></li>
<li><a href="https://share.transistor.fm/s/8f940315"><strong>Episode 53 - WWDC 2020 - Quick Thoughts</strong></a></li>
<li><a href="https://share.transistor.fm/s/8442feb7"><strong>Episode 47 - Practical Combine with Donny Wals</strong></a></li>
<li><a href="https://share.transistor.fm/s/03d8db53"><strong>Episode 40 - Handling Errors Correctly with Jeff Kelley</strong></a></li>
<li><a href="https://share.transistor.fm/s/87165d83"><strong>Episode 35 - SwiftUI - The Good, the Bad, and the Benefits</strong></a></li>
<li><a href="https://share.transistor.fm/s/2f12eb02"><strong>Episode 30 - Quickie: Swift UI and 2020 Trends</strong></a></li>
<li><a href="https://share.transistor.fm/s/3051561"><strong>Episode 19 - WWDC 2019 - Swift UI with Jason Anderson</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://swiftwithmajid.com/2020/06/23/what-is-new-in-swiftui/"><strong>Swift with Majid - What's new in SwiftUI</strong></a></li>
<li><a href="https://swiftwithmajid.com/2020/07/02/the-difference-between-stateobject-environmentobject-and-observedobject-in-swiftui/"><strong>Swift with Majid - The difference between @StateObject, @EnvironmentObject, and @ObservedObject in SwiftUI</strong></a></li>
<li><a href="https://swiftwithmajid.com/2020/06/29/new-property-wrappers-in-swiftui/"><strong>Swift with Majid - New property wrappers in SwiftUI</strong></a></li>
<li><a href="https://swiftwithmajid.com/2020/06/17/the-magic-of-animatable-values-in-swiftui/"><strong>Swift with Majid -The magic of Animatable values in SwiftUI</strong></a></li>
<li><p><b><a href="https://swiftuipropertywrappers.com">SwiftUI Property Wrappers by Donny Walls</a></b></p></li>
</ul><p><strong>WWDC Videos - We Loved</strong></p><ul>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10048/"><strong>Build complications in SwiftUI</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10046/"><strong>Create complications for Apple Watch</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10037/"><strong>App essentials in SwiftUI</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10039/"><strong>Build document-based apps in SwiftUI</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance. </li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://360idev.com/"><strong>360iDev - August 16 - 19 (Remote)</strong></a></p><ul>
<li>The Leading indie iOS/Mac (and watchOS, and tvOS) Developer conference</li>
<li>It's all about Community and Code!</li>
<li>Four days of hands-on training, amazing sessions, and the great community. All Swift.</li>
</ul><p>Use the promo code <strong>WeAreSwift </strong>to get <a href="https://360idev.com/"><strong>20% off registration.</strong></a></p><p><b>New Property Wrappers</b></p><ul>
<li>How the new State Property Wrappers Works</li>
<li>Managing the Life Cycle of Your App</li>
<li>New @StateObject</li>
<li>Benefits of @EnvironmentObject in the View Hierarchy</li>
</ul><p><b>Maintaining SwiftUI Apps</b></p><ul>
<li>Testing Your State</li>
<li><a href="https://swiftwithmajid.com/2020/07/02/the-difference-between-stateobject-environmentobject-and-observedobject-in-swiftui/">Using @StateObject with @EnvironmentObject</a></li>
<li>Storing Your State with @AppStorage and @SceneStorage</li>
<li>Handing Errors with SwiftUI</li>
<li>Migrating Older Apps to SwiftUI</li>
<li>Bridging UIKit to SwiftUI</li>
</ul><p><b>New SwiftUI Features</b></p><ul>
<li>Document-Based Apps</li>
<li>Improvements to Xcode Previews</li>
<li>Widgets and Complications</li>
<li><a href="https://swiftwithmajid.com/2020/06/17/the-magic-of-animatable-values-in-swiftui/">Animatable</a></li>
<li>More Frameworks Views Moving to SwiftUI (i.e. Maps, AVFoundation, etc...)</li>
</ul><p><b>SwiftUI Challenges and Workarounds</b></p><ul>
<li>Multi-line Text and Text Formatting</li>
<li>Using Lazy Stacks for Large Lists</li>
<li>Dealing with Animations</li>
<li>Lists vs ForEach</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://swiftwithmajid.com/"><strong>Majid Jabrayilov</strong></a><ul>
<li><a href="https://swiftwithmajid.com/"><strong>SwiftWithMajid.com</strong></a></li>
<li><a href="http://weekly.swiftwithmajid.com"><strong>SwiftUI Weekly</strong></a></li>
<li><a href="https://twitter.com/mecid"><strong>Twitter @mecid</strong></a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/44dc8297"><strong>Episode 56 - SwiftUI with Majid Jabrayilov - Part 1</strong></a></li>
<li><a href="https://share.transistor.fm/s/51c9a342"><strong>Episode 55 - WWDC 2020 and Xcode 12 with Vadim Shpakovski - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/2c23d28a"><strong>Episode 54 - WWDC 2020 and Xcode 12 with Vadim Shpakovski - Part 1</strong></a></li>
<li><a href="https://share.transistor.fm/s/8f940315"><strong>Episode 53 - WWDC 2020 - Quick Thoughts</strong></a></li>
<li><a href="https://share.transistor.fm/s/8442feb7"><strong>Episode 47 - Practical Combine with Donny Wals</strong></a></li>
<li><a href="https://share.transistor.fm/s/03d8db53"><strong>Episode 40 - Handling Errors Correctly with Jeff Kelley</strong></a></li>
<li><a href="https://share.transistor.fm/s/87165d83"><strong>Episode 35 - SwiftUI - The Good, the Bad, and the Benefits</strong></a></li>
<li><a href="https://share.transistor.fm/s/2f12eb02"><strong>Episode 30 - Quickie: Swift UI and 2020 Trends</strong></a></li>
<li><a href="https://share.transistor.fm/s/3051561"><strong>Episode 19 - WWDC 2019 - Swift UI with Jason Anderson</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://swiftwithmajid.com/2020/06/23/what-is-new-in-swiftui/"><strong>Swift with Majid - What's new in SwiftUI</strong></a></li>
<li><a href="https://swiftwithmajid.com/2020/07/02/the-difference-between-stateobject-environmentobject-and-observedobject-in-swiftui/"><strong>Swift with Majid - The difference between @StateObject, @EnvironmentObject, and @ObservedObject in SwiftUI</strong></a></li>
<li><a href="https://swiftwithmajid.com/2020/06/29/new-property-wrappers-in-swiftui/"><strong>Swift with Majid - New property wrappers in SwiftUI</strong></a></li>
<li><a href="https://swiftwithmajid.com/2020/06/17/the-magic-of-animatable-values-in-swiftui/"><strong>Swift with Majid -The magic of Animatable values in SwiftUI</strong></a></li>
<li><p><b><a href="https://swiftuipropertywrappers.com">SwiftUI Property Wrappers by Donny Walls</a></b></p></li>
</ul><p><strong>WWDC Videos - We Loved</strong></p><ul>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10048/"><strong>Build complications in SwiftUI</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10046/"><strong>Create complications for Apple Watch</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10037/"><strong>App essentials in SwiftUI</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10039/"><strong>Build document-based apps in SwiftUI</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance. </li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://360idev.com/"><strong>360iDev - August 16 - 19 (Remote)</strong></a></p><ul>
<li>The Leading indie iOS/Mac (and watchOS, and tvOS) Developer conference</li>
<li>It's all about Community and Code!</li>
<li>Four days of hands-on training, amazing sessions, and the great community. All Swift.</li>
</ul><p>Use the promo code <strong>WeAreSwift </strong>to get <a href="https://360idev.com/"><strong>20% off registration.</strong></a></p><p><b>New Property Wrappers</b></p><ul>
<li>How the new State Property Wrappers Works</li>
<li>Managing the Life Cycle of Your App</li>
<li>New @StateObject</li>
<li>Benefits of @EnvironmentObject in the View Hierarchy</li>
</ul><p><b>Maintaining SwiftUI Apps</b></p><ul>
<li>Testing Your State</li>
<li><a href="https://swiftwithmajid.com/2020/07/02/the-difference-between-stateobject-environmentobject-and-observedobject-in-swiftui/">Using @StateObject with @EnvironmentObject</a></li>
<li>Storing Your State with @AppStorage and @SceneStorage</li>
<li>Handing Errors with SwiftUI</li>
<li>Migrating Older Apps to SwiftUI</li>
<li>Bridging UIKit to SwiftUI</li>
</ul><p><b>New SwiftUI Features</b></p><ul>
<li>Document-Based Apps</li>
<li>Improvements to Xcode Previews</li>
<li>Widgets and Complications</li>
<li><a href="https://swiftwithmajid.com/2020/06/17/the-magic-of-animatable-values-in-swiftui/">Animatable</a></li>
<li>More Frameworks Views Moving to SwiftUI (i.e. Maps, AVFoundation, etc...)</li>
</ul><p><b>SwiftUI Challenges and Workarounds</b></p><ul>
<li>Multi-line Text and Text Formatting</li>
<li>Using Lazy Stacks for Large Lists</li>
<li>Dealing with Animations</li>
<li>Lists vs ForEach</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Fri, 17 Jul 2020 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/dfb18c54/96dfc2bf.mp3" length="18842092" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/287812/full_1593574118-artwork.jpg"/>
      <itunes:duration>2290</itunes:duration>
      <itunes:summary>In this two part interview, Leo talks with Majid Jabrayilov about SwiftUI one year after its release.  In this second part, we talk about the new property wrappers like @StateObject, animations improvements, how to maintain and test your SwiftUI App, as well as migrating your older apps over.</itunes:summary>
      <itunes:subtitle>In this two part interview, Leo talks with Majid Jabrayilov about SwiftUI one year after its release.  In this second part, we talk about the new property wrappers like @StateObject, animations improvements, how to maintain and test your SwiftUI App, as w</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>SwiftUI with Majid Jabrayilov - Part 1</title>
      <itunes:episode>56</itunes:episode>
      <itunes:title>SwiftUI with Majid Jabrayilov - Part 1</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">de451ed9-36f5-4f7f-a86f-35571997b24b</guid>
      <link>https://share.transistor.fm/s/44dc8297</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://swiftwithmajid.com"><strong>Majid Jabrayilov</strong></a><ul>
<li><a href="https://swiftwithmajid.com"><strong>SwiftWithMajid.com</strong></a></li>
<li><a href="https://twitter.com/mecid"><strong>Twitter @mecid</strong></a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/51c9a342"><strong>Episode 55 - WWDC 2020 and Xcode 12 with Vadim Shpakovski - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/2c23d28a"><strong>Episode 54 - WWDC 2020 and Xcode 12 with Vadim Shpakovski - Part 1</strong></a></li>
<li><a href="https://share.transistor.fm/s/8f940315"><strong>Episode 53 - WWDC 2020 - Quick Thoughts</strong></a></li>
<li><a href="https://share.transistor.fm/s/8442feb7"><strong>Episode 47 - Practical Combine with Donny Wals</strong></a></li>
<li><a href="https://share.transistor.fm/s/87165d83"><strong>Episode 35 - SwiftUI - The Good, the Bad, and the Benefits</strong></a></li>
<li><a href="https://share.transistor.fm/s/2f12eb02"><strong>Episode 30 - Quickie: Swift UI and 2020 Trends</strong></a></li>
<li><a href="https://share.transistor.fm/s/3051561"><strong>Episode 19 - WWDC 2019 - Swift UI with Jason Anderson</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://swiftwithmajid.com/2020/06/23/what-is-new-in-swiftui/">Swift with Majid - <strong>What's new in SwiftUI</strong></a></li>
<li><a href="https://swiftwithmajid.com/2020/07/08/mastering-grids-in-swiftui/">Swift with Majid - <strong>Mastering grids in SwiftUI</strong></a></li>
</ul><p><strong>WWDC Videos - We Loved</strong></p><ul>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10048/"><strong>Build complications in SwiftUI</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10046/"><strong>Create complications for Apple Watch</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10037/"><strong>App essentials in SwiftUI</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10039/"><strong>Build document-based apps in SwiftUI</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance. </li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://360idev.com/"><strong>360iDev - August 16 - 19 (Remote)</strong></a></p><ul>
<li>The Leading indie iOS/Mac (and watchOS, and tvOS) Developer conference</li>
<li>It's all about Community and Code!</li>
<li>Four days of hands-on training, amazing sessions, and the great community. All Swift.</li>
</ul><p>Use the promo code <strong>WeAreSwift </strong>to get <a href="https://360idev.com/"><strong>20% off registration.</strong></a></p><p><b>What's New in SwiftUI</b></p><ul>
<li>More Mature Framework</li>
<li>Used in More New Features</li>
<li>Lazy Stacks</li>
<li>New App Structures</li>
<li>@main App Structure with old UIAppDelegate</li>
<li><a href="https://developer.apple.com/documentation/swiftui/wkextensiondelegateadaptor">YES! Apple Watch doesn't need Storyboards and supports @main</a></li>
<li>Brand New Grids </li>
<li>Do you build for iOS 13 or iOS 14</li>
<li>Widgets and Complications in SwiftUI only</li>
</ul><p><b>SwiftUI - Benefits and Issues</b></p><ul>
<li>Benefits of SwiftUI over UIKit</li>
<li>How Declarative Programming is an Improvement</li>
<li>Limitation of Static Navigation Views</li>
<li>SwiftUI on watchOS</li>
<li>SwiftUI on tvOS</li>
<li>Learning Curve with SwiftUI</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://swiftwithmajid.com"><strong>Majid Jabrayilov</strong></a><ul>
<li><a href="https://swiftwithmajid.com"><strong>SwiftWithMajid.com</strong></a></li>
<li><a href="https://twitter.com/mecid"><strong>Twitter @mecid</strong></a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/51c9a342"><strong>Episode 55 - WWDC 2020 and Xcode 12 with Vadim Shpakovski - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/2c23d28a"><strong>Episode 54 - WWDC 2020 and Xcode 12 with Vadim Shpakovski - Part 1</strong></a></li>
<li><a href="https://share.transistor.fm/s/8f940315"><strong>Episode 53 - WWDC 2020 - Quick Thoughts</strong></a></li>
<li><a href="https://share.transistor.fm/s/8442feb7"><strong>Episode 47 - Practical Combine with Donny Wals</strong></a></li>
<li><a href="https://share.transistor.fm/s/87165d83"><strong>Episode 35 - SwiftUI - The Good, the Bad, and the Benefits</strong></a></li>
<li><a href="https://share.transistor.fm/s/2f12eb02"><strong>Episode 30 - Quickie: Swift UI and 2020 Trends</strong></a></li>
<li><a href="https://share.transistor.fm/s/3051561"><strong>Episode 19 - WWDC 2019 - Swift UI with Jason Anderson</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://swiftwithmajid.com/2020/06/23/what-is-new-in-swiftui/">Swift with Majid - <strong>What's new in SwiftUI</strong></a></li>
<li><a href="https://swiftwithmajid.com/2020/07/08/mastering-grids-in-swiftui/">Swift with Majid - <strong>Mastering grids in SwiftUI</strong></a></li>
</ul><p><strong>WWDC Videos - We Loved</strong></p><ul>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10048/"><strong>Build complications in SwiftUI</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10046/"><strong>Create complications for Apple Watch</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10037/"><strong>App essentials in SwiftUI</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10039/"><strong>Build document-based apps in SwiftUI</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance. </li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://360idev.com/"><strong>360iDev - August 16 - 19 (Remote)</strong></a></p><ul>
<li>The Leading indie iOS/Mac (and watchOS, and tvOS) Developer conference</li>
<li>It's all about Community and Code!</li>
<li>Four days of hands-on training, amazing sessions, and the great community. All Swift.</li>
</ul><p>Use the promo code <strong>WeAreSwift </strong>to get <a href="https://360idev.com/"><strong>20% off registration.</strong></a></p><p><b>What's New in SwiftUI</b></p><ul>
<li>More Mature Framework</li>
<li>Used in More New Features</li>
<li>Lazy Stacks</li>
<li>New App Structures</li>
<li>@main App Structure with old UIAppDelegate</li>
<li><a href="https://developer.apple.com/documentation/swiftui/wkextensiondelegateadaptor">YES! Apple Watch doesn't need Storyboards and supports @main</a></li>
<li>Brand New Grids </li>
<li>Do you build for iOS 13 or iOS 14</li>
<li>Widgets and Complications in SwiftUI only</li>
</ul><p><b>SwiftUI - Benefits and Issues</b></p><ul>
<li>Benefits of SwiftUI over UIKit</li>
<li>How Declarative Programming is an Improvement</li>
<li>Limitation of Static Navigation Views</li>
<li>SwiftUI on watchOS</li>
<li>SwiftUI on tvOS</li>
<li>Learning Curve with SwiftUI</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 12 Jul 2020 08:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/44dc8297/6feee56c.mp3" length="14428156" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/287811/full_1593573940-artwork.jpg"/>
      <itunes:duration>1741</itunes:duration>
      <itunes:summary>In this two part interview, Leo talks with Majid Jabrayilov about SwiftUI one year after its release.  In this first part, we talk about whether it is production ready, all the new updates from WWDC 2020, challenges implmenting SwiftUI, as well as well it works on all platforms.</itunes:summary>
      <itunes:subtitle>In this two part interview, Leo talks with Majid Jabrayilov about SwiftUI one year after its release.  In this first part, we talk about whether it is production ready, all the new updates from WWDC 2020, challenges implmenting SwiftUI, as well as well it</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>WWDC 2020 and Xcode 12 with Vadim Shpakovski - Part 2</title>
      <itunes:episode>55</itunes:episode>
      <itunes:title>WWDC 2020 and Xcode 12 with Vadim Shpakovski - Part 2</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">ae39d153-afae-468c-8b35-093fd40216c1</guid>
      <link>https://share.transistor.fm/s/51c9a342</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/VadimShpakovski"><strong>Vadim Shpakovski - @VadimShpakovski</strong></a><ul>
<li>
<a href="https://nativeconnect.app/"><strong>NativeConnect</strong></a> </li>
<li><a href="https://raycast.com/"><strong>Raycast</strong></a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/2c23d28a"><strong>Episode 54 - WWDC 2020 and Xcode 12 with Vadim Shpakovski - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/7fc06c2f"><strong>Episode 44 - WWDC Spectacular (Part 2) with Peter Witham</strong></a></li>
<li><a href="https://share.transistor.fm/s/187a54b5"><strong>Episode 43 - WWDC Spectacular (Part 1) with Peter Witham</strong></a></li>
<li><a href="https://share.transistor.fm/s/8f940315"><strong>Episode 53 - WWDC 2020 - Quick Thoughts</strong></a></li>
<li><a href="https://share.transistor.fm/s/17f05dbf"><strong>Episode 49 - Vapor 4 with Tibor Bödecs</strong></a></li>
<li><a href="https://share.transistor.fm/s/eba8ef64"><strong>Episode 36 - Upgrading Your Skills in 2020 with Paul Hudson</strong></a></li>
<li>
<a href="https://share.transistor.fm/s/bf0516f2"><strong>Episode 34 - Server-Side Swift with Tim Condon</strong></a><a href="https://share.transistor.fm/s/71500d55"><strong><br>Episode 33 - 2020 Developer Wish List with Alex Bush</strong></a>
</li>
<li><a href="https://share.transistor.fm/s/c8f9aa41"><strong>Episode 23 - Modularizing in Xcode with Abbey Jackson</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.theverge.com/2020/6/24/21302213/apple-silicon-mac-arm-windows-support-boot-camp">Apple’s new ARM-based Macs won’t support Windows through Boot Camp - The Verge</a></li>
<li><a href="https://twitter.com/brianstucki/status/1278684826422276098?s=20">@brianstucki asks which open source software do you need updated for Apple Silicon</a></li>
<li>
<a href="https://www.qemu.org">Qemu</a> - Processor Emulator</li>
<li><a href="https://learningswift.brightdigit.com/swift-on-arm-supporting-arm-in-swift-package-ci/">Swift on ARM – Supporting ARM in Swift Package CI</a></li>
<li><a href="https://github.com/insidegui/VideoMeme">VideoMeme by Gui Rambo - Sample Document-Based App in SwiftUI</a></li>
<li><a href="https://finestructure.co/blog/2020/3/3/arena-explore-spm-packages-with-ease">Arena: Explore SPM packages with ease by Sven A. Schmidt</a></li>
<li><a href="https://fastlane.tools">Fastlane</a></li>
<li><a href="https://swagger.io">Swagger</a></li>
<li><a href="https://github.com/yonaskolb/XcodeGen">Xcodegen</a></li>
<li><a href="https://developer.apple.com/documentation/xcode-release-notes/xcode-12-beta-release-notes">Xcode 12 Beta Release Notes</a></li>
<li><a href="https://developer.apple.com/documentation/xcode-release-notes/xcode-12-for-macos-universal-apps-beta-release-notes/">Xcode 12 for macOS Universal Apps Beta Release Notes</a></li>
<li><a href="https://youtu.be/MMoJiZZWoCA">Sean Allen - What's the new in Xcode 12</a></li>
<li><a href="https://www.hackingwithswift.com/articles/222/wwdc20-wrap-up-and-recommended-talks">Paul Hudson - WWDC20: Wrap up and recommended talks</a></li>
<li><a href="https://www.youtube.com/watch?v=j5TA4C_VNc0&amp;t">Lucas Derraugh - Responder Chain 2 Episode on Speculid</a></li>
<li><a href="https://bradfrost.com/blog/post/atomic-web-design/">Atomic Web Design</a></li>
</ul><p><strong>WWDC Videos - We Loved</strong></p><ul>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10686/">Explore the new system architecture of Apple Silicon Macs</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10104/">Adopt the new look of macOS</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10147/">Distribute binary frameworks as Swift packages</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10214/">Port your Mac app to Apple Silicon</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10651/">What's new in App Store Connect</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10096/">Explore Packages and Projects with Xcode Playgrounds</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10221/">Get your test results faster</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10220/">Handle interruptions and alerts in UI tests</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10654/">Create Swift Playgrounds content for iPad and Mac</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10004/">Expanding automation with the App Store Connect API</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10091/">Write tests to fail</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10164/">XCTSkip your tests</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10644/">Use Swift on AWS Lambda with Xcode</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance. </li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://transistor.fm/?via=empowerapps"><strong>Transistor.Fm</strong></a><br><em>Your podcast's publishing platform<br></em>Transistor not only hosts your podcast but also:</p><ul>
<li>
<strong>Help distribute your podcast with integrations</strong> to Apple Podcasts, Spotify, Google Podcasts, YouTube, and Mailchimp</li>
<li>
<strong>Deep analytics</strong> including average downloads per episode, popular podcast apps, number of subscribers, trends</li>
<li>
<strong>Professional support</strong> for creatives, businesses, and professional podcasters when it comes to hosting and analytics</li>
</ul><p>Try it today with<a href="https://transistor.fm/?via=empowerapps"> this special link:</a><br><a href="https://transistor.fm/?via=empowerapps">https://transistor.fm/?via=empowerapps</a></p><p><b>macOS 11 and Big Sur</b></p><ul>
<li>Stability of Big Sur vs Catalina</li>
<li>Unification of Design </li>
<li>Thoughts on Catalyst</li>
<li>Native iOS on Apple Silicon</li>
<li>AppKit vs SwiftUI </li>
</ul><p><b>Apple Silicon</b></p><ul>
<li>Migrating Apps to Apple Silicon</li>
<li>How Virtualization is Limited</li>
<li>Windows on Apple Silicon </li>
<li>Xcode 12 vs Xcode 12 Universal</li>
</ul><p><b>Xcode 12</b></p><ul>
<li>New Design</li>
<li>New SwiftUI App and Scene Changes</li>
<li>Swift Package Binary Dependencies and XCFrameworks</li>
<li>Swift Package Swift UI Previews</li>
<li>Swift Playgrounds in Xcode</li>
<li>Testing Enhancements</li>
<li>App Store API Improvements (by the end of the year)</li>
<li>Xcode Tips</li>
<li>Code Completion Improvements</li>
</ul><p><b>Xcode Tips</b></p><ul>
<li>Refactoring with Xcode</li>
<li>Modularization with Targets, etc....</li>
<li>Using Xconfig</li>
<li>Xcodegen</li>
</ul><p><b>Server-Side Swift</b></p><ul>
<li>Is Vapor Production Ready?</li>
<li>Vapor demoed in the State of the Union</li>
<li>AWS Lambdas in Swift</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/VadimShpakovski"><strong>Vadim Shpakovski - @VadimShpakovski</strong></a><ul>
<li>
<a href="https://nativeconnect.app/"><strong>NativeConnect</strong></a> </li>
<li><a href="https://raycast.com/"><strong>Raycast</strong></a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/2c23d28a"><strong>Episode 54 - WWDC 2020 and Xcode 12 with Vadim Shpakovski - Part 2</strong></a></li>
<li><a href="https://share.transistor.fm/s/7fc06c2f"><strong>Episode 44 - WWDC Spectacular (Part 2) with Peter Witham</strong></a></li>
<li><a href="https://share.transistor.fm/s/187a54b5"><strong>Episode 43 - WWDC Spectacular (Part 1) with Peter Witham</strong></a></li>
<li><a href="https://share.transistor.fm/s/8f940315"><strong>Episode 53 - WWDC 2020 - Quick Thoughts</strong></a></li>
<li><a href="https://share.transistor.fm/s/17f05dbf"><strong>Episode 49 - Vapor 4 with Tibor Bödecs</strong></a></li>
<li><a href="https://share.transistor.fm/s/eba8ef64"><strong>Episode 36 - Upgrading Your Skills in 2020 with Paul Hudson</strong></a></li>
<li>
<a href="https://share.transistor.fm/s/bf0516f2"><strong>Episode 34 - Server-Side Swift with Tim Condon</strong></a><a href="https://share.transistor.fm/s/71500d55"><strong><br>Episode 33 - 2020 Developer Wish List with Alex Bush</strong></a>
</li>
<li><a href="https://share.transistor.fm/s/c8f9aa41"><strong>Episode 23 - Modularizing in Xcode with Abbey Jackson</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.theverge.com/2020/6/24/21302213/apple-silicon-mac-arm-windows-support-boot-camp">Apple’s new ARM-based Macs won’t support Windows through Boot Camp - The Verge</a></li>
<li><a href="https://twitter.com/brianstucki/status/1278684826422276098?s=20">@brianstucki asks which open source software do you need updated for Apple Silicon</a></li>
<li>
<a href="https://www.qemu.org">Qemu</a> - Processor Emulator</li>
<li><a href="https://learningswift.brightdigit.com/swift-on-arm-supporting-arm-in-swift-package-ci/">Swift on ARM – Supporting ARM in Swift Package CI</a></li>
<li><a href="https://github.com/insidegui/VideoMeme">VideoMeme by Gui Rambo - Sample Document-Based App in SwiftUI</a></li>
<li><a href="https://finestructure.co/blog/2020/3/3/arena-explore-spm-packages-with-ease">Arena: Explore SPM packages with ease by Sven A. Schmidt</a></li>
<li><a href="https://fastlane.tools">Fastlane</a></li>
<li><a href="https://swagger.io">Swagger</a></li>
<li><a href="https://github.com/yonaskolb/XcodeGen">Xcodegen</a></li>
<li><a href="https://developer.apple.com/documentation/xcode-release-notes/xcode-12-beta-release-notes">Xcode 12 Beta Release Notes</a></li>
<li><a href="https://developer.apple.com/documentation/xcode-release-notes/xcode-12-for-macos-universal-apps-beta-release-notes/">Xcode 12 for macOS Universal Apps Beta Release Notes</a></li>
<li><a href="https://youtu.be/MMoJiZZWoCA">Sean Allen - What's the new in Xcode 12</a></li>
<li><a href="https://www.hackingwithswift.com/articles/222/wwdc20-wrap-up-and-recommended-talks">Paul Hudson - WWDC20: Wrap up and recommended talks</a></li>
<li><a href="https://www.youtube.com/watch?v=j5TA4C_VNc0&amp;t">Lucas Derraugh - Responder Chain 2 Episode on Speculid</a></li>
<li><a href="https://bradfrost.com/blog/post/atomic-web-design/">Atomic Web Design</a></li>
</ul><p><strong>WWDC Videos - We Loved</strong></p><ul>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10686/">Explore the new system architecture of Apple Silicon Macs</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10104/">Adopt the new look of macOS</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10147/">Distribute binary frameworks as Swift packages</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10214/">Port your Mac app to Apple Silicon</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10651/">What's new in App Store Connect</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10096/">Explore Packages and Projects with Xcode Playgrounds</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10221/">Get your test results faster</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10220/">Handle interruptions and alerts in UI tests</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10654/">Create Swift Playgrounds content for iPad and Mac</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10004/">Expanding automation with the App Store Connect API</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10091/">Write tests to fail</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10164/">XCTSkip your tests</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10644/">Use Swift on AWS Lambda with Xcode</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance. </li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://transistor.fm/?via=empowerapps"><strong>Transistor.Fm</strong></a><br><em>Your podcast's publishing platform<br></em>Transistor not only hosts your podcast but also:</p><ul>
<li>
<strong>Help distribute your podcast with integrations</strong> to Apple Podcasts, Spotify, Google Podcasts, YouTube, and Mailchimp</li>
<li>
<strong>Deep analytics</strong> including average downloads per episode, popular podcast apps, number of subscribers, trends</li>
<li>
<strong>Professional support</strong> for creatives, businesses, and professional podcasters when it comes to hosting and analytics</li>
</ul><p>Try it today with<a href="https://transistor.fm/?via=empowerapps"> this special link:</a><br><a href="https://transistor.fm/?via=empowerapps">https://transistor.fm/?via=empowerapps</a></p><p><b>macOS 11 and Big Sur</b></p><ul>
<li>Stability of Big Sur vs Catalina</li>
<li>Unification of Design </li>
<li>Thoughts on Catalyst</li>
<li>Native iOS on Apple Silicon</li>
<li>AppKit vs SwiftUI </li>
</ul><p><b>Apple Silicon</b></p><ul>
<li>Migrating Apps to Apple Silicon</li>
<li>How Virtualization is Limited</li>
<li>Windows on Apple Silicon </li>
<li>Xcode 12 vs Xcode 12 Universal</li>
</ul><p><b>Xcode 12</b></p><ul>
<li>New Design</li>
<li>New SwiftUI App and Scene Changes</li>
<li>Swift Package Binary Dependencies and XCFrameworks</li>
<li>Swift Package Swift UI Previews</li>
<li>Swift Playgrounds in Xcode</li>
<li>Testing Enhancements</li>
<li>App Store API Improvements (by the end of the year)</li>
<li>Xcode Tips</li>
<li>Code Completion Improvements</li>
</ul><p><b>Xcode Tips</b></p><ul>
<li>Refactoring with Xcode</li>
<li>Modularization with Targets, etc....</li>
<li>Using Xconfig</li>
<li>Xcodegen</li>
</ul><p><b>Server-Side Swift</b></p><ul>
<li>Is Vapor Production Ready?</li>
<li>Vapor demoed in the State of the Union</li>
<li>AWS Lambdas in Swift</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Mon, 06 Jul 2020 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/51c9a342/009e1d2b.mp3" length="27239160" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/287810/full_1593573437-artwork.jpg"/>
      <itunes:duration>3341</itunes:duration>
      <itunes:summary>In this two-part episode Leo talks with Vadim Shpakovski, author of NativeConnect, about WWDC 2020. In this second part, they cover the updates to the Mac, Xcode 12, and Swift 5.3. In the first part, they went over their overall thoughts on this year's format and the updates to iOS 14, watchOS 7, and iPadOS 14. </itunes:summary>
      <itunes:subtitle>In this two-part episode Leo talks with Vadim Shpakovski, author of NativeConnect, about WWDC 2020. In this second part, they cover the updates to the Mac, Xcode 12, and Swift 5.3. In the first part, they went over their overall thoughts on this year's fo</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>WWDC 2020 and Xcode 12 with Vadim Shpakovski - Part 1</title>
      <itunes:episode>54</itunes:episode>
      <itunes:title>WWDC 2020 and Xcode 12 with Vadim Shpakovski - Part 1</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">0eabd6f8-f6a8-4cc2-a7ad-6fa2a7d9dfa2</guid>
      <link>https://share.transistor.fm/s/2c23d28a</link>
      <description>
        <![CDATA[<p><a href="https://twitter.com/leogdion/status/1278305405794320384?s=20"><strong>Interested in 360iDev Tickets? Let us know what you think of WWDC 2020 by replying to this tweet.</strong></a></p><p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/VadimShpakovski"><strong>Vadim Shpakovski - @VadimShpakovski</strong></a><ul>
<li>
<a href="https://nativeconnect.app"><strong>NativeConnect</strong></a> </li>
<li><a href="https://raycast.com"><strong>Raycast</strong></a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/7fc06c2f"><strong>Episode 44 - WWDC Spectacular (Part 2) with Peter Witham</strong></a></li>
<li><a href="https://share.transistor.fm/s/187a54b5"><strong>Episode 43 - WWDC Spectacular (Part 1) with Peter Witham</strong></a></li>
<li><a href="https://share.transistor.fm/s/71500d55"><strong>Episode 33 - 2020 Developer Wish List with Alex Bush</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://joecieplinski.com/blog/2020/06/26/wwdc-2020/"><strong>Joe Cieplinski - WWDC 2020</strong></a></li>
<li><a href="https://twitter.com/helje5/status/1276599937686474761?s=20"><strong>Helge Heß on Widgets </strong></a></li>
</ul><p><strong>WWDC Videos - We Loved</strong></p><ul>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10048/"><strong>Build complications in SwiftUI</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10147/"><strong>Distribute binary frameworks as Swift packages</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10118/"><strong>Create app clips for other businesses</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10046/"><strong>Create complications for Apple Watch</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10109/"><strong>Support hardware keyboards in your app</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance. </li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://360idev.com"><strong>360iDev - August 16 - 19 (Remote)</strong></a></p><ul>
<li>The Leading indie iOS/Mac (and watchOS, and tvOS) Developer conference</li>
<li>It's all about Community and Code!</li>
<li>Four days of hands-on training, amazing sessions, and the great community. All Swift.</li>
</ul><p>Use the promo code <strong>WeAreSwift </strong>to get <a href="https://360idev.com"><strong>20% off registration.</strong></a></p><p><b>WWDC 2020 from Home</b></p><ul>
<li>Big Mac Year After So Many Years </li>
<li>The Slow Unification of Apple Operating Systems</li>
<li>The Slow Unification of User Interface</li>
<li>Our Thoughts on the Format</li>
<li>The Excitement of Speaking with Apple Engineers Remotely</li>
<li>Tight Video Content</li>
</ul><p><b>iOS 14, watchOS 7, iPadOS </b></p><ul>
<li>Widgets similarity to watchOS complications</li>
<li>Similarities to Android</li>
<li>The New App Library</li>
<li>App Clips might encourage businesses</li>
<li>SwiftUI Complications on the Apple Watch</li>
<li>More Mobility metrics on the watch</li>
<li>Improvements to Spotlight</li>
<li>Minimize Full-Screen Overtaking - Phone Calls, Siri, Spotlight</li>
<li>Is touch coming to the Mac?</li>
<li>The Power of Scribble on the iPad</li>
<li>Default Apps on iOS</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><a href="https://twitter.com/leogdion/status/1278305405794320384?s=20"><strong>Interested in 360iDev Tickets? Let us know what you think of WWDC 2020 by replying to this tweet.</strong></a></p><p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/VadimShpakovski"><strong>Vadim Shpakovski - @VadimShpakovski</strong></a><ul>
<li>
<a href="https://nativeconnect.app"><strong>NativeConnect</strong></a> </li>
<li><a href="https://raycast.com"><strong>Raycast</strong></a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/7fc06c2f"><strong>Episode 44 - WWDC Spectacular (Part 2) with Peter Witham</strong></a></li>
<li><a href="https://share.transistor.fm/s/187a54b5"><strong>Episode 43 - WWDC Spectacular (Part 1) with Peter Witham</strong></a></li>
<li><a href="https://share.transistor.fm/s/71500d55"><strong>Episode 33 - 2020 Developer Wish List with Alex Bush</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://joecieplinski.com/blog/2020/06/26/wwdc-2020/"><strong>Joe Cieplinski - WWDC 2020</strong></a></li>
<li><a href="https://twitter.com/helje5/status/1276599937686474761?s=20"><strong>Helge Heß on Widgets </strong></a></li>
</ul><p><strong>WWDC Videos - We Loved</strong></p><ul>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10048/"><strong>Build complications in SwiftUI</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10147/"><strong>Distribute binary frameworks as Swift packages</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10118/"><strong>Create app clips for other businesses</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10046/"><strong>Create complications for Apple Watch</strong></a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2020/10109/"><strong>Support hardware keyboards in your app</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>If you want your app to succeed, there's never been a better time to read up on App Store Optimization and Appfigures provides that for you. </p><ul>
<li>Check out their <a href="https://appfigures.com/resources">great articles and guides on app store optimization </a>
</li>
<li>
<a href="https://appfigures.com/resources/tagged/aso-teardown">Brand new teardowns of specific apps</a>, like <a href="https://appfigures.com/resources/aso/optimization-teardown-spotify">Spotify</a> for instance. </li>
<li>Check out more of their resources at <a href="http://appfigures.com/resources">appfigures.com/resources</a>.</li>
</ul><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://360idev.com"><strong>360iDev - August 16 - 19 (Remote)</strong></a></p><ul>
<li>The Leading indie iOS/Mac (and watchOS, and tvOS) Developer conference</li>
<li>It's all about Community and Code!</li>
<li>Four days of hands-on training, amazing sessions, and the great community. All Swift.</li>
</ul><p>Use the promo code <strong>WeAreSwift </strong>to get <a href="https://360idev.com"><strong>20% off registration.</strong></a></p><p><b>WWDC 2020 from Home</b></p><ul>
<li>Big Mac Year After So Many Years </li>
<li>The Slow Unification of Apple Operating Systems</li>
<li>The Slow Unification of User Interface</li>
<li>Our Thoughts on the Format</li>
<li>The Excitement of Speaking with Apple Engineers Remotely</li>
<li>Tight Video Content</li>
</ul><p><b>iOS 14, watchOS 7, iPadOS </b></p><ul>
<li>Widgets similarity to watchOS complications</li>
<li>Similarities to Android</li>
<li>The New App Library</li>
<li>App Clips might encourage businesses</li>
<li>SwiftUI Complications on the Apple Watch</li>
<li>More Mobility metrics on the watch</li>
<li>Improvements to Spotlight</li>
<li>Minimize Full-Screen Overtaking - Phone Calls, Siri, Spotlight</li>
<li>Is touch coming to the Mac?</li>
<li>The Power of Scribble on the iPad</li>
<li>Default Apps on iOS</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Wed, 01 Jul 2020 08:30:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/2c23d28a/3d5978e3.mp3" length="13378468" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/268235/full_1593573150-artwork.jpg"/>
      <itunes:duration>1607</itunes:duration>
      <itunes:summary>In this two-part episode Leo talks with Vadim Shpakovski, author of NativeConnect, about WWDC 2020. In the first part, they go over their overall thoughts on this year's format and the updates to iOS 14, watchOS 7, and iPadOS 14. In the next episode, they will cover the updates to the Mac, Xcode 12, and Swift 5.3.</itunes:summary>
      <itunes:subtitle>In this two-part episode Leo talks with Vadim Shpakovski, author of NativeConnect, about WWDC 2020. In the first part, they go over their overall thoughts on this year's format and the updates to iOS 14, watchOS 7, and iPadOS 14. In the next episode, they</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>WWDC 2020 - Quick Thoughts</title>
      <itunes:episode>53</itunes:episode>
      <itunes:title>WWDC 2020 - Quick Thoughts</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">1f29bab0-c9d5-4484-8a32-5aa68f76f2f9</guid>
      <link>https://share.transistor.fm/s/8f940315</link>
      <description>
        <![CDATA[<p><b><a href="https://youtu.be/wDpNBXItVLo">Youtube Video</a></b></p><p><a href="https://youtu.be/wDpNBXItVLo">https://youtu.be/wDpNBXItVLo</a></p><p><b>iOS 14</b></p><ul>
<li>Widgets</li>
<li>App Clips</li>
<li>Default Apps Allowed</li>
<li>Clearer Privacy Policies</li>
</ul><p><b>iPadOS 14</b></p><ul>
<li>Scribble for Apple Pencil</li>
<li>Shape Parsing(?) for Apple Pencil</li>
<li>New UI Elements like Sidebar</li>
</ul><p><b>macOS 11 - Big Sur</b></p><ul>
<li>Big UI Changes and Refresh</li>
<li>Improved Catalyst Look</li>
<li>New Icons</li>
<li>Improvements to Safari Web Extensions</li>
</ul><p><b>Apple Silicon on the Mac</b></p><ul>
<li><em>More Performance Per Watt</em></li>
<li>$500 Developer Tool Kit (Mac mini) for Rent</li>
<li>Major Software and Tools All Ready<ul><li>Unity, Microsoft, Adobe, Homebrew, etc...</li></ul>
</li>
<li>Virtualization available for Server-Side Development<ul><li>VAPOR DEMOED!</li></ul>
</li>
<li>Building for <em>Universal Apps</em> in Xcode for both CPU Architectures </li>
<li>Rosetta 2 for Emulation</li>
<li>Can Run iOS Apps Natively</li>
</ul><p><b>More Thoughts</b></p><p>🕵️‍♀️Find My _ (i.e. Apple Tags) is a certification similar to HomeKit<br>⌚️Wish there was more watchOS improvements<br>🌊Want to try Big Sur <br>🛠Looking forward to try Xcode 12 and talking about it next week with <a href="https://twitter.com/VadimShpakovski"><strong>Vadim Shpakovski</strong></a></p><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b><a href="https://youtu.be/wDpNBXItVLo">Youtube Video</a></b></p><p><a href="https://youtu.be/wDpNBXItVLo">https://youtu.be/wDpNBXItVLo</a></p><p><b>iOS 14</b></p><ul>
<li>Widgets</li>
<li>App Clips</li>
<li>Default Apps Allowed</li>
<li>Clearer Privacy Policies</li>
</ul><p><b>iPadOS 14</b></p><ul>
<li>Scribble for Apple Pencil</li>
<li>Shape Parsing(?) for Apple Pencil</li>
<li>New UI Elements like Sidebar</li>
</ul><p><b>macOS 11 - Big Sur</b></p><ul>
<li>Big UI Changes and Refresh</li>
<li>Improved Catalyst Look</li>
<li>New Icons</li>
<li>Improvements to Safari Web Extensions</li>
</ul><p><b>Apple Silicon on the Mac</b></p><ul>
<li><em>More Performance Per Watt</em></li>
<li>$500 Developer Tool Kit (Mac mini) for Rent</li>
<li>Major Software and Tools All Ready<ul><li>Unity, Microsoft, Adobe, Homebrew, etc...</li></ul>
</li>
<li>Virtualization available for Server-Side Development<ul><li>VAPOR DEMOED!</li></ul>
</li>
<li>Building for <em>Universal Apps</em> in Xcode for both CPU Architectures </li>
<li>Rosetta 2 for Emulation</li>
<li>Can Run iOS Apps Natively</li>
</ul><p><b>More Thoughts</b></p><p>🕵️‍♀️Find My _ (i.e. Apple Tags) is a certification similar to HomeKit<br>⌚️Wish there was more watchOS improvements<br>🌊Want to try Big Sur <br>🛠Looking forward to try Xcode 12 and talking about it next week with <a href="https://twitter.com/VadimShpakovski"><strong>Vadim Shpakovski</strong></a></p><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Mon, 22 Jun 2020 23:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/8f940315/7db058dd.mp3" length="7618941" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/268229/full_1592869707-artwork.jpg"/>
      <itunes:duration>889</itunes:duration>
      <itunes:summary>In this episode, Leo goes all the big developments revealed on the first day include iOS 14, iPadOS 14, watchOS 7, macOS 11 Big Sur, and what people need to know about the new Apple Silicon.</itunes:summary>
      <itunes:subtitle>In this episode, Leo goes all the big developments revealed on the first day include iOS 14, iPadOS 14, watchOS 7, macOS 11 Big Sur, and what people need to know about the new Apple Silicon.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Haikus of Code with Erica Sadun - Part 2</title>
      <itunes:episode>52</itunes:episode>
      <itunes:title>Haikus of Code with Erica Sadun - Part 2</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">217d79b0-6959-4d83-877d-d5ad613c7ed7</guid>
      <link>https://share.transistor.fm/s/60a4bc92</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://ericasadun.com/"><strong>Erica Sadun (website)</strong></a><ul>
<li><a href="https://twitter.com/ericasadun">@ericasadun (Twitter)</a></li>
<li><a href="https://github.com/erica">@erica (GitHub)</a></li>
<li><a href="https://pragprog.com/book/esswift2/swift-style-second-edition"><strong>Swift Style, Second Edition</strong> by Erica Sadun</a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/4f8b37d3"><strong>Episode 20: WWDC 2019 - Mac Development with Daniel Jalkut</strong></a></li>
<li><a href="https://share.transistor.fm/s/17f05dbf"><strong>Episode 49: Vapor 4 with Tibor Bödecs</strong></a></li>
<li><a href="https://share.transistor.fm/s/bf0516f2"><strong>Episode 34: Server-Side Swift with Tim Condon</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.tryswift.co/world/"><strong>try! Swift World</strong></a></li>
<li><a href="https://github.com/apple/swift-argument-parser"><strong>Swift Argument Parser</strong></a></li>
<li><a href="https://github.com/yonaskolb/Mint"><strong>yonaskolb/Mint</strong> (GitHub) - <strong>THE WAY </strong>to install Swift Package Tools</a></li>
<li><a href="https://ericasadun.com/2020/05/28/mint-a-simple-swiftpm-installer-has-improved-my-command-line-life/">WE FOUND AN INSTALLATION TOOL! -<strong> “mint” (a simple SwiftPM installer) has improved my command line life</strong> - Erica Sadun</a></li>
<li><a href="https://ericasadun.com/2020/05/22/musings-on-result-and-building-a-command-line-utility-with-completion-handlers/"><strong>Musings on `Result` and building a command line utility with completion handlers</strong> - Erica Sadun</a></li>
<li><a href="https://learningswift.brightdigit.com/swift-package-continuous-integration-guide/"><strong>Swift Package Continuous Integration</strong> - Leo Dion</a></li>
<li>
<strong>Erica's Command Line Tools</strong><ul>
<li>
<a href="https://github.com/erica/now"><strong>erica/now </strong>(GitHub) - Times around the world...</a> </li>
<li><a href="https://github.com/erica/remind"><strong>erica/remind </strong>(GitHub) - Schedule a notification-center reminder from the command-line... </a></li>
<li><a href="https://github.com/erica/lns"><strong>erica/lns </strong>(GitHub) - Because no one can remember how to use `ln -s` when it really matters</a></li>
</ul>
</li>
<li>
<strong>Leo's Command Line Tools</strong><ul>
<li><a href="https://github.com/brightdigit/EggSeed"><strong>brightdigit/eggseed</strong> (GitHub) - Command Line Tool for Starting Your Swift Packages with Continuous Integration</a></li>
<li><a href="https://github.com/brightdigit/AssetLib"><strong>brightdigit/AssetLib</strong> (GitHub) - Create and Build Asset Catalog and Templates</a></li>
<li><a href="https://github.com/SwiftPackageIndex/PackageListValidator"><strong>SwiftPackageIndex/PackageListValidator</strong> (GitHub) - A tool for validating the Swift Package Index package list</a></li>
</ul>
</li>
<li>HomeBrew Stuff (for Swift Packages - <a href="https://github.com/yonaskolb/Mint">See Mint</a>)<ul>
<li>HomeBrew Home Page - https://brew.sh</li>
<li><a href="https://github.com/Homebrew/brew/blob/master/docs/Taps.md">How to Create a Tap</a></li>
<li><a href="https://github.com/Homebrew/homebrew-cask/blob/master/doc/development/adding_a_cask.md">How to Create a Cask (for Mac GUI Apps)</a></li>
<li>
<a href="https://github.com/Homebrew/brew/blob/master/docs/Formula-Cookbook.md">How to Create a Formula (Command Line Apps)</a> </li>
</ul>
</li>
<li><a href="http://docopt.org/"><strong>docopt</strong> - <em>Command-line interface description language</em></a></li>
<li><a href="https://github.com/kylef/Commander"><strong>kylef/Commander</strong> (GitHub) - Compose beautiful command line interfaces in Swift</a></li>
<li><a href="https://github.com/JohnSundell/Publish"><strong>JohnSundell/Publish</strong> (GitHub) - A static site generator for Swift developers</a></li>
<li><a href="https://heartwitch.app/home"><strong>Heartwitch</strong></a></li>
<li><a href="https://speculid.com/"><strong>Speculid</strong></a></li>
<li><a href="https://www.gimp.org/"><strong>Gimp</strong></a></li>
<li><a href="https://inkscape.org/"><strong>Inkscape</strong></a></li>
<li><a href="https://macdown.uranusjr.com/"><strong>MacDown</strong></a></li>
<li><a href="https://ulysses.app/"><strong>Ulysses</strong></a></li>
<li><a href="http://www.cse.psu.edu/~kxc104/class/cmpen472/19s/hw/hw8/vt100ansi.htm"><strong>VT100 codes 🙄</strong></a></li>
<li><a href="http://www.tldp.org/LDP/abs/html/exitcodes.html"><strong>Exit Codes</strong></a></li>
<li><a href="https://github.com/apple/swift/blob/master/CHANGELOG.md"><strong>Swift Language Change Log</strong></a></li>
<li><a href="https://www.infoq.com/news/2020/05/swift-5-3-windows-linux/"><strong>Swift on Windows</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="http://www.audibletrial.com/EmpowerApps"><strong>Audible</strong></a><strong><br></strong>Audible is the leading provider of spoken-word entertainment and audiobooks, ranging from best sellers, to celebrity memoirs, news, business, and self-development. Every month, members get one (1) credit to pick any title, plus two (2) Audible Originals from a monthly selection, and access to daily news digests (from <em>The New York Times, The Wall Street Journal, and The Washington Post</em>), as well as guided meditation programs.</p><p><em>My recommendation</em><br><strong>Talking to Strangers - What We Should Know About the People We Don't Know</strong></p><p>Written and Narrated by: <strong>Malcolm Gladwell</strong></p><p><br>Try it out today and 2 free audiobooks:<br><a href="http://www.audibletrial.com/EmpowerApps">http://www.audibletrial.com/EmpowerApps</a></p><p><b>Swift Argument Parser</b></p><ul>
<li>How does the parser work?</li>
<li>What's the difference between Argument, Option, and Flag?</li>
<li>What folks find challenging with it?</li>
<li>How we are using the new library?</li>
<li>How to run asynchronously with command line tools?</li>
<li>How log and write to stdout and stderr?</li>
<li>Dealing with errors</li>
<li>Future of Swift </li>
</ul><p>... also Leo wants to waste time porting SwiftUI into terminal apps</p><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><strong>GitHub</strong><br><a href="https://github.com/brightdigit">BrightDigit - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://ericasadun.com/"><strong>Erica Sadun (website)</strong></a><ul>
<li><a href="https://twitter.com/ericasadun">@ericasadun (Twitter)</a></li>
<li><a href="https://github.com/erica">@erica (GitHub)</a></li>
<li><a href="https://pragprog.com/book/esswift2/swift-style-second-edition"><strong>Swift Style, Second Edition</strong> by Erica Sadun</a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/4f8b37d3"><strong>Episode 20: WWDC 2019 - Mac Development with Daniel Jalkut</strong></a></li>
<li><a href="https://share.transistor.fm/s/17f05dbf"><strong>Episode 49: Vapor 4 with Tibor Bödecs</strong></a></li>
<li><a href="https://share.transistor.fm/s/bf0516f2"><strong>Episode 34: Server-Side Swift with Tim Condon</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.tryswift.co/world/"><strong>try! Swift World</strong></a></li>
<li><a href="https://github.com/apple/swift-argument-parser"><strong>Swift Argument Parser</strong></a></li>
<li><a href="https://github.com/yonaskolb/Mint"><strong>yonaskolb/Mint</strong> (GitHub) - <strong>THE WAY </strong>to install Swift Package Tools</a></li>
<li><a href="https://ericasadun.com/2020/05/28/mint-a-simple-swiftpm-installer-has-improved-my-command-line-life/">WE FOUND AN INSTALLATION TOOL! -<strong> “mint” (a simple SwiftPM installer) has improved my command line life</strong> - Erica Sadun</a></li>
<li><a href="https://ericasadun.com/2020/05/22/musings-on-result-and-building-a-command-line-utility-with-completion-handlers/"><strong>Musings on `Result` and building a command line utility with completion handlers</strong> - Erica Sadun</a></li>
<li><a href="https://learningswift.brightdigit.com/swift-package-continuous-integration-guide/"><strong>Swift Package Continuous Integration</strong> - Leo Dion</a></li>
<li>
<strong>Erica's Command Line Tools</strong><ul>
<li>
<a href="https://github.com/erica/now"><strong>erica/now </strong>(GitHub) - Times around the world...</a> </li>
<li><a href="https://github.com/erica/remind"><strong>erica/remind </strong>(GitHub) - Schedule a notification-center reminder from the command-line... </a></li>
<li><a href="https://github.com/erica/lns"><strong>erica/lns </strong>(GitHub) - Because no one can remember how to use `ln -s` when it really matters</a></li>
</ul>
</li>
<li>
<strong>Leo's Command Line Tools</strong><ul>
<li><a href="https://github.com/brightdigit/EggSeed"><strong>brightdigit/eggseed</strong> (GitHub) - Command Line Tool for Starting Your Swift Packages with Continuous Integration</a></li>
<li><a href="https://github.com/brightdigit/AssetLib"><strong>brightdigit/AssetLib</strong> (GitHub) - Create and Build Asset Catalog and Templates</a></li>
<li><a href="https://github.com/SwiftPackageIndex/PackageListValidator"><strong>SwiftPackageIndex/PackageListValidator</strong> (GitHub) - A tool for validating the Swift Package Index package list</a></li>
</ul>
</li>
<li>HomeBrew Stuff (for Swift Packages - <a href="https://github.com/yonaskolb/Mint">See Mint</a>)<ul>
<li>HomeBrew Home Page - https://brew.sh</li>
<li><a href="https://github.com/Homebrew/brew/blob/master/docs/Taps.md">How to Create a Tap</a></li>
<li><a href="https://github.com/Homebrew/homebrew-cask/blob/master/doc/development/adding_a_cask.md">How to Create a Cask (for Mac GUI Apps)</a></li>
<li>
<a href="https://github.com/Homebrew/brew/blob/master/docs/Formula-Cookbook.md">How to Create a Formula (Command Line Apps)</a> </li>
</ul>
</li>
<li><a href="http://docopt.org/"><strong>docopt</strong> - <em>Command-line interface description language</em></a></li>
<li><a href="https://github.com/kylef/Commander"><strong>kylef/Commander</strong> (GitHub) - Compose beautiful command line interfaces in Swift</a></li>
<li><a href="https://github.com/JohnSundell/Publish"><strong>JohnSundell/Publish</strong> (GitHub) - A static site generator for Swift developers</a></li>
<li><a href="https://heartwitch.app/home"><strong>Heartwitch</strong></a></li>
<li><a href="https://speculid.com/"><strong>Speculid</strong></a></li>
<li><a href="https://www.gimp.org/"><strong>Gimp</strong></a></li>
<li><a href="https://inkscape.org/"><strong>Inkscape</strong></a></li>
<li><a href="https://macdown.uranusjr.com/"><strong>MacDown</strong></a></li>
<li><a href="https://ulysses.app/"><strong>Ulysses</strong></a></li>
<li><a href="http://www.cse.psu.edu/~kxc104/class/cmpen472/19s/hw/hw8/vt100ansi.htm"><strong>VT100 codes 🙄</strong></a></li>
<li><a href="http://www.tldp.org/LDP/abs/html/exitcodes.html"><strong>Exit Codes</strong></a></li>
<li><a href="https://github.com/apple/swift/blob/master/CHANGELOG.md"><strong>Swift Language Change Log</strong></a></li>
<li><a href="https://www.infoq.com/news/2020/05/swift-5-3-windows-linux/"><strong>Swift on Windows</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="http://www.audibletrial.com/EmpowerApps"><strong>Audible</strong></a><strong><br></strong>Audible is the leading provider of spoken-word entertainment and audiobooks, ranging from best sellers, to celebrity memoirs, news, business, and self-development. Every month, members get one (1) credit to pick any title, plus two (2) Audible Originals from a monthly selection, and access to daily news digests (from <em>The New York Times, The Wall Street Journal, and The Washington Post</em>), as well as guided meditation programs.</p><p><em>My recommendation</em><br><strong>Talking to Strangers - What We Should Know About the People We Don't Know</strong></p><p>Written and Narrated by: <strong>Malcolm Gladwell</strong></p><p><br>Try it out today and 2 free audiobooks:<br><a href="http://www.audibletrial.com/EmpowerApps">http://www.audibletrial.com/EmpowerApps</a></p><p><b>Swift Argument Parser</b></p><ul>
<li>How does the parser work?</li>
<li>What's the difference between Argument, Option, and Flag?</li>
<li>What folks find challenging with it?</li>
<li>How we are using the new library?</li>
<li>How to run asynchronously with command line tools?</li>
<li>How log and write to stdout and stderr?</li>
<li>Dealing with errors</li>
<li>Future of Swift </li>
</ul><p>... also Leo wants to waste time porting SwiftUI into terminal apps</p><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><strong>GitHub</strong><br><a href="https://github.com/brightdigit">BrightDigit - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Tue, 16 Jun 2020 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/60a4bc92/1b2d17b5.mp3" length="20612692" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/251316/full_1591385350-artwork.jpg"/>
      <itunes:duration>2535</itunes:duration>
      <itunes:summary>In the second part of our interview with Erica Sadun, Leo gets more in-depth on the Swift Argument Parser, how we are using it, setup and parsing complexities, and more.</itunes:summary>
      <itunes:subtitle>In the second part of our interview with Erica Sadun, Leo gets more in-depth on the Swift Argument Parser, how we are using it, setup and parsing complexities, and more.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Haikus of Code with Erica Sadun - Part 1</title>
      <itunes:episode>51</itunes:episode>
      <itunes:title>Haikus of Code with Erica Sadun - Part 1</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">6459efe6-c1f2-47c1-860e-bc27811c4469</guid>
      <link>https://share.transistor.fm/s/4d6360c9</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://ericasadun.com"><strong>Erica Sadun (website)</strong></a><ul>
<li><a href="https://twitter.com/ericasadun">@ericasadun (Twitter)</a></li>
<li><a href="https://github.com/erica">@erica (GitHub)</a></li>
<li><a href="https://pragprog.com/book/esswift2/swift-style-second-edition"><strong>Swift Style, Second Edition</strong> by Erica Sadun</a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul><li><a href="https://share.transistor.fm/s/4f8b37d3"><strong>Episode 20: WWDC 2019 - Mac Development with Daniel Jalkut</strong></a></li></ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.tryswift.co/world/">try! Swift World</a></li>
<li><a href="https://github.com/apple/swift-argument-parser"><strong>Swift Argument Parser</strong></a></li>
<li><a href="https://github.com/yonaskolb/Mint"><strong>yonaskolb/Mint</strong> (GitHub) - <strong>THE WAY </strong>to install Swift Package Tools</a></li>
<li>
<strong>Erica's Command Line Tools</strong><ul>
<li>
<a href="https://github.com/erica/now"><strong>erica/now </strong>(GitHub) - Times around the world...</a> </li>
<li><a href="https://github.com/erica/remind"><strong>erica/remind </strong>(GitHub) - Schedule a notification-center reminder from the command-line... </a></li>
<li><a href="https://github.com/erica/lns"><strong>erica/lns </strong>(GitHub) - Because no one can remember how to use `ln -s` when it really matters</a></li>
</ul>
</li>
<li>
<strong>Leo's Command Line Tools</strong><ul>
<li><a href="https://github.com/brightdigit/EggSeed"><strong>brightdigit/eggseed</strong> (GitHub) - Command Line Tool for Starting Your Swift Packages with Continuous Integration</a></li>
<li><a href="https://github.com/brightdigit/AssetLib"><strong>brightdigit/AssetLib</strong> (GitHub) - Create and Build Asset Catalog and Templates</a></li>
<li><a href="https://github.com/SwiftPackageIndex/PackageListValidator"><strong>SwiftPackageIndex/PackageListValidator</strong> (GitHub) - A tool for validating the Swift Package Index package list</a></li>
</ul>
</li>
<li>HomeBrew Stuff (for Swift Packages - <a href="https://github.com/yonaskolb/Mint">See Mint</a>)<ul>
<li>
<a href="https://brew.sh">HomeBrew Home Page</a> </li>
<li><a href="https://github.com/Homebrew/brew/blob/master/docs/Taps.md">How to Create a Tap</a></li>
<li><a href="https://github.com/Homebrew/homebrew-cask/blob/master/doc/development/adding_a_cask.md">How to Create a Cask (for Mac GUI Apps)</a></li>
<li>
<a href="https://github.com/Homebrew/brew/blob/master/docs/Formula-Cookbook.md">How to Create a Formula (Command Line Apps)</a> </li>
</ul>
</li>
<li><a href="http://docopt.org"><strong>docopt</strong> - <em>Command-line interface description language</em></a></li>
<li><a href="https://github.com/JohnSundell/Publish"><strong>JohnSundell/Publish</strong> (GitHub) - A static site generator for Swift developers</a></li>
<li><a href="https://speculid.com"><strong>Speculid</strong></a></li>
<li><a href="https://www.gimp.org"><strong>Gimp</strong></a></li>
<li><a href="https://inkscape.org"><strong>Inkscape</strong></a></li>
<li><a href="https://macdown.uranusjr.com"><strong>MacDown</strong></a></li>
<li><a href="https://ulysses.app"><strong>Ulysses</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://transistor.fm/?via=empowerapps"><strong>Transistor.Fm</strong></a><br><em>Your podcast's publishing platform<br></em>Transistor not only hosts your podcast but also:</p><ul>
<li>
<strong>Help distribute your podcast with integrations</strong> to Apple Podcasts, Spotify, Google Podcasts, YouTube, and Mailchimp</li>
<li>
<strong>Deep analytics</strong> including average downloads per episode, popular podcast apps, number of subscribers, trends</li>
<li>
<strong>Professional support</strong> for creatives, businesses, and professional podcasters when it comes to hosting and analytics</li>
</ul><p>Try it today with<a href="https://transistor.fm/?via=empowerapps"> this special link:</a><br><a href="https://transistor.fm/?via=empowerapps">https://transistor.fm/?via=empowerapps</a></p><p><b>SwiftArgumentParser</b></p><ul>
<li>Bringing Swifty-ness to the Command Line Parser</li>
<li>Works well with Xcode</li>
<li>How to Install Swift Package Tools</li>
</ul><p><b>Graphics Support in Xcode</b></p><ul>
<li>Why isn't SVG supported?</li>
<li>UIImage with SVG?</li>
<li>Does Android support SVG?</li>
<li>Bézier curve support</li>
</ul><p><b>Being a Mac User in 2020</b></p><ul>
<li>Catalina Support</li>
<li>Subscription Services</li>
<li>Adobe vs Apple</li>
<li>Native UI and UX on the Mac</li>
<li>Writing Books for Publishers</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://ericasadun.com"><strong>Erica Sadun (website)</strong></a><ul>
<li><a href="https://twitter.com/ericasadun">@ericasadun (Twitter)</a></li>
<li><a href="https://github.com/erica">@erica (GitHub)</a></li>
<li><a href="https://pragprog.com/book/esswift2/swift-style-second-edition"><strong>Swift Style, Second Edition</strong> by Erica Sadun</a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul><li><a href="https://share.transistor.fm/s/4f8b37d3"><strong>Episode 20: WWDC 2019 - Mac Development with Daniel Jalkut</strong></a></li></ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.tryswift.co/world/">try! Swift World</a></li>
<li><a href="https://github.com/apple/swift-argument-parser"><strong>Swift Argument Parser</strong></a></li>
<li><a href="https://github.com/yonaskolb/Mint"><strong>yonaskolb/Mint</strong> (GitHub) - <strong>THE WAY </strong>to install Swift Package Tools</a></li>
<li>
<strong>Erica's Command Line Tools</strong><ul>
<li>
<a href="https://github.com/erica/now"><strong>erica/now </strong>(GitHub) - Times around the world...</a> </li>
<li><a href="https://github.com/erica/remind"><strong>erica/remind </strong>(GitHub) - Schedule a notification-center reminder from the command-line... </a></li>
<li><a href="https://github.com/erica/lns"><strong>erica/lns </strong>(GitHub) - Because no one can remember how to use `ln -s` when it really matters</a></li>
</ul>
</li>
<li>
<strong>Leo's Command Line Tools</strong><ul>
<li><a href="https://github.com/brightdigit/EggSeed"><strong>brightdigit/eggseed</strong> (GitHub) - Command Line Tool for Starting Your Swift Packages with Continuous Integration</a></li>
<li><a href="https://github.com/brightdigit/AssetLib"><strong>brightdigit/AssetLib</strong> (GitHub) - Create and Build Asset Catalog and Templates</a></li>
<li><a href="https://github.com/SwiftPackageIndex/PackageListValidator"><strong>SwiftPackageIndex/PackageListValidator</strong> (GitHub) - A tool for validating the Swift Package Index package list</a></li>
</ul>
</li>
<li>HomeBrew Stuff (for Swift Packages - <a href="https://github.com/yonaskolb/Mint">See Mint</a>)<ul>
<li>
<a href="https://brew.sh">HomeBrew Home Page</a> </li>
<li><a href="https://github.com/Homebrew/brew/blob/master/docs/Taps.md">How to Create a Tap</a></li>
<li><a href="https://github.com/Homebrew/homebrew-cask/blob/master/doc/development/adding_a_cask.md">How to Create a Cask (for Mac GUI Apps)</a></li>
<li>
<a href="https://github.com/Homebrew/brew/blob/master/docs/Formula-Cookbook.md">How to Create a Formula (Command Line Apps)</a> </li>
</ul>
</li>
<li><a href="http://docopt.org"><strong>docopt</strong> - <em>Command-line interface description language</em></a></li>
<li><a href="https://github.com/JohnSundell/Publish"><strong>JohnSundell/Publish</strong> (GitHub) - A static site generator for Swift developers</a></li>
<li><a href="https://speculid.com"><strong>Speculid</strong></a></li>
<li><a href="https://www.gimp.org"><strong>Gimp</strong></a></li>
<li><a href="https://inkscape.org"><strong>Inkscape</strong></a></li>
<li><a href="https://macdown.uranusjr.com"><strong>MacDown</strong></a></li>
<li><a href="https://ulysses.app"><strong>Ulysses</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="https://transistor.fm/?via=empowerapps"><strong>Transistor.Fm</strong></a><br><em>Your podcast's publishing platform<br></em>Transistor not only hosts your podcast but also:</p><ul>
<li>
<strong>Help distribute your podcast with integrations</strong> to Apple Podcasts, Spotify, Google Podcasts, YouTube, and Mailchimp</li>
<li>
<strong>Deep analytics</strong> including average downloads per episode, popular podcast apps, number of subscribers, trends</li>
<li>
<strong>Professional support</strong> for creatives, businesses, and professional podcasters when it comes to hosting and analytics</li>
</ul><p>Try it today with<a href="https://transistor.fm/?via=empowerapps"> this special link:</a><br><a href="https://transistor.fm/?via=empowerapps">https://transistor.fm/?via=empowerapps</a></p><p><b>SwiftArgumentParser</b></p><ul>
<li>Bringing Swifty-ness to the Command Line Parser</li>
<li>Works well with Xcode</li>
<li>How to Install Swift Package Tools</li>
</ul><p><b>Graphics Support in Xcode</b></p><ul>
<li>Why isn't SVG supported?</li>
<li>UIImage with SVG?</li>
<li>Does Android support SVG?</li>
<li>Bézier curve support</li>
</ul><p><b>Being a Mac User in 2020</b></p><ul>
<li>Catalina Support</li>
<li>Subscription Services</li>
<li>Adobe vs Apple</li>
<li>Native UI and UX on the Mac</li>
<li>Writing Books for Publishers</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com<br><a href="https://github.com/brightdigit">GitHub - @brightdigit</a></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Mon, 08 Jun 2020 10:30:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/4d6360c9/39268d46.mp3" length="14457369" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/251315/full_1591378273-artwork.jpg"/>
      <itunes:duration>1762</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Erica Sadun about the Swift Argument Parser, Graphics Support in Xcode, being a Mac user in general, and more. This is the first part of our discussion and will continue in the next episode.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Erica Sadun about the Swift Argument Parser, Graphics Support in Xcode, being a Mac user in general, and more. This is the first part of our discussion and will continue in the next episode.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>50th Episode Extravaganza</title>
      <itunes:episode>50</itunes:episode>
      <itunes:title>50th Episode Extravaganza</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">e682a7f3-3c7a-4e9e-8a9e-8e02219e5932</guid>
      <link>https://share.transistor.fm/s/a1086b72</link>
      <description>
        <![CDATA[<p><b><a href="https://youtu.be/9rxLjwqID2U">Youtube Video</a></b></p><p><a href="https://youtu.be/9rxLjwqID2U">https://youtu.be/9rxLjwqID2U</a></p><p><b>Current Interests and Products </b></p><ul>
<li><a href="https://github.com/shibapm/Komondor">Komondor</a></li>
<li><a href="https://github.com/yonaskolb/XcodeGen">XcodeGen</a></li>
<li><a href="https://github.com/shibapm/Rocket">Rocket</a></li>
<li><a href="https://github.com/brightdigit/EggSeed">EggSeed</a></li>
<li><a href="https://learningswift.brightdigit.com/swift-package-continuous-integration-guide/">Swift Package CI</a></li>
<li><a href="https://swiftpm.co">SwiftPM.co</a></li>
<li><a href="https://github.com/SwiftPackageIndex/PackageListValidator">PackageListValidator</a></li>
<li><a href="https://speculid.com">Speculid</a></li>
<li><a href="https://youtu.be/j5TA4C_VNc0">Responder Chain</a></li>
<li><a href="https://heartwitch.app/">Heartwitch</a></li>
<li><a href="https://www.youtube.com/watch?v=6YTSv-GR2Gg">Heartwitch v1.1 Update</a></li>
</ul><p><b>Big 5 Topics</b></p><ul>
<li>Career and Getting Hiring </li>
<li>Future Technology</li>
<li>Architecture, TDD, and Code Quality</li>
<li>Backends and Server-Side Swift</li>
<li>Swift UI</li>
</ul><p><b>Also...</b></p><ul>
<li>Questions and Answers</li>
<li>Future Plans</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b><a href="https://youtu.be/9rxLjwqID2U">Youtube Video</a></b></p><p><a href="https://youtu.be/9rxLjwqID2U">https://youtu.be/9rxLjwqID2U</a></p><p><b>Current Interests and Products </b></p><ul>
<li><a href="https://github.com/shibapm/Komondor">Komondor</a></li>
<li><a href="https://github.com/yonaskolb/XcodeGen">XcodeGen</a></li>
<li><a href="https://github.com/shibapm/Rocket">Rocket</a></li>
<li><a href="https://github.com/brightdigit/EggSeed">EggSeed</a></li>
<li><a href="https://learningswift.brightdigit.com/swift-package-continuous-integration-guide/">Swift Package CI</a></li>
<li><a href="https://swiftpm.co">SwiftPM.co</a></li>
<li><a href="https://github.com/SwiftPackageIndex/PackageListValidator">PackageListValidator</a></li>
<li><a href="https://speculid.com">Speculid</a></li>
<li><a href="https://youtu.be/j5TA4C_VNc0">Responder Chain</a></li>
<li><a href="https://heartwitch.app/">Heartwitch</a></li>
<li><a href="https://www.youtube.com/watch?v=6YTSv-GR2Gg">Heartwitch v1.1 Update</a></li>
</ul><p><b>Big 5 Topics</b></p><ul>
<li>Career and Getting Hiring </li>
<li>Future Technology</li>
<li>Architecture, TDD, and Code Quality</li>
<li>Backends and Server-Side Swift</li>
<li>Swift UI</li>
</ul><p><b>Also...</b></p><ul>
<li>Questions and Answers</li>
<li>Future Plans</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Tue, 02 Jun 2020 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/a1086b72/ba6ca70c.mp3" length="22911395" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/251314/full_1590978761-artwork.jpg"/>
      <itunes:duration>2799</itunes:duration>
      <itunes:summary>In the 50th episode, Leo covers what he's been working on and interested in, answers a question from the audience, talks the audience favorite big topics, and then talks about the future of the podcast.</itunes:summary>
      <itunes:subtitle>In the 50th episode, Leo covers what he's been working on and interested in, answers a question from the audience, talks the audience favorite big topics, and then talks about the future of the podcast.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Vapor 4 with Tibor Bödecs</title>
      <itunes:episode>49</itunes:episode>
      <itunes:title>Vapor 4 with Tibor Bödecs</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">f6c74508-9431-40ff-be9e-7a13c8b667c7</guid>
      <link>https://share.transistor.fm/s/17f05dbf</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://t.co/w9s0Xj5sKK?amp=1"><strong>Tibor Bödecs</strong> (website)</a><ul>
<li><a href="https://theswiftdev.com"><strong>The Swift Dev Blog - theswiftdev.com</strong></a></li>
<li><a href="https://twitter.com/tiborbodecs">Twitter @tiborbodecs</a></li>
<li><a href="https://gumroad.com/l/practical-server-side-swift/5uwzmqq"><strong>Practical Server-Side Swift</strong></a></li>
</ul>
</li></ul><p><b><a href="https://brightdigit.typeform.com/to/FwbXt4">Take The Survey! 🙏</a></b></p><p><a href="https://brightdigit.typeform.com/to/FwbXt4">https://brightdigit.typeform.com/to/FwbXt4</a></p><p><strong>50th Episode - Q&amp;A - submit your questions to me @leogdion with hashtag #empowerapps</strong></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/ffcb9fc1"><strong>Episode 8: Cloud and Backend Services For Apps</strong></a></li>
<li><a href="https://share.transistor.fm/s/bf0516f2"><strong>Episode 34: Server-Side Swift with Tim Condon</strong></a></li>
<li><a href="https://share.transistor.fm/s/fca974ca"><strong>Episode 48: Alternative Backends with Kristaps Grinbergs</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://vapor.codes">Vapor.Codes</a></li>
<li><a href="https://docs.vapor.codes/4.0/">Vapor 4 Docs</a></li>
<li><a href="https://discord.gg/vapor">Vapor Discord</a></li>
<li>
<a href="https://heartwitch.app/">Heartwitch - Uses Vapor WebSockets</a> </li>
<li><a href="https://developer.apple.com/wwdc20/"><strong>WWDC 2020 is happening!</strong></a></li>
<li><a href="https://github.com/apple/swift-argument-parser">Swift ArgumentParser</a></li>
<li><a href="https://theswiftdev.com/whats-new-in-vapor-4/">Tibor Bödecs - What's New in Vapor 4?</a></li>
<li><a href="https://theswiftdev.com/whats-new-in-swift-5-3/">Tibor Bödecs - What’s new in Swift 5.3?</a></li>
<li><a href="https://www.timc.dev/posts/future-of-server-side-swift/">Tim Condon - The Future of Swift on the Server</a></li>
<li><a href="https://swift.org/blog/5-3-release-process/">Swift 5.3 Release Process and OS Support</a></li>
<li><a href="https://learningswift.brightdigit.com/vapor-heroku-ubuntu-setup-deploy/">Leo's setup article for Vapor 3</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="http://www.audibletrial.com/EmpowerApps"><strong>Audible</strong></a><strong><br></strong>Audible is the leading provider of spoken-word entertainment and audiobooks, ranging from best sellers, to celebrity memoirs, news, business, and self-development. Every month, members get one (1) credit to pick any title, plus two (2) Audible Originals from a monthly selection, and access to daily news digests (from <em>The New York Times, The Wall Street Journal, and The Washington Post</em>), as well as guided meditation programs.</p><p><em>My recommendation</em><br><strong>Talking to Strangers - What We Should Know About the People We Don't Know</strong></p><p>Written and Narrated by: <strong>Malcolm Gladwell</strong></p><p><br>Try it out today and 2 free audiobooks:<br><a href="http://www.audibletrial.com/EmpowerApps">http://www.audibletrial.com/EmpowerApps</a></p><p><b>WWDC 2020?</b></p><ul>
<li>What are you most excited about?</li>
<li>Will there be new hardware or IDE?</li>
</ul><p><b>Vapor 4 Changes</b></p><ul>
<li>Updates to the Command API</li>
<li>New Service Layer</li>
<li>Updates with HTTP 2 with SwiftNIO 2</li>
<li>How SwiftNIO2 does Futures and Promises</li>
<li>Using PropertyWrappers with Fluent ORM</li>
<li>Making Swift Package Manager work with you</li>
</ul><p><b>Getting Started with Vapor</b></p><ul>
<li>Requires Linux or macOS with Swift 5.2</li>
<li>Recent Support for Ubuntu 20, Amazon Linux, CentOS</li>
<li>Using Vapor Toolbox vs just SPM</li>
<li>Unit Testing with Separate Package </li>
<li>Structure of the App</li>
<li>Getting Your Database Models Setup</li>
<li>Using Push Notifications on Vapor and Sign-In With Apple</li>
<li>Why Should You Consider Vapor?</li>
<li>Where to Host Your App?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://t.co/w9s0Xj5sKK?amp=1"><strong>Tibor Bödecs</strong> (website)</a><ul>
<li><a href="https://theswiftdev.com"><strong>The Swift Dev Blog - theswiftdev.com</strong></a></li>
<li><a href="https://twitter.com/tiborbodecs">Twitter @tiborbodecs</a></li>
<li><a href="https://gumroad.com/l/practical-server-side-swift/5uwzmqq"><strong>Practical Server-Side Swift</strong></a></li>
</ul>
</li></ul><p><b><a href="https://brightdigit.typeform.com/to/FwbXt4">Take The Survey! 🙏</a></b></p><p><a href="https://brightdigit.typeform.com/to/FwbXt4">https://brightdigit.typeform.com/to/FwbXt4</a></p><p><strong>50th Episode - Q&amp;A - submit your questions to me @leogdion with hashtag #empowerapps</strong></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/ffcb9fc1"><strong>Episode 8: Cloud and Backend Services For Apps</strong></a></li>
<li><a href="https://share.transistor.fm/s/bf0516f2"><strong>Episode 34: Server-Side Swift with Tim Condon</strong></a></li>
<li><a href="https://share.transistor.fm/s/fca974ca"><strong>Episode 48: Alternative Backends with Kristaps Grinbergs</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://vapor.codes">Vapor.Codes</a></li>
<li><a href="https://docs.vapor.codes/4.0/">Vapor 4 Docs</a></li>
<li><a href="https://discord.gg/vapor">Vapor Discord</a></li>
<li>
<a href="https://heartwitch.app/">Heartwitch - Uses Vapor WebSockets</a> </li>
<li><a href="https://developer.apple.com/wwdc20/"><strong>WWDC 2020 is happening!</strong></a></li>
<li><a href="https://github.com/apple/swift-argument-parser">Swift ArgumentParser</a></li>
<li><a href="https://theswiftdev.com/whats-new-in-vapor-4/">Tibor Bödecs - What's New in Vapor 4?</a></li>
<li><a href="https://theswiftdev.com/whats-new-in-swift-5-3/">Tibor Bödecs - What’s new in Swift 5.3?</a></li>
<li><a href="https://www.timc.dev/posts/future-of-server-side-swift/">Tim Condon - The Future of Swift on the Server</a></li>
<li><a href="https://swift.org/blog/5-3-release-process/">Swift 5.3 Release Process and OS Support</a></li>
<li><a href="https://learningswift.brightdigit.com/vapor-heroku-ubuntu-setup-deploy/">Leo's setup article for Vapor 3</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><a href="http://www.audibletrial.com/EmpowerApps"><strong>Audible</strong></a><strong><br></strong>Audible is the leading provider of spoken-word entertainment and audiobooks, ranging from best sellers, to celebrity memoirs, news, business, and self-development. Every month, members get one (1) credit to pick any title, plus two (2) Audible Originals from a monthly selection, and access to daily news digests (from <em>The New York Times, The Wall Street Journal, and The Washington Post</em>), as well as guided meditation programs.</p><p><em>My recommendation</em><br><strong>Talking to Strangers - What We Should Know About the People We Don't Know</strong></p><p>Written and Narrated by: <strong>Malcolm Gladwell</strong></p><p><br>Try it out today and 2 free audiobooks:<br><a href="http://www.audibletrial.com/EmpowerApps">http://www.audibletrial.com/EmpowerApps</a></p><p><b>WWDC 2020?</b></p><ul>
<li>What are you most excited about?</li>
<li>Will there be new hardware or IDE?</li>
</ul><p><b>Vapor 4 Changes</b></p><ul>
<li>Updates to the Command API</li>
<li>New Service Layer</li>
<li>Updates with HTTP 2 with SwiftNIO 2</li>
<li>How SwiftNIO2 does Futures and Promises</li>
<li>Using PropertyWrappers with Fluent ORM</li>
<li>Making Swift Package Manager work with you</li>
</ul><p><b>Getting Started with Vapor</b></p><ul>
<li>Requires Linux or macOS with Swift 5.2</li>
<li>Recent Support for Ubuntu 20, Amazon Linux, CentOS</li>
<li>Using Vapor Toolbox vs just SPM</li>
<li>Unit Testing with Separate Package </li>
<li>Structure of the App</li>
<li>Getting Your Database Models Setup</li>
<li>Using Push Notifications on Vapor and Sign-In With Apple</li>
<li>Why Should You Consider Vapor?</li>
<li>Where to Host Your App?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Wed, 20 May 2020 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/17f05dbf/9ec21c2f.mp3" length="24088327" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/251313/full_1589892290-artwork.jpg"/>
      <itunes:duration>2956</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Tibor Bödecs about Vapor 4 and his new book Practical Server-Side Swift. We talk about why someone may choose Vapor and the updates made in Vapor 4 from the Database Models and OS Support.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Tibor Bödecs about Vapor 4 and his new book Practical Server-Side Swift. We talk about why someone may choose Vapor and the updates made in Vapor 4 from the Database Models and OS Support.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Alternative Backends with Kristaps Grinbergs</title>
      <itunes:episode>48</itunes:episode>
      <itunes:title>Alternative Backends with Kristaps Grinbergs</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">fe69988f-ae13-477e-92a1-c83cb69c7b3e</guid>
      <link>https://share.transistor.fm/s/fca974ca</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://kristaps.me/"><strong>Kristaps Grinbergs</strong> (website)</a><ul>
<li><a href="https://twitter.com/fassko">Twitter @fassko </a></li>
<li><a href="https://swiftwebsockets.com/">Swift WebSockets</a></li>
<li><a href="https://swiftweekly.github.io">Swift Weekly Brief</a></li>
</ul>
</li></ul><p><b><a href="https://brightdigit.typeform.com/to/FwbXt4">Take The Survey! 🙏</a></b></p><p><a href="https://brightdigit.typeform.com/to/FwbXt4">https://brightdigit.typeform.com/to/FwbXt4</a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/ffcb9fc1"><strong>Episode 8: Cloud and Backend Services For Apps</strong></a></li>
<li><a href="https://share.transistor.fm/s/bf0516f2"><strong>Episode 34: Server-Side Swift with Tim Condon</strong></a></li>
<li><a href="https://share.transistor.fm/s/8442feb7"><strong>Episode 47: Practical Combine with Donny Wals</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li>
<a href="https://uikonf.com">UIKonf - 18-19 MAY 2020 · ONLINE</a><ul>
<li><a href="https://cfp.uikonf.com/proposals/132">The Multi-Threaded Asynchronous Parallel World of Swift - Leo Dion</a></li>
<li><a href="https://cfp.uikonf.com/proposals/34">We need to talk about Websockets - Kristaps Grinbergs </a></li>
</ul>
</li>
<li><a href="https://heartwitch.app">Heartwitch - Uses Vapor WebSockets</a></li>
<li><a href="https://www.apollographql.com">Apollo Data Graph Platform</a></li>
<li>Server-Side Frameworks<ul>
<li><a href="https://github.com/GraphQLSwift/Graphiti">Graphiti - Swift GraphQL Schema/Type framework </a></li>
<li><a href="https://graphql.org/code/#server-libraries">Other Server Libraries</a></li>
</ul>
</li>
<li>Client-Side Frameworks<ul>
<li><a href="https://twitter.com/apollographql/status/1257762047917465600%20">Introduction to Apollo iOS Client</a></li>
<li><a href="https://github.com/apollographql/apollo-ios">Apollo iOS Client Library</a></li>
<li><a href="https://graphql.org/code/#graphql-clients%20">Other Client Libraries</a></li>
</ul>
</li>
<li>WebSockets<ul>
<li><a href="https://docs.vapor.codes/3.0/websocket/getting-started/">Vapor WebSockets</a></li>
<li><a href="https://github.com/daltoniam/Starscream">StarScream</a></li>
</ul>
</li>
<li><a href="https://developer.apple.com/wwdc20/"><strong>WWDC 2020 is happening!</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><b>Why GraphQL?</b></p><ul>
<li>Greater Flexibility</li>
<li>Less Data Usage</li>
<li>REST API is more strict but easy to implement</li>
<li>Big Learning Curve with GraphQL</li>
<li>Fewer Requests Needed with GraphQL</li>
<li>Challenges with accessing in Swift</li>
<li>How Apollo Works</li>
<li>Starting with both REST API and GraphQL</li>
<li>Using Subscriptions WebSockets with GraphQL for Syncing</li>
</ul><p><b>WebSockets</b></p><ul>
<li>Perfect for Gaming, Chat, and Financial Applications</li>
<li>Why Long Polling Might Be Better</li>
<li>How to keep a URL Session open</li>
<li>How to stay organized with WebSockets</li>
<li>How to support and test WebSockets?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://kristaps.me/"><strong>Kristaps Grinbergs</strong> (website)</a><ul>
<li><a href="https://twitter.com/fassko">Twitter @fassko </a></li>
<li><a href="https://swiftwebsockets.com/">Swift WebSockets</a></li>
<li><a href="https://swiftweekly.github.io">Swift Weekly Brief</a></li>
</ul>
</li></ul><p><b><a href="https://brightdigit.typeform.com/to/FwbXt4">Take The Survey! 🙏</a></b></p><p><a href="https://brightdigit.typeform.com/to/FwbXt4">https://brightdigit.typeform.com/to/FwbXt4</a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/ffcb9fc1"><strong>Episode 8: Cloud and Backend Services For Apps</strong></a></li>
<li><a href="https://share.transistor.fm/s/bf0516f2"><strong>Episode 34: Server-Side Swift with Tim Condon</strong></a></li>
<li><a href="https://share.transistor.fm/s/8442feb7"><strong>Episode 47: Practical Combine with Donny Wals</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li>
<a href="https://uikonf.com">UIKonf - 18-19 MAY 2020 · ONLINE</a><ul>
<li><a href="https://cfp.uikonf.com/proposals/132">The Multi-Threaded Asynchronous Parallel World of Swift - Leo Dion</a></li>
<li><a href="https://cfp.uikonf.com/proposals/34">We need to talk about Websockets - Kristaps Grinbergs </a></li>
</ul>
</li>
<li><a href="https://heartwitch.app">Heartwitch - Uses Vapor WebSockets</a></li>
<li><a href="https://www.apollographql.com">Apollo Data Graph Platform</a></li>
<li>Server-Side Frameworks<ul>
<li><a href="https://github.com/GraphQLSwift/Graphiti">Graphiti - Swift GraphQL Schema/Type framework </a></li>
<li><a href="https://graphql.org/code/#server-libraries">Other Server Libraries</a></li>
</ul>
</li>
<li>Client-Side Frameworks<ul>
<li><a href="https://twitter.com/apollographql/status/1257762047917465600%20">Introduction to Apollo iOS Client</a></li>
<li><a href="https://github.com/apollographql/apollo-ios">Apollo iOS Client Library</a></li>
<li><a href="https://graphql.org/code/#graphql-clients%20">Other Client Libraries</a></li>
</ul>
</li>
<li>WebSockets<ul>
<li><a href="https://docs.vapor.codes/3.0/websocket/getting-started/">Vapor WebSockets</a></li>
<li><a href="https://github.com/daltoniam/Starscream">StarScream</a></li>
</ul>
</li>
<li><a href="https://developer.apple.com/wwdc20/"><strong>WWDC 2020 is happening!</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030"><strong>AppFigures</strong></a><strong><br></strong><em>The tools you need to monitor, optimize, and get more downloads.</em><strong></strong></p><p>There's a lot of demand for apps right now, so it's a really great time to give it a try. It's easier than you think.<br>The guys who run it are indie devs who had a need and created a tool. 11 years later, it's an all-in-one platform for developers who want to get more downloads and make more money with their apps.</p><p>The folks at Appfigures have <a href="https://appfigures.com/resources/aso">easy step-by-step guides and intuitive tools to do that</a>, which many indie developers are using to get more downloads:<br><a href="https://appfigures.com/resources/aso">https://appfigures.com/resources/aso</a></p><p>Also check out <a href="https://share.transistor.fm/s/15b7ff63">our episode with CEO Ariel Michaeli:<br>https://share.transistor.fm/s/15b7ff63</a></p><p><a href="https://appfigures.com/account/upgrade?p=empower3030">Try Appfigures for free, and if you like it use the special link to get 30% off for the next 3 months:</a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><br></a><a href="https://appfigures.com/account/upgrade?p=empower3030">https://appfigures.com/account/upgrade?p=empower3030</a></p><p><b>Why GraphQL?</b></p><ul>
<li>Greater Flexibility</li>
<li>Less Data Usage</li>
<li>REST API is more strict but easy to implement</li>
<li>Big Learning Curve with GraphQL</li>
<li>Fewer Requests Needed with GraphQL</li>
<li>Challenges with accessing in Swift</li>
<li>How Apollo Works</li>
<li>Starting with both REST API and GraphQL</li>
<li>Using Subscriptions WebSockets with GraphQL for Syncing</li>
</ul><p><b>WebSockets</b></p><ul>
<li>Perfect for Gaming, Chat, and Financial Applications</li>
<li>Why Long Polling Might Be Better</li>
<li>How to keep a URL Session open</li>
<li>How to stay organized with WebSockets</li>
<li>How to support and test WebSockets?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Thu, 07 May 2020 23:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/fca974ca/efd4ebea.mp3" length="24308439" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/251311/full_1588909876-artwork.jpg"/>
      <itunes:duration>2976</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Kristaps Grinbergs about alternative backends like GraphQL and WebSockets as well as their upcoming talks at UIKonf.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Kristaps Grinbergs about alternative backends like GraphQL and WebSockets as well as their upcoming talks at UIKonf.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Practical Combine with Donny Wals</title>
      <itunes:episode>47</itunes:episode>
      <itunes:title>Practical Combine with Donny Wals</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">b7f49cdf-e540-4c37-8838-2dde838a78d1</guid>
      <link>https://share.transistor.fm/s/8442feb7</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://www.donnywals.com"><strong>Donny Wals - donnywals.com</strong></a><ul>
<li><a href="https://twitter.com/DonnyWals">Twitter <strong>@donnywals</strong></a></li>
<li>
<a href="https://gumroad.com/l/practical-combine/pclaunch2020"><strong>Practical Combine </strong></a><strong>(25% Off Link!!!) - </strong>An introduction to Combine with real examples</li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/71500d55"><strong>Episode 33: 2020 Developer Wish List with Alex Bush</strong></a></li>
<li><a href="https://share.transistor.fm/s/03051561"><strong>Episode 19: WWDC 2019 - Swift UI with Jason Anderson</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.donnywals.com/category/combine/"><strong>Donny's Posts on Combine</strong></a></li>
<li><a href="https://heckj.github.io/swiftui-notes/"><strong>Using Combine</strong> by Joseph Heck</a></li>
<li><a href="http://timelane.tools"><strong>Timelane</strong> by Marin Todorov</a></li>
<li>
<a href="https://github.com/CombineCommunity/CombineCocoa"><strong>CombineCocoa</strong></a><strong> </strong>- helpers for UIKit</li>
<li>
<a href="https://github.com/CombineCommunity/rxswift-to-combine-cheatsheet"><strong>rxswift-to-combine-cheatsheet</strong></a> - cheatsheet for Reactive API Patterns</li>
<li>
<a href="https://www.donnywals.com/removing-duplicate-values-from-an-array-in-swift/"><strong>Removing duplicate values from an array in Swift</strong></a> by Donny Wals</li>
<li>
<a href="https://learningswift.brightdigit.com/asynchronous-multi-threaded-parallel-world-of-swift/"><strong>Asynchronous Multi-Threaded Parallel World of Swift</strong></a><strong> </strong>by Leo Dion</li>
<li><a href="https://stackoverflow.com/questions/57980476/how-to-prevent-strong-reference-cycles-when-using-apples-new-combine-framework"><strong>Preventing strong reference cycles</strong> - using <em>assign </em>with <em>self</em></a></li>
<li>
<a href="https://heartwitch.app"><strong>Heartwitch for the Apple Watch</strong></a><strong> </strong>(uses Combine, SwiftUI, and Vapor)</li>
<li>
<a href="http://reactivex.io"><strong>ReactiveX</strong> - An API for asynchronous programming with observable streams</a><ul><li><a href="https://github.com/ReactiveX/RxSwift"><strong>RxSwift</strong> - Swift ReactiveX implementation</a></li></ul>
</li>
<li>Promise Libraries<ul>
<li><a href="https://github.com/mxcl/PromiseKit"><strong>PromiseKit</strong></a></li>
<li><a href="https://github.com/apple/swift-nio"><strong>SwiftNIO</strong></a></li>
<li><a href="https://github.com/google/promises"><strong>Google Promises</strong></a></li>
</ul>
</li>
<li>Open source implementations of Apple's Combine framework<ul>
<li><a href="https://github.com/broadwaylamb/OpenCombine"><strong>OpenCombine</strong></a></li>
<li><a href="https://github.com/cx-org/CombineX"><strong>CombineX</strong></a></li>
</ul>
</li>
</ul><p><b>Sponsors</b></p><p><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><strong>Linode</strong></a><br><em>A cloud experience developers love</em></p><ul>
<li>Great for Setting Up a Backend for Your App</li>
<li>Variety of VM Configurations and Settings</li>
<li>Reasonable Pricing Starting at $5 per month</li>
<li>Global Data Centers</li>
<li><strong>The Developer Cloud Simplified</strong></li>
</ul><p>Try it today with<a href="https://transistor.fm/?via=empowerapps"> </a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7">this special link:<br>https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7</a></p><p><b>Disney Streaming Services</b></p><ul>
<li>How the service has been affected by the pandemic</li>
<li>Expansion to other regions</li>
<li>How Donny uses Swift at Work</li>
<li>Apps that DSS support</li>
<li>Working from Home regularly and now</li>
</ul><p><b>Practical Combine</b></p><ul>
<li>What is Functional Reactive Programming?</li>
<li>What is a Publisher and it's relationship with time</li>
<li>How Publishers can simplify data tasks and JSON decoding</li>
<li>The advantages of functional programming</li>
<li>Why it's important to keep track of <em>Cancellables</em>?</li>
<li>How to store and remove <em>Cancellables</em> in your ObservedObject</li>
<li>Differences between Threads and Schedulers</li>
<li>Why Type-Erasure is important in Combine</li>
</ul><p><b>Lifecycle of a Stream</b></p><ul>
<li>Sink vs. Assign</li>
<li>Differences between Combine and other Reactive Programming</li>
<li>Differences between Combine and MVC</li>
<li>Differences between Combine and Promises</li>
<li>Builtin Publishers with Notifications, Timers, and Data Tasks</li>
<li>How to work with Delegates and Callbacks</li>
<li>When to use @Published vs PassthroughSubject vs CurrentSubject</li>
<li>How easy is it to use Combine with UIKit</li>
<li>How do you build your own Publisher and Subscriber</li>
</ul><p><b>Projects and Combine</b></p><ul>
<li>How does Combine fit with current or future projects</li>
<li>Where would Combine not be a good fit</li>
<li>Is Combine production ready for new apps</li>
<li>How to do Unit Testing with Combine</li>
<li>How to debug with Combine</li>
<li>Are there alternatives for older OSes or Linux?</li>
</ul><p><b>Writing Practical Combine</b></p><ul>
<li>How Donny got started</li>
<li>How he tested the idea</li>
<li>What questions he asked when getting started</li>
<li>Using questions to organize content</li>
<li>How he got outsiders to edit and beta test the book</li>
<li>What topic is Donny is interested in next?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://www.donnywals.com"><strong>Donny Wals - donnywals.com</strong></a><ul>
<li><a href="https://twitter.com/DonnyWals">Twitter <strong>@donnywals</strong></a></li>
<li>
<a href="https://gumroad.com/l/practical-combine/pclaunch2020"><strong>Practical Combine </strong></a><strong>(25% Off Link!!!) - </strong>An introduction to Combine with real examples</li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/71500d55"><strong>Episode 33: 2020 Developer Wish List with Alex Bush</strong></a></li>
<li><a href="https://share.transistor.fm/s/03051561"><strong>Episode 19: WWDC 2019 - Swift UI with Jason Anderson</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.donnywals.com/category/combine/"><strong>Donny's Posts on Combine</strong></a></li>
<li><a href="https://heckj.github.io/swiftui-notes/"><strong>Using Combine</strong> by Joseph Heck</a></li>
<li><a href="http://timelane.tools"><strong>Timelane</strong> by Marin Todorov</a></li>
<li>
<a href="https://github.com/CombineCommunity/CombineCocoa"><strong>CombineCocoa</strong></a><strong> </strong>- helpers for UIKit</li>
<li>
<a href="https://github.com/CombineCommunity/rxswift-to-combine-cheatsheet"><strong>rxswift-to-combine-cheatsheet</strong></a> - cheatsheet for Reactive API Patterns</li>
<li>
<a href="https://www.donnywals.com/removing-duplicate-values-from-an-array-in-swift/"><strong>Removing duplicate values from an array in Swift</strong></a> by Donny Wals</li>
<li>
<a href="https://learningswift.brightdigit.com/asynchronous-multi-threaded-parallel-world-of-swift/"><strong>Asynchronous Multi-Threaded Parallel World of Swift</strong></a><strong> </strong>by Leo Dion</li>
<li><a href="https://stackoverflow.com/questions/57980476/how-to-prevent-strong-reference-cycles-when-using-apples-new-combine-framework"><strong>Preventing strong reference cycles</strong> - using <em>assign </em>with <em>self</em></a></li>
<li>
<a href="https://heartwitch.app"><strong>Heartwitch for the Apple Watch</strong></a><strong> </strong>(uses Combine, SwiftUI, and Vapor)</li>
<li>
<a href="http://reactivex.io"><strong>ReactiveX</strong> - An API for asynchronous programming with observable streams</a><ul><li><a href="https://github.com/ReactiveX/RxSwift"><strong>RxSwift</strong> - Swift ReactiveX implementation</a></li></ul>
</li>
<li>Promise Libraries<ul>
<li><a href="https://github.com/mxcl/PromiseKit"><strong>PromiseKit</strong></a></li>
<li><a href="https://github.com/apple/swift-nio"><strong>SwiftNIO</strong></a></li>
<li><a href="https://github.com/google/promises"><strong>Google Promises</strong></a></li>
</ul>
</li>
<li>Open source implementations of Apple's Combine framework<ul>
<li><a href="https://github.com/broadwaylamb/OpenCombine"><strong>OpenCombine</strong></a></li>
<li><a href="https://github.com/cx-org/CombineX"><strong>CombineX</strong></a></li>
</ul>
</li>
</ul><p><b>Sponsors</b></p><p><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7"><strong>Linode</strong></a><br><em>A cloud experience developers love</em></p><ul>
<li>Great for Setting Up a Backend for Your App</li>
<li>Variety of VM Configurations and Settings</li>
<li>Reasonable Pricing Starting at $5 per month</li>
<li>Global Data Centers</li>
<li><strong>The Developer Cloud Simplified</strong></li>
</ul><p>Try it today with<a href="https://transistor.fm/?via=empowerapps"> </a><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7">this special link:<br>https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7</a></p><p><b>Disney Streaming Services</b></p><ul>
<li>How the service has been affected by the pandemic</li>
<li>Expansion to other regions</li>
<li>How Donny uses Swift at Work</li>
<li>Apps that DSS support</li>
<li>Working from Home regularly and now</li>
</ul><p><b>Practical Combine</b></p><ul>
<li>What is Functional Reactive Programming?</li>
<li>What is a Publisher and it's relationship with time</li>
<li>How Publishers can simplify data tasks and JSON decoding</li>
<li>The advantages of functional programming</li>
<li>Why it's important to keep track of <em>Cancellables</em>?</li>
<li>How to store and remove <em>Cancellables</em> in your ObservedObject</li>
<li>Differences between Threads and Schedulers</li>
<li>Why Type-Erasure is important in Combine</li>
</ul><p><b>Lifecycle of a Stream</b></p><ul>
<li>Sink vs. Assign</li>
<li>Differences between Combine and other Reactive Programming</li>
<li>Differences between Combine and MVC</li>
<li>Differences between Combine and Promises</li>
<li>Builtin Publishers with Notifications, Timers, and Data Tasks</li>
<li>How to work with Delegates and Callbacks</li>
<li>When to use @Published vs PassthroughSubject vs CurrentSubject</li>
<li>How easy is it to use Combine with UIKit</li>
<li>How do you build your own Publisher and Subscriber</li>
</ul><p><b>Projects and Combine</b></p><ul>
<li>How does Combine fit with current or future projects</li>
<li>Where would Combine not be a good fit</li>
<li>Is Combine production ready for new apps</li>
<li>How to do Unit Testing with Combine</li>
<li>How to debug with Combine</li>
<li>Are there alternatives for older OSes or Linux?</li>
</ul><p><b>Writing Practical Combine</b></p><ul>
<li>How Donny got started</li>
<li>How he tested the idea</li>
<li>What questions he asked when getting started</li>
<li>Using questions to organize content</li>
<li>How he got outsiders to edit and beta test the book</li>
<li>What topic is Donny is interested in next?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Mon, 27 Apr 2020 13:40:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/8442feb7/cfea8ee9.mp3" length="40344436" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/231716/full_1588005285-artwork.jpg"/>
      <itunes:duration>5011</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Donny Wals about his new book Practical Combine and how Combine fits with older apps as well as his work at Disney and his process for writing his book.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Donny Wals about his new book Practical Combine and how Combine fits with older apps as well as his work at Disney and his process for writing his book.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Developer Community (Part 2) with Dave Verwer</title>
      <itunes:episode>46</itunes:episode>
      <itunes:title>Developer Community (Part 2) with Dave Verwer</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">b5bfbf90-6b19-4c75-9405-22af5aafce48</guid>
      <link>https://share.transistor.fm/s/e38854fe</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://daveverwer.com/"><strong>Dave Verwer - daveverwer.com</strong></a><ul>
<li><a href="https://twitter.com/daveverwer/">Twitter @daveverwer</a></li>
<li>
<a href="https://iosdevweekly.com/">iOS Dev Weekly</a> - <a href="https://twitter.com/iOSDevWeekly">Twitter @iOSDevWeekly</a>
</li>
<li><a href="https://iosdevsurvey.com/">iOS Developer Community Survey</a></li>
<li>
<a href="https://swiftpm.co/">SwiftPM Library</a> - <a href="https://twitter.com/SwiftPMLibrary">Twitter @SwiftPMLibrary </a>
</li>
<li>
<a href="https://iosdevjobs.com/">iOS Dev Jobs</a> - <a href="https://twitter.com/iosdevjobshq">Twitter @iOSDevJobsHQ</a>
</li>
<li><a href="https://iosdevdirectory.com/">iOS Dev Directory</a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/29d6ee9b"><strong>Episode 31: Future Proofing Your Apps with Gui Rambo</strong></a></li>
<li><a href="https://share.transistor.fm/s/52ef1db7"><strong>Episode 37: Machine Learning with Kevin Scott</strong></a></li>
<li><a href="https://share.transistor.fm/s/4eba2003"><strong>Episode 42: Patterns and Practices for Scalable Apps</strong></a></li>
<li><a href="https://share.transistor.fm/s/46b2f52d"><strong>Episode 45: Developer Community (Part 1) with Dave Verwer</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://youtu.be/j5TA4C_VNc0"><strong>My Appearance on Responder Chain with Lucas Derraugh</strong></a></li>
<li>
<a href="https://iosdevdirectory.com/">iOS Dev Directory</a> Projects<ul>
<li>
<a href="https://theswiftdev.com/news/"><strong>Swift News</strong></a><strong> by </strong><a href="https://twitter.com/tiborbodecs"><strong>Tibor Bödecs</strong></a>
</li>
<li>
<a href="https://iosdevblogs.com"><strong>iOS Dev Blogs</strong></a><strong> by </strong><a href="https://twitter.com/ay8s"><strong>Andrew Yates</strong></a>
</li>
</ul>
</li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><b>Swift Packages</b></p><ul>
<li>What's the future of Swift Packages</li>
<li>Cocoapods vs Carthage vs Packages vs Submodules</li>
<li>Limitations of Swift Packages</li>
</ul><p><b><a href="https://SwiftPM.co">SwiftPM Library</a></b></p><ul>
<li>How <a href="https://swiftpm.co">SwiftPM.co</a> began?</li>
<li>What does it provide to the community?</li>
<li>Issues with older packages</li>
<li>Issues with other dependency management systems (NPM, RubyGems, etc...)</li>
</ul><p><b>Open Source Data</b></p><ul>
<li>How to use pull-requests for contributing information?</li>
<li>How <a href="https://iosdevdirectory.com/">iOS Dev Directory</a> works</li>
<li>How it helps prevent spam </li>
<li>Allowing for others to build on top of</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://daveverwer.com/"><strong>Dave Verwer - daveverwer.com</strong></a><ul>
<li><a href="https://twitter.com/daveverwer/">Twitter @daveverwer</a></li>
<li>
<a href="https://iosdevweekly.com/">iOS Dev Weekly</a> - <a href="https://twitter.com/iOSDevWeekly">Twitter @iOSDevWeekly</a>
</li>
<li><a href="https://iosdevsurvey.com/">iOS Developer Community Survey</a></li>
<li>
<a href="https://swiftpm.co/">SwiftPM Library</a> - <a href="https://twitter.com/SwiftPMLibrary">Twitter @SwiftPMLibrary </a>
</li>
<li>
<a href="https://iosdevjobs.com/">iOS Dev Jobs</a> - <a href="https://twitter.com/iosdevjobshq">Twitter @iOSDevJobsHQ</a>
</li>
<li><a href="https://iosdevdirectory.com/">iOS Dev Directory</a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/29d6ee9b"><strong>Episode 31: Future Proofing Your Apps with Gui Rambo</strong></a></li>
<li><a href="https://share.transistor.fm/s/52ef1db7"><strong>Episode 37: Machine Learning with Kevin Scott</strong></a></li>
<li><a href="https://share.transistor.fm/s/4eba2003"><strong>Episode 42: Patterns and Practices for Scalable Apps</strong></a></li>
<li><a href="https://share.transistor.fm/s/46b2f52d"><strong>Episode 45: Developer Community (Part 1) with Dave Verwer</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://youtu.be/j5TA4C_VNc0"><strong>My Appearance on Responder Chain with Lucas Derraugh</strong></a></li>
<li>
<a href="https://iosdevdirectory.com/">iOS Dev Directory</a> Projects<ul>
<li>
<a href="https://theswiftdev.com/news/"><strong>Swift News</strong></a><strong> by </strong><a href="https://twitter.com/tiborbodecs"><strong>Tibor Bödecs</strong></a>
</li>
<li>
<a href="https://iosdevblogs.com"><strong>iOS Dev Blogs</strong></a><strong> by </strong><a href="https://twitter.com/ay8s"><strong>Andrew Yates</strong></a>
</li>
</ul>
</li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><b>Swift Packages</b></p><ul>
<li>What's the future of Swift Packages</li>
<li>Cocoapods vs Carthage vs Packages vs Submodules</li>
<li>Limitations of Swift Packages</li>
</ul><p><b><a href="https://SwiftPM.co">SwiftPM Library</a></b></p><ul>
<li>How <a href="https://swiftpm.co">SwiftPM.co</a> began?</li>
<li>What does it provide to the community?</li>
<li>Issues with older packages</li>
<li>Issues with other dependency management systems (NPM, RubyGems, etc...)</li>
</ul><p><b>Open Source Data</b></p><ul>
<li>How to use pull-requests for contributing information?</li>
<li>How <a href="https://iosdevdirectory.com/">iOS Dev Directory</a> works</li>
<li>How it helps prevent spam </li>
<li>Allowing for others to build on top of</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Tue, 21 Apr 2020 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/e38854fe/69358b5d.mp3" length="17420056" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/238174/full_1587155756-artwork.jpg"/>
      <itunes:duration>2140</itunes:duration>
      <itunes:summary>In this second part episode with Dave Verwer, Leo talks with Dave about Swift Packages, SwiftPM Library (swiftpm.co), and how Dave uses open-source data and pull request for contributing. In the previous episode, we talked about the iOS Developer Survey and iOS Developer Community overall.</itunes:summary>
      <itunes:subtitle>In this second part episode with Dave Verwer, Leo talks with Dave about Swift Packages, SwiftPM Library (swiftpm.co), and how Dave uses open-source data and pull request for contributing. In the previous episode, we talked about the iOS Developer Survey a</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Developer Community (Part 1) with Dave Verwer</title>
      <itunes:episode>45</itunes:episode>
      <itunes:title>Developer Community (Part 1) with Dave Verwer</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">bb8d7ce6-f960-4264-a27d-2a083c0ceae9</guid>
      <link>https://share.transistor.fm/s/46b2f52d</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://daveverwer.com"><strong>Dave Verwer - daveverwer.com</strong></a><ul>
<li><a href="https://twitter.com/daveverwer/">Twitter @daveverwer</a></li>
<li>
<a href="https://iosdevweekly.com/">iOS Dev Weekly</a> - <a href="https://twitter.com/iOSDevWeekly">Twitter @iOSDevWeekly</a>
</li>
<li><a href="https://iosdevsurvey.com/">iOS Developer Community Survey</a></li>
<li>
<a href="https://swiftpm.co">SwiftPM Library</a> - <a href="https://twitter.com/SwiftPMLibrary">Twitter @SwiftPMLibrary </a>
</li>
<li>
<a href="https://iosdevjobs.com">iOS Dev Jobs</a> - <a href="https://twitter.com/iosdevjobshq">Twitter @iOSDevJobsHQ</a>
</li>
<li><a href="https://iosdevdirectory.com">iOS Dev Directory</a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/29d6ee9b"><strong>Episode 31: Future Proofing Your Apps with Gui Rambo</strong></a></li>
<li><a href="https://share.transistor.fm/s/52ef1db7"><strong>Episode 37: Machine Learning with Kevin Scott</strong></a></li>
<li><a href="https://share.transistor.fm/s/4eba2003"><strong>Episode 42: Patterns and Practices for Scalable Apps</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.youtube.com/watch?v=Gzj723LkRJY"><strong>Ruby on Rails Demo</strong></a></li>
<li><a href="https://brightdigit.com/blog/2020/03/31/ios-software-architecture/"><strong>BrightDigit - What You Should Know About iOS Software Architecture </strong>(<em>My Boring Article </em>😆)</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://transistor.fm/?via=empowerapps"><strong>Transistor.Fm</strong></a><br><em>Your podcast's publishing platform<br></em>Transistor not only hosts your podcast but also:</p><ul>
<li>
<strong>Help distribute your podcast with integrations</strong> to Apple Podcasts, Spotify, Google Podcasts, YouTube, and Mailchimp</li>
<li>
<strong>Deep analytics</strong> including average downloads per episode, popular podcast apps, number of subscribers, trends</li>
<li>
<strong>Professional support</strong> for creatives, businesses, and professional podcasters when it comes to hosting and analytics</li>
</ul><p>Try it today with<a href="https://transistor.fm/?via=empowerapps"> this special link:</a><br><a href="https://transistor.fm/?via=empowerapps">https://transistor.fm/?via=empowerapps</a></p><p><b>iOS Developer Community Survey</b></p><ul>
<li>How Dave started iOS Dev Weekly</li>
<li>Why we love macOS over Windows</li>
<li>How the community loves Swift</li>
<li>Community and AR (and ML)</li>
<li>How big is Swift development outside of iOS?</li>
<li>What the big backend technologies for iOS devs?</li>
</ul><p><b>iOS Developer Community History</b></p><ul>
<li>Mobile Development before iOS</li>
<li>Democratization of the Internet and the iPhone</li>
<li>Challenges using Desktops </li>
<li>Objective-C vs. Swift</li>
<li>Architecture and Programming Fads</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://daveverwer.com"><strong>Dave Verwer - daveverwer.com</strong></a><ul>
<li><a href="https://twitter.com/daveverwer/">Twitter @daveverwer</a></li>
<li>
<a href="https://iosdevweekly.com/">iOS Dev Weekly</a> - <a href="https://twitter.com/iOSDevWeekly">Twitter @iOSDevWeekly</a>
</li>
<li><a href="https://iosdevsurvey.com/">iOS Developer Community Survey</a></li>
<li>
<a href="https://swiftpm.co">SwiftPM Library</a> - <a href="https://twitter.com/SwiftPMLibrary">Twitter @SwiftPMLibrary </a>
</li>
<li>
<a href="https://iosdevjobs.com">iOS Dev Jobs</a> - <a href="https://twitter.com/iosdevjobshq">Twitter @iOSDevJobsHQ</a>
</li>
<li><a href="https://iosdevdirectory.com">iOS Dev Directory</a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/29d6ee9b"><strong>Episode 31: Future Proofing Your Apps with Gui Rambo</strong></a></li>
<li><a href="https://share.transistor.fm/s/52ef1db7"><strong>Episode 37: Machine Learning with Kevin Scott</strong></a></li>
<li><a href="https://share.transistor.fm/s/4eba2003"><strong>Episode 42: Patterns and Practices for Scalable Apps</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.youtube.com/watch?v=Gzj723LkRJY"><strong>Ruby on Rails Demo</strong></a></li>
<li><a href="https://brightdigit.com/blog/2020/03/31/ios-software-architecture/"><strong>BrightDigit - What You Should Know About iOS Software Architecture </strong>(<em>My Boring Article </em>😆)</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://transistor.fm/?via=empowerapps"><strong>Transistor.Fm</strong></a><br><em>Your podcast's publishing platform<br></em>Transistor not only hosts your podcast but also:</p><ul>
<li>
<strong>Help distribute your podcast with integrations</strong> to Apple Podcasts, Spotify, Google Podcasts, YouTube, and Mailchimp</li>
<li>
<strong>Deep analytics</strong> including average downloads per episode, popular podcast apps, number of subscribers, trends</li>
<li>
<strong>Professional support</strong> for creatives, businesses, and professional podcasters when it comes to hosting and analytics</li>
</ul><p>Try it today with<a href="https://transistor.fm/?via=empowerapps"> this special link:</a><br><a href="https://transistor.fm/?via=empowerapps">https://transistor.fm/?via=empowerapps</a></p><p><b>iOS Developer Community Survey</b></p><ul>
<li>How Dave started iOS Dev Weekly</li>
<li>Why we love macOS over Windows</li>
<li>How the community loves Swift</li>
<li>Community and AR (and ML)</li>
<li>How big is Swift development outside of iOS?</li>
<li>What the big backend technologies for iOS devs?</li>
</ul><p><b>iOS Developer Community History</b></p><ul>
<li>Mobile Development before iOS</li>
<li>Democratization of the Internet and the iPhone</li>
<li>Challenges using Desktops </li>
<li>Objective-C vs. Swift</li>
<li>Architecture and Programming Fads</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Thu, 16 Apr 2020 21:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/46b2f52d/5a234e09.mp3" length="20604974" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/231714/full_1587043135-artwork.jpg"/>
      <itunes:duration>2535</itunes:duration>
      <itunes:summary>In this first part episode Dave Verwer, Leo talks with Dave about the iOS Developer Survey and iOS Developer Community overall. In the next part, we'll be talking about Swift Packages as well as the SwiftPM Library (swiftpm.co).</itunes:summary>
      <itunes:subtitle>In this first part episode Dave Verwer, Leo talks with Dave about the iOS Developer Survey and iOS Developer Community overall. In the next part, we'll be talking about Swift Packages as well as the SwiftPM Library (swiftpm.co).</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>WWDC Spectacular (Part 2) with Peter Witham</title>
      <itunes:episode>44</itunes:episode>
      <itunes:title>WWDC Spectacular (Part 2) with Peter Witham</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">669191c3-09f3-4aa0-bcaa-1b0b81fdc74a</guid>
      <link>https://share.transistor.fm/s/7fc06c2f</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://peterwitham.com/">Peter Witham</a> - <a href="https://compileswift.com/">Compileswift.com</a> - <a href="https://twitter.com/CompileSwift">Twitter</a>
</li></ul><p><b>Previous Episode</b></p><ul><li><a href="https://share.transistor.fm/s/187a54b5"><strong>Episode 43: WWDC Spectacular (Part 1) with Peter Witham</strong></a></li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://www.compileswift.com/podcast/s01-e20/"><strong>CompileSwift - Episode 20 - iPad gets a cursor</strong></a></li>
<li>
<a href="https://www.compileswift.com/podcast/s01-e10/"><strong>CompileSwift - Episode 10 - Apple Release Cycles</strong></a><strong> </strong>
</li>
<li><a href="https://share.transistor.fm/s/4011273d"><strong>Episode 29: Managing iOS Development with Peter Witham</strong></a></li>
<li><a href="https://share.transistor.fm/s/3ee56c45"><strong>Episode 7: Apple 2019</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.theverge.com/2020/3/18/21185188/ipad-trackpad-how-to-support-mouse-cursor">Here’s how the iPad’s new trackpad actually works - The Verge</a></li>
<li><a href="https://www.youtube.com/watch?v=aMbBQwSNviQ">Peter's Video on Cursor Support for iPadOS 13.4</a></li>
<li><a href="https://twitter.com/heyadam/status/1243019835774103552?s=21">LidAR example of real-time mapping</a></li>
</ul><p><b>Sponsors</b></p><p><strong>IndieSupportWeeks</strong><br><em>Indie Support Weeks</em> is an open two-week effort aimed at helping indie developers within the Apple Developer Community who have been financially impacted by the current global COVID-19 pandemic.<br>Here are some of the apps we recommend:</p><ul>
<li>
<a href="https://apps.apple.com/pl/app/home-inventory/id413564952">Home Inventory</a> by <a href="https://twitter.com/DianeRHamilton">@DianeRHamilton -</a> A Mac App Store Editor’s Choice, Home Inventory has been helping people around the world document &amp; manage their home &amp; belongings since 2005.</li>
<li>
<a href="https://pushever.app/">Pushever - APNS Tester</a> by <a href="https://twitter.com/soulchildpls">@soulchildpls </a>- Test push notification easily</li>
<li>
<a href="https://nativeconnect.app/">NativeConnect</a> by <a href="https://twitter.com/vadimshpakovski">@vadimshpakovski </a>- Native macOS Client for App Store Connect</li>
<li>
<a href="https://www.spectrumreflections.com/modules-app">Modules</a> by <a href="https://twitter.com/specrefco">@specrefco </a>- super easy for Swift developers to visualize and organize modules in a Swift package</li>
<li>
<a href="https://apps.apple.com/us/app/working-copy/id896694807">Working Copy</a> by <a href="https://twitter.com/palmin">@palmin - </a>Access Git repositories on the go. Clone, edit, commit and push while allowing other apps access to repositories.</li>
</ul><p>Learn more <a href="https://github.com/JohnSundell/IndieSupportWeeks">here about other apps from Indie Developers.</a></p><p><b>Apple March Updates</b></p><ul>
<li>Why can't the Mac Mini fill the desktop gap to Mac Pro?</li>
<li>How the Mac mini works as a background server for CI, Video, etc...</li>
<li>Is the Mac Book Air sufficient for a beginner developer?</li>
<li>Is the iPad Pro enough for "real work"?</li>
<li>Why prefer iPad over Mac Book</li>
<li>The "Surfacing" of the iPad Pro</li>
<li>Portrait vs Landscape</li>
<li><a href="https://www.apple.com/shop/product/MXQT2LL/A/magic-keyboard-for-ipad-pro-11%E2%80%91inch-2nd-generation-us-english">The New iPad Pro Magic Keyboard</a></li>
<li>Leo's iPad Stands and Keyboard Cases<ul>
<li><a href="https://www.amazon.com/gp/product/B074J159V5/ref=ppx_yo_dt_b_search_asin_title?ie=UTF8&amp;psc=1">KABCON Quality Tablet Stand (Portable)</a></li>
<li><a href="https://www.studioneat.com/products/canopy">Canopy by Studio Neat</a></li>
<li><a href="https://www.amazon.com/gp/product/B01DBV1OKY/ref=ppx_yo_dt_b_search_asin_title?ie=UTF8&amp;psc=1">Lamicall Tablet Stand</a></li>
</ul>
</li>
<li>Peter's<a href="https://www.brydge.com"> iPad Brydge Keyboard Case</a>
</li>
<li>The limitations of touch for interaction</li>
<li>Will voice controls and Siri continue to improve?</li>
<li>Does age matter in how we expect to interact with technology?</li>
<li>Does LidAR help VR supplant AR?</li>
<li>What LidAR means for developers?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://peterwitham.com/">Peter Witham</a> - <a href="https://compileswift.com/">Compileswift.com</a> - <a href="https://twitter.com/CompileSwift">Twitter</a>
</li></ul><p><b>Previous Episode</b></p><ul><li><a href="https://share.transistor.fm/s/187a54b5"><strong>Episode 43: WWDC Spectacular (Part 1) with Peter Witham</strong></a></li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://www.compileswift.com/podcast/s01-e20/"><strong>CompileSwift - Episode 20 - iPad gets a cursor</strong></a></li>
<li>
<a href="https://www.compileswift.com/podcast/s01-e10/"><strong>CompileSwift - Episode 10 - Apple Release Cycles</strong></a><strong> </strong>
</li>
<li><a href="https://share.transistor.fm/s/4011273d"><strong>Episode 29: Managing iOS Development with Peter Witham</strong></a></li>
<li><a href="https://share.transistor.fm/s/3ee56c45"><strong>Episode 7: Apple 2019</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.theverge.com/2020/3/18/21185188/ipad-trackpad-how-to-support-mouse-cursor">Here’s how the iPad’s new trackpad actually works - The Verge</a></li>
<li><a href="https://www.youtube.com/watch?v=aMbBQwSNviQ">Peter's Video on Cursor Support for iPadOS 13.4</a></li>
<li><a href="https://twitter.com/heyadam/status/1243019835774103552?s=21">LidAR example of real-time mapping</a></li>
</ul><p><b>Sponsors</b></p><p><strong>IndieSupportWeeks</strong><br><em>Indie Support Weeks</em> is an open two-week effort aimed at helping indie developers within the Apple Developer Community who have been financially impacted by the current global COVID-19 pandemic.<br>Here are some of the apps we recommend:</p><ul>
<li>
<a href="https://apps.apple.com/pl/app/home-inventory/id413564952">Home Inventory</a> by <a href="https://twitter.com/DianeRHamilton">@DianeRHamilton -</a> A Mac App Store Editor’s Choice, Home Inventory has been helping people around the world document &amp; manage their home &amp; belongings since 2005.</li>
<li>
<a href="https://pushever.app/">Pushever - APNS Tester</a> by <a href="https://twitter.com/soulchildpls">@soulchildpls </a>- Test push notification easily</li>
<li>
<a href="https://nativeconnect.app/">NativeConnect</a> by <a href="https://twitter.com/vadimshpakovski">@vadimshpakovski </a>- Native macOS Client for App Store Connect</li>
<li>
<a href="https://www.spectrumreflections.com/modules-app">Modules</a> by <a href="https://twitter.com/specrefco">@specrefco </a>- super easy for Swift developers to visualize and organize modules in a Swift package</li>
<li>
<a href="https://apps.apple.com/us/app/working-copy/id896694807">Working Copy</a> by <a href="https://twitter.com/palmin">@palmin - </a>Access Git repositories on the go. Clone, edit, commit and push while allowing other apps access to repositories.</li>
</ul><p>Learn more <a href="https://github.com/JohnSundell/IndieSupportWeeks">here about other apps from Indie Developers.</a></p><p><b>Apple March Updates</b></p><ul>
<li>Why can't the Mac Mini fill the desktop gap to Mac Pro?</li>
<li>How the Mac mini works as a background server for CI, Video, etc...</li>
<li>Is the Mac Book Air sufficient for a beginner developer?</li>
<li>Is the iPad Pro enough for "real work"?</li>
<li>Why prefer iPad over Mac Book</li>
<li>The "Surfacing" of the iPad Pro</li>
<li>Portrait vs Landscape</li>
<li><a href="https://www.apple.com/shop/product/MXQT2LL/A/magic-keyboard-for-ipad-pro-11%E2%80%91inch-2nd-generation-us-english">The New iPad Pro Magic Keyboard</a></li>
<li>Leo's iPad Stands and Keyboard Cases<ul>
<li><a href="https://www.amazon.com/gp/product/B074J159V5/ref=ppx_yo_dt_b_search_asin_title?ie=UTF8&amp;psc=1">KABCON Quality Tablet Stand (Portable)</a></li>
<li><a href="https://www.studioneat.com/products/canopy">Canopy by Studio Neat</a></li>
<li><a href="https://www.amazon.com/gp/product/B01DBV1OKY/ref=ppx_yo_dt_b_search_asin_title?ie=UTF8&amp;psc=1">Lamicall Tablet Stand</a></li>
</ul>
</li>
<li>Peter's<a href="https://www.brydge.com"> iPad Brydge Keyboard Case</a>
</li>
<li>The limitations of touch for interaction</li>
<li>Will voice controls and Siri continue to improve?</li>
<li>Does age matter in how we expect to interact with technology?</li>
<li>Does LidAR help VR supplant AR?</li>
<li>What LidAR means for developers?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Wed, 08 Apr 2020 11:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/7fc06c2f/790a0c2d.mp3" length="20326575" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/231090/full_1585945347-artwork.jpg"/>
      <itunes:duration>2497</itunes:duration>
      <itunes:summary>In the second part of this two part episode, Leo talks again with Peter Witham about the new Apple hardware releases and specifically the new iPad Pro. In the first part we talked about WWDC 2020 and remote work in general.</itunes:summary>
      <itunes:subtitle>In the second part of this two part episode, Leo talks again with Peter Witham about the new Apple hardware releases and specifically the new iPad Pro. In the first part we talked about WWDC 2020 and remote work in general.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>WWDC Spectacular (Part 1) with Peter Witham</title>
      <itunes:episode>43</itunes:episode>
      <itunes:title>WWDC Spectacular (Part 1) with Peter Witham</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">280876e7-6379-49fe-820f-f2656e8fe745</guid>
      <link>https://share.transistor.fm/s/187a54b5</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://peterwitham.com/">Peter Witham</a> - <a href="https://compileswift.com/">Compileswift.com</a> - <a href="https://twitter.com/CompileSwift">Twitter</a>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://www.compileswift.com/podcast/s01-e20/"><strong>CompileSwift - Episode 20 - iPad gets a cursor</strong></a></li>
<li>
<a href="https://www.compileswift.com/podcast/s01-e10/"><strong>CompileSwift - Episode 10 - Apple Release Cycles</strong></a><strong> </strong>
</li>
<li><a href="https://share.transistor.fm/s/87165d83"><strong>Episode 35: SwiftUI - The Good, the Bad, and the Benefits</strong></a></li>
<li><a href="https://share.transistor.fm/s/bf0516f2"><strong>Episode 34: Server-Side Swift with Tim Condon</strong></a></li>
<li><a href="https://share.transistor.fm/s/4011273d"><strong>Episode 29: Managing iOS Development with Peter Witham</strong></a></li>
<li><a href="https://share.transistor.fm/s/4f8b37d3"><strong>Episode 20: WWDC 2019 - Mac Development with Daniel Jalkut</strong></a></li>
<li><a href="https://share.transistor.fm/s/a19efbf9"><strong>Episode 10: Business and IT Applications</strong></a></li>
<li><a href="https://share.transistor.fm/s/3ee56c45"><strong>Episode 7: Apple 2019</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.theverge.com/2020/3/18/21185188/ipad-trackpad-how-to-support-mouse-cursor">Here’s how the iPad’s new trackpad actually works - The Verge</a></li>
<li><a href="https://www.bitrise.io">Bitrise</a></li>
<li><a href="https://www.macstadium.com">MacStadium</a></li>
<li><a href="https://learningswift.brightdigit.com/vapor-heroku-ubuntu-setup-deploy/">Vapor – Deep Dive Guide into Setup and Deployment for Heroku and Ubuntu</a></li>
<li><a href="https://developer.apple.com/documentation/swift_playgrounds/creating_and_running_a_playground_book">Swift Playground Book</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>Remote Working From Home</b></p><ul>
<li>Having to work home with everyone at home</li>
<li>Having a dedicated office</li>
<li>Livestreaming vs. Conference Calls</li>
<li>Having a schedule</li>
<li>Sharing your work schedule on the family calendar</li>
</ul><p><b>WWDC 2020?</b></p><ul>
<li>Will WWDC be <a href="https://events.google.com/io/">cancelled</a> this year?</li>
<li>How can they produce <a href="https://www.theverge.com/2020/3/18/21185188/ipad-trackpad-how-to-support-mouse-cursor">video for the conference</a>?</li>
<li>How does a remote conference?</li>
<li>Does this year have a <em>Marzipan</em>?</li>
<li>Refinements for iOS, macOS, etc...?</li>
<li>Any opening of other services (messaging)?</li>
<li>What happened to Apple TV+?</li>
<li>Where is Apple in the server or cloud?</li>
<li>What's going to be the plan for the iPhone?</li>
</ul><p><b>SDK Updates?</b></p><ul>
<li>Swift UI 2.0?</li>
<li>What's the future of Catalyst?</li>
<li>More Independence for the watchOS?</li>
<li>more Independence for iPadOS 😄</li>
<li>More Machine Learning ...</li>
<li>What's the ARKit Demo? AR Conference?</li>
<li>Swift Playgrounds on the Mac</li>
<li>Xcode on the iPad?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://peterwitham.com/">Peter Witham</a> - <a href="https://compileswift.com/">Compileswift.com</a> - <a href="https://twitter.com/CompileSwift">Twitter</a>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://www.compileswift.com/podcast/s01-e20/"><strong>CompileSwift - Episode 20 - iPad gets a cursor</strong></a></li>
<li>
<a href="https://www.compileswift.com/podcast/s01-e10/"><strong>CompileSwift - Episode 10 - Apple Release Cycles</strong></a><strong> </strong>
</li>
<li><a href="https://share.transistor.fm/s/87165d83"><strong>Episode 35: SwiftUI - The Good, the Bad, and the Benefits</strong></a></li>
<li><a href="https://share.transistor.fm/s/bf0516f2"><strong>Episode 34: Server-Side Swift with Tim Condon</strong></a></li>
<li><a href="https://share.transistor.fm/s/4011273d"><strong>Episode 29: Managing iOS Development with Peter Witham</strong></a></li>
<li><a href="https://share.transistor.fm/s/4f8b37d3"><strong>Episode 20: WWDC 2019 - Mac Development with Daniel Jalkut</strong></a></li>
<li><a href="https://share.transistor.fm/s/a19efbf9"><strong>Episode 10: Business and IT Applications</strong></a></li>
<li><a href="https://share.transistor.fm/s/3ee56c45"><strong>Episode 7: Apple 2019</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.theverge.com/2020/3/18/21185188/ipad-trackpad-how-to-support-mouse-cursor">Here’s how the iPad’s new trackpad actually works - The Verge</a></li>
<li><a href="https://www.bitrise.io">Bitrise</a></li>
<li><a href="https://www.macstadium.com">MacStadium</a></li>
<li><a href="https://learningswift.brightdigit.com/vapor-heroku-ubuntu-setup-deploy/">Vapor – Deep Dive Guide into Setup and Deployment for Heroku and Ubuntu</a></li>
<li><a href="https://developer.apple.com/documentation/swift_playgrounds/creating_and_running_a_playground_book">Swift Playground Book</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>Remote Working From Home</b></p><ul>
<li>Having to work home with everyone at home</li>
<li>Having a dedicated office</li>
<li>Livestreaming vs. Conference Calls</li>
<li>Having a schedule</li>
<li>Sharing your work schedule on the family calendar</li>
</ul><p><b>WWDC 2020?</b></p><ul>
<li>Will WWDC be <a href="https://events.google.com/io/">cancelled</a> this year?</li>
<li>How can they produce <a href="https://www.theverge.com/2020/3/18/21185188/ipad-trackpad-how-to-support-mouse-cursor">video for the conference</a>?</li>
<li>How does a remote conference?</li>
<li>Does this year have a <em>Marzipan</em>?</li>
<li>Refinements for iOS, macOS, etc...?</li>
<li>Any opening of other services (messaging)?</li>
<li>What happened to Apple TV+?</li>
<li>Where is Apple in the server or cloud?</li>
<li>What's going to be the plan for the iPhone?</li>
</ul><p><b>SDK Updates?</b></p><ul>
<li>Swift UI 2.0?</li>
<li>What's the future of Catalyst?</li>
<li>More Independence for the watchOS?</li>
<li>more Independence for iPadOS 😄</li>
<li>More Machine Learning ...</li>
<li>What's the ARKit Demo? AR Conference?</li>
<li>Swift Playgrounds on the Mac</li>
<li>Xcode on the iPad?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Fri, 03 Apr 2020 14:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/187a54b5/460dc34f.mp3" length="27756385" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/230909/full_1585943278-artwork.jpg"/>
      <itunes:duration>3405</itunes:duration>
      <itunes:summary>In the first part of this two part episode, Leo talks again with Peter Witham about WWDC 2020, whether it will happen, how a remote WWDC would work, remote work in general. In the next episode we'll be following up on the March Apple hardware updates.</itunes:summary>
      <itunes:subtitle>In the first part of this two part episode, Leo talks again with Peter Witham about WWDC 2020, whether it will happen, how a remote WWDC would work, remote work in general. In the next episode we'll be following up on the March Apple hardware updates.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Patterns and Practices for Scalable Apps</title>
      <itunes:episode>42</itunes:episode>
      <itunes:title>Patterns and Practices for Scalable Apps</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">e3f6a731-b5d9-456c-a495-7abc1363229c</guid>
      <link>https://share.transistor.fm/s/4eba2003</link>
      <description>
        <![CDATA[<p><b>Video</b></p><ul><li><a href="https://youtu.be/TQpRYibmyvQ"><strong>Youtube Video</strong> - https://youtu.be/TQpRYibmyvQ</a></li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/99f236b1"><strong>Episode 39: Managing Code Quality with Anne Cahalan</strong></a></li>
<li><a href="https://share.transistor.fm/s/a14f868f"><strong>Episode 24: Continuous Integration with Kyle Newsome</strong></a></li>
<li><a href="https://share.transistor.fm/s/a14f868f"><strong>Episode 23: Modularizing in Xcode with Abbey Jackson</strong></a></li>
<li><a href="https://share.transistor.fm/s/29d6ee9b"><strong>Episode 31: Future Proofing Your Apps with Gui Rambo</strong></a></li>
<li><a href="https://share.transistor.fm/s/eddb8632"><strong>Episode 15: Test-Driven Development with Joshua Greene and Michael Katz</strong></a></li>
<li><a href="https://share.transistor.fm/s/7247db7e"><strong>Episode 14: iOS App Architecture with René Cacheaux and Josh Berlin</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://brightdigit.com/blog/2020/03/02/ios-continuous-integration-avoid-merge-hell/"><strong>iOS Continuous Integration: How To Avoid Merge Hell</strong></a></li>
<li><a href="https://brightdigit.com/blog/2020/02/04/swiftui-everything-is-possible-if-you-think-like-apple/"><strong>SwiftUI: Everything is possible if you think like Apple</strong></a></li>
<li><a href="https://brightdigit.com/blog/2020/01/06/avoid-ios-app-failure-with-tdd/"><strong>How to avoid iOS app failure with Test-Driven Development</strong></a></li>
<li><a href="https://learningswift.brightdigit.com/swift-package-continuous-integration-guide/"><strong>Swift Package Continuous Integration Guide</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>Why Good Patterns and Practices Matter</b></p><ul>
<li>Bug fixes and code upgrades become more difficult to execute</li>
<li>Adding new features can be a real challenge if there's a lack of organization.</li>
<li>Without breaking each layer and functionality apart, it makes testing excruciating.</li>
<li>Without consistency, new developers will have a hard time understanding how the code works.</li>
<li>By using the right patterns, modularizing your code, and maintaining good code quality; you can keep your app development project running smoothly and save money in the long run.</li>
</ul><p><b>Architectural Patterns</b></p><ul>
<li>Understand the legacy of Objective-C</li>
<li>How Model View Controller is intrinsic to UIKit  </li>
<li>How do Delegation Pattern fits </li>
<li>Why Protocol Oriented Programming works so well with Swift and Testing?</li>
<li>Why Functional Programming makes it easier to build complex functionality?</li>
<li>Why the shift to Model-View-ViewModel?</li>
<li>How Reactive Programming, the Subscriber-Publisher model, and Combine makes sense for UI development?</li>
</ul><p><b>Modularizing Layers of Functionality</b></p><ul>
<li>Modularity ensures individual pieces of functionality can work independently. </li>
<li>While each piece of code and functionality remains simple, it is their multitude and integration which is complex.</li>
<li>Each module is an Interchangeable Part.</li>
<li>Modularity allows for use in multiple operating systems and devices.</li>
<li>How does Xcode and Swift allow for modularity</li>
<li>Why Framework Targets are the most mature way still to create independent </li>
<li>Where Workspaces and Projects fit with with Independent Apps and Products</li>
<li>Why Swift Packages are the future</li>
</ul><p><b>Maintaining Quality Code</b></p><ul>
<li>Good Architectural Patterns means Easy Testing</li>
<li>Code Coverage is a good metric but not the only one.</li>
<li>Reduce Complexity in your code for easier maintenance</li>
<li>Consistent Styling makes version control and team management easier</li>
<li>Code Reviews Help get an additional set of eyes even though they may be your own.</li>
<li>Continuous Integration of components and apps are the best way to ensure quality code</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Video</b></p><ul><li><a href="https://youtu.be/TQpRYibmyvQ"><strong>Youtube Video</strong> - https://youtu.be/TQpRYibmyvQ</a></li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/99f236b1"><strong>Episode 39: Managing Code Quality with Anne Cahalan</strong></a></li>
<li><a href="https://share.transistor.fm/s/a14f868f"><strong>Episode 24: Continuous Integration with Kyle Newsome</strong></a></li>
<li><a href="https://share.transistor.fm/s/a14f868f"><strong>Episode 23: Modularizing in Xcode with Abbey Jackson</strong></a></li>
<li><a href="https://share.transistor.fm/s/29d6ee9b"><strong>Episode 31: Future Proofing Your Apps with Gui Rambo</strong></a></li>
<li><a href="https://share.transistor.fm/s/eddb8632"><strong>Episode 15: Test-Driven Development with Joshua Greene and Michael Katz</strong></a></li>
<li><a href="https://share.transistor.fm/s/7247db7e"><strong>Episode 14: iOS App Architecture with René Cacheaux and Josh Berlin</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://brightdigit.com/blog/2020/03/02/ios-continuous-integration-avoid-merge-hell/"><strong>iOS Continuous Integration: How To Avoid Merge Hell</strong></a></li>
<li><a href="https://brightdigit.com/blog/2020/02/04/swiftui-everything-is-possible-if-you-think-like-apple/"><strong>SwiftUI: Everything is possible if you think like Apple</strong></a></li>
<li><a href="https://brightdigit.com/blog/2020/01/06/avoid-ios-app-failure-with-tdd/"><strong>How to avoid iOS app failure with Test-Driven Development</strong></a></li>
<li><a href="https://learningswift.brightdigit.com/swift-package-continuous-integration-guide/"><strong>Swift Package Continuous Integration Guide</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>Why Good Patterns and Practices Matter</b></p><ul>
<li>Bug fixes and code upgrades become more difficult to execute</li>
<li>Adding new features can be a real challenge if there's a lack of organization.</li>
<li>Without breaking each layer and functionality apart, it makes testing excruciating.</li>
<li>Without consistency, new developers will have a hard time understanding how the code works.</li>
<li>By using the right patterns, modularizing your code, and maintaining good code quality; you can keep your app development project running smoothly and save money in the long run.</li>
</ul><p><b>Architectural Patterns</b></p><ul>
<li>Understand the legacy of Objective-C</li>
<li>How Model View Controller is intrinsic to UIKit  </li>
<li>How do Delegation Pattern fits </li>
<li>Why Protocol Oriented Programming works so well with Swift and Testing?</li>
<li>Why Functional Programming makes it easier to build complex functionality?</li>
<li>Why the shift to Model-View-ViewModel?</li>
<li>How Reactive Programming, the Subscriber-Publisher model, and Combine makes sense for UI development?</li>
</ul><p><b>Modularizing Layers of Functionality</b></p><ul>
<li>Modularity ensures individual pieces of functionality can work independently. </li>
<li>While each piece of code and functionality remains simple, it is their multitude and integration which is complex.</li>
<li>Each module is an Interchangeable Part.</li>
<li>Modularity allows for use in multiple operating systems and devices.</li>
<li>How does Xcode and Swift allow for modularity</li>
<li>Why Framework Targets are the most mature way still to create independent </li>
<li>Where Workspaces and Projects fit with with Independent Apps and Products</li>
<li>Why Swift Packages are the future</li>
</ul><p><b>Maintaining Quality Code</b></p><ul>
<li>Good Architectural Patterns means Easy Testing</li>
<li>Code Coverage is a good metric but not the only one.</li>
<li>Reduce Complexity in your code for easier maintenance</li>
<li>Consistent Styling makes version control and team management easier</li>
<li>Code Reviews Help get an additional set of eyes even though they may be your own.</li>
<li>Continuous Integration of components and apps are the best way to ensure quality code</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Mon, 30 Mar 2020 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/4eba2003/e128b395.mp3" length="10158560" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/217998/full_1584836269-artwork.jpg"/>
      <itunes:duration>1210</itunes:duration>
      <itunes:summary>In this episode, Leo discusses some patterns and practices for keeping your app scalable and easily maintained.</itunes:summary>
      <itunes:subtitle>In this episode, Leo discusses some patterns and practices for keeping your app scalable and easily maintained.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Notifications with Kaya Thomas</title>
      <itunes:episode>41</itunes:episode>
      <itunes:title>Notifications with Kaya Thomas</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">69787efc-e9f1-4dc3-9925-45cc6aaec014</guid>
      <link>https://share.transistor.fm/s/ec99f183</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/kthomas901"><strong>Kaya Thomas (Twitter @kthomas901)</strong></a><ul><li><a href="https://kayathomas.info">kayathomas.info</a></li></ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/eddb8632"><strong>Episode 15: Test-Driven Development with Joshua Greene and Michael Katz</strong></a></li>
<li>
<a href="https://share.transistor.fm/s/ffcb9fc1"><strong>Episode 8: Cloud and Backend Services For Apps</strong></a> </li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://apps.apple.com/us/app/we-read-too/id908782619"><strong>We Read Too</strong></a></li>
<li><a href="https://developer.apple.com/notifications/">Apple's Developer Docs on Notifications</a></li>
<li><a href="https://pusher.com/beams"><strong>Beams</strong> by Pusher</a></li>
<li><a href="https://github.com/noodlewerk/NWPusher"><strong>NWPusher</strong> by noodlewerk</a></li>
<li><a href="https://www.smashingmagazine.com/2018/09/preparing-your-app-for-ios-12-notifications/"><strong>Preparing Your App For iOS 12 Notifications by Kaya Thomas </strong>- Smashing Magazine </a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>Why Notifications Are Important</b></p><ul>
<li>Can encourage user engagement </li>
<li>Notify of updates and messages</li>
<li>Need to be trustworthy and needless</li>
<li>Onboarding helps make Notifications more welcoming</li>
</ul><p><b>What are the different types of Notifications?</b></p><ul>
<li>Local vs Remote Push Notifications</li>
<li>Remote Notifications are ideal for complex logic and messaging</li>
<li>How Rich Notifications Work</li>
</ul><p><b>What are the challenges in implementation of Notifications?</b></p><ul>
<li>Using Enums to Implement Notifications</li>
<li>How Categories and Actions Work</li>
<li>Using NWPusher to Test Remote Notifications</li>
<li>Big Improvement Coming to Xcode 11.4</li>
<li>How to Unit Test with Abstractions and Mocking</li>
</ul><p><b>How Push Notifications Work?</b></p><ul>
<li>Implementing Remote Notifications on the Server</li>
<li>Using Cloud Based Services for Push Notifications such as Firebase</li>
<li>Using Beams for Testing Push Notifications</li>
<li>How APNS works</li>
<li>Dealing with APNS Issues</li>
<li>Understanding APNS Throttling</li>
</ul><p><b>How to making Notifications part of the design process?</b></p><ul>
<li>How would Notification make the app more useful?</li>
<li>Would it help the user engage more?</li>
<li>Keep complex actions in the app as opposed to the Notification UI</li>
<li>Being responsible with how Notifications are used</li>
<li>Stay up-to-date with Apple's guidelines</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/kthomas901"><strong>Kaya Thomas (Twitter @kthomas901)</strong></a><ul><li><a href="https://kayathomas.info">kayathomas.info</a></li></ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/eddb8632"><strong>Episode 15: Test-Driven Development with Joshua Greene and Michael Katz</strong></a></li>
<li>
<a href="https://share.transistor.fm/s/ffcb9fc1"><strong>Episode 8: Cloud and Backend Services For Apps</strong></a> </li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://apps.apple.com/us/app/we-read-too/id908782619"><strong>We Read Too</strong></a></li>
<li><a href="https://developer.apple.com/notifications/">Apple's Developer Docs on Notifications</a></li>
<li><a href="https://pusher.com/beams"><strong>Beams</strong> by Pusher</a></li>
<li><a href="https://github.com/noodlewerk/NWPusher"><strong>NWPusher</strong> by noodlewerk</a></li>
<li><a href="https://www.smashingmagazine.com/2018/09/preparing-your-app-for-ios-12-notifications/"><strong>Preparing Your App For iOS 12 Notifications by Kaya Thomas </strong>- Smashing Magazine </a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>Why Notifications Are Important</b></p><ul>
<li>Can encourage user engagement </li>
<li>Notify of updates and messages</li>
<li>Need to be trustworthy and needless</li>
<li>Onboarding helps make Notifications more welcoming</li>
</ul><p><b>What are the different types of Notifications?</b></p><ul>
<li>Local vs Remote Push Notifications</li>
<li>Remote Notifications are ideal for complex logic and messaging</li>
<li>How Rich Notifications Work</li>
</ul><p><b>What are the challenges in implementation of Notifications?</b></p><ul>
<li>Using Enums to Implement Notifications</li>
<li>How Categories and Actions Work</li>
<li>Using NWPusher to Test Remote Notifications</li>
<li>Big Improvement Coming to Xcode 11.4</li>
<li>How to Unit Test with Abstractions and Mocking</li>
</ul><p><b>How Push Notifications Work?</b></p><ul>
<li>Implementing Remote Notifications on the Server</li>
<li>Using Cloud Based Services for Push Notifications such as Firebase</li>
<li>Using Beams for Testing Push Notifications</li>
<li>How APNS works</li>
<li>Dealing with APNS Issues</li>
<li>Understanding APNS Throttling</li>
</ul><p><b>How to making Notifications part of the design process?</b></p><ul>
<li>How would Notification make the app more useful?</li>
<li>Would it help the user engage more?</li>
<li>Keep complex actions in the app as opposed to the Notification UI</li>
<li>Being responsible with how Notifications are used</li>
<li>Stay up-to-date with Apple's guidelines</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io/">Music from https://filmmusic.io</a><br><a href="https://incompetech.com/">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 22 Mar 2020 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/ec99f183/60fad1ea.mp3" length="19267748" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/199038/full_1583429119-artwork.jpg"/>
      <itunes:duration>2405</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Kaya Thomas about how to use notifications in your app and why they are important.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Kaya Thomas about how to use notifications in your app and why they are important.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Handling Errors Correctly with Jeff Kelley</title>
      <itunes:episode>40</itunes:episode>
      <itunes:title>Handling Errors Correctly with Jeff Kelley</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">5ecc1385-dfa2-4720-a17b-c481e7bf5258</guid>
      <link>https://share.transistor.fm/s/03d8db53</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li><a href="https://twitter.com/SlaunchaMan"><strong>Jeff Kelley (Twitter @SlaunchaMan)</strong></a></li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/87165d83"><strong>Episode 35: SwiftUI - The Good, the Bad, and the Benefits</strong></a></li>
<li><a href="https://share.transistor.fm/s/3d4c7634"><strong>Episode 18: WWDC 2019 - Apple Watch with Gary Sabo</strong></a></li>
<li><a href="https://share.transistor.fm/s/eddb8632"><strong>Episode 15: Test-Driven Development with Joshua Greene and Michael Katz</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.pluralsight.com/courses/codemash-session-62">Jeff's talk from Code Mash - Taking Control of Errors in Swift</a></li>
<li><a href="https://marcosantadev.com/test-swift-fatalerror/">How To Test fatalError In Swift by Marco Santa</a></li>
<li><a href="https://info.detroitlabs.com/detroit-labs-guide-to-charles-proxy%20">A guide to Charles Proxy by Nelida Velazquez</a></li>
<li><a href="https://blog.slaunchaman.com/2016/12/12/running-real-tests-on-watchos/">Running Real Tests on watchOS - Jeff Kelley</a></li>
<li><a href="https://github.com/brightdigit/Base32Crockford/blob/master/Sources/Base32Crockford/Base32CrockfordGenerator.swift">Leo's sample code for testing for fatalError</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>What is special about errors in Swift </b></p><ul>
<li>The history of Objective-C and Swift errors</li>
<li>The strong-typed nature of Swift</li>
<li>
<em>fatalError</em> vs <em>assert</em> vs <em>precondition</em>
</li>
<li>How to test <em>fatalError</em> in unit tests</li>
</ul><p><b>What are some ways to handle errors?</b></p><ul>
<li>User initiated errors and dialogs</li>
<li>Chaining logging and error tracking</li>
<li>Differentiating release and debug build</li>
<li>Using proxy server to listen to requests in debug</li>
<li>When to purposely crash with <em>fatalError</em>
</li>
<li>Dealing with asynchronous callbacks and Combine</li>
<li>What is the <em>Never</em> type?</li>
<li>Dealing with permission prompts like HealthKit</li>
</ul><p><b>What can teams do to design and develop for errors</b></p><ul>
<li>Use a service to track errors for developers</li>
<li>Showing the user the correct information</li>
<li>Dealing with issues which aren't errors</li>
<li>Designers should show how errors are handled</li>
<li>Design the write localized messages for errors</li>
<li>With agile development, make sure each error path is handled in your story card</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io">Music from https://filmmusic.io</a><br><a href="https://incompetech.com">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li><a href="https://twitter.com/SlaunchaMan"><strong>Jeff Kelley (Twitter @SlaunchaMan)</strong></a></li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/87165d83"><strong>Episode 35: SwiftUI - The Good, the Bad, and the Benefits</strong></a></li>
<li><a href="https://share.transistor.fm/s/3d4c7634"><strong>Episode 18: WWDC 2019 - Apple Watch with Gary Sabo</strong></a></li>
<li><a href="https://share.transistor.fm/s/eddb8632"><strong>Episode 15: Test-Driven Development with Joshua Greene and Michael Katz</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.pluralsight.com/courses/codemash-session-62">Jeff's talk from Code Mash - Taking Control of Errors in Swift</a></li>
<li><a href="https://marcosantadev.com/test-swift-fatalerror/">How To Test fatalError In Swift by Marco Santa</a></li>
<li><a href="https://info.detroitlabs.com/detroit-labs-guide-to-charles-proxy%20">A guide to Charles Proxy by Nelida Velazquez</a></li>
<li><a href="https://blog.slaunchaman.com/2016/12/12/running-real-tests-on-watchos/">Running Real Tests on watchOS - Jeff Kelley</a></li>
<li><a href="https://github.com/brightdigit/Base32Crockford/blob/master/Sources/Base32Crockford/Base32CrockfordGenerator.swift">Leo's sample code for testing for fatalError</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>What is special about errors in Swift </b></p><ul>
<li>The history of Objective-C and Swift errors</li>
<li>The strong-typed nature of Swift</li>
<li>
<em>fatalError</em> vs <em>assert</em> vs <em>precondition</em>
</li>
<li>How to test <em>fatalError</em> in unit tests</li>
</ul><p><b>What are some ways to handle errors?</b></p><ul>
<li>User initiated errors and dialogs</li>
<li>Chaining logging and error tracking</li>
<li>Differentiating release and debug build</li>
<li>Using proxy server to listen to requests in debug</li>
<li>When to purposely crash with <em>fatalError</em>
</li>
<li>Dealing with asynchronous callbacks and Combine</li>
<li>What is the <em>Never</em> type?</li>
<li>Dealing with permission prompts like HealthKit</li>
</ul><p><b>What can teams do to design and develop for errors</b></p><ul>
<li>Use a service to track errors for developers</li>
<li>Showing the user the correct information</li>
<li>Dealing with issues which aren't errors</li>
<li>Designers should show how errors are handled</li>
<li>Design the write localized messages for errors</li>
<li>With agile development, make sure each error path is handled in your story card</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p><a href="https://filmmusic.io">Music from https://filmmusic.io</a><br><a href="https://incompetech.com">"Blippy Trance" by Kevin MacLeod (https://incompetech.com)</a><br><a href="http://creativecommons.org/licenses/by/4.0/">License: CC BY (http://creativecommons.org/licenses/by/4.0/)</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 15 Mar 2020 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/03d8db53/88994a68.mp3" length="24416118" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/199013/full_1582327124-artwork.jpg"/>
      <itunes:duration>2991</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Jeff Kelley from Detroit Labs about handing, tracking and test errors and when they can happen. </itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Jeff Kelley from Detroit Labs about handing, tracking and test errors and when they can happen. </itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Managing Code Quality with Anne Cahalan</title>
      <itunes:episode>39</itunes:episode>
      <itunes:title>Managing Code Quality with Anne Cahalan</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">ddd81418-b00e-4e20-8b0c-440e0faa163e</guid>
      <link>https://share.transistor.fm/s/99f236b1</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/northofnormal"><strong>Anne Cahalan </strong></a><ul>
<li><a href="https://twitter.com/northofnormal"><strong>Twitter @northofnormal</strong></a></li>
<li><a href="https://github.com/northofnormal"><strong>Github northofnormal</strong></a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/eba8ef64"><strong>Episode 36: Upgrading Your Skills in 2020 with Paul Hudson</strong></a></li>
<li><a href="https://share.transistor.fm/s/bf0516f2"><strong>Episode 34: Server-Side Swift with Tim Condon</strong></a></li>
<li>
<a href="https://share.transistor.fm/s/a14f868f"><strong>Episode 24: Continuous Integration with Kyle Newsome</strong></a> </li>
<li><a href="https://share.transistor.fm/s/7247db7e"><strong>Episode 14: iOS App Architecture with René Cacheaux and Josh Berlin</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.swiftforgood.com/#authors"><strong>Swift For Good - UI Design by Dave Delong</strong></a></li>
<li><a href="https://overreacted.io/goodbye-clean-code/"><strong>Goodbye Clean Code by Dan Abramov</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>What is Code Quality</b></p><ul>
<li>Making Code that's easy to maintain</li>
<li>
<strong>Low </strong><strong><em>Cyclomatic Complexity</em></strong>
</li>
<li>Making your code easily testable</li>
<li><em>Your code should read like sentences</em></li>
<li>Avoid fancy short code for more <em>wordy </em>code</li>
<li><strong>Messy code is easier to fix then over-engineered code</strong></li>
<li>While the integration may be complex, keep your code separated into simple parts </li>
</ul><p><b>Why is Code Quality Important</b></p><ul>
<li>Saving Time = Saving Money</li>
<li>Easy to Maintain and Easy to Update</li>
<li>Shorter Onramp for New Developers</li>
<li>
<strong>Code Rots over Time</strong> (Delegation Patters vs Subscriber/Publisher Model)</li>
<li>Addresses Tech Debt</li>
</ul><p><b>When should you <em>upgrade </em>your code</b></p><ul>
<li>When it makes sense</li>
<li>Use Interoperability (bridge headers, HostingControllers, ViewRepresentable, etc...) to slowly bridge the gap</li>
<li>Be careful leaving too much old code behind</li>
</ul><p><b>Good Swift Code Quality</b></p><ul>
<li>Use argument labels and parameter name correctly</li>
<li>Avoid ternary operators</li>
<li>Avoid switch statements with too much logic and cases</li>
<li>Use Generics judiciously</li>
<li>Extensions are great for separating Protocol implementation</li>
</ul><p><b>Good Code Reviews and Pull Requests</b></p><ul>
<li>Clear your mind</li>
<li>Use pull requests and templates</li>
<li>Add context and details to the pull requests</li>
<li>Use screen shots to show what the result is</li>
<li>Communicate clearly what is going on</li>
<li>Let them know what to look at and what is a work-in-progress</li>
</ul><p><b>What Can Managers Do</b></p><ul>
<li>Set a great example </li>
<li>Provide enough time to the team for quality code</li>
<li>Have some background and experience with quality code</li>
<li>Be attentive and open to what your developers say</li>
<li>Allow time for unit testing</li>
</ul><p><b>Code Quality Tools</b></p><ul>
<li>
<a href="https://github.com/realm/SwiftLint">SwiftLint</a> and <a href="https://github.com/nicklockwood/SwiftFormat">SwiftFormat</a>
</li>
<li>
<a href="https://codecov.io">Codecov</a> - for code coverage</li>
<li>
<a href="https://www.codefactor.io/">CodeFactor</a> and <a href="https://codeclimate.com">CodeClimate</a> - for code quality</li>
<li>Having a human look at code is always best</li>
<li>Be thoughtful and considerate for each decision</li>
<li><a href="https://github.com/brightdigit/EggSeed">Leo's Swift Package Automated CI Template - WIP</a></li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p>Music from https://filmmusic.io<br>"Blippy Trance" by Kevin MacLeod (https://incompetech.com)<br>License: CC BY (http://creativecommons.org/licenses/by/4.0/)</p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/northofnormal"><strong>Anne Cahalan </strong></a><ul>
<li><a href="https://twitter.com/northofnormal"><strong>Twitter @northofnormal</strong></a></li>
<li><a href="https://github.com/northofnormal"><strong>Github northofnormal</strong></a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/eba8ef64"><strong>Episode 36: Upgrading Your Skills in 2020 with Paul Hudson</strong></a></li>
<li><a href="https://share.transistor.fm/s/bf0516f2"><strong>Episode 34: Server-Side Swift with Tim Condon</strong></a></li>
<li>
<a href="https://share.transistor.fm/s/a14f868f"><strong>Episode 24: Continuous Integration with Kyle Newsome</strong></a> </li>
<li><a href="https://share.transistor.fm/s/7247db7e"><strong>Episode 14: iOS App Architecture with René Cacheaux and Josh Berlin</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://www.swiftforgood.com/#authors"><strong>Swift For Good - UI Design by Dave Delong</strong></a></li>
<li><a href="https://overreacted.io/goodbye-clean-code/"><strong>Goodbye Clean Code by Dan Abramov</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>What is Code Quality</b></p><ul>
<li>Making Code that's easy to maintain</li>
<li>
<strong>Low </strong><strong><em>Cyclomatic Complexity</em></strong>
</li>
<li>Making your code easily testable</li>
<li><em>Your code should read like sentences</em></li>
<li>Avoid fancy short code for more <em>wordy </em>code</li>
<li><strong>Messy code is easier to fix then over-engineered code</strong></li>
<li>While the integration may be complex, keep your code separated into simple parts </li>
</ul><p><b>Why is Code Quality Important</b></p><ul>
<li>Saving Time = Saving Money</li>
<li>Easy to Maintain and Easy to Update</li>
<li>Shorter Onramp for New Developers</li>
<li>
<strong>Code Rots over Time</strong> (Delegation Patters vs Subscriber/Publisher Model)</li>
<li>Addresses Tech Debt</li>
</ul><p><b>When should you <em>upgrade </em>your code</b></p><ul>
<li>When it makes sense</li>
<li>Use Interoperability (bridge headers, HostingControllers, ViewRepresentable, etc...) to slowly bridge the gap</li>
<li>Be careful leaving too much old code behind</li>
</ul><p><b>Good Swift Code Quality</b></p><ul>
<li>Use argument labels and parameter name correctly</li>
<li>Avoid ternary operators</li>
<li>Avoid switch statements with too much logic and cases</li>
<li>Use Generics judiciously</li>
<li>Extensions are great for separating Protocol implementation</li>
</ul><p><b>Good Code Reviews and Pull Requests</b></p><ul>
<li>Clear your mind</li>
<li>Use pull requests and templates</li>
<li>Add context and details to the pull requests</li>
<li>Use screen shots to show what the result is</li>
<li>Communicate clearly what is going on</li>
<li>Let them know what to look at and what is a work-in-progress</li>
</ul><p><b>What Can Managers Do</b></p><ul>
<li>Set a great example </li>
<li>Provide enough time to the team for quality code</li>
<li>Have some background and experience with quality code</li>
<li>Be attentive and open to what your developers say</li>
<li>Allow time for unit testing</li>
</ul><p><b>Code Quality Tools</b></p><ul>
<li>
<a href="https://github.com/realm/SwiftLint">SwiftLint</a> and <a href="https://github.com/nicklockwood/SwiftFormat">SwiftFormat</a>
</li>
<li>
<a href="https://codecov.io">Codecov</a> - for code coverage</li>
<li>
<a href="https://www.codefactor.io/">CodeFactor</a> and <a href="https://codeclimate.com">CodeClimate</a> - for code quality</li>
<li>Having a human look at code is always best</li>
<li>Be thoughtful and considerate for each decision</li>
<li><a href="https://github.com/brightdigit/EggSeed">Leo's Swift Package Automated CI Template - WIP</a></li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p>Music from https://filmmusic.io<br>"Blippy Trance" by Kevin MacLeod (https://incompetech.com)<br>License: CC BY (http://creativecommons.org/licenses/by/4.0/)</p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 01 Mar 2020 00:00:00 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/99f236b1/fcf3527f.mp3" length="28842327" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/199010/full_1582306595-artwork.jpg"/>
      <itunes:duration>3540</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Anne Cahalan about maintaining good code quality, helping your team, automation, and good code reviews.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Anne Cahalan about maintaining good code quality, helping your team, automation, and good code reviews.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Accessibility with Kim Arnett</title>
      <itunes:episode>38</itunes:episode>
      <itunes:title>Accessibility with Kim Arnett</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">b91086fb-e11a-4cbb-bdd9-36ec1a4b14a4</guid>
      <link>https://share.transistor.fm/s/0aedd602</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://kimarnett.com"><strong>Kim Arnett (kimarnett.com)</strong></a><ul>
<li><a href="https://twitter.com/kaydacode"><strong>Twitter @kaydacode</strong></a></li>
<li><a href="https://dev.to/kaydacode"><strong>DEV.TO @kaydacode</strong></a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul><li><a href="https://share.transistor.fm/s/29d6ee9b"><strong>Episode 31: Future Proofing Your Apps with Gui Rambo</strong></a></li></ul><p><b>Related Links</b></p><ul>
<li><a href="https://medium.com/@mosaicofminds/the-curb-cut-effect-how-making-public-spaces-accessible-to-people-with-disabilities-helps-everyone-d69f24c58785"><strong>The Curb Cut Effect: How Making Public Spaces Accessible to People With Disabilities Helps Everyone</strong></a></li>
<li><a href="https://www.deque.com"><strong>Deque</strong></a></li>
<li><a href="http://chrisdemars.com"><strong>Chris DeMars</strong></a></li>
<li><a href="https://twitter.com/NathanLoding"><strong>Nathan Loding</strong></a></li>
<li><a href="https://www.a11ywithlindsey.com"><strong>a11y with lindsey</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>What is Accessibility</b></p><ul>
<li>Accessibility is more than just permanent disabilities</li>
<li>Considering text size, color blindness, screen readers, touch issues</li>
</ul><p><b>What Can Developers Do Now?</b></p><ul>
<li>Making fonts scalable with Dynamic Text </li>
<li>Consider text size based on other languages</li>
<li>Apple makes it simple to include accessibility</li>
<li><strong>Using built-in controls over third-party tools</strong></li>
<li>Using accessibility labels</li>
<li>Don't forget Dark Mode</li>
</ul><p><b>Why Accessibility is important?</b></p><ul>
<li>Includes a larger audience which depends on it</li>
<li><em>20% report having disabilities</em></li>
<li>Fear of Lawsuit 😱</li>
<li><strong><em>Make Sure Everyone Has A Voice</em></strong></li>
<li><a href="https://medium.com/@mosaicofminds/the-curb-cut-effect-how-making-public-spaces-accessible-to-people-with-disabilities-helps-everyone-d69f24c58785">The Curb Cut Effect: How Making Public Spaces Accessible to People With Disabilities Helps Everyone</a></li>
</ul><p><b>What can managers do?</b></p><ul>
<li>The importance of diversity in your team</li>
<li>Practice using the app without sight and only screen readers</li>
<li>Using iPhone Accessibility settings to test your app</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p>Music from https://filmmusic.io<br>"Blippy Trance" by Kevin MacLeod (https://incompetech.com)<br>License: CC BY (http://creativecommons.org/licenses/by/4.0/)</p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://kimarnett.com"><strong>Kim Arnett (kimarnett.com)</strong></a><ul>
<li><a href="https://twitter.com/kaydacode"><strong>Twitter @kaydacode</strong></a></li>
<li><a href="https://dev.to/kaydacode"><strong>DEV.TO @kaydacode</strong></a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul><li><a href="https://share.transistor.fm/s/29d6ee9b"><strong>Episode 31: Future Proofing Your Apps with Gui Rambo</strong></a></li></ul><p><b>Related Links</b></p><ul>
<li><a href="https://medium.com/@mosaicofminds/the-curb-cut-effect-how-making-public-spaces-accessible-to-people-with-disabilities-helps-everyone-d69f24c58785"><strong>The Curb Cut Effect: How Making Public Spaces Accessible to People With Disabilities Helps Everyone</strong></a></li>
<li><a href="https://www.deque.com"><strong>Deque</strong></a></li>
<li><a href="http://chrisdemars.com"><strong>Chris DeMars</strong></a></li>
<li><a href="https://twitter.com/NathanLoding"><strong>Nathan Loding</strong></a></li>
<li><a href="https://www.a11ywithlindsey.com"><strong>a11y with lindsey</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>What is Accessibility</b></p><ul>
<li>Accessibility is more than just permanent disabilities</li>
<li>Considering text size, color blindness, screen readers, touch issues</li>
</ul><p><b>What Can Developers Do Now?</b></p><ul>
<li>Making fonts scalable with Dynamic Text </li>
<li>Consider text size based on other languages</li>
<li>Apple makes it simple to include accessibility</li>
<li><strong>Using built-in controls over third-party tools</strong></li>
<li>Using accessibility labels</li>
<li>Don't forget Dark Mode</li>
</ul><p><b>Why Accessibility is important?</b></p><ul>
<li>Includes a larger audience which depends on it</li>
<li><em>20% report having disabilities</em></li>
<li>Fear of Lawsuit 😱</li>
<li><strong><em>Make Sure Everyone Has A Voice</em></strong></li>
<li><a href="https://medium.com/@mosaicofminds/the-curb-cut-effect-how-making-public-spaces-accessible-to-people-with-disabilities-helps-everyone-d69f24c58785">The Curb Cut Effect: How Making Public Spaces Accessible to People With Disabilities Helps Everyone</a></li>
</ul><p><b>What can managers do?</b></p><ul>
<li>The importance of diversity in your team</li>
<li>Practice using the app without sight and only screen readers</li>
<li>Using iPhone Accessibility settings to test your app</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p>Music from https://filmmusic.io<br>"Blippy Trance" by Kevin MacLeod (https://incompetech.com)<br>License: CC BY (http://creativecommons.org/licenses/by/4.0/)</p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 23 Feb 2020 00:00:00 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/0aedd602/973507ec.mp3" length="15468899" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/198935/full_1582298678-artwork.jpg"/>
      <itunes:duration>1868</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Kim Arnett of Expedia, about the importance of accessibility and how to make it part of your team’s development process.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Kim Arnett of Expedia, about the importance of accessibility and how to make it part of your team’s development process.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Machine Learning with Kevin Scott</title>
      <itunes:episode>37</itunes:episode>
      <itunes:title>Machine Learning with Kevin Scott</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">043f4d7d-e7e2-40e4-a5fe-b2ba52229186</guid>
      <link>https://share.transistor.fm/s/52ef1db7</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<strong>Kevin Scott </strong><ul>
<li><a href="https://www.hackingwithswift.com/"><strong>https://thekevinscott.com</strong></a></li>
<li><a href="https://twitter.com/thekevinscott"><strong>Twitter @thekevinscott</strong></a></li>
<li><a href="https://dljsbook.com"><strong>Deep Learning with JS by Kevin Scott</strong></a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul><li><a href="https://share.transistor.fm/s/bf0516f2"><strong>Episode 34: Server-Side Swift with Tim Condon</strong></a></li></ul><p><b>Related Links</b></p><ul><li><a href="https://heartbeat.fritz.ai/deploying-core-ml-models-using-vapor-c562a70b1371"><strong>Deploying Core ML models using Vapor - Fritz.AI</strong></a></li></ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>What is Machine Learning</b></p><ul>
<li>Teaching Machines to Predict Based On Data</li>
<li>Having Machines Mimic Behavior</li>
<li>Subgroup with Artificial Intelligence</li>
</ul><p><b>How Developers and Companies Can Get Started </b></p><ul>
<li>Data Preparation</li>
<li><a href="https://www.theverge.com/2017/11/1/16589246/machine-learning-data-science-dirty-data-kaggle-survey-2017">“There's the joke that 80 percent of data science is cleaning the data and 20 percent is complaining about cleaning the data”</a></li>
<li>Using Pre-Trained Models</li>
<li>Using AWS SageMaker </li>
<li>JS vs Python vs R vs Julia vs Swift</li>
<li>The Advent of Server-Side Swift in ML</li>
<li>Preparing Enough Data or Using Synthetic Data</li>
<li>Using Augmented Data</li>
</ul><p><b>What are the different types of Machine Learning?</b></p><ul>
<li>Statistical Learning using Structured Data</li>
<li>Transfer Learning with Neural Networks</li>
<li>Model Training </li>
</ul><p><b>Examples and Usage of Machine Learning</b></p><ul>
<li>Predictions Based On Structured Data</li>
<li>Sound Filtering</li>
<li>Computational Photography</li>
<li>Image Classification and Enhancement</li>
<li>Health Care (while respecting Privacy)</li>
<li>Augmented Reality</li>
<li>Audio Transcription</li>
</ul><p><b>Where And How To Implement ML</b></p><ul>
<li>Any Apps which use Rich Media (i.e. Image, Audio, etc...)</li>
<li>Server-Side vs Client-Side</li>
<li>Future of using ML with Text</li>
<li>What's the future of Machine Learning</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p>Music from https://filmmusic.io<br>"Blippy Trance" by Kevin MacLeod (https://incompetech.com)<br>License: CC BY (http://creativecommons.org/licenses/by/4.0/)</p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<strong>Kevin Scott </strong><ul>
<li><a href="https://www.hackingwithswift.com/"><strong>https://thekevinscott.com</strong></a></li>
<li><a href="https://twitter.com/thekevinscott"><strong>Twitter @thekevinscott</strong></a></li>
<li><a href="https://dljsbook.com"><strong>Deep Learning with JS by Kevin Scott</strong></a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul><li><a href="https://share.transistor.fm/s/bf0516f2"><strong>Episode 34: Server-Side Swift with Tim Condon</strong></a></li></ul><p><b>Related Links</b></p><ul><li><a href="https://heartbeat.fritz.ai/deploying-core-ml-models-using-vapor-c562a70b1371"><strong>Deploying Core ML models using Vapor - Fritz.AI</strong></a></li></ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>What is Machine Learning</b></p><ul>
<li>Teaching Machines to Predict Based On Data</li>
<li>Having Machines Mimic Behavior</li>
<li>Subgroup with Artificial Intelligence</li>
</ul><p><b>How Developers and Companies Can Get Started </b></p><ul>
<li>Data Preparation</li>
<li><a href="https://www.theverge.com/2017/11/1/16589246/machine-learning-data-science-dirty-data-kaggle-survey-2017">“There's the joke that 80 percent of data science is cleaning the data and 20 percent is complaining about cleaning the data”</a></li>
<li>Using Pre-Trained Models</li>
<li>Using AWS SageMaker </li>
<li>JS vs Python vs R vs Julia vs Swift</li>
<li>The Advent of Server-Side Swift in ML</li>
<li>Preparing Enough Data or Using Synthetic Data</li>
<li>Using Augmented Data</li>
</ul><p><b>What are the different types of Machine Learning?</b></p><ul>
<li>Statistical Learning using Structured Data</li>
<li>Transfer Learning with Neural Networks</li>
<li>Model Training </li>
</ul><p><b>Examples and Usage of Machine Learning</b></p><ul>
<li>Predictions Based On Structured Data</li>
<li>Sound Filtering</li>
<li>Computational Photography</li>
<li>Image Classification and Enhancement</li>
<li>Health Care (while respecting Privacy)</li>
<li>Augmented Reality</li>
<li>Audio Transcription</li>
</ul><p><b>Where And How To Implement ML</b></p><ul>
<li>Any Apps which use Rich Media (i.e. Image, Audio, etc...)</li>
<li>Server-Side vs Client-Side</li>
<li>Future of using ML with Text</li>
<li>What's the future of Machine Learning</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p>Music from https://filmmusic.io<br>"Blippy Trance" by Kevin MacLeod (https://incompetech.com)<br>License: CC BY (http://creativecommons.org/licenses/by/4.0/)</p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 09 Feb 2020 00:00:00 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/52ef1db7/99098ff1.mp3" length="18468928" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/190222/full_1580763849-artwork.jpg"/>
      <itunes:duration>2248</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Kevin Scott, Machine Learning expert about how to get started with Machine Learning and what are some applications for machine learning.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Kevin Scott, Machine Learning expert about how to get started with Machine Learning and what are some applications for machine learning.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Upgrading Your Skills in 2020 with Paul Hudson</title>
      <itunes:episode>36</itunes:episode>
      <itunes:title>Upgrading Your Skills in 2020 with Paul Hudson</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">5a4a21cf-cd35-4219-9421-0a20b65e6b15</guid>
      <link>https://share.transistor.fm/s/eba8ef64</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<strong>Paul Hudson </strong><ul>
<li><a href="https://www.hackingwithswift.com"><strong>Hacking With Swift</strong></a></li>
<li><a href="https://twitter.com/twostraws"><strong>Twitter @twostraws</strong></a></li>
<li><a href="https://www.reddit.com/user/twostraws">Reddit /u/twostraws</a></li>
<li><a href="https://stackoverflow.com/users/5041820/twostraws">StackOverflow <em>twostraws</em></a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/c8f9aa41"><strong>Episode 23: Modularizing in Xcode with Abbey Jackson</strong></a></li>
<li><a href="https://share.transistor.fm/s/a14f868f"><strong>Episode 24: Continuous Integration with Kyle Newsome</strong></a></li>
<li><a href="https://share.transistor.fm/s/eaeed04a"><strong>Episode 32: Training Your Team with Steve Lipton</strong></a></li>
<li><a href="https://share.transistor.fm/s/71500d55"><strong>Episode 33: 2020 Developer Wish List with Alex Bush</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li>
<strong>Conferences</strong><ul>
<li>
<a href="https://2020.iosconf.sg"><strong>iOS Conf SG</strong></a><ul><li><a href="https://twitter.com/twostraws/status/1218808819456733185?s=20">Nice Waterfall Tweet</a></li></ul>
</li>
<li>
<a href="https://www.codemash.org">CodeMash</a><ul><li><a href="https://twitter.com/leogdion/status/1215680952925609984?s=20">Playing at CodeMash</a></li></ul>
</li>
<li><a href="https://www.dotswift.io">dotSwift</a></li>
<li><a href="https://theswiftalps.com">SwiftAlps</a></li>
<li><a href="https://swiftaveiro.xyz">SwiftAvero</a></li>
<li><a href="https://swiftisland.nl">Swift Island</a></li>
<li><a href="https://us.pycon.org/2020/">PyCon</a></li>
<li><a href="https://www.youtube.com/watch?v=4XwRKmmDRNU">Swift TO Transparency Report</a></li>
</ul>
</li>
<li><a href="https://anchor.fm/swiftovercoffee/episodes/S1E16-Live-from-iOSCon-2019-e3k71v">Sean Allen and Paul Hudson talk about Connie, the young coder</a></li>
<li><a href="https://vimeo.com/354554006"><strong>SwiftTO - Paul Hudson - The Evolution of Swift</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>Conference Thoughts</b></p><ul>
<li>Cultural Differences </li>
<li>Why Speakers Should Be Available To Attendees</li>
<li>The Challenges of Putting On Conferences</li>
<li>Organizers Making Attendees Happy</li>
<li>Having Really Nice Venue</li>
<li>Workshops vs Talks</li>
<li>Where Does the Community Fall Short with Inclusivity and Accessibility</li>
<li>Having Children-Friendly and Budget-Friendly Events</li>
</ul><p><b>What to Upgrade Skills and Why</b></p><ul>
<li>Where Do You Want to Be In a Year?</li>
<li>Ask People In Those Positions</li>
<li>The Technology Field Demands Continuing Education</li>
<li>Continuing Education means New APIs but also...<ul>
<li>Older APIs - UIKit, Networking, Unit Testing, etc...</li>
<li>Swift Syntax</li>
<li>Patterns and Practice</li>
</ul>
</li>
</ul><p><b>Dealing with Updates to Swift </b></p><ul>
<li>The hedonic <strong>treadmill of Swift Development</strong>
</li>
<li><a href="https://github.com/apple/swift-evolution/blob/master/proposals/0249-key-path-literal-function-expressions.md">Key Path Expressions as Functions by Stephen Celis and Greg Titus</a></li>
<li>Objective-C Cruft</li>
<li>When to Upgrade Your Old Swift Projects? (spoiler... Yesterday!)</li>
</ul><p><b>Upgrading Your Core Skills</b></p><ul>
<li>Why it's important to have Core Skills and not just Coding Skills?</li>
<li>The Importance of Good Internal Presentation </li>
<li>Why Senior Developers need Good Communication Skills</li>
<li>Picking Up on Impromptu Speaking Skills</li>
<li>Don't Feel Obligated Into a Role such as Public Speaker</li>
</ul><p><b>Upgrading Your Swift Skills</b></p><ul>
<li>Paul's Thoughts on SwiftUI</li>
<li>Understanding The New Patterns of SwiftUI</li>
<li>The Importance of Unit Testing</li>
<li>Ash Farrow on JS vs Swift</li>
<li>The Complexity of Xcode</li>
</ul><p><b>Upgrading Other Tech Skills</b></p><ul>
<li>Git and Version Control</li>
<li>Learning New and Different Tools</li>
<li>Terminal and Bash Scripting</li>
<li>Regular Expressions</li>
<li>Try Swift on other Devices</li>
<li>Be curious about other languages and platforms</li>
</ul><p><b>Recommended Courses and books</b></p><ul>
<li><a href="https://www.hackingwithswift.com/store/testing-swift">Testing With Swift</a></li>
<li><a href="https://www.hackingwithswift.com/store/swift-design-patterns">Swift Design Patterns</a></li>
<li><a href="https://www.swiftforgood.com"><strong>Swift For Good</strong></a></li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p>Music from https://filmmusic.io<br>"Blippy Trance" by Kevin MacLeod (https://incompetech.com)<br>License: CC BY (http://creativecommons.org/licenses/by/4.0/)</p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<strong>Paul Hudson </strong><ul>
<li><a href="https://www.hackingwithswift.com"><strong>Hacking With Swift</strong></a></li>
<li><a href="https://twitter.com/twostraws"><strong>Twitter @twostraws</strong></a></li>
<li><a href="https://www.reddit.com/user/twostraws">Reddit /u/twostraws</a></li>
<li><a href="https://stackoverflow.com/users/5041820/twostraws">StackOverflow <em>twostraws</em></a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/c8f9aa41"><strong>Episode 23: Modularizing in Xcode with Abbey Jackson</strong></a></li>
<li><a href="https://share.transistor.fm/s/a14f868f"><strong>Episode 24: Continuous Integration with Kyle Newsome</strong></a></li>
<li><a href="https://share.transistor.fm/s/eaeed04a"><strong>Episode 32: Training Your Team with Steve Lipton</strong></a></li>
<li><a href="https://share.transistor.fm/s/71500d55"><strong>Episode 33: 2020 Developer Wish List with Alex Bush</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li>
<strong>Conferences</strong><ul>
<li>
<a href="https://2020.iosconf.sg"><strong>iOS Conf SG</strong></a><ul><li><a href="https://twitter.com/twostraws/status/1218808819456733185?s=20">Nice Waterfall Tweet</a></li></ul>
</li>
<li>
<a href="https://www.codemash.org">CodeMash</a><ul><li><a href="https://twitter.com/leogdion/status/1215680952925609984?s=20">Playing at CodeMash</a></li></ul>
</li>
<li><a href="https://www.dotswift.io">dotSwift</a></li>
<li><a href="https://theswiftalps.com">SwiftAlps</a></li>
<li><a href="https://swiftaveiro.xyz">SwiftAvero</a></li>
<li><a href="https://swiftisland.nl">Swift Island</a></li>
<li><a href="https://us.pycon.org/2020/">PyCon</a></li>
<li><a href="https://www.youtube.com/watch?v=4XwRKmmDRNU">Swift TO Transparency Report</a></li>
</ul>
</li>
<li><a href="https://anchor.fm/swiftovercoffee/episodes/S1E16-Live-from-iOSCon-2019-e3k71v">Sean Allen and Paul Hudson talk about Connie, the young coder</a></li>
<li><a href="https://vimeo.com/354554006"><strong>SwiftTO - Paul Hudson - The Evolution of Swift</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>Conference Thoughts</b></p><ul>
<li>Cultural Differences </li>
<li>Why Speakers Should Be Available To Attendees</li>
<li>The Challenges of Putting On Conferences</li>
<li>Organizers Making Attendees Happy</li>
<li>Having Really Nice Venue</li>
<li>Workshops vs Talks</li>
<li>Where Does the Community Fall Short with Inclusivity and Accessibility</li>
<li>Having Children-Friendly and Budget-Friendly Events</li>
</ul><p><b>What to Upgrade Skills and Why</b></p><ul>
<li>Where Do You Want to Be In a Year?</li>
<li>Ask People In Those Positions</li>
<li>The Technology Field Demands Continuing Education</li>
<li>Continuing Education means New APIs but also...<ul>
<li>Older APIs - UIKit, Networking, Unit Testing, etc...</li>
<li>Swift Syntax</li>
<li>Patterns and Practice</li>
</ul>
</li>
</ul><p><b>Dealing with Updates to Swift </b></p><ul>
<li>The hedonic <strong>treadmill of Swift Development</strong>
</li>
<li><a href="https://github.com/apple/swift-evolution/blob/master/proposals/0249-key-path-literal-function-expressions.md">Key Path Expressions as Functions by Stephen Celis and Greg Titus</a></li>
<li>Objective-C Cruft</li>
<li>When to Upgrade Your Old Swift Projects? (spoiler... Yesterday!)</li>
</ul><p><b>Upgrading Your Core Skills</b></p><ul>
<li>Why it's important to have Core Skills and not just Coding Skills?</li>
<li>The Importance of Good Internal Presentation </li>
<li>Why Senior Developers need Good Communication Skills</li>
<li>Picking Up on Impromptu Speaking Skills</li>
<li>Don't Feel Obligated Into a Role such as Public Speaker</li>
</ul><p><b>Upgrading Your Swift Skills</b></p><ul>
<li>Paul's Thoughts on SwiftUI</li>
<li>Understanding The New Patterns of SwiftUI</li>
<li>The Importance of Unit Testing</li>
<li>Ash Farrow on JS vs Swift</li>
<li>The Complexity of Xcode</li>
</ul><p><b>Upgrading Other Tech Skills</b></p><ul>
<li>Git and Version Control</li>
<li>Learning New and Different Tools</li>
<li>Terminal and Bash Scripting</li>
<li>Regular Expressions</li>
<li>Try Swift on other Devices</li>
<li>Be curious about other languages and platforms</li>
</ul><p><b>Recommended Courses and books</b></p><ul>
<li><a href="https://www.hackingwithswift.com/store/testing-swift">Testing With Swift</a></li>
<li><a href="https://www.hackingwithswift.com/store/swift-design-patterns">Swift Design Patterns</a></li>
<li><a href="https://www.swiftforgood.com"><strong>Swift For Good</strong></a></li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p>Music from https://filmmusic.io<br>"Blippy Trance" by Kevin MacLeod (https://incompetech.com)<br>License: CC BY (http://creativecommons.org/licenses/by/4.0/)</p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 02 Feb 2020 00:00:00 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/eba8ef64/6a9abde7.mp3" length="34034249" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/184230/full_1579876427-artwork.jpg"/>
      <itunes:duration>4199</itunes:duration>
      <itunes:summary>In this episode, Leo is joined by Paul Hudson of hackingwithswift.com about how to upgrade your skills and your team’s skills in 2020.</itunes:summary>
      <itunes:subtitle>In this episode, Leo is joined by Paul Hudson of hackingwithswift.com about how to upgrade your skills and your team’s skills in 2020.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>SwiftUI - The Good, the Bad, and the Benefits</title>
      <itunes:episode>35</itunes:episode>
      <itunes:title>SwiftUI - The Good, the Bad, and the Benefits</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">8faa2d06-014f-403c-89c9-68896460c25d</guid>
      <link>https://share.transistor.fm/s/87165d83</link>
      <description>
        <![CDATA[<p><b><a href="https://youtu.be/8X2GVqg2lUI">Video</a></b></p><ul><li><a href="https://youtu.be/8X2GVqg2lUI"><strong>https://youtu.be/8X2GVqg2lUI</strong></a></li></ul><p><b><a href="https://brightdigit.com/blog/2020/02/04/swiftui-everything-is-possible-if-you-think-like-apple/">Full Article</a></b></p><ul><li><a href="https://brightdigit.com/blog/2020/02/04/swiftui-everything-is-possible-if-you-think-like-apple/"><strong>SwiftUI: Everything is possible if you think like Apple</strong></a></li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/bcf9bb21"><strong>Episode 12: iOS Developer Interviews with Alex Bush</strong></a></li>
<li><a href="https://share.transistor.fm/s/7247db7e"><strong>Episode 14: iOS App Architecture with René Cacheaux and Josh Berlin</strong></a></li>
<li><a href="https://share.transistor.fm/s/3d4c7634"><strong>Episode 18: WWDC 2019 - Apple Watch with Gary Sabo</strong></a></li>
<li><a href="https://share.transistor.fm/s/03051561"><strong>Episode 19: WWDC 2019 - Swift UI with Jason Anderson</strong></a></li>
<li><a href="https://share.transistor.fm/s/4f8b37d3"><strong>Episode 20: WWDC 2019 - Mac Development with Daniel Jalkut</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://heartwitch.app">Heartwitch - Live Stream Your Health Stats Right From Your Apple Watch - https://heartwitch.app</a></li>
<li><a href="https://github.com/brightdigit/lansingcodes-apple">LansingCodes - GitHub Repo</a></li>
<li><a href="https://github.com/brightdigit/peopart">Peopart Project</a></li>
<li><a href="https://www.youtube.com/watch?v=FlpOZuGfwQU&amp;list=PLmpJxPaZbSnDoyjbMLjULWv2s0JHQqJcB">Detroit Tech Watch - Getting Started with Swift and Apple Watch Development</a></li>
<li><a href="https://nooverviewavailable.com">No Overview Available</a></li>
<li><a href="https://rambo.codes/swiftui/2020/01/03/you-can-use-swiftui-today.html">Gui Rambo - You Can Use SwiftUI Today</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>Experience and Example Projects</b></p><ul>
<li>
<a href="https://github.com/brightdigit/peopart">Peopart Project</a><ul><li><a href="https://www.youtube.com/watch?v=FlpOZuGfwQU&amp;list=PLmpJxPaZbSnDoyjbMLjULWv2s0JHQqJcB">Detroit Tech Watch - Getting Started with Swift and Apple Watch Development</a></li></ul>
</li>
<li><a href="https://github.com/brightdigit/lansingcodes-apple">LansingCodes - GitHub Repo</a></li>
<li><a href="https://heartwitch.app">Heartwitch - Live Stream Your Health Stats Right From Your Apple Watch - https://heartwitch.app</a></li>
</ul><p><b>Why SwiftUI Now?</b></p><ul>
<li>Single Source of Truth</li>
<li>Declarative vs Imperative Programming</li>
<li>Functional Reactive Programming</li>
<li>Terminology of SwiftUI and Apple</li>
</ul><p><b>Why not SwiftUI?</b></p><ul>
<li>Older Operating Systems</li>
<li>Using Special UIKit Views and Controls</li>
<li>Requires Very Stable App with Good Documentation</li>
</ul><p><b>Workarounds for SwiftUI</b></p><ul>
<li>Preprocessor Directives and Attributes</li>
<li>UIViewRepresentable and UIViewControllerRepresentable</li>
</ul><p><b>When SwiftUI is Ideal</b></p><ul>
<li>Simple UI</li>
<li>Apple Watch</li>
<li>Cutting Edge Audience</li>
<li>Internal Projects</li>
<li>Brand New Apps</li>
<li>Cross Apple Platform</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p>Music from https://filmmusic.io<br>"Blippy Trance" by Kevin MacLeod (https://incompetech.com)<br>License: CC BY (http://creativecommons.org/licenses/by/4.0/)</p><p><b>Transcription</b></p><p><strong>Leo Dion (Host): </strong>Welcome again to another episode of empowerapps.Show. Thank you for joining me. I'm the host, Leo Dion. This is the BrightDigit podcast where I talk about Swift development, development in the Apple ecosystem, and  just overall updates, changes in ways that managers, CTOs and developers can stay current and up to date with new things coming out when it comes to Swift and Apple products. </p><p>[00:00:36] Today, I'm going to be talking a little bit more about SwiftUI -  the good, the bad, and the benefits. Specifically, I want to talk about my experience and examples of work that I've been doing in SwiftUI over the last few months, and then we'll be getting into why Swift UI is here, why Apple introduced it in 2019 we'll then be talking about why SwiftUI is not really a good use case in a lot of examples. I'll be talking about some workarounds about how to get around that if you still want to use Swift UI. And then we're getting into  when and where Swift UI is the ideal use and what apps or maybe  devices, where Swift UI really makes a lot of sense. </p><p>[00:01:21] So I want to talk a little bit about my experience and examples of where I've been using Swift UI.</p><p>[00:01:27] So back in June, I actually did a workshop, and while it was the same month as WWDC, a couple of weeks actually afterwards, I ended up using UI kit for it.  I called it PeoPart because that's the random name generator - what it came up with. Essentially, it's a list of blog posts and comments that you can see on an iOS app.</p><p>[00:01:50] I use UIKit for this example. Because at the time I really didn't want to jump into SwiftUI with new developers and risk that. But I will say that with this application I am slowly migrating over to SwiftUI. So the sample app actually available for you on GitHub and they will share a link for folks later in the show  notes.</p><p>[00:02:16] But this is a example that I want to see what it'll do and what it will take to convert a UIKit app over to Swift UI and see what exactly happens when I do that. </p><p>[00:02:29] he other example is a app that I'm using or a building for my local coding community. Lansing codes where people in Lansing can see what events and what meetups are taking place.</p><p>[00:02:43] It uses the Firebase backend and Web API that Eric, my colleague had built for the local community and uses combine, obviously along with Firebase. It uses Swift UI and I think it's a really great example of where I'm taking a fairly simple app, brand new, basically new app and building it into a iPhone app in this case. </p><p>[00:03:09] Lastly, you probably heard, I've been working on an app called HeartTwitch ,an independent watch app. They use a Swift UI and Vapor as the backend, and the idea of this app is that live streamers can share their heart rate right from their Apple watch and then take that sharing to a web browser window.</p><p>[00:03:27] Then use something like OBS for live streaming to share that video. This is a great example of using Swift UI. It's a brand new app. It's Apple watch. It makes a lot of sense because we're talking about streaming data. And so, this is one example where I think that Swift UI works out really well, and that is the Apple watch.</p><p>[00:03:46] So you're probably wondering why is Swift UI now? And I think there's a few good reasons. We did an episode back in June with René Cacheaux and Josh Berlin from raywenderlich.com to talk about iOS app architecture and René had some really strong opinions about the issues with storyboards specifically this idea of single source of truth.</p><p>[00:04:09] <em>What are your recommendations or your personal styling? <br></em><br></p><p>[00:04:12] <strong>René Cacheaux (Guest): </strong><em>I would not recommend anyone using Interface Builder, especially in large teams. <br></em><br></p><p>[00:04:17] <strong>Leo Dion (Host): </strong><em>Yes. <br></em><br></p><p>[00:04:17] <strong>René Cacheaux (Guest): </strong><em>That's one of the opinions that I do have. It's mostly because with interface builder. You don't have a source of truth. Everything that you put in your storyboard or your nib file is subject to change by the code underneath it.<br></em><br></p><p>[00:04:30] <em>And so when you're looking at the storyboard itself and your kind of tweaking the layout and you're taking the constraints and stuff like that, there's nothing stopping the code underneath of completely changing that. And so when there's bugs and stuff, sometimes it's really hard to figure out the root cause, cause you can't just look at the storyboard </em>t<em>hat's not enough. <br></em><br></p><p>[00:04:46] <strong>Leo Dion (Host): </strong>He said the problem with storyboards as well with coded applications. If you're doing two of the same thing, then you run into the issue where your UI is not going to look like what you expect it to look like when you build the Storyboard in Interface Builder as opposed to coding. and this can run into issues because you don't have a <em>Single Source of Truth</em> for how your user interface is going to work out.</p><p>[00:05:14] What is exactly Single Source of Truth. what Wikipedia says is it's <em>the practice of structuring information models and associated data schema such that every data element is mastered or edited in one place.</em> In other words, you have one central location where data is, as data is added or entered or edited.</p><p>[00:05:35] The view automatically updates that accordingly. And what this comes down to is what's called reactive programming or functional reactive programming. And we talked a little bit about this with Jason in our Swift UI episode. Jason has a lot of years of experience building a user interface and reactive programming, reactive frameworks have been around, even back when, Objective-C was the only way to develop an app. And Jason talked about this and how reactive programming is supposed to work. </p><p>[00:06:06] <strong>Jason Anderson (Guest): </strong><em>So we all sat down and we looked at it and we started incorporating that into the work that we're doing. It's particularly nice because a lot of the apps we were developing at the time were very heavy with network updates.<br></em><br></p><p>[00:06:18] <em>A lot of JSON API requests</em> <em> that were </em>d<em>ependent upon each other. So, you know, you would set up maybe a, an operation queue that you would have to have something before you get to the next and try to create these dependencies. But you know, that code can become a little bit difficult to manage long-term.<br></em><br></p><p>[00:06:37] <em>But then when he started showing me how these streams, as they're called on the reactive cocoa world. Basically streams of data that you can subscribe to. We can observe this object. You can subscribe to the data that's coming across and you can manipulate on the fly to get it to what you need. And as those data pieces are coming across, you can filter them based on specific criteria.<br></em><br></p><p>[00:07:00] <em>You can map them into other objects, you can trigger new network calls based on the results. It became very easy to tie in a lot of that dependency logic into </em>a<em> single network call, where before we would have, you know, a delegates and operation cues and things just strung out throughout the app. Now we have one simple change function that has that logic kept in one place.<br></em><br></p><p>[00:07:24] <em>So it was, it was kind of nice to keep that altogether there, so it was much easier to maintain. <br></em><br></p><p>[00:07:29] <strong>Leo Dion (Host): </strong>There's some really interesting examples and places where reactive programming has already been used. We see this when it comes to a lot of the JavaScript libraries out there. I think Angular kind of does a Reactive thing - even ReactJS does a bit and VueJs. </p><p>[00:07:46] They all kind of have this idea of having a central place where data is stored and used and reacted to and kind of like a two way binding sort of way. I had some experience with this actually when I used to do a Silverlight development. Yes. How many of you remember SilverLight? </p><p>[00:08:05] The idea is we're shifting away from Apple's suggested pattern of model-view-controller where you have a central controller that listens to model changes and updates the view. And now what we have is a view model-model-view pattern.</p><p>[00:08:22] The idea being is that there is a view model, which is a conversion of that model into a data model that the view will use in order to show what is going on. For instance, like you might have a list of people, but that list of people is not just going to have that data object for people, but it might also have some other metadata that you want to display on the screen or view model, which will say things like, what color to show or what font to say, and things like this will be stored in a view model so that the view can update it accordingly.</p><p>[00:08:56] Some of the components that are used in reactive programming had been translated over to Combine and Swift UI. And there's some specific terminology that's been used. </p><p>[00:09:05] For instance, we have the idea of a Publisher. So one example is where you're downloading data from a URL, you'll have a Publisher that will have that data or error based on how the status of that network requests went.</p><p>[00:09:19] And then you might use functional programming to then map that data and using JSON decoder to a set of people instances or blog content. And then you also have the ability to take errors and be able to map those into, say, an empty list of people. Because in some cases, you may not want to show an error - you may want to just want to show an empty list. Um, so that's the idea of a publisher. It's a stream of events that you then are using. Functional programming can map to specific data or data instances. </p><p>[00:09:53] We also have the idea of a subscriber. A subscriber is something that listens in to a publisher and updates accordingly.</p><p>[00:10:02] So when it comes to like functional programming, a lot of your functions are kind of subscribers in a way. The most common subscriber that we see, especially with SwiftUI is the idea of observable objects. So for instance. you create a class, which is your view model, which listening listens into updates of models based on data from a URL.</p><p>[00:10:25] The object model does whatever mapping needs to take place and then updates the view model accordingly. We also have like an EnvironmentObject, States, ObservableObjects, things  like this. Depending on how you want that data used throughout the view hierarchy. But the essential idea is like this Observable or Observed object that's then used within Swift UI.</p><p>[00:10:48] I think the biggest benefit, what we will see with SwiftUI is we can finally say goodbye to Storyboards. I think Storyboards have gotten as far as they can get essentially. And the biggest problem with Storyboards is that you're  constantl  dealing with a really complex set of user interfaces.</p><p>[00:11:13] And I think it also introduced, instead of using UI to build your user interface, we can finally have what's called declarative programming brought into Swift. So before a lot, if you do a coded UI, for instance, you're doing a lot of imparative programming and creating that user interface. Here we're using declarative programming.</p><p>[00:11:33] Where we can do things that we've commonly seen when it comes to HTML. So instead of saying, print out paragraph, print this out and this font print, animate this thing accordingly. We're using declarative programming as a way to basically have almost <em>wysiwyg</em> almost declarative way of seeing how of UI is structured using code. </p><p>[00:12:03] So you just put in a paragraph within a <em>div</em>, you don't have to say print paragraph, begin print paragraph and things like this. It's all looks according to how your code looks. Another issue that we see with Storyboards is when we're doing a development within teams. So Alex had a really great point about how storyboards kind of have their own limitations.</p><p>[00:12:30] <strong>Alex Bush (Guest): </strong><em>There are, there are trade offs for one approach and another, and at some point it breaks down, right? Or. In some cases it doesn't make sense. And specifically I'm talking about, let's say storyboards don't make a breakdown on scale. When you have. I don't know, more than 20 people, let's say working on the app, but then it does make sense to do it right away as you're a one or two people team.<br></em><br></p><p>[00:12:55] <strong>Leo Dion (Host): </strong><em>Yes<br></em><br></p><p>[00:12:57] When it comes to working with teams, I think we see the biggest issue when we're merging different storyboards together or multiple people are working on a single storyboard, as I often suggest, if you're going to do storyboards, make them as small as possible and use storyboard references.</p><p>[00:13:11] But in the end working on a team and working with storyboards can be a real challenge. The other benefit that we see with Swift UI is that Apple now has a way to build <em>cross-platform applications </em>that is cross platform within Apple's ecosystem using Swift UI. I don't know how many of you remember Catalyst, but we talked about this in our episode with Daniel Jalkut where we talk about Mac development and how Catalyst kind of ran into certain limitations.</p><p>[00:13:44] <strong>Daniel Jalkut (Guest): </strong><em>No, it's funny. I had another snap reaction to that during the keynote, and it was basically, I think I tweeted something like. Apple has announced and deprecated a technology all in the space of one keynote, which was basically like: Hey, there's this brand new exciting technology we have that you can adapt your iOS apps to the Mac and you should not use it </em>y<em>ou should use this new Swift UI. That's not what they said, literally, but..<br></em><br></p><p>[00:14:11]<strong>Leo Dion (Host): </strong><em> </em>S<em>o can you do a Mac app was Swift UI, but not as necessarily Catalyst? <br></em><br></p><p>[00:14:16] <strong>Daniel Jalkut (Guest): </strong>A<em>bsolutely. Yeah. Swift UI is a native technology on and that, just to clarify, that's the big promise of Swift UI is that it is a native technology on all Apple platforms.<br></em><br></p><p>[00:14:27] <strong>Leo Dion (Host): </strong><em>Okay. Yeah, <br></em><br></p><p>[00:14:28] <strong>Daniel Jalkut (Guest): </strong><em>so it's kind of funny. It means that there are two ways to write a Mac app with Swift UI. <br></em><br></p><p>[00:14:34] <strong>Leo Dion (Host): </strong><em>Right? Right. Because you could go to the Project Catalyst route and have basically one bundle essentially, that will work on </em>b<em>oth iOS and macOS </em>o<em>r you can just do a native Mac app and still use Swift UI <br></em><br></p><p>[00:14:49] <strong>Daniel Jalkut (Guest): </strong><em>Right </em>o<em>r more precisely do a native Swift UI app and have it run on the Mac on iOS, the watch, or the TV. <br></em><br></p><p>[00:14:55] <strong>Leo Dion (Host): </strong><em>Right, right. <br></em><br></p><p>[00:14:57] But now, Swift UI allows us a truly cross-platform way to build a Mac app, a watch app and iPhone or iPad app or tvOS app as well. And this goes back to our stuff about HTML. Now we have kind of this way of using almost like a media queries to be able to specify how certain OSes will look in certain ways, using preprocessor directives or things like that as well.</p><p>[00:15:26] So why might you not want to use Swift UI? I think if you're using an app that's fairly old and it still supports older operating systems, I think you're probably better off sticking with UIKit or whatever framework you're using. There's just no need and no desire to move things to Swift UI because there's nothing in there the user will really see when it comes to that. </p><p>[00:15:53] So in that case. I think that you probably can stick with UIKit </p><p>[00:15:59] And if your audience tends to be use older devices or uses older operating systems, there's no need to move to Swift UI. There's no benefit to the user in that case. </p><p>[00:16:10] Another problem we see is the lack of documentation. I think this has been a really big challenge. There's a great website that provides kind of some information about some of the issues with lack of documentation when it comes to Apple stuff. I think that can be a real challenge with something that's only been around for six months to a year. You may also require UIKit in a lot of ways.</p><p>[00:16:33] First of all, you might have like a third party dependency to UIKit. You're  using some CocoaPod that has some UI widget that uses UIKit and that case it can be a real uphill battle trying to use Swift UI in that case. There's also UI widgets that are just simply missing from Swift UI that we have in UI kit.</p><p>[00:16:51] One of the biggest ones I can think of is UICollectionView. Especially with some of the updates we have: data sources and diffable data. It makes a lot sense to stick with UICollectionView in a lot of ways because of all the features that it gives us with UIKit and a lot of robust stuff that they've added over the last few years.</p><p>[00:17:13] It makes sense to just go with UICollection and not try to hack something together necessarily in Swift UI. </p><p>[00:17:20] So you're probably wondering, well, how do I still use Swift UI if I have an older application because there are work arounds to get around this. There are things like preprocessor directives.</p><p>[00:17:32] You can say that only a newer operating systems have access to certain features that are built on SwiftUI. There's also the ability to interface between UIKit and SwiftUI. For example, when you have a application that is UIKit based and you want to bring in something from Swift UI. We have UIHostingController on iOS.</p><p>[00:17:53] Now, UIHostingController is the iOS version of that, but there's one for WatchKit as well as AppKit. And that  allows you to, use a Swift UI element within a UIKit. So that's a one great example. </p><p>[00:18:10] The other thing is that, let's say you will need to bring in something from UIKit to your SwiftUI app.</p><p>[00:18:16] In this case, you want to use something like UIViewRepresentable or UIViewControllerRepresentable, which allows you to do that. I don't know how many times I've used a activity indicator from UIKit in order to show a busy like for instance, I'm downloading a URL or making a URL request.</p><p>[00:18:35] I'll often times need to make a activity indicator from UIKit and bring that over to SwiftUI.</p><p>[00:18:42] So then the question is, when is Swift UI ideal? What is the use case where SwiftUI it makes a lot of sense. I think if your UI is fairly simple, you probably could just stick with using Swift UI. In that case, it makes a lot of sense.</p><p>[00:18:56] And an example of this is like that Lansing codes app that I built. Or, for instance, an app that just uses a table views. Why don't I  just use a List in Swift UI? It makes sense and it will work out great if you're willing to work within the limitations of Swift UI, it actually can work with you as opposed to against you.</p><p>[00:19:14] And of course that makes sense. If your devices fairly simple, like an Apple watch. I think any Apple watch app, it makes sense to switch over to Swift UI. At some point. Switch UI was built out of the Apple watch UI team, so it makes a lot of sense. </p><p>[00:19:29] The other thing is, are you willing to deal with unstable API and docs?</p><p>[00:19:33] If you're willing to deal with that and deal with the challenges and limitations that come up with that, then it's probably okay to just go to Swift UI and if you're starting with a new project and any sort of new application than maybe going with SwiftUI makes a lot of sense. </p><p>[00:19:47] If you're going to start from scratch, you may as well start using Swift UI, especially if you're thinking about migrating to other operating systems within the Apple ecosystem.</p><p>[00:19:56] And if your audience let's say people who are really technically inclined, like developers or folks who already are using the latest operating system, then it makes sense to go with Swift UI. In that case, you're willing to deal with whatever issues and be able to deal with the limitations that Swift UI has. There's a great article by Gui Rambo, which I'll link the notes.</p><p>[00:20:17] Where he talks about how Swift UI is ready in a lot of cases, and maybe if your audience is the right fit, maybe it's the right time to switch over to using Swift UI, especially if you're starting a new project or something on the Apple watch. So we have a lot of great episodes you might want to catch up on.</p><p>[00:20:33] We talk a little bit more about Swift UI and some of the new stuff that came out in WWDC. We have our episode and video that I did about Swift UI and 2020 trends. We also have the episode with Daniel Jalkut on Mac development. We talked about Swift UI and reactive programming with Jason Anderson and then Apple Watch with Gary Sabo.</p><p>[00:20:52] And if you're interested more on app architecture, we have a René Cacheaux and Josh Berlin from raywenderlich.com who talked about iOS app architecture and their great book on learning how to do iOS app architecture the right way. You can learn more and catch up with more articles and episodes on my business website brightdigit.com.</p><p>[00:21:13] As well as the podcast website. Empowerapps.show. Thanks again for joining me. I look forward to talking to you again on our next episodes.</p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b><a href="https://youtu.be/8X2GVqg2lUI">Video</a></b></p><ul><li><a href="https://youtu.be/8X2GVqg2lUI"><strong>https://youtu.be/8X2GVqg2lUI</strong></a></li></ul><p><b><a href="https://brightdigit.com/blog/2020/02/04/swiftui-everything-is-possible-if-you-think-like-apple/">Full Article</a></b></p><ul><li><a href="https://brightdigit.com/blog/2020/02/04/swiftui-everything-is-possible-if-you-think-like-apple/"><strong>SwiftUI: Everything is possible if you think like Apple</strong></a></li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/bcf9bb21"><strong>Episode 12: iOS Developer Interviews with Alex Bush</strong></a></li>
<li><a href="https://share.transistor.fm/s/7247db7e"><strong>Episode 14: iOS App Architecture with René Cacheaux and Josh Berlin</strong></a></li>
<li><a href="https://share.transistor.fm/s/3d4c7634"><strong>Episode 18: WWDC 2019 - Apple Watch with Gary Sabo</strong></a></li>
<li><a href="https://share.transistor.fm/s/03051561"><strong>Episode 19: WWDC 2019 - Swift UI with Jason Anderson</strong></a></li>
<li><a href="https://share.transistor.fm/s/4f8b37d3"><strong>Episode 20: WWDC 2019 - Mac Development with Daniel Jalkut</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://heartwitch.app">Heartwitch - Live Stream Your Health Stats Right From Your Apple Watch - https://heartwitch.app</a></li>
<li><a href="https://github.com/brightdigit/lansingcodes-apple">LansingCodes - GitHub Repo</a></li>
<li><a href="https://github.com/brightdigit/peopart">Peopart Project</a></li>
<li><a href="https://www.youtube.com/watch?v=FlpOZuGfwQU&amp;list=PLmpJxPaZbSnDoyjbMLjULWv2s0JHQqJcB">Detroit Tech Watch - Getting Started with Swift and Apple Watch Development</a></li>
<li><a href="https://nooverviewavailable.com">No Overview Available</a></li>
<li><a href="https://rambo.codes/swiftui/2020/01/03/you-can-use-swiftui-today.html">Gui Rambo - You Can Use SwiftUI Today</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>Experience and Example Projects</b></p><ul>
<li>
<a href="https://github.com/brightdigit/peopart">Peopart Project</a><ul><li><a href="https://www.youtube.com/watch?v=FlpOZuGfwQU&amp;list=PLmpJxPaZbSnDoyjbMLjULWv2s0JHQqJcB">Detroit Tech Watch - Getting Started with Swift and Apple Watch Development</a></li></ul>
</li>
<li><a href="https://github.com/brightdigit/lansingcodes-apple">LansingCodes - GitHub Repo</a></li>
<li><a href="https://heartwitch.app">Heartwitch - Live Stream Your Health Stats Right From Your Apple Watch - https://heartwitch.app</a></li>
</ul><p><b>Why SwiftUI Now?</b></p><ul>
<li>Single Source of Truth</li>
<li>Declarative vs Imperative Programming</li>
<li>Functional Reactive Programming</li>
<li>Terminology of SwiftUI and Apple</li>
</ul><p><b>Why not SwiftUI?</b></p><ul>
<li>Older Operating Systems</li>
<li>Using Special UIKit Views and Controls</li>
<li>Requires Very Stable App with Good Documentation</li>
</ul><p><b>Workarounds for SwiftUI</b></p><ul>
<li>Preprocessor Directives and Attributes</li>
<li>UIViewRepresentable and UIViewControllerRepresentable</li>
</ul><p><b>When SwiftUI is Ideal</b></p><ul>
<li>Simple UI</li>
<li>Apple Watch</li>
<li>Cutting Edge Audience</li>
<li>Internal Projects</li>
<li>Brand New Apps</li>
<li>Cross Apple Platform</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Credits</b></p><p>Music from https://filmmusic.io<br>"Blippy Trance" by Kevin MacLeod (https://incompetech.com)<br>License: CC BY (http://creativecommons.org/licenses/by/4.0/)</p><p><b>Transcription</b></p><p><strong>Leo Dion (Host): </strong>Welcome again to another episode of empowerapps.Show. Thank you for joining me. I'm the host, Leo Dion. This is the BrightDigit podcast where I talk about Swift development, development in the Apple ecosystem, and  just overall updates, changes in ways that managers, CTOs and developers can stay current and up to date with new things coming out when it comes to Swift and Apple products. </p><p>[00:00:36] Today, I'm going to be talking a little bit more about SwiftUI -  the good, the bad, and the benefits. Specifically, I want to talk about my experience and examples of work that I've been doing in SwiftUI over the last few months, and then we'll be getting into why Swift UI is here, why Apple introduced it in 2019 we'll then be talking about why SwiftUI is not really a good use case in a lot of examples. I'll be talking about some workarounds about how to get around that if you still want to use Swift UI. And then we're getting into  when and where Swift UI is the ideal use and what apps or maybe  devices, where Swift UI really makes a lot of sense. </p><p>[00:01:21] So I want to talk a little bit about my experience and examples of where I've been using Swift UI.</p><p>[00:01:27] So back in June, I actually did a workshop, and while it was the same month as WWDC, a couple of weeks actually afterwards, I ended up using UI kit for it.  I called it PeoPart because that's the random name generator - what it came up with. Essentially, it's a list of blog posts and comments that you can see on an iOS app.</p><p>[00:01:50] I use UIKit for this example. Because at the time I really didn't want to jump into SwiftUI with new developers and risk that. But I will say that with this application I am slowly migrating over to SwiftUI. So the sample app actually available for you on GitHub and they will share a link for folks later in the show  notes.</p><p>[00:02:16] But this is a example that I want to see what it'll do and what it will take to convert a UIKit app over to Swift UI and see what exactly happens when I do that. </p><p>[00:02:29] he other example is a app that I'm using or a building for my local coding community. Lansing codes where people in Lansing can see what events and what meetups are taking place.</p><p>[00:02:43] It uses the Firebase backend and Web API that Eric, my colleague had built for the local community and uses combine, obviously along with Firebase. It uses Swift UI and I think it's a really great example of where I'm taking a fairly simple app, brand new, basically new app and building it into a iPhone app in this case. </p><p>[00:03:09] Lastly, you probably heard, I've been working on an app called HeartTwitch ,an independent watch app. They use a Swift UI and Vapor as the backend, and the idea of this app is that live streamers can share their heart rate right from their Apple watch and then take that sharing to a web browser window.</p><p>[00:03:27] Then use something like OBS for live streaming to share that video. This is a great example of using Swift UI. It's a brand new app. It's Apple watch. It makes a lot of sense because we're talking about streaming data. And so, this is one example where I think that Swift UI works out really well, and that is the Apple watch.</p><p>[00:03:46] So you're probably wondering why is Swift UI now? And I think there's a few good reasons. We did an episode back in June with René Cacheaux and Josh Berlin from raywenderlich.com to talk about iOS app architecture and René had some really strong opinions about the issues with storyboards specifically this idea of single source of truth.</p><p>[00:04:09] <em>What are your recommendations or your personal styling? <br></em><br></p><p>[00:04:12] <strong>René Cacheaux (Guest): </strong><em>I would not recommend anyone using Interface Builder, especially in large teams. <br></em><br></p><p>[00:04:17] <strong>Leo Dion (Host): </strong><em>Yes. <br></em><br></p><p>[00:04:17] <strong>René Cacheaux (Guest): </strong><em>That's one of the opinions that I do have. It's mostly because with interface builder. You don't have a source of truth. Everything that you put in your storyboard or your nib file is subject to change by the code underneath it.<br></em><br></p><p>[00:04:30] <em>And so when you're looking at the storyboard itself and your kind of tweaking the layout and you're taking the constraints and stuff like that, there's nothing stopping the code underneath of completely changing that. And so when there's bugs and stuff, sometimes it's really hard to figure out the root cause, cause you can't just look at the storyboard </em>t<em>hat's not enough. <br></em><br></p><p>[00:04:46] <strong>Leo Dion (Host): </strong>He said the problem with storyboards as well with coded applications. If you're doing two of the same thing, then you run into the issue where your UI is not going to look like what you expect it to look like when you build the Storyboard in Interface Builder as opposed to coding. and this can run into issues because you don't have a <em>Single Source of Truth</em> for how your user interface is going to work out.</p><p>[00:05:14] What is exactly Single Source of Truth. what Wikipedia says is it's <em>the practice of structuring information models and associated data schema such that every data element is mastered or edited in one place.</em> In other words, you have one central location where data is, as data is added or entered or edited.</p><p>[00:05:35] The view automatically updates that accordingly. And what this comes down to is what's called reactive programming or functional reactive programming. And we talked a little bit about this with Jason in our Swift UI episode. Jason has a lot of years of experience building a user interface and reactive programming, reactive frameworks have been around, even back when, Objective-C was the only way to develop an app. And Jason talked about this and how reactive programming is supposed to work. </p><p>[00:06:06] <strong>Jason Anderson (Guest): </strong><em>So we all sat down and we looked at it and we started incorporating that into the work that we're doing. It's particularly nice because a lot of the apps we were developing at the time were very heavy with network updates.<br></em><br></p><p>[00:06:18] <em>A lot of JSON API requests</em> <em> that were </em>d<em>ependent upon each other. So, you know, you would set up maybe a, an operation queue that you would have to have something before you get to the next and try to create these dependencies. But you know, that code can become a little bit difficult to manage long-term.<br></em><br></p><p>[00:06:37] <em>But then when he started showing me how these streams, as they're called on the reactive cocoa world. Basically streams of data that you can subscribe to. We can observe this object. You can subscribe to the data that's coming across and you can manipulate on the fly to get it to what you need. And as those data pieces are coming across, you can filter them based on specific criteria.<br></em><br></p><p>[00:07:00] <em>You can map them into other objects, you can trigger new network calls based on the results. It became very easy to tie in a lot of that dependency logic into </em>a<em> single network call, where before we would have, you know, a delegates and operation cues and things just strung out throughout the app. Now we have one simple change function that has that logic kept in one place.<br></em><br></p><p>[00:07:24] <em>So it was, it was kind of nice to keep that altogether there, so it was much easier to maintain. <br></em><br></p><p>[00:07:29] <strong>Leo Dion (Host): </strong>There's some really interesting examples and places where reactive programming has already been used. We see this when it comes to a lot of the JavaScript libraries out there. I think Angular kind of does a Reactive thing - even ReactJS does a bit and VueJs. </p><p>[00:07:46] They all kind of have this idea of having a central place where data is stored and used and reacted to and kind of like a two way binding sort of way. I had some experience with this actually when I used to do a Silverlight development. Yes. How many of you remember SilverLight? </p><p>[00:08:05] The idea is we're shifting away from Apple's suggested pattern of model-view-controller where you have a central controller that listens to model changes and updates the view. And now what we have is a view model-model-view pattern.</p><p>[00:08:22] The idea being is that there is a view model, which is a conversion of that model into a data model that the view will use in order to show what is going on. For instance, like you might have a list of people, but that list of people is not just going to have that data object for people, but it might also have some other metadata that you want to display on the screen or view model, which will say things like, what color to show or what font to say, and things like this will be stored in a view model so that the view can update it accordingly.</p><p>[00:08:56] Some of the components that are used in reactive programming had been translated over to Combine and Swift UI. And there's some specific terminology that's been used. </p><p>[00:09:05] For instance, we have the idea of a Publisher. So one example is where you're downloading data from a URL, you'll have a Publisher that will have that data or error based on how the status of that network requests went.</p><p>[00:09:19] And then you might use functional programming to then map that data and using JSON decoder to a set of people instances or blog content. And then you also have the ability to take errors and be able to map those into, say, an empty list of people. Because in some cases, you may not want to show an error - you may want to just want to show an empty list. Um, so that's the idea of a publisher. It's a stream of events that you then are using. Functional programming can map to specific data or data instances. </p><p>[00:09:53] We also have the idea of a subscriber. A subscriber is something that listens in to a publisher and updates accordingly.</p><p>[00:10:02] So when it comes to like functional programming, a lot of your functions are kind of subscribers in a way. The most common subscriber that we see, especially with SwiftUI is the idea of observable objects. So for instance. you create a class, which is your view model, which listening listens into updates of models based on data from a URL.</p><p>[00:10:25] The object model does whatever mapping needs to take place and then updates the view model accordingly. We also have like an EnvironmentObject, States, ObservableObjects, things  like this. Depending on how you want that data used throughout the view hierarchy. But the essential idea is like this Observable or Observed object that's then used within Swift UI.</p><p>[00:10:48] I think the biggest benefit, what we will see with SwiftUI is we can finally say goodbye to Storyboards. I think Storyboards have gotten as far as they can get essentially. And the biggest problem with Storyboards is that you're  constantl  dealing with a really complex set of user interfaces.</p><p>[00:11:13] And I think it also introduced, instead of using UI to build your user interface, we can finally have what's called declarative programming brought into Swift. So before a lot, if you do a coded UI, for instance, you're doing a lot of imparative programming and creating that user interface. Here we're using declarative programming.</p><p>[00:11:33] Where we can do things that we've commonly seen when it comes to HTML. So instead of saying, print out paragraph, print this out and this font print, animate this thing accordingly. We're using declarative programming as a way to basically have almost <em>wysiwyg</em> almost declarative way of seeing how of UI is structured using code. </p><p>[00:12:03] So you just put in a paragraph within a <em>div</em>, you don't have to say print paragraph, begin print paragraph and things like this. It's all looks according to how your code looks. Another issue that we see with Storyboards is when we're doing a development within teams. So Alex had a really great point about how storyboards kind of have their own limitations.</p><p>[00:12:30] <strong>Alex Bush (Guest): </strong><em>There are, there are trade offs for one approach and another, and at some point it breaks down, right? Or. In some cases it doesn't make sense. And specifically I'm talking about, let's say storyboards don't make a breakdown on scale. When you have. I don't know, more than 20 people, let's say working on the app, but then it does make sense to do it right away as you're a one or two people team.<br></em><br></p><p>[00:12:55] <strong>Leo Dion (Host): </strong><em>Yes<br></em><br></p><p>[00:12:57] When it comes to working with teams, I think we see the biggest issue when we're merging different storyboards together or multiple people are working on a single storyboard, as I often suggest, if you're going to do storyboards, make them as small as possible and use storyboard references.</p><p>[00:13:11] But in the end working on a team and working with storyboards can be a real challenge. The other benefit that we see with Swift UI is that Apple now has a way to build <em>cross-platform applications </em>that is cross platform within Apple's ecosystem using Swift UI. I don't know how many of you remember Catalyst, but we talked about this in our episode with Daniel Jalkut where we talk about Mac development and how Catalyst kind of ran into certain limitations.</p><p>[00:13:44] <strong>Daniel Jalkut (Guest): </strong><em>No, it's funny. I had another snap reaction to that during the keynote, and it was basically, I think I tweeted something like. Apple has announced and deprecated a technology all in the space of one keynote, which was basically like: Hey, there's this brand new exciting technology we have that you can adapt your iOS apps to the Mac and you should not use it </em>y<em>ou should use this new Swift UI. That's not what they said, literally, but..<br></em><br></p><p>[00:14:11]<strong>Leo Dion (Host): </strong><em> </em>S<em>o can you do a Mac app was Swift UI, but not as necessarily Catalyst? <br></em><br></p><p>[00:14:16] <strong>Daniel Jalkut (Guest): </strong>A<em>bsolutely. Yeah. Swift UI is a native technology on and that, just to clarify, that's the big promise of Swift UI is that it is a native technology on all Apple platforms.<br></em><br></p><p>[00:14:27] <strong>Leo Dion (Host): </strong><em>Okay. Yeah, <br></em><br></p><p>[00:14:28] <strong>Daniel Jalkut (Guest): </strong><em>so it's kind of funny. It means that there are two ways to write a Mac app with Swift UI. <br></em><br></p><p>[00:14:34] <strong>Leo Dion (Host): </strong><em>Right? Right. Because you could go to the Project Catalyst route and have basically one bundle essentially, that will work on </em>b<em>oth iOS and macOS </em>o<em>r you can just do a native Mac app and still use Swift UI <br></em><br></p><p>[00:14:49] <strong>Daniel Jalkut (Guest): </strong><em>Right </em>o<em>r more precisely do a native Swift UI app and have it run on the Mac on iOS, the watch, or the TV. <br></em><br></p><p>[00:14:55] <strong>Leo Dion (Host): </strong><em>Right, right. <br></em><br></p><p>[00:14:57] But now, Swift UI allows us a truly cross-platform way to build a Mac app, a watch app and iPhone or iPad app or tvOS app as well. And this goes back to our stuff about HTML. Now we have kind of this way of using almost like a media queries to be able to specify how certain OSes will look in certain ways, using preprocessor directives or things like that as well.</p><p>[00:15:26] So why might you not want to use Swift UI? I think if you're using an app that's fairly old and it still supports older operating systems, I think you're probably better off sticking with UIKit or whatever framework you're using. There's just no need and no desire to move things to Swift UI because there's nothing in there the user will really see when it comes to that. </p><p>[00:15:53] So in that case. I think that you probably can stick with UIKit </p><p>[00:15:59] And if your audience tends to be use older devices or uses older operating systems, there's no need to move to Swift UI. There's no benefit to the user in that case. </p><p>[00:16:10] Another problem we see is the lack of documentation. I think this has been a really big challenge. There's a great website that provides kind of some information about some of the issues with lack of documentation when it comes to Apple stuff. I think that can be a real challenge with something that's only been around for six months to a year. You may also require UIKit in a lot of ways.</p><p>[00:16:33] First of all, you might have like a third party dependency to UIKit. You're  using some CocoaPod that has some UI widget that uses UIKit and that case it can be a real uphill battle trying to use Swift UI in that case. There's also UI widgets that are just simply missing from Swift UI that we have in UI kit.</p><p>[00:16:51] One of the biggest ones I can think of is UICollectionView. Especially with some of the updates we have: data sources and diffable data. It makes a lot sense to stick with UICollectionView in a lot of ways because of all the features that it gives us with UIKit and a lot of robust stuff that they've added over the last few years.</p><p>[00:17:13] It makes sense to just go with UICollection and not try to hack something together necessarily in Swift UI. </p><p>[00:17:20] So you're probably wondering, well, how do I still use Swift UI if I have an older application because there are work arounds to get around this. There are things like preprocessor directives.</p><p>[00:17:32] You can say that only a newer operating systems have access to certain features that are built on SwiftUI. There's also the ability to interface between UIKit and SwiftUI. For example, when you have a application that is UIKit based and you want to bring in something from Swift UI. We have UIHostingController on iOS.</p><p>[00:17:53] Now, UIHostingController is the iOS version of that, but there's one for WatchKit as well as AppKit. And that  allows you to, use a Swift UI element within a UIKit. So that's a one great example. </p><p>[00:18:10] The other thing is that, let's say you will need to bring in something from UIKit to your SwiftUI app.</p><p>[00:18:16] In this case, you want to use something like UIViewRepresentable or UIViewControllerRepresentable, which allows you to do that. I don't know how many times I've used a activity indicator from UIKit in order to show a busy like for instance, I'm downloading a URL or making a URL request.</p><p>[00:18:35] I'll often times need to make a activity indicator from UIKit and bring that over to SwiftUI.</p><p>[00:18:42] So then the question is, when is Swift UI ideal? What is the use case where SwiftUI it makes a lot of sense. I think if your UI is fairly simple, you probably could just stick with using Swift UI. In that case, it makes a lot of sense.</p><p>[00:18:56] And an example of this is like that Lansing codes app that I built. Or, for instance, an app that just uses a table views. Why don't I  just use a List in Swift UI? It makes sense and it will work out great if you're willing to work within the limitations of Swift UI, it actually can work with you as opposed to against you.</p><p>[00:19:14] And of course that makes sense. If your devices fairly simple, like an Apple watch. I think any Apple watch app, it makes sense to switch over to Swift UI. At some point. Switch UI was built out of the Apple watch UI team, so it makes a lot of sense. </p><p>[00:19:29] The other thing is, are you willing to deal with unstable API and docs?</p><p>[00:19:33] If you're willing to deal with that and deal with the challenges and limitations that come up with that, then it's probably okay to just go to Swift UI and if you're starting with a new project and any sort of new application than maybe going with SwiftUI makes a lot of sense. </p><p>[00:19:47] If you're going to start from scratch, you may as well start using Swift UI, especially if you're thinking about migrating to other operating systems within the Apple ecosystem.</p><p>[00:19:56] And if your audience let's say people who are really technically inclined, like developers or folks who already are using the latest operating system, then it makes sense to go with Swift UI. In that case, you're willing to deal with whatever issues and be able to deal with the limitations that Swift UI has. There's a great article by Gui Rambo, which I'll link the notes.</p><p>[00:20:17] Where he talks about how Swift UI is ready in a lot of cases, and maybe if your audience is the right fit, maybe it's the right time to switch over to using Swift UI, especially if you're starting a new project or something on the Apple watch. So we have a lot of great episodes you might want to catch up on.</p><p>[00:20:33] We talk a little bit more about Swift UI and some of the new stuff that came out in WWDC. We have our episode and video that I did about Swift UI and 2020 trends. We also have the episode with Daniel Jalkut on Mac development. We talked about Swift UI and reactive programming with Jason Anderson and then Apple Watch with Gary Sabo.</p><p>[00:20:52] And if you're interested more on app architecture, we have a René Cacheaux and Josh Berlin from raywenderlich.com who talked about iOS app architecture and their great book on learning how to do iOS app architecture the right way. You can learn more and catch up with more articles and episodes on my business website brightdigit.com.</p><p>[00:21:13] As well as the podcast website. Empowerapps.show. Thanks again for joining me. I look forward to talking to you again on our next episodes.</p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 19 Jan 2020 08:00:00 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/87165d83/06debed5.mp3" length="10432114" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/166261/full_1579107402-artwork.jpg"/>
      <itunes:duration>1289</itunes:duration>
      <itunes:summary>In this episode, Leo talks about what he's learned using SwiftUI, where he sees it's the right fit, where it's not quite ready, and some solutions to common problems people have with it.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks about what he's learned using SwiftUI, where he sees it's the right fit, where it's not quite ready, and some solutions to common problems people have with it.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Server-Side Swift with Tim Condon</title>
      <itunes:episode>34</itunes:episode>
      <itunes:title>Server-Side Swift with Tim Condon</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">ac7df921-b5ac-4dee-a332-26b701485fc9</guid>
      <link>https://share.transistor.fm/s/bf0516f2</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li><a href="https://twitter.com/0xtim"><strong>Tim Condon - Twitter @0xTim</strong></a></li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/ffcb9fc1"><strong>Episode 8 - Cloud and Backend Services</strong></a></li>
<li><a href="https://share.transistor.fm/s/c8f9aa41"><strong>Episode 23 - Modularizing in Xcode with Abbey Jackson</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://medium.com/@LogMaestro/server-side-swift-c965b7ebe6e7"><strong>Hello Server-Side Swift by Logan Wright</strong></a></li>
<li><a href="https://learningswift.brightdigit.com/category/vapor/"><strong>Leo's Vapor Tutorials and Videos</strong></a></li>
<li><a href="https://learningswift.brightdigit.com/vapor-swift-video-swift-toronto-2019/"><strong>How to get started developing Server-Side Swift - SwiftTO 2019</strong></a></li>
<li><a href="https://learningswift.brightdigit.com/vapor-heroku-ubuntu-setup-deploy/"><strong>Vapor – Deep Dive Guide into Setup and Deployment for Heroku and Ubuntu</strong></a></li>
<li><a href="https://learningswift.brightdigit.com/asynchronous-multi-threaded-parallel-world-of-swift/"><strong>Asynchronous Multithreaded Parallel World of Swift</strong></a></li>
<li><a href="https://store.raywenderlich.com/products/server-side-swift-with-vapor"><strong>Server Side Swift with Vapor on raywenderlich.com</strong></a></li>
<li><a href="https://www.youtube.com/watch?v=Zjlxa1NIfJc&amp;feature=youtu.be"><strong>Porting Swift to Windows by Saleem Abdulrasool</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>How does Vapor compare With other backends?</b></p><ul>
<li>Why not use CloudKit or Firebase?</li>
<li>How does it compare to NodeJS, Ruby, .Net or PHP?</li>
<li>Limitation of various programming languages</li>
<li>Preferred Database Backend</li>
<li>What's the difference between Vapor and other Server-Side Swift backend frameworks?</li>
<li>What is the Server-Side Group and SwiftNIO?</li>
</ul><p><b>Using Vapor Today</b></p><ul>
<li>Is it ready for production?</li>
<li>What are some considerations a dev team should make?</li>
<li>What's the best way to get started?</li>
<li>What plugins are available? (Database, Authentication, Leaf, etc...)</li>
<li>What are differences with Swift on the server vs. the client?</li>
<li>How can you share code correctly between iOS and the server?</li>
</ul><p><b>The Future of Vapor 4</b></p><ul>
<li>What improvements are being made in Vapor 4?</li>
<li>How does SwiftNIO2 affect Vapor?</li>
<li>How does Swift 5 change the way database models work?</li>
<li>How has SwiftUI and Combine affected Vapor and the way HTML is rendered?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li><a href="https://twitter.com/0xtim"><strong>Tim Condon - Twitter @0xTim</strong></a></li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/ffcb9fc1"><strong>Episode 8 - Cloud and Backend Services</strong></a></li>
<li><a href="https://share.transistor.fm/s/c8f9aa41"><strong>Episode 23 - Modularizing in Xcode with Abbey Jackson</strong></a></li>
</ul><p><b>Related Links</b></p><ul>
<li><a href="https://medium.com/@LogMaestro/server-side-swift-c965b7ebe6e7"><strong>Hello Server-Side Swift by Logan Wright</strong></a></li>
<li><a href="https://learningswift.brightdigit.com/category/vapor/"><strong>Leo's Vapor Tutorials and Videos</strong></a></li>
<li><a href="https://learningswift.brightdigit.com/vapor-swift-video-swift-toronto-2019/"><strong>How to get started developing Server-Side Swift - SwiftTO 2019</strong></a></li>
<li><a href="https://learningswift.brightdigit.com/vapor-heroku-ubuntu-setup-deploy/"><strong>Vapor – Deep Dive Guide into Setup and Deployment for Heroku and Ubuntu</strong></a></li>
<li><a href="https://learningswift.brightdigit.com/asynchronous-multi-threaded-parallel-world-of-swift/"><strong>Asynchronous Multithreaded Parallel World of Swift</strong></a></li>
<li><a href="https://store.raywenderlich.com/products/server-side-swift-with-vapor"><strong>Server Side Swift with Vapor on raywenderlich.com</strong></a></li>
<li><a href="https://www.youtube.com/watch?v=Zjlxa1NIfJc&amp;feature=youtu.be"><strong>Porting Swift to Windows by Saleem Abdulrasool</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>How does Vapor compare With other backends?</b></p><ul>
<li>Why not use CloudKit or Firebase?</li>
<li>How does it compare to NodeJS, Ruby, .Net or PHP?</li>
<li>Limitation of various programming languages</li>
<li>Preferred Database Backend</li>
<li>What's the difference between Vapor and other Server-Side Swift backend frameworks?</li>
<li>What is the Server-Side Group and SwiftNIO?</li>
</ul><p><b>Using Vapor Today</b></p><ul>
<li>Is it ready for production?</li>
<li>What are some considerations a dev team should make?</li>
<li>What's the best way to get started?</li>
<li>What plugins are available? (Database, Authentication, Leaf, etc...)</li>
<li>What are differences with Swift on the server vs. the client?</li>
<li>How can you share code correctly between iOS and the server?</li>
</ul><p><b>The Future of Vapor 4</b></p><ul>
<li>What improvements are being made in Vapor 4?</li>
<li>How does SwiftNIO2 affect Vapor?</li>
<li>How does Swift 5 change the way database models work?</li>
<li>How has SwiftUI and Combine affected Vapor and the way HTML is rendered?</li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 12 Jan 2020 00:00:00 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/bf0516f2/29307339.mp3" length="50511738" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>3155</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Tim Condon about Server-Side Swift and the Vapor Web Framework: how it fits into the development of an application now, why you’d choose it, and what it takes to get started.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Tim Condon about Server-Side Swift and the Vapor Web Framework: how it fits into the development of an application now, why you’d choose it, and what it takes to get started.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>2020 Developer Wish List with Alex Bush</title>
      <itunes:episode>33</itunes:episode>
      <itunes:title>2020 Developer Wish List with Alex Bush</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">f81064b5-d0c2-46f1-9d81-bd0facb526c6</guid>
      <link>https://share.transistor.fm/s/71500d55</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/alex_v_bush"><strong>Alex Bush - Twitter @alex_v_bush</strong></a><ul>
<li><a href="https://www.linkedin.com/in/alexvbush"><strong>LinkedIn</strong></a></li>
<li>
<a href="http://iosinterviewguide.com/"><strong>iOS Interview Guide</strong></a><strong> </strong>
</li>
<li><a href="http://insideiosdev.com/"><strong>Inside iOS Dev Podcast</strong></a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/bcf9bb21"><strong>Episode 12 - iOS Developer Interviews with Alex Bush</strong></a></li>
<li><a href="https://share.transistor.fm/s/c8f9aa41"><strong>Episode 23 - Modularizing in Xcode with Abbey Jackson</strong></a></li>
<li><a href="https://insideiosdev.com/episodes/first-thoughts-on-swiftui"><strong>Inside iOS Dev - First Thoughts on SwiftUI</strong></a></li>
<li><a href="https://insideiosdev.com/episodes/wwdc-2019-woes-the-pressures-frustrations-of-ever-changing-tech"><strong>Inside iOS Dev - WWDC 2019</strong></a></li>
<li><a href="https://insideiosdev.com/episodes/protocol-extension-overuse"><strong>Inside iOS Dev - Protocol Extensions</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>Podcast Update in 2020</b></p><ul>
<li>EmpowerApps is Moving to 3 episodes per month</li>
<li>About the <a href="http://insideiosdev.com/"><strong>Inside iOS Dev Podcast</strong></a>
</li>
</ul><p><b>Xcode Wish List</b></p><p><strong>Leo</strong></p><ul>
<li>Improvements to Auto Completion and SourceKit</li>
<li>Improvements to Playgrounds</li>
<li>Brand New IDE (similar to Objective-C, iTunes, UIKit, etc...)</li>
<li><a href="https://github.com/yonaskolb/XcodeGen"><strong>XcodeGen</strong> - Swift command line tool for generating your Xcode project</a></li>
<li>Better Support for Modularization and Swift Packages</li>
<li>
<a href="https://fastlane.tools"><strong>Fastlane</strong> - App Automation</a> </li>
<li>
<a href="https://github.com/mxcl/swift-sh"><strong>swift-sh</strong></a><strong> - </strong>Swift Scripting</li>
<li><a href="https://speculid.com"><strong>Speculid</strong> - Asset Management and Using SVGs</a></li>
</ul><p><strong>Alex</strong></p><ul>
<li>Fix Look Up References in Xcode</li>
<li>Vim Support - <a href="https://github.com/XVimProject/XVim2">XVim2</a>
</li>
<li><a href="https://buck.build"><strong>Buck</strong> - A high-performance build tool</a></li>
<li><a href="https://guardgem.org"><strong>Guard</strong> - automate testing</a></li>
<li>More Command Line Tools and Automation</li>
</ul><p><b>Swift Wish List</b></p><p><strong>Leo</strong></p><ul>
<li>Add More UI to SwiftUI</li>
<li>More Guidance on Complex Data Binding</li>
<li>
<a href="https://learningswift.brightdigit.com/asynchronous-multi-threaded-parallel-world-of-swift/"><strong>Asynchronous Multi-Threaded Parallel World of Swift</strong></a><strong> </strong>- Add Async and Await</li>
<li>Better Asynchronous Unit Testing</li>
<li>In-App Purchases for the Watch</li>
</ul><p><strong>Alex</strong></p><ul>
<li>Alex's thoughts on SwiftUI</li>
<li>Combine and Reactive Programming vs <a href="https://github.com/ReactiveX/RxSwift"><strong>RxSwift</strong></a>
</li>
<li>SwiftUI and UIKit interop</li>
<li>Alex's thoughts on <a href="https://insideiosdev.com/episodes/protocol-extension-overuse">Protocol Extensions</a>
</li>
<li><a href="https://developer.android.com/topic/google-play-instant"><strong>Instant apps?</strong></a></li>
</ul><p><b>Future-Proofing with SwiftUI</b></p><ul>
<li>Abstracting Implementation Details for Future Hardware</li>
<li><strong>Learn Once and Code Everywhere </strong></li>
<li>
<strong>Not Ready For Production</strong> Now But is the Future</li>
<li><strong>Perfect for the Apple Watch</strong></li>
<li>Likely to Change in the Future</li>
<li>Backwards Support for UIKit/AppKit</li>
<li><a href="https://stackoverflow.com/questions/56496638/activity-indicator-in-swiftui"><strong>UIActivityIndicatorView</strong></a></li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/alex_v_bush"><strong>Alex Bush - Twitter @alex_v_bush</strong></a><ul>
<li><a href="https://www.linkedin.com/in/alexvbush"><strong>LinkedIn</strong></a></li>
<li>
<a href="http://iosinterviewguide.com/"><strong>iOS Interview Guide</strong></a><strong> </strong>
</li>
<li><a href="http://insideiosdev.com/"><strong>Inside iOS Dev Podcast</strong></a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/bcf9bb21"><strong>Episode 12 - iOS Developer Interviews with Alex Bush</strong></a></li>
<li><a href="https://share.transistor.fm/s/c8f9aa41"><strong>Episode 23 - Modularizing in Xcode with Abbey Jackson</strong></a></li>
<li><a href="https://insideiosdev.com/episodes/first-thoughts-on-swiftui"><strong>Inside iOS Dev - First Thoughts on SwiftUI</strong></a></li>
<li><a href="https://insideiosdev.com/episodes/wwdc-2019-woes-the-pressures-frustrations-of-ever-changing-tech"><strong>Inside iOS Dev - WWDC 2019</strong></a></li>
<li><a href="https://insideiosdev.com/episodes/protocol-extension-overuse"><strong>Inside iOS Dev - Protocol Extensions</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>Podcast Update in 2020</b></p><ul>
<li>EmpowerApps is Moving to 3 episodes per month</li>
<li>About the <a href="http://insideiosdev.com/"><strong>Inside iOS Dev Podcast</strong></a>
</li>
</ul><p><b>Xcode Wish List</b></p><p><strong>Leo</strong></p><ul>
<li>Improvements to Auto Completion and SourceKit</li>
<li>Improvements to Playgrounds</li>
<li>Brand New IDE (similar to Objective-C, iTunes, UIKit, etc...)</li>
<li><a href="https://github.com/yonaskolb/XcodeGen"><strong>XcodeGen</strong> - Swift command line tool for generating your Xcode project</a></li>
<li>Better Support for Modularization and Swift Packages</li>
<li>
<a href="https://fastlane.tools"><strong>Fastlane</strong> - App Automation</a> </li>
<li>
<a href="https://github.com/mxcl/swift-sh"><strong>swift-sh</strong></a><strong> - </strong>Swift Scripting</li>
<li><a href="https://speculid.com"><strong>Speculid</strong> - Asset Management and Using SVGs</a></li>
</ul><p><strong>Alex</strong></p><ul>
<li>Fix Look Up References in Xcode</li>
<li>Vim Support - <a href="https://github.com/XVimProject/XVim2">XVim2</a>
</li>
<li><a href="https://buck.build"><strong>Buck</strong> - A high-performance build tool</a></li>
<li><a href="https://guardgem.org"><strong>Guard</strong> - automate testing</a></li>
<li>More Command Line Tools and Automation</li>
</ul><p><b>Swift Wish List</b></p><p><strong>Leo</strong></p><ul>
<li>Add More UI to SwiftUI</li>
<li>More Guidance on Complex Data Binding</li>
<li>
<a href="https://learningswift.brightdigit.com/asynchronous-multi-threaded-parallel-world-of-swift/"><strong>Asynchronous Multi-Threaded Parallel World of Swift</strong></a><strong> </strong>- Add Async and Await</li>
<li>Better Asynchronous Unit Testing</li>
<li>In-App Purchases for the Watch</li>
</ul><p><strong>Alex</strong></p><ul>
<li>Alex's thoughts on SwiftUI</li>
<li>Combine and Reactive Programming vs <a href="https://github.com/ReactiveX/RxSwift"><strong>RxSwift</strong></a>
</li>
<li>SwiftUI and UIKit interop</li>
<li>Alex's thoughts on <a href="https://insideiosdev.com/episodes/protocol-extension-overuse">Protocol Extensions</a>
</li>
<li><a href="https://developer.android.com/topic/google-play-instant"><strong>Instant apps?</strong></a></li>
</ul><p><b>Future-Proofing with SwiftUI</b></p><ul>
<li>Abstracting Implementation Details for Future Hardware</li>
<li><strong>Learn Once and Code Everywhere </strong></li>
<li>
<strong>Not Ready For Production</strong> Now But is the Future</li>
<li><strong>Perfect for the Apple Watch</strong></li>
<li>Likely to Change in the Future</li>
<li>Backwards Support for UIKit/AppKit</li>
<li><a href="https://stackoverflow.com/questions/56496638/activity-indicator-in-swiftui"><strong>UIActivityIndicatorView</strong></a></li>
</ul><p><b>Social Media</b></p><p><strong>Email</strong><br>leo@brightdigit.com</p><p><a href="https://twitter.com/brightdigit"><strong>Twitter </strong><br>BrightDigit - @brightdigit</a><br><a href="https://twitter.com/leogdion">Leo - @leogdion</a></p><p><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn</strong><br>BrightDigit</a><br><a href="https://www.linkedin.com/in/leogdion/">Leo</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Mon, 06 Jan 2020 00:00:00 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/71500d55/830ec46b.mp3" length="44631970" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>2787</itunes:duration>
      <itunes:summary>In this episode, Leo is joined by Alex Bush of Inside iOS Dev podcast to talk about their developer wish list for 2020.</itunes:summary>
      <itunes:subtitle>In this episode, Leo is joined by Alex Bush of Inside iOS Dev podcast to talk about their developer wish list for 2020.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Training Your Team with Steve Lipton</title>
      <itunes:episode>32</itunes:episode>
      <itunes:title>Training Your Team with Steve Lipton</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">d59f228f-f321-46dc-a7f0-8b15d3681964</guid>
      <link>https://share.transistor.fm/s/eaeed04a</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/steve_lipton"><strong>Steve Lipton- Twitter @Steve_Lipton</strong></a><ul>
<li><a href="https://www.linkedin.com/in/steven-j-lipton">LinkedIn</a></li>
<li><a href="https://Makeapppie.com">MakeAppPie</a></li>
<li><a href="https://linkedin-learning.pxf.io/YxZgj">iOS Development Tips Weekly</a></li>
<li><a href="https://linkedin-learning.pxf.io/myDLO">LinkedIn Learning Courses</a></li>
<li><a href="https://www.youtube.com/watch?v=Hi7v7EiGKsE">Steve Lipton - No Biz Like Show Biz: Video Recording Your App for Marketing and Instruction</a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/382a5473"><strong>Episode 25 - Hiring an iOS Developer with John Knox</strong></a></li>
<li><a href="https://share.transistor.fm/s/4011273d"><strong>Episode 29 - Managing iOS Development with Peter Witham</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>Why Training Is Important</b></p><ul>
<li>What is the <strong>Red Queen Dilemma</strong>?</li>
<li>What's the difference between <strong>Coding and Programming</strong>
</li>
<li>Why knowing your <strong>customer's needs</strong> helps your training be better focused</li>
<li>The significance of<strong> Soft Skills</strong> too</li>
<li>Why you should <strong>invest in your current employees</strong> rather than hiring new employees</li>
<li>When consultants and trainers make the most sense</li>
<li><a href="https://github.com/realm/jazzy"><strong>Building Good Documentation</strong></a></li>
</ul><p><b>What Makes For Good Training Material</b></p><ul>
<li>Make sure the pattern and style <strong>matches yours</strong>
</li>
<li>Good production quality</li>
<li><strong>Make sure it's readable!</strong></li>
<li>Make sure your <strong>audience understands - </strong><a href="https://en.wikipedia.org/wiki/Bloom%27s_taxonomy"><strong>Bloom's Taxonomy</strong></a>
</li>
<li>Make sure <a href="https://heathbrothers.com/books/made-to-stick/"><strong>it sticks</strong></a>
</li>
</ul><p><b>Creating Good Training Videos</b></p><ul>
<li><a href="https://www.youtube.com/watch?v=Hi7v7EiGKsE">Steve Lipton - No Biz Like Show Biz: Video Recording Your App for Marketing and Instruction</a></li>
<li><a href="https://leogdion.name/2019/06/13/podcasting-getting-started-content-recording-audience/#recording-and-editing-your-audio#your-podcasting-microphone">Have a decent microphone</a></li>
<li>Have a quiet room</li>
<li>Font Size 20 and up</li>
<li>Balance Size, Resolution and File Size - 16:9 HD Resolution</li>
<li>Have a script to follow</li>
</ul><p><b>How to Judge Good Training Material Online</b></p><ul>
<li>How many video do they have?</li>
<li>Watch the welcome video</li>
<li>Good series of tracks</li>
<li>Good organization</li>
</ul><p><b>Specific Challenges with Xcode and Swift</b></p><ul>
<li>Dealing with constant changes and updates (i.e. Xcode)</li>
<li>Understand updates are part of the workflow</li>
<li>Patterns are more stable then APIs (i.e. Reactive Programming vs Combine)</li>
<li><strong><em>Apple's Character Arcs</em></strong></li>
</ul><p><strong>Social Media</strong></p><p><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a></p><p><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a></p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/steve_lipton"><strong>Steve Lipton- Twitter @Steve_Lipton</strong></a><ul>
<li><a href="https://www.linkedin.com/in/steven-j-lipton">LinkedIn</a></li>
<li><a href="https://Makeapppie.com">MakeAppPie</a></li>
<li><a href="https://linkedin-learning.pxf.io/YxZgj">iOS Development Tips Weekly</a></li>
<li><a href="https://linkedin-learning.pxf.io/myDLO">LinkedIn Learning Courses</a></li>
<li><a href="https://www.youtube.com/watch?v=Hi7v7EiGKsE">Steve Lipton - No Biz Like Show Biz: Video Recording Your App for Marketing and Instruction</a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/382a5473"><strong>Episode 25 - Hiring an iOS Developer with John Knox</strong></a></li>
<li><a href="https://share.transistor.fm/s/4011273d"><strong>Episode 29 - Managing iOS Development with Peter Witham</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>Why Training Is Important</b></p><ul>
<li>What is the <strong>Red Queen Dilemma</strong>?</li>
<li>What's the difference between <strong>Coding and Programming</strong>
</li>
<li>Why knowing your <strong>customer's needs</strong> helps your training be better focused</li>
<li>The significance of<strong> Soft Skills</strong> too</li>
<li>Why you should <strong>invest in your current employees</strong> rather than hiring new employees</li>
<li>When consultants and trainers make the most sense</li>
<li><a href="https://github.com/realm/jazzy"><strong>Building Good Documentation</strong></a></li>
</ul><p><b>What Makes For Good Training Material</b></p><ul>
<li>Make sure the pattern and style <strong>matches yours</strong>
</li>
<li>Good production quality</li>
<li><strong>Make sure it's readable!</strong></li>
<li>Make sure your <strong>audience understands - </strong><a href="https://en.wikipedia.org/wiki/Bloom%27s_taxonomy"><strong>Bloom's Taxonomy</strong></a>
</li>
<li>Make sure <a href="https://heathbrothers.com/books/made-to-stick/"><strong>it sticks</strong></a>
</li>
</ul><p><b>Creating Good Training Videos</b></p><ul>
<li><a href="https://www.youtube.com/watch?v=Hi7v7EiGKsE">Steve Lipton - No Biz Like Show Biz: Video Recording Your App for Marketing and Instruction</a></li>
<li><a href="https://leogdion.name/2019/06/13/podcasting-getting-started-content-recording-audience/#recording-and-editing-your-audio#your-podcasting-microphone">Have a decent microphone</a></li>
<li>Have a quiet room</li>
<li>Font Size 20 and up</li>
<li>Balance Size, Resolution and File Size - 16:9 HD Resolution</li>
<li>Have a script to follow</li>
</ul><p><b>How to Judge Good Training Material Online</b></p><ul>
<li>How many video do they have?</li>
<li>Watch the welcome video</li>
<li>Good series of tracks</li>
<li>Good organization</li>
</ul><p><b>Specific Challenges with Xcode and Swift</b></p><ul>
<li>Dealing with constant changes and updates (i.e. Xcode)</li>
<li>Understand updates are part of the workflow</li>
<li>Patterns are more stable then APIs (i.e. Reactive Programming vs Combine)</li>
<li><strong><em>Apple's Character Arcs</em></strong></li>
</ul><p><strong>Social Media</strong></p><p><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a></p><p><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a></p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 22 Dec 2019 00:00:00 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/eaeed04a/cb1b5b7e.mp3" length="35577417" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>2222</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Steve Lipton of MakeAppPie about how to maintain your staff’s skill level when it comes to iOS Development and Swift.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Steve Lipton of MakeAppPie about how to maintain your staff’s skill level when it comes to iOS Development and Swift.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Future Proofing Your Apps with Gui Rambo</title>
      <itunes:episode>31</itunes:episode>
      <itunes:title>Future Proofing Your Apps with Gui Rambo</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">c81392a1-953c-4cdc-9f3c-9a2361b34b24</guid>
      <link>https://share.transistor.fm/s/29d6ee9b</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/_inside"><strong>Gui Rambo - Twitter @_inside</strong></a><ul>
<li><a href="https://rambo.codes">Blog</a></li>
<li><a href="https://github.com/insidegui">Github</a></li>
<li><a href="https://9to5mac.com/guides/stacktrace/">Stacktrace Podcast</a></li>
<li><a href="https://9to5mac.com/author/guirambobr/">9to5Mac</a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/3d4c7634"><strong>Episode 18 - WWDC 2019 - Apple Watch with Gary Sabo</strong></a></li>
<li><a href="https://share.transistor.fm/s/03051561"><strong>Episode 19 - WWDC 2019 - Swift UI with Jason Anderson</strong></a></li>
<li><a href="https://share.transistor.fm/s/4011273d"><strong>Episode 29 - Managing iOS Development with Peter Witham</strong></a></li>
<li><a href="https://share.transistor.fm/s/7247db7e"><strong>Episode 14 - iOS App Architecture with René Cacheaux and Josh Berlin</strong></a></li>
<li><a href="https://devchat.tv/iphreaks/ips-244-microconf-writing-health-apps-for-apple-watch/"><strong>iPhreaks Episode 244 - MicroConf and Writing Health Apps for Apple Watch</strong></a></li>
<li><a href="https://9to5mac.com/2019/11/20/stacktrace-podcast-063-classic-butterfly/"><strong>Stacktrace Episode 63 - Classic Butterfly</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>Developer Apps and WWDC</b></p><ul>
<li><a href="https://apps.apple.com/us/app/apple-developer/id640199958"><strong>New Apple Developer App!</strong></a></li>
<li>Apple keeping in contact with developers</li>
<li>Streamlining getting started as a developer</li>
<li>Apple Business bureaucracy and DUNS number fun!</li>
<li><a href="https://cocoahub.app"><strong>Cocoahub App for Swift Developers</strong></a></li>
<li><a href="https://wwdc.io"><strong>WWDC Mac App</strong> by Gui</a></li>
<li><a href="https://nooverviewavailable.com">Lack of Apple Documentation</a></li>
</ul><p><b>Supporting Future Hardware</b></p><ul>
<li><a href="https://www.youtube.com/watch?v=zTsdaN4E1Ag"><strong>Adam Bell (@b3ll) - Getting ahead of the curve - NSSpain 2015</strong></a></li>
<li>Don't deviate from what Apple expects </li>
<li><a href="https://iosarchitecture.top/">Random iOS Architecture Names</a></li>
<li><a href="https://www.youtube.com/watch?v=GyrJYWOGXY0&amp;list=PLnD_TKDSaFyWJ6XPP-zhHKd0lzkCne32F"><strong>The Multi-Threaded Asynchronous World of Swift from 360iDev by Leo</strong></a></li>
<li>Will ARM matter when they switch from Intel?</li>
<li>GitHub? Remember <a href="https://sourceforge.net">SourceForge</a>
</li>
</ul><p><b>Future-Proofing with SwiftUI</b></p><ul>
<li>Abstracting Implementation Details for Future Hardware</li>
<li><strong>Learn Once and Code Everywhere </strong></li>
<li>
<strong>Not Ready For Production</strong> Now But is the Future</li>
<li><strong>Perfect for the Apple Watch</strong></li>
<li>Likely to Change in the Future</li>
<li>Backwards Support for UIKit/AppKit</li>
<li><a href="https://stackoverflow.com/questions/56496638/activity-indicator-in-swiftui"><strong>UIActivityIndicatorView</strong></a></li>
</ul><p><b>Where is AR Headed with Apple?</b></p><ul>
<li><a href="https://wwdcbysundell.com/2019/gui-rambo-on-realitykit/"><strong>Gui Rambo: Why an AR skeptic is excited about RealityKit and Reality Composer</strong></a></li>
<li><a href="https://9to5mac.com/2018/06/04/apple-unveils-new-first-party-arkit-measure-app-that-can-auto-detect-dimensions-of-objects/">Measurement App </a></li>
<li><strong>Are AirPods Pro a step towards Augment Reality?</strong></li>
<li>
<a href="https://translate.google.com">Google Translate</a> and <a href="https://en.wikipedia.org/wiki/Word_Lens">Wordlens</a>
</li>
<li>Being Able to Connect to Third-Part AR Similar to CarPlay</li>
</ul><p><b>Tinkering with Raspberry PI and HomeKit</b></p><ul>
<li><a href="https://github.com/TomasLinhart/SwiftGtk">Graphical Swift Development with GTK</a></li>
<li>Developing with the Raspberry Pi 4 and Raspberry Pi Zero</li>
<li><a href="https://homebridge.io/">Homebridge</a></li>
<li>Developing a HomeKit device in Swift</li>
</ul><p><b>What's Missing on the Apple Watch</b></p><ul>
<li>Faster Processor and Better Battery</li>
<li>Lack of In-App Purchases</li>
<li>Lack of Biometric Authentication (i.e. Finger Print Reader)</li>
</ul><p><strong>Social Media</strong></p><p><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a></p><p><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a></p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/_inside"><strong>Gui Rambo - Twitter @_inside</strong></a><ul>
<li><a href="https://rambo.codes">Blog</a></li>
<li><a href="https://github.com/insidegui">Github</a></li>
<li><a href="https://9to5mac.com/guides/stacktrace/">Stacktrace Podcast</a></li>
<li><a href="https://9to5mac.com/author/guirambobr/">9to5Mac</a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/3d4c7634"><strong>Episode 18 - WWDC 2019 - Apple Watch with Gary Sabo</strong></a></li>
<li><a href="https://share.transistor.fm/s/03051561"><strong>Episode 19 - WWDC 2019 - Swift UI with Jason Anderson</strong></a></li>
<li><a href="https://share.transistor.fm/s/4011273d"><strong>Episode 29 - Managing iOS Development with Peter Witham</strong></a></li>
<li><a href="https://share.transistor.fm/s/7247db7e"><strong>Episode 14 - iOS App Architecture with René Cacheaux and Josh Berlin</strong></a></li>
<li><a href="https://devchat.tv/iphreaks/ips-244-microconf-writing-health-apps-for-apple-watch/"><strong>iPhreaks Episode 244 - MicroConf and Writing Health Apps for Apple Watch</strong></a></li>
<li><a href="https://9to5mac.com/2019/11/20/stacktrace-podcast-063-classic-butterfly/"><strong>Stacktrace Episode 63 - Classic Butterfly</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>Developer Apps and WWDC</b></p><ul>
<li><a href="https://apps.apple.com/us/app/apple-developer/id640199958"><strong>New Apple Developer App!</strong></a></li>
<li>Apple keeping in contact with developers</li>
<li>Streamlining getting started as a developer</li>
<li>Apple Business bureaucracy and DUNS number fun!</li>
<li><a href="https://cocoahub.app"><strong>Cocoahub App for Swift Developers</strong></a></li>
<li><a href="https://wwdc.io"><strong>WWDC Mac App</strong> by Gui</a></li>
<li><a href="https://nooverviewavailable.com">Lack of Apple Documentation</a></li>
</ul><p><b>Supporting Future Hardware</b></p><ul>
<li><a href="https://www.youtube.com/watch?v=zTsdaN4E1Ag"><strong>Adam Bell (@b3ll) - Getting ahead of the curve - NSSpain 2015</strong></a></li>
<li>Don't deviate from what Apple expects </li>
<li><a href="https://iosarchitecture.top/">Random iOS Architecture Names</a></li>
<li><a href="https://www.youtube.com/watch?v=GyrJYWOGXY0&amp;list=PLnD_TKDSaFyWJ6XPP-zhHKd0lzkCne32F"><strong>The Multi-Threaded Asynchronous World of Swift from 360iDev by Leo</strong></a></li>
<li>Will ARM matter when they switch from Intel?</li>
<li>GitHub? Remember <a href="https://sourceforge.net">SourceForge</a>
</li>
</ul><p><b>Future-Proofing with SwiftUI</b></p><ul>
<li>Abstracting Implementation Details for Future Hardware</li>
<li><strong>Learn Once and Code Everywhere </strong></li>
<li>
<strong>Not Ready For Production</strong> Now But is the Future</li>
<li><strong>Perfect for the Apple Watch</strong></li>
<li>Likely to Change in the Future</li>
<li>Backwards Support for UIKit/AppKit</li>
<li><a href="https://stackoverflow.com/questions/56496638/activity-indicator-in-swiftui"><strong>UIActivityIndicatorView</strong></a></li>
</ul><p><b>Where is AR Headed with Apple?</b></p><ul>
<li><a href="https://wwdcbysundell.com/2019/gui-rambo-on-realitykit/"><strong>Gui Rambo: Why an AR skeptic is excited about RealityKit and Reality Composer</strong></a></li>
<li><a href="https://9to5mac.com/2018/06/04/apple-unveils-new-first-party-arkit-measure-app-that-can-auto-detect-dimensions-of-objects/">Measurement App </a></li>
<li><strong>Are AirPods Pro a step towards Augment Reality?</strong></li>
<li>
<a href="https://translate.google.com">Google Translate</a> and <a href="https://en.wikipedia.org/wiki/Word_Lens">Wordlens</a>
</li>
<li>Being Able to Connect to Third-Part AR Similar to CarPlay</li>
</ul><p><b>Tinkering with Raspberry PI and HomeKit</b></p><ul>
<li><a href="https://github.com/TomasLinhart/SwiftGtk">Graphical Swift Development with GTK</a></li>
<li>Developing with the Raspberry Pi 4 and Raspberry Pi Zero</li>
<li><a href="https://homebridge.io/">Homebridge</a></li>
<li>Developing a HomeKit device in Swift</li>
</ul><p><b>What's Missing on the Apple Watch</b></p><ul>
<li>Faster Processor and Better Battery</li>
<li>Lack of In-App Purchases</li>
<li>Lack of Biometric Authentication (i.e. Finger Print Reader)</li>
</ul><p><strong>Social Media</strong></p><p><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a></p><p><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a></p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 15 Dec 2019 00:00:00 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/29d6ee9b/e80e2581.mp3" length="40919369" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>2555</itunes:duration>
      <itunes:summary>In this episode, Leo Dion talks with Gui Rambo about how current apps could be built while taking into account possible future hardware from Apple. They also talk about apps for developers such as Gui's WWDC App, Apple's Developer App and CocoaHub.</itunes:summary>
      <itunes:subtitle>In this episode, Leo Dion talks with Gui Rambo about how current apps could be built while taking into account possible future hardware from Apple. They also talk about apps for developers such as Gui's WWDC App, Apple's Developer App and CocoaHub.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Quickie: Swift UI and 2020 Trends</title>
      <itunes:episode>30</itunes:episode>
      <itunes:title>Quickie: Swift UI and 2020 Trends</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">b51583bb-8f8c-4e5b-bc86-c544e1b83d97</guid>
      <link>https://share.transistor.fm/s/2f12eb02</link>
      <description>
        <![CDATA[<p><a href="https://youtu.be/PzaoBmb6PjM"><strong>Youtube Video</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/7966a039"><strong>Episode 22 - September 2019 Event</strong></a></li>
<li><a href="https://share.transistor.fm/s/03051561"><strong>Episode 19 - WWDC 2019 - Swift UI with Jason Anderson</strong></a></li>
<li><a href="https://share.transistor.fm/s/3d4c7634"><strong>Episode 18 - WWDC 2019 - Apple Watch with Gary Sabo</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>Maturity for the iPhone</b></p><ul>
<li>Unlikely to see any big hardware innovations at this point</li>
<li>Maybe foldable</li>
<li>Great time to get an app on here, because it’s a mature product</li>
<li>11 not a huge change from the 10 (but definite upgrade from the 8)</li>
</ul><p><b>Apple Watch Innovation</b></p><ul>
<li>Waiting for some improvements to battery and processor, but this is about to become an amazing product</li>
<li>Great time to think about developing an app, esp. in the health &amp; fitness sector</li>
</ul><p><b>iPads and the Pro App Market</b></p><ul>
<li>Apple Arcade shows Apple is interested in a subscription/bundle for games</li>
<li>Highlighted new iPad but where are the serious pro apps</li>
<li>Why having a subscription for app/games is great</li>
<li>Hardware is great, but software needs to improve app ecosystem</li>
<li>The App store eco system is still setup for “casual” apps for there is potent</li>
</ul><p><b>Swift UI</b></p><ul>
<li>SwiftUI is changing the way UI is developed but slowly</li>
<li>First Swift-only API (no Objective-C compatibility)</li>
<li>Maybe not be ideal for some companies with different design patterns but it’s a better starting place then Storyboards and UIKit</li>
<li>Cross-Platform compatible with iOS, watchOS, tvOS, and macOS</li>
</ul><p>Social Media</p><p><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a></p><p><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a></p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><br></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><a href="https://youtu.be/PzaoBmb6PjM"><strong>Youtube Video</strong></a></p><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/7966a039"><strong>Episode 22 - September 2019 Event</strong></a></li>
<li><a href="https://share.transistor.fm/s/03051561"><strong>Episode 19 - WWDC 2019 - Swift UI with Jason Anderson</strong></a></li>
<li><a href="https://share.transistor.fm/s/3d4c7634"><strong>Episode 18 - WWDC 2019 - Apple Watch with Gary Sabo</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>Maturity for the iPhone</b></p><ul>
<li>Unlikely to see any big hardware innovations at this point</li>
<li>Maybe foldable</li>
<li>Great time to get an app on here, because it’s a mature product</li>
<li>11 not a huge change from the 10 (but definite upgrade from the 8)</li>
</ul><p><b>Apple Watch Innovation</b></p><ul>
<li>Waiting for some improvements to battery and processor, but this is about to become an amazing product</li>
<li>Great time to think about developing an app, esp. in the health &amp; fitness sector</li>
</ul><p><b>iPads and the Pro App Market</b></p><ul>
<li>Apple Arcade shows Apple is interested in a subscription/bundle for games</li>
<li>Highlighted new iPad but where are the serious pro apps</li>
<li>Why having a subscription for app/games is great</li>
<li>Hardware is great, but software needs to improve app ecosystem</li>
<li>The App store eco system is still setup for “casual” apps for there is potent</li>
</ul><p><b>Swift UI</b></p><ul>
<li>SwiftUI is changing the way UI is developed but slowly</li>
<li>First Swift-only API (no Objective-C compatibility)</li>
<li>Maybe not be ideal for some companies with different design patterns but it’s a better starting place then Storyboards and UIKit</li>
<li>Cross-Platform compatible with iOS, watchOS, tvOS, and macOS</li>
</ul><p>Social Media</p><p><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a></p><p><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a></p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><br></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 01 Dec 2019 00:00:00 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/2f12eb02/dad113e8.mp3" length="7689889" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>479</itunes:duration>
      <itunes:summary>In this quick video, Leo goes over his thoughts on 2020 and what the future holds for SwiftUI.</itunes:summary>
      <itunes:subtitle>In this quick video, Leo goes over his thoughts on 2020 and what the future holds for SwiftUI.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Managing iOS Development with Peter Witham</title>
      <itunes:episode>29</itunes:episode>
      <itunes:title>Managing iOS Development with Peter Witham</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">9090ce0a-6de2-4f67-bae9-3f72e02e42cb</guid>
      <link>https://share.transistor.fm/s/4011273d</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://Peterwitham.com">Peter Witham</a> - <a href="https://Compileswift.com">Compileswift.com</a> - <a href="https://twitter.com/CompileSwift">Twitter</a>
</li></ul><p><b>Related Episodes</b></p><ul>
<li>
<a href="https://www.compileswift.com/podcast/s01-e10/">CompileSwift - Episode 10 - Apple Release Cycles</a> </li>
<li><a href="https://www.compileswift.com/podcast/s01-e20/">CompileSwift - Episode 11 - Source Control</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>Release Cycles</b></p><ul>
<li>Should Apple keep releasing on a yearly cycle?</li>
<li>Rough 2019 Release with iOS and macOS</li>
<li>How iOS 13 is the first significant release since iOS 7</li>
</ul><p><b>iPad vs MacBook</b></p><ul>
<li>Improvements to iPadOS 13</li>
<li>What's missing from the iPad for pro-use?</li>
<li><a href="https://www.studioneat.com/products/canopy">Canopy by Studio Neat</a></li>
</ul><p><b>Dealing with App Store and Teams</b></p><ul>
<li>Certificates and Profiles</li>
<li>Working with Source Control</li>
<li>Agreeing on Xcode Version</li>
</ul><p><b>Is Swift UI Ready For New Projects?</b></p><ul>
<li>Depends on Audience and User Base</li>
<li>Lack of Documentation</li>
<li>Dealing with New Technical Hurdles</li>
<li>Big Improvement over UIKit</li>
<li>How to deal with UI Development right now?</li>
</ul><p><b>Changes Over The Years for Teams</b></p><ul>
<li>Better Handling of Remote Teams</li>
<li>Xcode Improvements</li>
<li>How Apple's culture affects the developer experience?</li>
<li>How to Deal with Decisions as Team Lead</li>
<li>Dealing with Third-Party Dependencies</li>
<li>Source Control Improvements</li>
<li>Using <a href="https://gitolite.com/gitolite/index.html">Gitolite</a> for Local Hosted Git</li>
<li>Introducing New Technologies With Tomorrow in Mind</li>
<li>Realizing the Soft in Software</li>
</ul><p><strong>Social Media</strong></p><p><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a></p><p><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a></p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://Peterwitham.com">Peter Witham</a> - <a href="https://Compileswift.com">Compileswift.com</a> - <a href="https://twitter.com/CompileSwift">Twitter</a>
</li></ul><p><b>Related Episodes</b></p><ul>
<li>
<a href="https://www.compileswift.com/podcast/s01-e10/">CompileSwift - Episode 10 - Apple Release Cycles</a> </li>
<li><a href="https://www.compileswift.com/podcast/s01-e20/">CompileSwift - Episode 11 - Source Control</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>Release Cycles</b></p><ul>
<li>Should Apple keep releasing on a yearly cycle?</li>
<li>Rough 2019 Release with iOS and macOS</li>
<li>How iOS 13 is the first significant release since iOS 7</li>
</ul><p><b>iPad vs MacBook</b></p><ul>
<li>Improvements to iPadOS 13</li>
<li>What's missing from the iPad for pro-use?</li>
<li><a href="https://www.studioneat.com/products/canopy">Canopy by Studio Neat</a></li>
</ul><p><b>Dealing with App Store and Teams</b></p><ul>
<li>Certificates and Profiles</li>
<li>Working with Source Control</li>
<li>Agreeing on Xcode Version</li>
</ul><p><b>Is Swift UI Ready For New Projects?</b></p><ul>
<li>Depends on Audience and User Base</li>
<li>Lack of Documentation</li>
<li>Dealing with New Technical Hurdles</li>
<li>Big Improvement over UIKit</li>
<li>How to deal with UI Development right now?</li>
</ul><p><b>Changes Over The Years for Teams</b></p><ul>
<li>Better Handling of Remote Teams</li>
<li>Xcode Improvements</li>
<li>How Apple's culture affects the developer experience?</li>
<li>How to Deal with Decisions as Team Lead</li>
<li>Dealing with Third-Party Dependencies</li>
<li>Source Control Improvements</li>
<li>Using <a href="https://gitolite.com/gitolite/index.html">Gitolite</a> for Local Hosted Git</li>
<li>Introducing New Technologies With Tomorrow in Mind</li>
<li>Realizing the Soft in Software</li>
</ul><p><strong>Social Media</strong></p><p><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a></p><p><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a></p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 24 Nov 2019 00:00:00 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/4011273d/af01051c.mp3" length="41747967" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>2607</itunes:duration>
      <itunes:summary>In this episode, Leo talks with Peter Witham of the CompileSwift podcast about managing iOS development teams and dealing with new technologies.</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks with Peter Witham of the CompileSwift podcast about managing iOS development teams and dealing with new technologies.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Apple Hardware 2019 with Paul J Schmidt</title>
      <itunes:episode>28</itunes:episode>
      <itunes:title>Apple Hardware 2019 with Paul J Schmidt</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">cb0fd4a0-eb20-4c30-b1d6-93d962e50c7b</guid>
      <link>https://share.transistor.fm/s/19292615</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li> Paul J Schmidt - <a href="https://www.unodeuce.com/">UnoDeuce Multimedia</a><ul>
<li><a href="https://www.youtube.com/user/1dpmultimedia?feature=results_main">Youtube</a></li>
<li><a href="https://www.instagram.com/unodeucemedia/">Instagram</a></li>
<li><a href="https://twitter.com/unodeucemedia">Twitter</a></li>
<li><a href="https://www.facebook.com/UnoDeuceMultimedia">Facebook</a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/6321c757"><strong>Episode 13 - Apple and Video</strong></a></li>
<li><a href="https://share.transistor.fm/s/3ee56c45"><strong>Episode 7 - Apple 2019</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>AirPods Pro</b></p><ul>
<li>Improved Sound Quality and Battery</li>
<li>Noise Cancellation and Transparency Mode</li>
<li>Possibly A First Attempt at Audio Augmented Reality</li>
</ul><p><b>iPhone 11</b></p><ul>
<li>Video Recording Updates</li>
<li>Filmic Pro</li>
<li>Frame Rate Improvements</li>
<li>What's the advantage for Max Vs. Plus?</li>
<li>Night Mode, Deep Fusion, and other camera improvements</li>
</ul><p><b>iPads and Macs for Professionals</b></p><ul>
<li>Are iPads ready for Profession Video Editing?</li>
<li>Adobe Premier vs Adobe Rush</li>
<li>iMac Pro vs Mac Pro</li>
<li>Intel vs ARM</li>
</ul><p><b>iOS 13 and Catalina</b></p><ul>
<li>Is there a need to upgrade for non-developers?</li>
<li>When will iOS 13 be ready?</li>
<li>Issues with 64-bit only on Catalina</li>
</ul><p>Social Media</p><p><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a></p><p><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a></p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li> Paul J Schmidt - <a href="https://www.unodeuce.com/">UnoDeuce Multimedia</a><ul>
<li><a href="https://www.youtube.com/user/1dpmultimedia?feature=results_main">Youtube</a></li>
<li><a href="https://www.instagram.com/unodeucemedia/">Instagram</a></li>
<li><a href="https://twitter.com/unodeucemedia">Twitter</a></li>
<li><a href="https://www.facebook.com/UnoDeuceMultimedia">Facebook</a></li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/6321c757"><strong>Episode 13 - Apple and Video</strong></a></li>
<li><a href="https://share.transistor.fm/s/3ee56c45"><strong>Episode 7 - Apple 2019</strong></a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>AirPods Pro</b></p><ul>
<li>Improved Sound Quality and Battery</li>
<li>Noise Cancellation and Transparency Mode</li>
<li>Possibly A First Attempt at Audio Augmented Reality</li>
</ul><p><b>iPhone 11</b></p><ul>
<li>Video Recording Updates</li>
<li>Filmic Pro</li>
<li>Frame Rate Improvements</li>
<li>What's the advantage for Max Vs. Plus?</li>
<li>Night Mode, Deep Fusion, and other camera improvements</li>
</ul><p><b>iPads and Macs for Professionals</b></p><ul>
<li>Are iPads ready for Profession Video Editing?</li>
<li>Adobe Premier vs Adobe Rush</li>
<li>iMac Pro vs Mac Pro</li>
<li>Intel vs ARM</li>
</ul><p><b>iOS 13 and Catalina</b></p><ul>
<li>Is there a need to upgrade for non-developers?</li>
<li>When will iOS 13 be ready?</li>
<li>Issues with 64-bit only on Catalina</li>
</ul><p>Social Media</p><p><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a></p><p><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a></p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 17 Nov 2019 00:00:00 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/19292615/cc4164db.mp3" length="31792717" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>1985</itunes:duration>
      <itunes:summary>In this episode we talk with Paul J Schmidt of Uno Deuce Multimedia about the iPhone 11 and the Mac lineup and how it affects his business and others especially in the area of multimedia production.</itunes:summary>
      <itunes:subtitle>In this episode we talk with Paul J Schmidt of Uno Deuce Multimedia about the iPhone 11 and the Mac lineup and how it affects his business and others especially in the area of multimedia production.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Media Outreach with Jeff Gamet</title>
      <itunes:episode>27</itunes:episode>
      <itunes:title>Media Outreach with Jeff Gamet</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">05cdaa44-766a-464c-873a-8143a4578a9b</guid>
      <link>https://share.transistor.fm/s/b0bd852d</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li> Jeff Gamet - <a href="https://textexpander.com">Text Expander</a> Evangelist <ul>
<li>
<a href="https://textexpander.com">TextExpander</a> -<a href="https://twitter.com/textexpander"> @textexpander</a>
</li>
<li>Twitter <a href="https://twitter.com/jgamet">@jgamet</a>
</li>
<li>Instagram <a href="https://www.instagram.com/jgamet/">@jgamet</a>
</li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul><li><a href="https://share.transistor.fm/s/15b7ff63"><strong>Episode 26 - App Search Optimization with Ariel Mitcheli</strong></a></li></ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>Importance of Reaching the Press</b></p><ul>
<li>
<strong>Clear messaging</strong> prevents uncertainty and ambiguity</li>
<li>Pay attention and <strong>communicate with users</strong>
</li>
<li>Get insight from the users by <strong>scheduling calls</strong>
</li>
<li>
<strong>Cater your messaging</strong> to your audience</li>
<li>Using PR Services (ex. <a href="https://www.prlog.org">PRLog</a>) are helpful but <strong>personal relationships are important</strong>
</li>
</ul><p><b>Going to the Right Audience</b></p><ul>
<li>Based on the target device (Android vs iOS) and industry, <strong>pitch to right journalists</strong>
</li>
<li>
<strong>Talk to developers</strong> who have done apps in that space</li>
<li>Make sure the <strong>press release service aligns with your app</strong>
</li>
</ul><p><b>The Email - Important Components </b></p><ul>
<li>
<strong>What is it</strong> - Software, Hardware, etc...</li>
<li>
<strong>What does it do</strong> - Email Client, Music Player, iPhone Case, etc...</li>
<li>
<strong>Who is it for</strong> - for the iPhone, for the Apple Watch, for Windows PCs, etc...</li>
<li>
<strong>Why should I care</strong>/What makes it special/What need does it fill<ul><li>Email Client - AI based Spam Filter for Administrative Assistant</li></ul>
</li>
</ul><p><b>The Email - Subject Line Mistakes </b></p><ul>
<li>Ambiguous or Unclear Subject Line</li>
<li>Being Too Clever</li>
<li>Pretending Like You're <em>Looping Back</em>
</li>
<li>Timing is Important</li>
<li>Keeping It Fresh</li>
<li>When to Actually Follow-Up</li>
</ul><p><b>How to build a Media Kit</b></p><ul>
<li>
<strong>High Resolution Screenshots</strong> - PNG or JPEG</li>
<li>
<strong>Logos</strong> - SVG and PNG or JPEG</li>
<li>
<strong>Product Information</strong> - PDF - <em>not Microsoft Word</em>
</li>
<li>
<strong>Reviewers Guide</strong><ul>
<li><strong>Walkthrough Documentation</strong></li>
<li>
<strong>FAQ</strong> - Addresses questions the media will have</li>
<li>
<strong>Required Files or Info</strong> - Example Files, Logins, etc...</li>
</ul>
</li>
<li>
<strong>Contact Info</strong> - email address, social media, home page</li>
<li>
<strong>Videos</strong> <em>optional - </em>Youtube Link (for in-use) or GIF (for screenshots) </li>
</ul><p><b>How Can Companies Integrate the Messaging Early On</b></p><ul>
<li>Think About the Messaging Early In the Development Process</li>
<li>Think About How It's Presented As It's Developed</li>
<li>
<a href="http://momtestbook.com"><strong>Mom Test</strong></a><strong> </strong>- Rope In Friends and Family</li>
<li>Look at <a href="https://textexpander.com/press/"><strong>Other PR Pages such as TextExpander's</strong></a>
</li>
<li>Live Stream or Schedule Live Presentations Usage of the App</li>
<li>Using the Press for Recruiting Beta Testing</li>
</ul><p><b>Social Media</b></p><p><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a></p><p><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a></p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li> Jeff Gamet - <a href="https://textexpander.com">Text Expander</a> Evangelist <ul>
<li>
<a href="https://textexpander.com">TextExpander</a> -<a href="https://twitter.com/textexpander"> @textexpander</a>
</li>
<li>Twitter <a href="https://twitter.com/jgamet">@jgamet</a>
</li>
<li>Instagram <a href="https://www.instagram.com/jgamet/">@jgamet</a>
</li>
</ul>
</li></ul><p><b>Related Episodes</b></p><ul><li><a href="https://share.transistor.fm/s/15b7ff63"><strong>Episode 26 - App Search Optimization with Ariel Mitcheli</strong></a></li></ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>Importance of Reaching the Press</b></p><ul>
<li>
<strong>Clear messaging</strong> prevents uncertainty and ambiguity</li>
<li>Pay attention and <strong>communicate with users</strong>
</li>
<li>Get insight from the users by <strong>scheduling calls</strong>
</li>
<li>
<strong>Cater your messaging</strong> to your audience</li>
<li>Using PR Services (ex. <a href="https://www.prlog.org">PRLog</a>) are helpful but <strong>personal relationships are important</strong>
</li>
</ul><p><b>Going to the Right Audience</b></p><ul>
<li>Based on the target device (Android vs iOS) and industry, <strong>pitch to right journalists</strong>
</li>
<li>
<strong>Talk to developers</strong> who have done apps in that space</li>
<li>Make sure the <strong>press release service aligns with your app</strong>
</li>
</ul><p><b>The Email - Important Components </b></p><ul>
<li>
<strong>What is it</strong> - Software, Hardware, etc...</li>
<li>
<strong>What does it do</strong> - Email Client, Music Player, iPhone Case, etc...</li>
<li>
<strong>Who is it for</strong> - for the iPhone, for the Apple Watch, for Windows PCs, etc...</li>
<li>
<strong>Why should I care</strong>/What makes it special/What need does it fill<ul><li>Email Client - AI based Spam Filter for Administrative Assistant</li></ul>
</li>
</ul><p><b>The Email - Subject Line Mistakes </b></p><ul>
<li>Ambiguous or Unclear Subject Line</li>
<li>Being Too Clever</li>
<li>Pretending Like You're <em>Looping Back</em>
</li>
<li>Timing is Important</li>
<li>Keeping It Fresh</li>
<li>When to Actually Follow-Up</li>
</ul><p><b>How to build a Media Kit</b></p><ul>
<li>
<strong>High Resolution Screenshots</strong> - PNG or JPEG</li>
<li>
<strong>Logos</strong> - SVG and PNG or JPEG</li>
<li>
<strong>Product Information</strong> - PDF - <em>not Microsoft Word</em>
</li>
<li>
<strong>Reviewers Guide</strong><ul>
<li><strong>Walkthrough Documentation</strong></li>
<li>
<strong>FAQ</strong> - Addresses questions the media will have</li>
<li>
<strong>Required Files or Info</strong> - Example Files, Logins, etc...</li>
</ul>
</li>
<li>
<strong>Contact Info</strong> - email address, social media, home page</li>
<li>
<strong>Videos</strong> <em>optional - </em>Youtube Link (for in-use) or GIF (for screenshots) </li>
</ul><p><b>How Can Companies Integrate the Messaging Early On</b></p><ul>
<li>Think About the Messaging Early In the Development Process</li>
<li>Think About How It's Presented As It's Developed</li>
<li>
<a href="http://momtestbook.com"><strong>Mom Test</strong></a><strong> </strong>- Rope In Friends and Family</li>
<li>Look at <a href="https://textexpander.com/press/"><strong>Other PR Pages such as TextExpander's</strong></a>
</li>
<li>Live Stream or Schedule Live Presentations Usage of the App</li>
<li>Using the Press for Recruiting Beta Testing</li>
</ul><p><b>Social Media</b></p><p><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a></p><p><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a></p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 03 Nov 2019 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/b0bd852d/17b3b144.mp3" length="41070234" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>2565</itunes:duration>
      <itunes:summary>In this episode we talk with Jeff Gamet from Smile about how to get how to get your message to media, bloggers, and podcasters about your app.</itunes:summary>
      <itunes:subtitle>In this episode we talk with Jeff Gamet from Smile about how to get how to get your message to media, bloggers, and podcasters about your app.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>App Store Optimization with Ariel Michaeli</title>
      <itunes:episode>26</itunes:episode>
      <itunes:title>App Store Optimization with Ariel Michaeli</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">e05b467a-57b5-45a6-b26a-0f403d3dc055</guid>
      <link>https://share.transistor.fm/s/15b7ff63</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li> <a href="https://arielmichaeli.com"><strong>Ariel Michaeli</strong></a><strong>  - </strong><a href="https://twitter.com/arielmichaeli"><strong>Twitter @arielmichaeli</strong></a><ul>
<li>
<a href="https://appfigures.com"><strong>AppFigures</strong></a> - <a href="https://twitter.com/appfigures">Twitter @appfigures</a>
</li>
<li><a href="https://www.youtube.com/watch?v=8qd_13dKz4Q"><strong>360idev 2019 - App Store Optimization for the Rest of Us</strong></a></li>
<li>
<strong>AppFigures Guides</strong><ul>
<li><a href="https://appfigures.com/resources/aso/app-store-optimization-checklist"><strong>AppFigures App Store Optimization Checklist</strong></a></li>
<li><a href="https://appfigures.com/resources/aso/app-name-optimization"><strong>How to Optimize Your Keywords List in App Store Connect</strong></a></li>
<li><a href="https://appfigures.com/resources/aso/app-name-optimization"><strong>Optimizing Your App’s Name to Get More Downloads</strong></a></li>
<li><a href="https://appfigures.com/resources/aso/which-keywords-to-optimize-for"><strong>How to Choose the Right Keywords for App Store Optimization</strong></a></li>
</ul>
</li>
</ul>
</li></ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>App Store Optimization Basics</b></p><ul>
<li>The Importance of Marketing</li>
<li>Why not depend on Today, Category, or Featured by Apple</li>
<li>How it helps established business as well as startups</li>
<li>
<strong>60% of downloads</strong> are directly from the App Store</li>
<li>You only have <strong>20 seconds</strong> to capture your audience</li>
<li><a href="https://appfigures.com/resources/aso/app-store-optimization-checklist"><strong>AppFigures App Store Optimization Checklist</strong></a></li>
</ul><p><b>Key Differences between SEO and ASO</b></p><ul>
<li>Backwards Engineering the Play Store/App Store vs. Google</li>
<li>ASO is restricted by the fields and parameters Apple or Google Play Store provides</li>
<li>People Search for Solutions on Google vs People Search for <strong>Apps </strong>on the App Store</li>
</ul><p><b>What are the Components For Successful ASO?</b></p><ul>
<li>
<strong>Research</strong> for Correct Keywords </li>
<li>Apply <strong>Keywords</strong> based on Solutions the App Provides<ul>
<li><a href="https://appfigures.com/resources/keyword-optimization-app-store-connect">Breakdown Keywords</a></li>
<li>Use the Correct Title and Subtitle Correctly</li>
<li>Title and Subtitle in the Apple App Store Are Rendered As One Sentence</li>
<li><a href="https://appfigures.com/resources/aso/app-name-optimization"><strong>How to Optimize Your Keywords List in App Store Connect</strong></a></li>
<li><a href="https://appfigures.com/resources/aso/app-name-optimization"><strong>Optimizing Your App’s Name to Get More Downloads</strong></a></li>
<li><a href="https://appfigures.com/resources/aso/which-keywords-to-optimize-for"><strong>How to Choose the Right Keywords for App Store Optimization</strong></a></li>
</ul>
</li>
<li>Make <strong>Visuals</strong> Compelling Which Encourage Downloads<ul>
<li>Videos Are Very Helpful</li>
<li>Give Your Screenshots Context and Use the Design of the App Page<ul><li><a href="https://apps.apple.com/us/app/jump-by-uber/id1251322970"><strong>User Jump</strong></a></li></ul>
</li>
</ul>
</li>
<li>
<strong>Monitoring</strong> Keywords and Algorithm Changes</li>
<li>
<strong>Experiment</strong> with Emulated App Store Pages and A/B Testing</li>
</ul><p><b>What are Common Mistakes For Successful ASO?</b></p><ul>
<li>
<strong>Don't </strong>Optimize for Competitor Name</li>
<li>
<strong>Don't </strong>Leave Your App Page Alone But Constantly Monitor</li>
<li>
<strong>Don't </strong>Optimize for Only Your Competitor </li>
</ul><p><b>Apple Watch App Store and <a href="https://heartwitch.app">Heartwitch App</a> Feedback</b></p><ul>
<li>Understand Your Audience</li>
<li>Use Branding with Browser Window</li>
<li>Selling on the Apple Watch Store Makes the App Unique</li>
<li>Ask Apple to Feature</li>
<li>Reach Out To The Community</li>
</ul><p><b>Social Media</b></p><p><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a></p><p><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a></p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li> <a href="https://arielmichaeli.com"><strong>Ariel Michaeli</strong></a><strong>  - </strong><a href="https://twitter.com/arielmichaeli"><strong>Twitter @arielmichaeli</strong></a><ul>
<li>
<a href="https://appfigures.com"><strong>AppFigures</strong></a> - <a href="https://twitter.com/appfigures">Twitter @appfigures</a>
</li>
<li><a href="https://www.youtube.com/watch?v=8qd_13dKz4Q"><strong>360idev 2019 - App Store Optimization for the Rest of Us</strong></a></li>
<li>
<strong>AppFigures Guides</strong><ul>
<li><a href="https://appfigures.com/resources/aso/app-store-optimization-checklist"><strong>AppFigures App Store Optimization Checklist</strong></a></li>
<li><a href="https://appfigures.com/resources/aso/app-name-optimization"><strong>How to Optimize Your Keywords List in App Store Connect</strong></a></li>
<li><a href="https://appfigures.com/resources/aso/app-name-optimization"><strong>Optimizing Your App’s Name to Get More Downloads</strong></a></li>
<li><a href="https://appfigures.com/resources/aso/which-keywords-to-optimize-for"><strong>How to Choose the Right Keywords for App Store Optimization</strong></a></li>
</ul>
</li>
</ul>
</li></ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>App Store Optimization Basics</b></p><ul>
<li>The Importance of Marketing</li>
<li>Why not depend on Today, Category, or Featured by Apple</li>
<li>How it helps established business as well as startups</li>
<li>
<strong>60% of downloads</strong> are directly from the App Store</li>
<li>You only have <strong>20 seconds</strong> to capture your audience</li>
<li><a href="https://appfigures.com/resources/aso/app-store-optimization-checklist"><strong>AppFigures App Store Optimization Checklist</strong></a></li>
</ul><p><b>Key Differences between SEO and ASO</b></p><ul>
<li>Backwards Engineering the Play Store/App Store vs. Google</li>
<li>ASO is restricted by the fields and parameters Apple or Google Play Store provides</li>
<li>People Search for Solutions on Google vs People Search for <strong>Apps </strong>on the App Store</li>
</ul><p><b>What are the Components For Successful ASO?</b></p><ul>
<li>
<strong>Research</strong> for Correct Keywords </li>
<li>Apply <strong>Keywords</strong> based on Solutions the App Provides<ul>
<li><a href="https://appfigures.com/resources/keyword-optimization-app-store-connect">Breakdown Keywords</a></li>
<li>Use the Correct Title and Subtitle Correctly</li>
<li>Title and Subtitle in the Apple App Store Are Rendered As One Sentence</li>
<li><a href="https://appfigures.com/resources/aso/app-name-optimization"><strong>How to Optimize Your Keywords List in App Store Connect</strong></a></li>
<li><a href="https://appfigures.com/resources/aso/app-name-optimization"><strong>Optimizing Your App’s Name to Get More Downloads</strong></a></li>
<li><a href="https://appfigures.com/resources/aso/which-keywords-to-optimize-for"><strong>How to Choose the Right Keywords for App Store Optimization</strong></a></li>
</ul>
</li>
<li>Make <strong>Visuals</strong> Compelling Which Encourage Downloads<ul>
<li>Videos Are Very Helpful</li>
<li>Give Your Screenshots Context and Use the Design of the App Page<ul><li><a href="https://apps.apple.com/us/app/jump-by-uber/id1251322970"><strong>User Jump</strong></a></li></ul>
</li>
</ul>
</li>
<li>
<strong>Monitoring</strong> Keywords and Algorithm Changes</li>
<li>
<strong>Experiment</strong> with Emulated App Store Pages and A/B Testing</li>
</ul><p><b>What are Common Mistakes For Successful ASO?</b></p><ul>
<li>
<strong>Don't </strong>Optimize for Competitor Name</li>
<li>
<strong>Don't </strong>Leave Your App Page Alone But Constantly Monitor</li>
<li>
<strong>Don't </strong>Optimize for Only Your Competitor </li>
</ul><p><b>Apple Watch App Store and <a href="https://heartwitch.app">Heartwitch App</a> Feedback</b></p><ul>
<li>Understand Your Audience</li>
<li>Use Branding with Browser Window</li>
<li>Selling on the Apple Watch Store Makes the App Unique</li>
<li>Ask Apple to Feature</li>
<li>Reach Out To The Community</li>
</ul><p><b>Social Media</b></p><p><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a></p><p><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a></p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 27 Oct 2019 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/15b7ff63/ab74d3e7.mp3" length="44215861" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>2761</itunes:duration>
      <itunes:summary>In this episode we talk with Ariel Michaeli of App Figures about integrating App Store Optimization with the marketing and development process of building an app.</itunes:summary>
      <itunes:subtitle>In this episode we talk with Ariel Michaeli of App Figures about integrating App Store Optimization with the marketing and development process of building an app.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Hiring an iOS Developer with John Knox</title>
      <itunes:episode>25</itunes:episode>
      <itunes:title>Hiring an iOS Developer with John Knox</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">6187fb4b-e6ba-432f-8e1c-fb6a466d5ab8</guid>
      <link>https://share.transistor.fm/s/382a5473</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li> <a href="https://pyrus.io/"><strong>J</strong></a><strong>ohn Knox  - </strong><a href="https://twitter.com/windaddict"><strong>Twitter @windaddict</strong></a><strong> - </strong><a href="https://www.linkedin.com/in/johnmpknox/"><strong>LinkedIn</strong></a><ul><li>
<a href="https://www.hireappdeveloper.org"><strong>Hiring An App Developer</strong></a> - <a href="https://twitter.com/hireanappdev">Twitter @hireanappdev</a>
</li></ul>
</li></ul><p><b>Previous Episodes</b></p><p><a href="https://share.transistor.fm/s/bcf9bb21"><strong>Episode 12 - iOS Developer Interviews with Alex Bush</strong></a></p><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b><a href="https://businessofsoftware.org">Business of Software</a> Highlights</b></p><ul>
<li><a href="https://businessofsoftware.org/speaker/matt-wensing/">Matt Wensing on Forecasting</a></li>
<li><a href="https://1se.co">One Second Everyday </a></li>
</ul><p><b>iOS Hiring Challenges</b></p><ul>
<li>Lack of Experience and Understand of iOS Development</li>
<li>
<em>Cargo Cult </em>Interview Style (and Burying Dead Bodies😱?)</li>
<li>Lack of Training Resources for Employees</li>
<li>Not Oppurtunities for Growth </li>
<li>Lack of Organization Skills in HR/Recruiting</li>
</ul><p><b>Getting Hired</b></p><ul>
<li>Dealing with HR Automation</li>
<li>Finding the Right Person at the Company?</li>
<li>LinkedIn vs Twitter</li>
</ul><p><b>What Companies Should Look For?</b></p><ul>
<li>How John Does Coding Challenges</li>
<li>Finding Coding Style</li>
<li>Have Little to No Complex Dependencies</li>
<li>Seeing Actual Experience </li>
</ul><p><b>Social Media</b></p><p><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a></p><p><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a></p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><br></p><p><br></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li> <a href="https://pyrus.io/"><strong>J</strong></a><strong>ohn Knox  - </strong><a href="https://twitter.com/windaddict"><strong>Twitter @windaddict</strong></a><strong> - </strong><a href="https://www.linkedin.com/in/johnmpknox/"><strong>LinkedIn</strong></a><ul><li>
<a href="https://www.hireappdeveloper.org"><strong>Hiring An App Developer</strong></a> - <a href="https://twitter.com/hireanappdev">Twitter @hireanappdev</a>
</li></ul>
</li></ul><p><b>Previous Episodes</b></p><p><a href="https://share.transistor.fm/s/bcf9bb21"><strong>Episode 12 - iOS Developer Interviews with Alex Bush</strong></a></p><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b><a href="https://businessofsoftware.org">Business of Software</a> Highlights</b></p><ul>
<li><a href="https://businessofsoftware.org/speaker/matt-wensing/">Matt Wensing on Forecasting</a></li>
<li><a href="https://1se.co">One Second Everyday </a></li>
</ul><p><b>iOS Hiring Challenges</b></p><ul>
<li>Lack of Experience and Understand of iOS Development</li>
<li>
<em>Cargo Cult </em>Interview Style (and Burying Dead Bodies😱?)</li>
<li>Lack of Training Resources for Employees</li>
<li>Not Oppurtunities for Growth </li>
<li>Lack of Organization Skills in HR/Recruiting</li>
</ul><p><b>Getting Hired</b></p><ul>
<li>Dealing with HR Automation</li>
<li>Finding the Right Person at the Company?</li>
<li>LinkedIn vs Twitter</li>
</ul><p><b>What Companies Should Look For?</b></p><ul>
<li>How John Does Coding Challenges</li>
<li>Finding Coding Style</li>
<li>Have Little to No Complex Dependencies</li>
<li>Seeing Actual Experience </li>
</ul><p><b>Social Media</b></p><p><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a></p><p><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a></p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><br></p><p><br></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 20 Oct 2019 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/382a5473/239f4b40.mp3" length="32452240" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>2026</itunes:duration>
      <itunes:summary>In this episode we talk with John Knox about Business of Software conference, hiring an iOS developer, and getting hired as an iOS developer.</itunes:summary>
      <itunes:subtitle>In this episode we talk with John Knox about Business of Software conference, hiring an iOS developer, and getting hired as an iOS developer.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Continuous Integration with Kyle Newsome</title>
      <itunes:episode>24</itunes:episode>
      <itunes:title>Continuous Integration with Kyle Newsome</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">92853b76-d484-4c2e-aca4-1150decc8fa9</guid>
      <link>https://share.transistor.fm/s/a14f868f</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li> <a href="https://pyrus.io"><strong>Kyle Newsome</strong></a><strong> - (</strong><a href="https://twitter.com/kylnew"><strong>Twitter @kylnew</strong></a><strong>)</strong><ul><li>
<a href="https://vimeo.com/showcase/6225806/video/354783100">Continuous Integration - What, Why &amp; How feat. Bitrise</a> - SwiftTO</li></ul>
</li></ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>New iPhone 11 Thoughts</b></p><ul>
<li>Camera Improvements</li>
<li>Max vs Not-Max Size</li>
<li>DSL vs iPhone</li>
<li>Night Mode</li>
</ul><p><b>Continuous Integration Issues with iOS</b></p><ul>
<li>Deployment Issues</li>
<li>Cache Issues</li>
<li>Continuous Integration 101</li>
</ul><p><b>How to Get Started</b></p><ul>
<li>Removing Dependencies on People and Files</li>
<li>Reproducible Anywhere</li>
<li>Using Pull Requests or Code Reviews As Triggers</li>
<li>Having Tests to Address Pain Points</li>
<li>Dealing with Certificates and Provisioning Profiles</li>
<li><a href="https://www.hashicorp.com">HashiCorp</a></li>
<li>Using Tools Like <a href="https://fastlane.tools"><strong>Fastlane</strong></a>
</li>
</ul><p><b>Comparing Services</b></p><ul>
<li>Cloud Services<ul>
<li>
<a href="https://www.bitrise.io"><strong>Bitrise</strong></a> - Focused on Mobile Development (Android and iOS)</li>
<li>
<a href="https://travis-ci.org"><strong>Travis-CI</strong></a> - Free Open Source (includes macOS)</li>
<li>
<a href="https://circleci.com"><strong>Circle-CI</strong></a> - Free Open Source (includes macOS)</li>
</ul>
</li>
<li>Self-Hosting<ul>
<li><a href="https://jenkins.io">Jenkins</a></li>
<li>Xcode Server</li>
<li><a href="https://github.com/AlexanderWillner/runMacOSinVirtualBox">Running Your Own Mac Virtual Machine</a></li>
</ul>
</li>
<li>Hybrid Solutions<ul><li><a href="https://www.macstadium.com">MacStadium</a></li></ul>
</li>
<li>Differences between macOS and iOS building <a href="https://speculid.com"><strong>Speculid</strong></a><ul><li><a href="https://www.youtube.com/watch?v=9kH_Qtla4-g&amp;list=PLmpJxPaZbSnB_h1FlXwN7TdJ7UGzvEtsG&amp;index=4">Tutorial Setting Up Speculid and macOS on Travis-CI</a></li></ul>
</li>
</ul><p><b>Feedback Loops and CI</b></p><ul>
<li>Having Healthy Unit Tests </li>
<li>Rapid Results through Automation</li>
<li>Proofing Builds Before QA</li>
</ul><p><b>Social Media</b></p><p><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a></p><p><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a></p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Transcription</b></p><p><strong>Leo Dion (Host): </strong>Hey, Kyle, how are you doing? </p><p>[00:00:01] <strong>Kyle Newsome (Guest): </strong>I'm doing great. Thanks very much. It's unfortunately a slightly rainy day in Toronto here, but otherwise, a good mood. </p><p>[00:00:07] <strong>Leo Dion (Host): </strong>Yeah, same here. It's been a weird, cause. I don't know what Ontario's like, but Michigan. It's like one day was 80 degrees and then the next day dropped down to like 50 or 60 </p><p>[00:00:18] Oh, sorry. That's Fahrenheit. But you get what I mean. </p><p>[00:00:20] <strong>Kyle Newsome (Guest): </strong>It's okay. I lived a little bit in the States, so I like can do the conversion. I know that like 70 is nice and comfortable. Eighties getting to hot sixties like not too bad. </p><p>[00:00:30] <strong>Leo Dion (Host): </strong>I think fall's finally here. Yeah, so another sign of fall is the new iPhones. Did you get anyone iPhone?</p><p>[00:00:38] <strong>Kyle Newsome (Guest): </strong>I got the new iPhone 11 pro max. Which I've been waiting to upgrade for a few years. So this is like my first experience with like the X, you know, edge to edge screen as well. </p><p>[00:00:49] <strong>Leo Dion (Host): </strong>What do you think of it? </p><p>[00:00:51] <strong>Kyle Newsome (Guest): </strong>Honestly, so far I'm pretty impressed with it and as much as people have complained about how the three lenses look, I actually think it looks pretty nice.</p><p>[00:00:58] They've done something good with the glass backing, so it looks pretty refined, so I can't really complain about that. I've played around with the camera and the night photography a little bit and it's pretty cool to see how much it can capture in low light. </p><p>[00:01:11] <strong>Leo Dion (Host): </strong>What did you have previously? </p><p>[00:01:13] <strong>Kyle Newsome (Guest): </strong>Previously I had the iPhone seven plus. </p><p>[00:01:17] <strong>Leo Dion (Host): </strong>Okay. And do you really like the max size? </p><p>[00:01:19] <strong>Kyle Newsome (Guest): </strong>You know, like I'm used to it in my hand now, so I can't complain. You know, for the longest time I didn't think that I would like it, but I believe when the seven plus was the only one that had the two cameras, and I was really interested in that functionality.</p><p>[00:01:32] So I upgraded to the largest one, and now I'm kind of used to it. But I think that both the regular size and the max size are both pretty good in terms of screen size you got. I'm just sort of used to this in my hand and I liked that when they at least made the change from the old ones to the new ones, they kept the size of the same and then just you got more screen space so it feels exactly the same as my old phone in my hand.</p><p>[00:01:56] <strong>Leo Dion (Host): </strong>Yeah, I was a plus size user and I loved that. And then I went to the 10s, not max. And I don't feel like I miss the size because the screen size is pretty much the same. But I was just curious, like if you see like a big advantage with the max. </p><p>[00:02:12] <strong>Kyle Newsome (Guest): </strong>No, I don't really think so. I guess it gets a little bit longer battery life, which is always nice, but otherwise, yeah, they both look pretty nice.</p><p>[00:02:20] I was sort of on the fence whether to go with one or the other, but I think ultimately it was kind of like hand feel that I just like, I was used to the weight and everything, so I just wanted to make a seamless transition like that. </p><p>[00:02:30] And the big selling point for me with the plus was the extra lens. And like now we don't have that.</p><p>[00:02:35] <strong>Leo Dion (Host): </strong>Like the extra selling point isn't there because he can pretty much get that with the regular pro. So like that was my big thing was I just want a really good camera. Like I don't have cameras anymore. Like I think I sold my DSLR and my other digital cameras a couple of years ago cause I wasn't really using them.</p><p>[00:02:54] And like the convenience of having an iPhone was always worthwhile to me. And like the dual camera, like I'm a. I know people don't really care for portrait mode, but I use portrait mode all the time when I'm taking pictures with my family and things like that, and I like it a lot. </p><p>[00:03:08] <strong>Kyle Newsome (Guest): </strong>It's funny that you just sold your DSLR and I just bought a mirrorless camera because I was interested actually mostly for video recording purposes, which i think is actually where there's the biggest difference between what these phone cameras can do and what the regular cameras can do, because they can do a lot of post-processing on like one image, but doing things like getting that portrait mode depth of field effect per video is not something they're really capable of today.</p><p>[00:03:33] <strong>Leo Dion (Host): </strong>Yeah. Not now. </p><p>[00:03:34] <strong>Kyle Newsome (Guest): </strong>That aside, I mean, yeah. It's just like the camera on your phone is just so much more of a utility for everyday use. So many of the pictures that I take with my phone or just to like to help me maybe remember a password that was written on a note somewhere that I wanted, or just general utility.</p><p>[00:03:51] They're not very interesting pictures, but I would never do that with a mirrorless camera. Obviously not convenient at all. </p><p>[00:03:58] <strong>Leo Dion (Host): </strong>Yeah. Really liking these cameras on these phones. So what's your opinion of like night mode. </p><p>[00:04:03] <strong>Kyle Newsome (Guest): </strong>You know, it wasn't the operating the way I thought. I thought it was just going to basically do a whole bunch of post-processing on the image and know how to like extract the right colors, but it actually does do like a long shutter effect, which surprised me a little bit.</p><p>[00:04:18] I wasn't ready to see that. But it's interesting. So I think depending on the amount of light in the room, it kind of auto suggests about how long it's going to do the shutter effect for and seems like the longest it goes for is maybe four seconds. </p><p>[00:04:31] <strong>Leo Dion (Host): </strong>Okay. </p><p>[00:04:32] <strong>Kyle Newsome (Guest): </strong>What I find interesting about it though, like I'm curious about what it's doing, because obviously if you are holding the shutter open for four seconds and you're just doing it like handheld, you're probably not holding it perfectly still.</p><p>[00:04:43] So, I wonder, you know, what other sorts of machine learning and things they're applying after the fact to make sure it still comes out like a crisp photo, but it's grabbed more information about color simultaneously. I can't say I've really looked into exactly what it's doing, but that was the experience I got from it.</p><p>[00:05:01] Anyway, I thought it was going to be just Oh snap and then it'll post-process and like bring out all this color, but it actually does try to record more light for longer. </p><p>[00:05:09] <strong>Leo Dion (Host): </strong>Okay. So that's what it's doing. So it's basically keeping the shutter open to get more light while at the same time doing some ML stuff to like figure out what's the best photo to use or what's the best picture to use. Interesting. </p><p>[00:05:21] <strong>Kyle Newsome (Guest): </strong>For sure. </p><p>[00:05:21] <strong>Leo Dion (Host): </strong>That's pretty cool. So before we deep dive into continuous integration, you want to tell people a little bit about yourself. </p><p>[00:05:28] <strong>Kyle Newsome (Guest): </strong>Sure. I'm terrible at talking about myself or building myself up. I'm an iOS developer in Toronto. I've also done a lot of full stack development over the years, and so I've done backend and JavaScript and PHP, but I did Objective-C back in the day and then got a little tired of it, did some more Javascript just because the language, I think was more pleasant to use.</p><p>[00:05:53] And then Swift came out and they open sourced it, and then it just sorta like turned all my attention back to iOS again. And then I've just been going straight with iOS since, but even some of my continuous integration experience actually came first from doing it on the web side, deploying web and backend Java script applications.</p><p>[00:06:12] And then when I came back to the iOS world, realized I was joining a lot of teams that weren't doing much with that. And so. Really started trying to learn more about continuous integration on the iOS side and championing that at the places I was working. </p><p>[00:06:25] <strong>Leo Dion (Host): </strong>And where are you working right now? </p><p>[00:06:26] <strong>Kyle Newsome (Guest): </strong>So right now I am consulting with Deloitte for Loblaw digital.</p><p>[00:06:32] Loblaws is like the Walmart of Canada, effectively. And I work with their loyalty, their PC optimum points application, which is. I believe the biggest loyalty program in Canada as well. So like when you go out and buy groceries or you go to the pharmacy, they're constantly collecting points and they're giving you bonuses and things.</p><p>[00:06:50] So yeah, that's the application I'm working with right now. </p><p>[00:06:53] <strong>Leo Dion (Host): </strong>What have you found is the biggest difference with CI or continuous integration on iOS. And I'm assuming we're just talking about iOS as opposed to web development. </p><p>[00:07:05] <strong>Kyle Newsome (Guest): </strong>I mean, I think probably the deployment factor is a huge thing, which isn't exactly like, it's the last step of the continuous integration process, like right as you deploy, but going even beyond continuous integration, there's like continuous integration, continuous deployment.</p><p>[00:07:20] And continuous deployment is really like, you're always able to continuously like push out the latest version of your application, you know, multiple times per day even, which is not really possible from an iOS perspective. We have to be a little more meticulous because we go through the Apple review process.</p><p>[00:07:36] A lot of companies are, you know, probably deploying maybe at most once a week. I don't hear of many who are deploying more than once a week. There's probably some out there, so it's a little bit slower. That's one of the big things. And I think even just some of the tasks you actually do, because continuous integration sort of starts first of all with like build, test, deploy steps, which are kind of just the core steps to getting your application built, making sure it's actually functioning properly, and then sending it out to the world.</p><p>[00:08:04] But beyond that, we tend to add a lot of additional tasks to kind of make sure that we're. As much as possible, automating our entire process. So some of those additional steps are probably quite different depending on web or iOS. Like I remember on web, I had to be constantly clearing cachees out, you know, clearing cachees out from CDNs or content delivery networks.</p><p>[00:08:27] And I don't have to do that as much on an iOS side, but there's other tasks I might do instead, like, you know, automatically generate screenshots or something like that. </p><p>[00:08:36] <strong>Leo Dion (Host): </strong>All right. So let me do my best attempt at trying to explain what CI is and then you let me know what parts I'm missing. So continuous integration is the idea of, as you make changes to the code, you are running various tests, not just like unit tests, but also like integration testing, things like that.</p><p>[00:08:58] And also making sure that the app can be easily deployed. And usually you're doing it on some central server somewhere, either locally or in the cloud. So that way you can best recreate the situations for where an app will actually be running. And I'm saying this because you have, like for server side stuff, it's pretty easy because you can just run on the actual server and recreate that situation pretty easily whereas with client applications, you need to like actually recreate the client atmosphere in the client environment in order to do that. But is that like a good description of continuous integration? </p><p>[00:09:35] <strong>Kyle Newsome (Guest): </strong>Yeah, I think that's a fairly good description of it. </p><p>[00:09:38] <strong>Leo Dion (Host): </strong>What am I missing? </p><p>[00:09:39] <strong>Kyle Newsome (Guest): </strong>It's not very often that people ask me to explain it and sort of formal terms, so I'm probably usually speaking about it from the benefits perspective.</p><p>[00:09:49] But one of the things I guess I take away from it sort of from, I guess a more philosophical perspective, is like there's many things you do to sort of make sure that your app is deployment ready and some of those things can be automated and some of them can't. The ones that you can automate, you should automate and you should be doing them every single time, every single day.</p><p>[00:10:11] <strong>Leo Dion (Host): </strong>Yeah. There we go. And I think that's it. It's like regression testing where you're like testing old features and making sure they're continually working and doing it every time in a repeated basis. And when we talk deployment, we're talking about like taking that app and putting it on an actual machine, whether that's your server for server side app or an iPhone or iOS simulator in a lot of cases, and actually testing it on that device and seeing if the app is working.</p><p>[00:10:36] <strong>Kyle Newsome (Guest): </strong>Absolutely.  </p><p>[00:10:37] <strong>Leo Dion (Host): </strong>If you were going to convince somebody who like has never done continuous integration, especially in an iOS application, what would you say to that person or to convince them that like, yeah, you really need to get started on getting your iPhone app running, some sort of continuous integration whenever a new release is about to come out in the app store.</p><p>[00:10:56] <strong>Kyle Newsome (Guest): </strong>Yeah, I mean, I think certainly on some teams you just really kind of help identify the pain points they're feeling or you know, something goes wrong and then you do a retrospective on like, why did this happen and how could we prevent it in the future? And then it's really easy to say like, Oh, well see, I could fix that coming from the web, like the example I used before with cache clearing, that was a super easy.</p><p>[00:11:18] Thing to point out at one company I worked with, like we were just forgetting the clear caches, and then people weren't pulling down the latest version of the application, or they were pulling down the latest JavaScript, but not getting the latest CSS and so they weren't seeing things correctly. So that was, you know, a good pain point from a web perspective </p><p>[00:11:35] On iOS, one team I worked with, they just had one developer who could deploy the app and had all the certificates and was ready to go and he was also responsible cause one of the things when you deploy an iOS application is you always have to bump the build version, which is like the most boring change you have to make to your application is increment you know, the build number every time. </p><p>[00:11:56] <strong>Leo Dion (Host): </strong>But it's easily forgettable. </p><p>[00:11:58] <strong>Kyle Newsome (Guest): </strong>Oh, super easy to forget. Right. And that's what was happening in this case was that the developer would sometimes deploy it, he'd forget to bump the build number. So we'd go through the whole deployment process and that build process takes sometimes 20-30 minutes to get that, especially if you include the uploading process to Apple's TestFlight and the processing time before they give you feedback.</p><p>[00:12:20] That's actually, you know, that's sometimes an hour to an hour and a half. So you know, having to kind of realize that the very end of that. Oops! we forgot to increment the build number let's go back. In this case too he actually unfortunately had just been going through ACL surgery too. So he wasn't always available in the office cause he was going to a physiotherapist.</p><p>[00:12:41] So like his availability wasn't good. So there, you know, the pain points between relying on this one guy who was in the middle of, you know, dealing with ACL surgery and recovering from that and having that point of failure of the build number. Those were two big pain points and good reasons to move to CI.</p><p>[00:12:57] So, yeah, I guess in summary, find the pain points. It's probably hard for me to pick someone up off the street who doesn't have a problem already and tell them that continuous integration is going to solve things. But once people have those pains, I think it's really, really easy to change their mind or convinced them to start using it.</p><p>[00:13:16] <strong>Leo Dion (Host): </strong>It's one of those cases where it's like you don't realize the pain until your employee has to be out for a few weeks, or what was it - somebody who was like on paternity leave at some company and like they're quickly trying to hire somebody to like fill the gap until he gets back. And it's this like one of those situations where you don't run into it until you run into an issue and you're like, okay, now I need to set up some sort of system with continuous integration in order to make sure that deployments are easy and things like that.</p><p>[00:13:42] Yeah. What are would be some like first steps in order to get started? Like what would you say is like the bare minimum as far as getting continuous integration set up? </p><p>[00:13:51] <strong>MarkerKyle Newsome (Guest): </strong>Yeah, so I mean, one of the first things you probably want to be thinking about is eliminating any local dependencies you have, right. If someone can only run that from their machine there's a reason why, right? Something is local to only their machine that isn't available to others. And a lot of cases with iOS, it's mainly about the certificates and the profiles that are on that computer that the others don't have. So you're going to try to either you know, make sure that your CI system has that stuff now, or ultimately, yeah, you're just trying to make sure that this is something that you can reproduce pretty much anywhere.</p><p>[00:14:29] You know, that people haven't, you know, have too many local scripts or anything like that. Running that would prevent you from duplicating the build experience somewhere else. So that's one of the first things that you can do if you have a tool like fastlane that you're using already. Cause sometimes some teams are actually using fastlane,  to do tasks for themselves, but they haven't gotten themselves on CI yet, or you're trying to sort of slowly work your way there.</p><p>[00:14:54] I think fastlane is a good tool that can start getting you ready for that because fast lane is all about doing tasks related to iOS stuff for you automatically, and you can run fastlane commands in CI. So you could even have your build, test, deploy phases running from your local machine through fastlane.</p><p>[00:15:12] And then when you put it on CI, you're basically just telling CI to run those same commands you were locally. So that can make it very easy to make the transition. If you already have a pull request code review process going on, that's probably one of the most important places to start integrating your CI server because every time you put code up for review, then it can go through this system and some of that feedback can be automated against it.</p><p>[00:15:39] So I'd say if a team doesn't have any sort of pull requests or code review process yet, they should get that up and running first. Even if they don't do super thorough examinations of the code in those pull requests, at least get the CI starting to do that for them. I think those are some good first steps to getting ready for CI.</p><p>[00:15:59] <strong>Leo Dion (Host): </strong>So let's sit back for a little bit and talk about each of those components, like a pull request and a code review process. What does that mean exactly? </p><p>[00:16:06] <strong>Kyle Newsome (Guest): </strong>So it's very easy for me to just merge code into, say,  the main code base that maybe I'm collaborating on with others. But if I just sort of get to directly make changes to the code.</p><p>[00:16:20] No one else is, you know, reviewing that in advance for any sort of mistakes or giving me feedback on how maybe I can improve those changes to the code base. And not having a process in place to do something like that is probably prone to causing error or catching problems later. So if you use anything like GitHub, GitLab, Bitbucket, they all have the ability to do a pull request process, which basically means you work on your code in sort of a separate branch and get terms, you know, from the main master code base, and then you make a formal request to merge your branch of code into your master or into maybe your development branch where you're working on things. </p><p>[00:17:03] And before that merge actually happens, someone actually has to approve it. You know, someone has to actually go into, say if you're using GitHub, going to GitHub and hit the approve button, and then the code can be merged from there.</p><p>[00:17:17] So. You know, the pull request process is the first step to, I think, creating a code review process. Like I said, you know, even if you weren't reviewing the code changes, but you at least were going through a formal process of putting up a request to change the code and someone else was approving it, that would be the first step.</p><p>[00:17:36] And then from there you'd probably want to influence your culture to like spend more time actually looking at the code. I'm getting feedback on it. And then integrating CI as well. And I can certainly talk about things. See I can do for your code review processes as well later. </p><p>[00:17:51] <strong>Leo Dion (Host): </strong>So basically like you have unit tests, obviously that need to be run and we did a whole episode on unit tests a few months ago, which you can check out. But like a pull request, that's where you'd have like your branch or your feature, and then you want to make sure to merge it into a specific version or master branch, and then somebody will go ahead and approve that. Does that sound about right? </p><p>[00:18:12] <strong>Kyle Newsome (Guest): </strong>Yeah</p><p>[00:18:12] <strong>Leo Dion (Host): </strong>and I think like one of the biggest challenges, and you just touched upon this, was the local dependencies and the certificates and profiles and things like that. That seems like one of the biggest challenges that I've faced with getting any sort of continuous integration set up is getting those certificates on some sort of server or putting them into the repo, but also in a way that it's secure.</p><p>[00:18:36] Because obviously you don't want anybody off the street to come in and get your repo and then put your app into the app store, but like there's a specific process for setting that up, right, where you can like encrypt the certificate, but then like have the password on the CI so that way you can decrypt it while at the same time, like making it secure, but also letting the CI system be able to approve and deploy an app.</p><p>[00:19:00] Is that right? </p><p>[00:19:01] <strong>Kyle Newsome (Guest): </strong>Yeah, absolutely. You ultimately want to expose. You're a certificate to as few people as possible. Ideally, you don't really want to be distributing these widely. So yeah, the fewer number of people that have that privileged, right - the better. And I mean, depending on the size of the team, you know, in enterprise situations, like I was working with a bank earlier this year.</p><p>[00:19:24] And they don't want the certificates or the profiles available to the developers at all. In fact, they have policies at the bank that, you know, a developer can't end to end both build the application and get it deployed to the store. There's actually multiple steps between to sort of make sure no one gets that much power.</p><p>[00:19:41] <strong>Leo Dion (Host): </strong>If you can say, I guess, how do they get around that? </p><p>[00:19:44] <strong>Kyle Newsome (Guest): </strong>Well, I mean, ultimately they have a dev ops team, and so these are, you know, operations guys who are sort of full time dedicated to building the applications and getting things configured properly so they get some access to this stuff. Although those certificates and profiles are still kept in a vault.</p><p>[00:20:02] There's like HashiCorp Vault is a product, I don't know if you're familiar with it, but it's just sort of a secure key store. So their CI system access is things from this vault, but they have permissions to work with the Vault and the CI process. But yeah, we weren't even really super involved. And that, you know, I could make some requests to change some of the CI workflows, but dev ops always was approving those.</p><p>[00:20:26] I couldn't change those myself. So interesting. It was just sort of one layer away from me that had the access ultimately. </p><p>[00:20:33] <strong>Leo Dion (Host): </strong>So if someone were to get started with CI, what service would you recommend first and foremost, and how do each differentiate themselves? </p><p>[00:20:44] <strong>Kyle Newsome (Guest): </strong>Right. Well, I think. My suggestion would maybe depend on, you know, whether, like if we're talking about just getting started with your first CI ever and you haven't done this at all, and we're talking about iOS, I've certainly enjoyed using BitRise because BitRise is very iOS and Android focused.</p><p>[00:21:06] When they first came out, they were even just iOS focused. And I found that the flow of getting started with them, they would, you know, do additional analysis on your project and try to sort of get it auto configured for you every time there's new versions of Xcode, they really try to be the first to get those beta versions of Xcode out onto their systems.</p><p>[00:21:28] So I found that they just, they have a very, like iOS is first class kind of attitude, which I like. Things like Travis CI and CircleCI are both. I guess I don't have much to differentiate between those two. They might have different price points, some of these different services. Also, I know like let's say you're doing an open source project that you want to put through CI. I think Travis or Circle might be better for that because they have a better free tier. </p><p>[00:21:56] <strong>Leo Dion (Host): </strong>Yup, yep. I've used Travis CI and we'll get into it a little bit, but I still haven't figured it out with Circle CI, and I've actually talked to some of the folks there, but Travis also does Mac apps. Which we'll talk about in a little bit.</p><p>[00:22:09] I think Circle supports that, but I haven't quite figured that out. It seems like the big hurdle with a lot of these surfaces, spoiler alert, is that you actually need a Mac to like run this stuff, which is a huge cost burden to any company in the cloud because they literally, like if you look at somebody like MacStadium, like you literally have to have a rack of Mac pros or Mac minis or iMac pros or whatever to like from this stuff. It's not like even with the VM, you need to run this stuff on a Mac. So I think like that's one of the big burdens with a lot of these services is like a lot of your CI services, they're going to be fine at doing like your Ruby or your Node JS and even some of the.net stuff, but like once you actually need a piece of like Mac hardware to do it, that kind of makes it more of a challenge cost-wise to these companies </p><p>[00:23:00] <strong>Kyle Newsome (Guest): </strong>for sure. And yeah, performance of some of these things, I guess when they're like running inside of virtual machines may not be as good as if you say got a really high end Mac mini or something and ran it locally because that is another option is self hosting, which we haven't touched on yet.</p><p>[00:23:17] And I don't really recommend self hosting for some reasons I'll bring up in a second, but just exploring what that means. You know, this is buying a computer to sort of have, you know, in your office that is connected with the system and running those things locally on your own computer. It meant you could do that either through Jenkins, which is a very popular one, or Xcode server.</p><p>[00:23:40] Apple has their own X code server. Although I don't know anyone who uses Xcode server. I don't know if you have worked with many companies that use it. I haven't found it to be very good personally. </p><p>[00:23:50] <strong>Leo Dion (Host): </strong>It's okay. So here's my situation that I've run into is I have a Mac app Speculid, which is for building app icons from SVG files or image sets, whatever. Okay. </p><p>[00:24:02] So like with this app, I've run into situations, especially early on where I needed to like actually test it on different like Mac environments and one thing you learn with like Mac development, I find one of the biggest challenges is that you don't have like reset simulator on the Mac, right? So I ended up sending up like a Virtual Box VM on my iMac to run Mojave or whatever is the latest OS and putting Xcode server on it and it works and it's like a great way for me to just like do reset simulator essentially by reverting to like a snapshot on a VM and that's what I've been using whenever I need to like test. There's been all sorts of weird issues like dependencies that have been installed or like I totally forgot about how different countries do decimal points differently and like all sorts of weird issues I've run into.</p><p>[00:24:54] That has been to my benefit with the CIA stuff. So like XCode server worked. It was fine. It was a great, was it as easy to set up as like Travis, which is probably the other situation I've run into? No, I don't think so. And of course it's like not the fastest, but it works. </p><p>[00:25:11] <strong>Kyle Newsome (Guest): </strong>It gets the steps done for sure.</p><p>[00:25:13] Like it's not pretty, it just sorta does the basics versus something like, I know BitRise. I mean I really liked their interface cause I think it's nice looking and it's something, I mean I know some companies, you know, even have sort of a culture of trying to make sure that sort of the build and whether it's kind of staying green is, you know, the developers are sort of aware of that all time.</p><p>[00:25:34] So maybe you have a dashboard that's kind of giving you an update on what your CI is and is it staying green. So sometimes using a nice CI that actually makes that look kind of nice to have, but it's not really the most important thing as just being able to run the steps. </p><p>[00:25:48] <strong>Leo Dion (Host): </strong>And then integration with the Xcode is really good.  And it was just a matter of like, the issue I ran into was just, I was using Travis CI cause Travis CI is free for open source projects and like it worked fine, but there was just a lot of things that I couldn't really like get into the guts of a Mac that I could do with the VM and Xcode server. So that's why I ended up getting that set up.</p><p>[00:26:09] And Travis CI doesn't necessarily have the latest betas installed for a lot of reasons. So I was able to like set up a CI system with whatever was the latest beta at that time. </p><p>[00:26:20] <strong>Kyle Newsome (Guest): </strong>Yeah. For ultimate sort of like power and control, having things, you know, self hosting is the way to go. For sure. You can do things just different that may not be possible.</p><p>[00:26:31] Like even the kinds of like caching can be different on some of these different services as well. I know that BitRise has some caching capabilities, but there might be a limit to the size of the cache. I've heard recently, I think maybe Circle CI didn't have a cache. Okay. Someone was telling me they were using either Travis or Circle and they couldn't cache the same way that BitRise could anyway.</p><p>[00:26:52] <strong>Leo Dion (Host): </strong>And when you say cache, what exactly are you talking about? </p><p>[00:26:55] <strong>Kyle Newsome (Guest): </strong>Just like holding onto some artifacts. Like, you know, sometimes you have dependencies such a, you know, a lot of people use CocoaPods </p><p>[00:27:02] <strong>Leo Dion (Host): </strong>and you know, want to rebuild and refinish those dependencies every single time. Is that what you mean? </p><p>[00:27:07] <strong>Kyle Newsome (Guest): </strong>For sure.</p><p>[00:27:08] <strong>Leo Dion (Host): </strong>Okay. </p><p>[00:27:08] <strong>Kyle Newsome (Guest): </strong>Exactly. That can certainly add to the time that it takes to get through your whole CI process. </p><p>[00:27:13] <strong>Leo Dion (Host): </strong>Yeah, that sounds like a lot. We had Abby Jackson on last week. We talked about modularization but she said like one of the big benefits is build times. So it's not something I really think about, but like if you're doing caching like what you're talking about, but that makes total sense. That's gonna like save a ton of time on your builds </p><p>[00:27:30] <strong>Kyle Newsome (Guest): </strong>for sure. One other thing with self hosting is the benefits is you get all the control, but the downsides is nobody's going to do that for you, so you become responsible for it. So I definitely think when a company decides whether they want to use a service or want to self host. They should really think about the dev ops costs associated with that in particular. </p><p>[00:27:52] <strong>Leo Dion (Host): </strong>Exactly. </p><p>[00:27:53] <strong>Kyle Newsome (Guest): </strong>Because if there's a beta, you're going to be responsible for getting that beta up and running. And if you realize that all of a sudden your team is growing and you need more machines, then you need to go buy and provision all of those machines and then get them collaborating together on a farm yourself again.</p><p>[00:28:10] And that is one thing that's really nice about using a service is that your team grows and you just buy the next tier or pay, you know, $5 more per month or whatever it costs per developer to grow your team like that. So these third party services scale very nicely. And yeah, the dev ops costs, you should really strongly consider before self hosting, I think for sure. </p><p>[00:28:31] <strong>Leo Dion (Host): </strong>Yeah. Do you have like an opinion on using a service like MacStadium  because the only reason I see it might be important for self hosting is security reasons or like Mac development where you like actually need an actual machine to like play around essentially with the computer itself and get those settings exactly the way you want it like otherwise, I don't see much of a reason to use self hosting service right. </p><p>[00:28:56] <strong>Kyle Newsome (Guest): </strong>Yeah. Unless you just, you want to do something really different. There is one organization I was working with, I can't talk too much about this one, but they wanted to be running a lot of different types of virtual - like they wanted to kind of virtualize their whole system during the CI process.</p><p>[00:29:13] So the servers that were being communicated with were all being run from that server as well. And so they were looking at moving towards self hosting to get some of those features that they couldn't get from doing it through these third party services. Because there are some limitations to just like how far you can configure these things. </p><p>[00:29:32] <strong>Leo Dion (Host): </strong>Exactly, exactly. </p><p>[00:29:33] <strong>Kyle Newsome (Guest): </strong>It's like I sort of temporary container. They boot up and they run some things and then they tear it down for you. Right, so you only get so much in that container. </p><p>[00:29:41] <strong>Leo Dion (Host): </strong>Like I'd almost suggest maybe looking at something like MacStadium like somewhere it's almost like a compromise in between, like what is it - it's like a layer of abstraction from running your own server locally, but not quite as abstract as like Travis CI or Circle or a BitRise because then like you don't have to do the IT work, but you still have to set up though less. So like that might be a decent compromise in some situations. </p><p>[00:30:07] <strong>Kyle Newsome (Guest): </strong>So I don't know MacStadium super well if I understand, it's sort of letting you actually get full access to a Mac machine.</p><p>[00:30:13] <strong>Leo Dion (Host): </strong>Exactly. </p><p>[00:30:14] <strong>Kyle Newsome (Guest): </strong>Remotely. Yeah. </p><p>[00:30:15] <strong>Leo Dion (Host): </strong>Yeah. They just have like. Mac minis that they run in their separate locations that you have access to. And I've done, like I've done the virtual box setup with getting a Mac server set up in virtual box. That way I can like tear it down and bring it back up, but that's only for like small apps that I've done.</p><p>[00:30:32] And then I'll post a link to my YouTube video about how I got Speculid set up on Travis CI, which is a Mac app and how I got that to work as well. </p><p>[00:30:41] So I wanted to jump in and talk a little bit more about Fastlane, which we got into and some of the tooling there, but you said you wanted to mention something about feedback loop and how feedback loops can be some issues you can run into with continuous integration.</p><p>[00:30:55] Do you want to explain that a little bit? </p><p>[00:30:57] <strong>Kyle Newsome (Guest): </strong>Sure. Continuous integration is something that I see as fitting as one of your feedback loops or sort of touch points, but to explain first a little bit about what the feedback loop is. You know, developer's going to get a piece of work in and then they're going to need to iterate on that several times before it goes out the door.</p><p>[00:31:14] And that iteration cycle, I would call your feedback loop and how long it takes for you to get feedback on something, whether it's working for you or not. You want to try to make that the smallest amount of time possible. Right? </p><p>[00:31:27] So there's lots of different points of feedback that we have. We're getting feedback as we're continuously like developing on something, running it, checking if it's working.</p><p>[00:31:36] We're getting feedback when we run unit tests, when we run UI tests, we're getting feedback when we pass things to the QA team and when we're say, getting approval from our designers and our product owners, but each one of these points of feedback takes a certain amount of time to like send it out and then get feedback and know whether to iterate on it further or whether you've sort of met the requirements.</p><p>[00:31:58] So I think we want to try to think about how well A - you know, some of the touch points with people, we want to make sure that we have like fast access to them and can turn around feedback quickly, but we also want to try to organize things in a way where the tightest feedback loops are sort of available to us first.</p><p>[00:32:14] We get those working and then we slowly work our way outward into the things that take longer and longer to get feedback from. So the first things are the development you're doing as you're iterating on it. Unit tests, I think, are a great way to get fast feedback on something as well. UI tests, those tend to get a little bit slower.</p><p>[00:32:34] Now, sometimes some UI tests suites, you know, may even take hours to run. So those are not necessarily the greatest way to get feedback. Those are something that might fit well in say, your continuous integration. Right. And I think this, again, so this is coming back to earlier, just like why continuous integration is important and sort of making sure that steps, like say running your UI tests don't get missed before you say go to QA or maybe get your final approvals.</p><p>[00:33:02] Because those types of feedback to take even longer sometimes than running some of those tests earlier, right. So I think that's where continuous integration fits in ultimately, is that you kind of want to make sure there's some steps that's making sure that's doing that proofing and giving you feedback as soon as possible.</p><p>[00:33:17] Because sometimes you ship something to QA and QA can't look at it until tomorrow, and then, you know, four hours later, then they give you the feedback and then you iterate on it. So really you want to be sending things to QA as perfect as possible. So yeah, again, just thinking about that feedback loop, what kinds of things can I get the feedback on the fastest to help me with my iterations before I go to the slowest things. CI, I think kind of fits somewhere nicely in the middle, like after I've done my work, but before I start sharing it out with the greater team, I want to have my continuous integration feedback loop in place.</p><p>[00:33:53] <strong>Leo Dion (Host): </strong>So you're saying like when it comes to the pipeline between the developer and QA, continuous integration kind of fits in there to kind of facilitate and help QA give you feedback, but on a much quicker timeline. Does that sound right? </p><p>[00:34:08] <strong>Kyle Newsome (Guest): </strong>Yeah, absolutely, and I mean continuous integration can even help with the pull requests or code review process itself.</p><p>[00:34:15] Like I'm really big on automating as much analysis as possible really so that even when it comes to requesting that your peers review code. They're not, you know, nitpicking on - Oh, you left it to do comment in here and Oh your spacing isn't quite right here. Cause those aren't really exciting things. And I don't think they contribute super positively to the culture to be nitpicking at code where you really want to automate those things.</p><p>[00:34:39] To help just kind of make sure everyone's code is in line and then let the team work on some of the higher level analysis of like, Oh, this is an interesting implementation, but if you use this trick, you might save, you know, five lines of code or something like that. Like that's the kind of feedback I want from peers.</p><p>[00:34:54] So CI, yeah. Can help do some QA before you get to your QA, and it can also help you do some code review before it even gets to your peers. </p><p>[00:35:01] <strong>Leo Dion (Host): </strong>Really interesting. I like that a lot. And then I guess let's just touch on it, but like the elephant in the room to a lot of this setup with continuous integration is fastlane.</p><p>[00:35:11] And I don't know if there's any other apps you'd recommend, but like I met Felix, I want to say like about a year and a half ago, and he was super nice. He's super into security now. I don't know if you've watched or gone to any of his talks, but he's really into. Man in the middle of tax where you can like have software that kind of listens into your traffic or all that kind of stuff, which I think is super important.</p><p>[00:35:34] We don't really talk much about, but like Fastlane has been around. I don't know since when, but it's definitely automated. A lot of like the app store API stuff and a few of the other things. What other benefits does Fastlane have, and especially when it comes to continuous integration, what does it bring to the table?</p><p>[00:35:53] <strong>Kyle Newsome (Guest): </strong>Yeah, so I mean, Fastlane has like a ton of different types of tasks you can run with it. </p><p>[00:35:59] <strong>Leo Dion (Host): </strong>And it's available for both iPhone apps and Android apps, correct? </p><p>[00:36:03] <strong>Kyle Newsome (Guest): </strong>Yes, it was iOS support first, but I believe it does all sorts of Android stuff now as well, too. But I don't feel like it's just added so many different tasks and all sorts of ways to communicate also with the Apple or like App Store Connect in order to help like get team members set up so it can do things even sort of outside your system of helping you just get your team set up. I recently worked on a team that had a good fast lane setup for helping people get. The configurations they needed, like pull down the development profiles that they needed just to run things on the simulator, sort of all automatically.</p><p>[00:36:38] That was something I actually hadn't seen Fastlane used before. So even beyond CIA, it just has tasks that are really useful to automate for an iOS team that maybe don't need to run more than every time you add a new developer to the team. But beyond that also, yeah, just full of lots of different tasks you can do to build, test the application on pure version number, take screenshots.</p><p>[00:36:59] And one other. I think very important thing to think about. Sometimes when you set up what's going to be happening in your continuous integration process, you can sort of choose - Oh, am I going to write the tasks that it's going to do? Am I going to configure those in the continuous integration system itself, or am I going to try to push as much of that configuration into my code repository, like commands for Fastlane to run.</p><p>[00:37:26] And the benefit of keeping it in your repository is that the developers have more control over it. Like I mentioned that example earlier where when I was working with a bank, the dev ops team was in charge of the CI, so really we wanted to put as much into Fastlane as possible because that's where we had more control over changing what targets were being built, et cetera, versus if we had put that into the CI system, we would have had to go through a much slower process in order to make changes to our build configurations. </p><p>[00:37:56] So yeah, putting things in Fastlane, I think helps developers keeping control of it. And you can also think about vendor lock-in.</p><p>[00:38:03] If you were saying, moving between. Maybe you're using a third party service and then you decided - Hey, I want to actually move to self hosting, or vice versa. Or say you're using Travis and then you decide, no, I'd prefer BitRise. If you have most of your commands in Fastlane, it's going to be easier to move between these services because you've used far less of the vendor oriented configurations. </p><p>[00:38:28] <strong>Leo Dion (Host): </strong>Yeah. You talked to a lot of people in server-side development, and I'll tell you, like vendor lock in has become a big deal on their end. So it's only a microcosm of that issue when it comes to like continuous integration services when it comes to iOS development so I can totally understand that.</p><p>[00:38:43] <strong>Kyle Newsome (Guest): </strong>Yeah vendor lock in for like server side is way, way more of a problem then what I'm talking about. But I mean, it's not even so much vendor lock in. It's just like, Oh - it's going to take me a little bit of time to get from this service to this service. But like the server side, people are dealing with like serious, like costs associated with moving their services over like nothing we see on our side.</p><p>[00:39:02] <strong>Leo Dion (Host): </strong>Right, exactly. Well, thank you so much for coming on. The show is really, really great to talk about this topic. I think it's super important and I'm glad we covered it. Going back server-side people have been doing this for awhile, but like when it comes to iOS stuff, I think, and watch and Mac and TV there, I always forget that one.</p><p>[00:39:21] I think this is a topic along with a test driven development that people should really engage with and integrate into their team. And where can people find you?</p><p>[00:39:29] <strong>Kyle Newsome (Guest): </strong>On Twitter? I guess @kylnew - it's just like the first three letters of my first name, first three letters of my last name. Other than that.</p><p>[00:39:36] Also, I have a website, pyrus.io that I do consulting through. I blog on there occasionally. I haven't blogged recently. Otherwise I'm just in the community in Toronto trying to run meetups and ran the SwiftTO conference just this past summer, which you spoke at about Vapor. Yeah.</p><p>[00:39:57] You can find me around Toronto, go to a Toronto Swift meetup and you'll probably see me there. </p><p>[00:40:01] <strong>Leo Dion (Host): </strong>Yes. And if you miss a meetup, you're doing the video work on those, aren't you? </p><p>[00:40:06] <strong>Kyle Newsome (Guest): </strong>Yeah. As much as possible. And trying to film all the meetups going on in Toronto, just because we did a survey from the conference and got feedback from people and definitely saw from even the conference feedback that like people find it hard sometimes to come into the city. Unless I'd say I like a full day of content. So trying to find ways to distribute more video content so that it's available to those who can't make it downtown for our meetups. </p><p>[00:40:31] <strong>Leo Dion (Host): </strong>I'd love to check those out. And Swift Toronto was a great conference. so we'll see if you guys do it again. So </p><p>[00:40:39] <strong>Kyle Newsome (Guest): </strong>hopefully I'll try to polish up the details. </p><p>[00:40:41] <strong>Leo Dion (Host): </strong>Yeah, yeah. Fantastic. Thanks again for joining us on this episode and we look forward to talking to you in a couple of weeks. Thanks again. </p><p>[00:40:51] <strong>Kyle Newsome (Guest): </strong>Take care. Thank you.</p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li> <a href="https://pyrus.io"><strong>Kyle Newsome</strong></a><strong> - (</strong><a href="https://twitter.com/kylnew"><strong>Twitter @kylnew</strong></a><strong>)</strong><ul><li>
<a href="https://vimeo.com/showcase/6225806/video/354783100">Continuous Integration - What, Why &amp; How feat. Bitrise</a> - SwiftTO</li></ul>
</li></ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>New iPhone 11 Thoughts</b></p><ul>
<li>Camera Improvements</li>
<li>Max vs Not-Max Size</li>
<li>DSL vs iPhone</li>
<li>Night Mode</li>
</ul><p><b>Continuous Integration Issues with iOS</b></p><ul>
<li>Deployment Issues</li>
<li>Cache Issues</li>
<li>Continuous Integration 101</li>
</ul><p><b>How to Get Started</b></p><ul>
<li>Removing Dependencies on People and Files</li>
<li>Reproducible Anywhere</li>
<li>Using Pull Requests or Code Reviews As Triggers</li>
<li>Having Tests to Address Pain Points</li>
<li>Dealing with Certificates and Provisioning Profiles</li>
<li><a href="https://www.hashicorp.com">HashiCorp</a></li>
<li>Using Tools Like <a href="https://fastlane.tools"><strong>Fastlane</strong></a>
</li>
</ul><p><b>Comparing Services</b></p><ul>
<li>Cloud Services<ul>
<li>
<a href="https://www.bitrise.io"><strong>Bitrise</strong></a> - Focused on Mobile Development (Android and iOS)</li>
<li>
<a href="https://travis-ci.org"><strong>Travis-CI</strong></a> - Free Open Source (includes macOS)</li>
<li>
<a href="https://circleci.com"><strong>Circle-CI</strong></a> - Free Open Source (includes macOS)</li>
</ul>
</li>
<li>Self-Hosting<ul>
<li><a href="https://jenkins.io">Jenkins</a></li>
<li>Xcode Server</li>
<li><a href="https://github.com/AlexanderWillner/runMacOSinVirtualBox">Running Your Own Mac Virtual Machine</a></li>
</ul>
</li>
<li>Hybrid Solutions<ul><li><a href="https://www.macstadium.com">MacStadium</a></li></ul>
</li>
<li>Differences between macOS and iOS building <a href="https://speculid.com"><strong>Speculid</strong></a><ul><li><a href="https://www.youtube.com/watch?v=9kH_Qtla4-g&amp;list=PLmpJxPaZbSnB_h1FlXwN7TdJ7UGzvEtsG&amp;index=4">Tutorial Setting Up Speculid and macOS on Travis-CI</a></li></ul>
</li>
</ul><p><b>Feedback Loops and CI</b></p><ul>
<li>Having Healthy Unit Tests </li>
<li>Rapid Results through Automation</li>
<li>Proofing Builds Before QA</li>
</ul><p><b>Social Media</b></p><p><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a></p><p><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a></p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><b>Transcription</b></p><p><strong>Leo Dion (Host): </strong>Hey, Kyle, how are you doing? </p><p>[00:00:01] <strong>Kyle Newsome (Guest): </strong>I'm doing great. Thanks very much. It's unfortunately a slightly rainy day in Toronto here, but otherwise, a good mood. </p><p>[00:00:07] <strong>Leo Dion (Host): </strong>Yeah, same here. It's been a weird, cause. I don't know what Ontario's like, but Michigan. It's like one day was 80 degrees and then the next day dropped down to like 50 or 60 </p><p>[00:00:18] Oh, sorry. That's Fahrenheit. But you get what I mean. </p><p>[00:00:20] <strong>Kyle Newsome (Guest): </strong>It's okay. I lived a little bit in the States, so I like can do the conversion. I know that like 70 is nice and comfortable. Eighties getting to hot sixties like not too bad. </p><p>[00:00:30] <strong>Leo Dion (Host): </strong>I think fall's finally here. Yeah, so another sign of fall is the new iPhones. Did you get anyone iPhone?</p><p>[00:00:38] <strong>Kyle Newsome (Guest): </strong>I got the new iPhone 11 pro max. Which I've been waiting to upgrade for a few years. So this is like my first experience with like the X, you know, edge to edge screen as well. </p><p>[00:00:49] <strong>Leo Dion (Host): </strong>What do you think of it? </p><p>[00:00:51] <strong>Kyle Newsome (Guest): </strong>Honestly, so far I'm pretty impressed with it and as much as people have complained about how the three lenses look, I actually think it looks pretty nice.</p><p>[00:00:58] They've done something good with the glass backing, so it looks pretty refined, so I can't really complain about that. I've played around with the camera and the night photography a little bit and it's pretty cool to see how much it can capture in low light. </p><p>[00:01:11] <strong>Leo Dion (Host): </strong>What did you have previously? </p><p>[00:01:13] <strong>Kyle Newsome (Guest): </strong>Previously I had the iPhone seven plus. </p><p>[00:01:17] <strong>Leo Dion (Host): </strong>Okay. And do you really like the max size? </p><p>[00:01:19] <strong>Kyle Newsome (Guest): </strong>You know, like I'm used to it in my hand now, so I can't complain. You know, for the longest time I didn't think that I would like it, but I believe when the seven plus was the only one that had the two cameras, and I was really interested in that functionality.</p><p>[00:01:32] So I upgraded to the largest one, and now I'm kind of used to it. But I think that both the regular size and the max size are both pretty good in terms of screen size you got. I'm just sort of used to this in my hand and I liked that when they at least made the change from the old ones to the new ones, they kept the size of the same and then just you got more screen space so it feels exactly the same as my old phone in my hand.</p><p>[00:01:56] <strong>Leo Dion (Host): </strong>Yeah, I was a plus size user and I loved that. And then I went to the 10s, not max. And I don't feel like I miss the size because the screen size is pretty much the same. But I was just curious, like if you see like a big advantage with the max. </p><p>[00:02:12] <strong>Kyle Newsome (Guest): </strong>No, I don't really think so. I guess it gets a little bit longer battery life, which is always nice, but otherwise, yeah, they both look pretty nice.</p><p>[00:02:20] I was sort of on the fence whether to go with one or the other, but I think ultimately it was kind of like hand feel that I just like, I was used to the weight and everything, so I just wanted to make a seamless transition like that. </p><p>[00:02:30] And the big selling point for me with the plus was the extra lens. And like now we don't have that.</p><p>[00:02:35] <strong>Leo Dion (Host): </strong>Like the extra selling point isn't there because he can pretty much get that with the regular pro. So like that was my big thing was I just want a really good camera. Like I don't have cameras anymore. Like I think I sold my DSLR and my other digital cameras a couple of years ago cause I wasn't really using them.</p><p>[00:02:54] And like the convenience of having an iPhone was always worthwhile to me. And like the dual camera, like I'm a. I know people don't really care for portrait mode, but I use portrait mode all the time when I'm taking pictures with my family and things like that, and I like it a lot. </p><p>[00:03:08] <strong>Kyle Newsome (Guest): </strong>It's funny that you just sold your DSLR and I just bought a mirrorless camera because I was interested actually mostly for video recording purposes, which i think is actually where there's the biggest difference between what these phone cameras can do and what the regular cameras can do, because they can do a lot of post-processing on like one image, but doing things like getting that portrait mode depth of field effect per video is not something they're really capable of today.</p><p>[00:03:33] <strong>Leo Dion (Host): </strong>Yeah. Not now. </p><p>[00:03:34] <strong>Kyle Newsome (Guest): </strong>That aside, I mean, yeah. It's just like the camera on your phone is just so much more of a utility for everyday use. So many of the pictures that I take with my phone or just to like to help me maybe remember a password that was written on a note somewhere that I wanted, or just general utility.</p><p>[00:03:51] They're not very interesting pictures, but I would never do that with a mirrorless camera. Obviously not convenient at all. </p><p>[00:03:58] <strong>Leo Dion (Host): </strong>Yeah. Really liking these cameras on these phones. So what's your opinion of like night mode. </p><p>[00:04:03] <strong>Kyle Newsome (Guest): </strong>You know, it wasn't the operating the way I thought. I thought it was just going to basically do a whole bunch of post-processing on the image and know how to like extract the right colors, but it actually does do like a long shutter effect, which surprised me a little bit.</p><p>[00:04:18] I wasn't ready to see that. But it's interesting. So I think depending on the amount of light in the room, it kind of auto suggests about how long it's going to do the shutter effect for and seems like the longest it goes for is maybe four seconds. </p><p>[00:04:31] <strong>Leo Dion (Host): </strong>Okay. </p><p>[00:04:32] <strong>Kyle Newsome (Guest): </strong>What I find interesting about it though, like I'm curious about what it's doing, because obviously if you are holding the shutter open for four seconds and you're just doing it like handheld, you're probably not holding it perfectly still.</p><p>[00:04:43] So, I wonder, you know, what other sorts of machine learning and things they're applying after the fact to make sure it still comes out like a crisp photo, but it's grabbed more information about color simultaneously. I can't say I've really looked into exactly what it's doing, but that was the experience I got from it.</p><p>[00:05:01] Anyway, I thought it was going to be just Oh snap and then it'll post-process and like bring out all this color, but it actually does try to record more light for longer. </p><p>[00:05:09] <strong>Leo Dion (Host): </strong>Okay. So that's what it's doing. So it's basically keeping the shutter open to get more light while at the same time doing some ML stuff to like figure out what's the best photo to use or what's the best picture to use. Interesting. </p><p>[00:05:21] <strong>Kyle Newsome (Guest): </strong>For sure. </p><p>[00:05:21] <strong>Leo Dion (Host): </strong>That's pretty cool. So before we deep dive into continuous integration, you want to tell people a little bit about yourself. </p><p>[00:05:28] <strong>Kyle Newsome (Guest): </strong>Sure. I'm terrible at talking about myself or building myself up. I'm an iOS developer in Toronto. I've also done a lot of full stack development over the years, and so I've done backend and JavaScript and PHP, but I did Objective-C back in the day and then got a little tired of it, did some more Javascript just because the language, I think was more pleasant to use.</p><p>[00:05:53] And then Swift came out and they open sourced it, and then it just sorta like turned all my attention back to iOS again. And then I've just been going straight with iOS since, but even some of my continuous integration experience actually came first from doing it on the web side, deploying web and backend Java script applications.</p><p>[00:06:12] And then when I came back to the iOS world, realized I was joining a lot of teams that weren't doing much with that. And so. Really started trying to learn more about continuous integration on the iOS side and championing that at the places I was working. </p><p>[00:06:25] <strong>Leo Dion (Host): </strong>And where are you working right now? </p><p>[00:06:26] <strong>Kyle Newsome (Guest): </strong>So right now I am consulting with Deloitte for Loblaw digital.</p><p>[00:06:32] Loblaws is like the Walmart of Canada, effectively. And I work with their loyalty, their PC optimum points application, which is. I believe the biggest loyalty program in Canada as well. So like when you go out and buy groceries or you go to the pharmacy, they're constantly collecting points and they're giving you bonuses and things.</p><p>[00:06:50] So yeah, that's the application I'm working with right now. </p><p>[00:06:53] <strong>Leo Dion (Host): </strong>What have you found is the biggest difference with CI or continuous integration on iOS. And I'm assuming we're just talking about iOS as opposed to web development. </p><p>[00:07:05] <strong>Kyle Newsome (Guest): </strong>I mean, I think probably the deployment factor is a huge thing, which isn't exactly like, it's the last step of the continuous integration process, like right as you deploy, but going even beyond continuous integration, there's like continuous integration, continuous deployment.</p><p>[00:07:20] And continuous deployment is really like, you're always able to continuously like push out the latest version of your application, you know, multiple times per day even, which is not really possible from an iOS perspective. We have to be a little more meticulous because we go through the Apple review process.</p><p>[00:07:36] A lot of companies are, you know, probably deploying maybe at most once a week. I don't hear of many who are deploying more than once a week. There's probably some out there, so it's a little bit slower. That's one of the big things. And I think even just some of the tasks you actually do, because continuous integration sort of starts first of all with like build, test, deploy steps, which are kind of just the core steps to getting your application built, making sure it's actually functioning properly, and then sending it out to the world.</p><p>[00:08:04] But beyond that, we tend to add a lot of additional tasks to kind of make sure that we're. As much as possible, automating our entire process. So some of those additional steps are probably quite different depending on web or iOS. Like I remember on web, I had to be constantly clearing cachees out, you know, clearing cachees out from CDNs or content delivery networks.</p><p>[00:08:27] And I don't have to do that as much on an iOS side, but there's other tasks I might do instead, like, you know, automatically generate screenshots or something like that. </p><p>[00:08:36] <strong>Leo Dion (Host): </strong>All right. So let me do my best attempt at trying to explain what CI is and then you let me know what parts I'm missing. So continuous integration is the idea of, as you make changes to the code, you are running various tests, not just like unit tests, but also like integration testing, things like that.</p><p>[00:08:58] And also making sure that the app can be easily deployed. And usually you're doing it on some central server somewhere, either locally or in the cloud. So that way you can best recreate the situations for where an app will actually be running. And I'm saying this because you have, like for server side stuff, it's pretty easy because you can just run on the actual server and recreate that situation pretty easily whereas with client applications, you need to like actually recreate the client atmosphere in the client environment in order to do that. But is that like a good description of continuous integration? </p><p>[00:09:35] <strong>Kyle Newsome (Guest): </strong>Yeah, I think that's a fairly good description of it. </p><p>[00:09:38] <strong>Leo Dion (Host): </strong>What am I missing? </p><p>[00:09:39] <strong>Kyle Newsome (Guest): </strong>It's not very often that people ask me to explain it and sort of formal terms, so I'm probably usually speaking about it from the benefits perspective.</p><p>[00:09:49] But one of the things I guess I take away from it sort of from, I guess a more philosophical perspective, is like there's many things you do to sort of make sure that your app is deployment ready and some of those things can be automated and some of them can't. The ones that you can automate, you should automate and you should be doing them every single time, every single day.</p><p>[00:10:11] <strong>Leo Dion (Host): </strong>Yeah. There we go. And I think that's it. It's like regression testing where you're like testing old features and making sure they're continually working and doing it every time in a repeated basis. And when we talk deployment, we're talking about like taking that app and putting it on an actual machine, whether that's your server for server side app or an iPhone or iOS simulator in a lot of cases, and actually testing it on that device and seeing if the app is working.</p><p>[00:10:36] <strong>Kyle Newsome (Guest): </strong>Absolutely.  </p><p>[00:10:37] <strong>Leo Dion (Host): </strong>If you were going to convince somebody who like has never done continuous integration, especially in an iOS application, what would you say to that person or to convince them that like, yeah, you really need to get started on getting your iPhone app running, some sort of continuous integration whenever a new release is about to come out in the app store.</p><p>[00:10:56] <strong>Kyle Newsome (Guest): </strong>Yeah, I mean, I think certainly on some teams you just really kind of help identify the pain points they're feeling or you know, something goes wrong and then you do a retrospective on like, why did this happen and how could we prevent it in the future? And then it's really easy to say like, Oh, well see, I could fix that coming from the web, like the example I used before with cache clearing, that was a super easy.</p><p>[00:11:18] Thing to point out at one company I worked with, like we were just forgetting the clear caches, and then people weren't pulling down the latest version of the application, or they were pulling down the latest JavaScript, but not getting the latest CSS and so they weren't seeing things correctly. So that was, you know, a good pain point from a web perspective </p><p>[00:11:35] On iOS, one team I worked with, they just had one developer who could deploy the app and had all the certificates and was ready to go and he was also responsible cause one of the things when you deploy an iOS application is you always have to bump the build version, which is like the most boring change you have to make to your application is increment you know, the build number every time. </p><p>[00:11:56] <strong>Leo Dion (Host): </strong>But it's easily forgettable. </p><p>[00:11:58] <strong>Kyle Newsome (Guest): </strong>Oh, super easy to forget. Right. And that's what was happening in this case was that the developer would sometimes deploy it, he'd forget to bump the build number. So we'd go through the whole deployment process and that build process takes sometimes 20-30 minutes to get that, especially if you include the uploading process to Apple's TestFlight and the processing time before they give you feedback.</p><p>[00:12:20] That's actually, you know, that's sometimes an hour to an hour and a half. So you know, having to kind of realize that the very end of that. Oops! we forgot to increment the build number let's go back. In this case too he actually unfortunately had just been going through ACL surgery too. So he wasn't always available in the office cause he was going to a physiotherapist.</p><p>[00:12:41] So like his availability wasn't good. So there, you know, the pain points between relying on this one guy who was in the middle of, you know, dealing with ACL surgery and recovering from that and having that point of failure of the build number. Those were two big pain points and good reasons to move to CI.</p><p>[00:12:57] So, yeah, I guess in summary, find the pain points. It's probably hard for me to pick someone up off the street who doesn't have a problem already and tell them that continuous integration is going to solve things. But once people have those pains, I think it's really, really easy to change their mind or convinced them to start using it.</p><p>[00:13:16] <strong>Leo Dion (Host): </strong>It's one of those cases where it's like you don't realize the pain until your employee has to be out for a few weeks, or what was it - somebody who was like on paternity leave at some company and like they're quickly trying to hire somebody to like fill the gap until he gets back. And it's this like one of those situations where you don't run into it until you run into an issue and you're like, okay, now I need to set up some sort of system with continuous integration in order to make sure that deployments are easy and things like that.</p><p>[00:13:42] Yeah. What are would be some like first steps in order to get started? Like what would you say is like the bare minimum as far as getting continuous integration set up? </p><p>[00:13:51] <strong>MarkerKyle Newsome (Guest): </strong>Yeah, so I mean, one of the first things you probably want to be thinking about is eliminating any local dependencies you have, right. If someone can only run that from their machine there's a reason why, right? Something is local to only their machine that isn't available to others. And a lot of cases with iOS, it's mainly about the certificates and the profiles that are on that computer that the others don't have. So you're going to try to either you know, make sure that your CI system has that stuff now, or ultimately, yeah, you're just trying to make sure that this is something that you can reproduce pretty much anywhere.</p><p>[00:14:29] You know, that people haven't, you know, have too many local scripts or anything like that. Running that would prevent you from duplicating the build experience somewhere else. So that's one of the first things that you can do if you have a tool like fastlane that you're using already. Cause sometimes some teams are actually using fastlane,  to do tasks for themselves, but they haven't gotten themselves on CI yet, or you're trying to sort of slowly work your way there.</p><p>[00:14:54] I think fastlane is a good tool that can start getting you ready for that because fast lane is all about doing tasks related to iOS stuff for you automatically, and you can run fastlane commands in CI. So you could even have your build, test, deploy phases running from your local machine through fastlane.</p><p>[00:15:12] And then when you put it on CI, you're basically just telling CI to run those same commands you were locally. So that can make it very easy to make the transition. If you already have a pull request code review process going on, that's probably one of the most important places to start integrating your CI server because every time you put code up for review, then it can go through this system and some of that feedback can be automated against it.</p><p>[00:15:39] So I'd say if a team doesn't have any sort of pull requests or code review process yet, they should get that up and running first. Even if they don't do super thorough examinations of the code in those pull requests, at least get the CI starting to do that for them. I think those are some good first steps to getting ready for CI.</p><p>[00:15:59] <strong>Leo Dion (Host): </strong>So let's sit back for a little bit and talk about each of those components, like a pull request and a code review process. What does that mean exactly? </p><p>[00:16:06] <strong>Kyle Newsome (Guest): </strong>So it's very easy for me to just merge code into, say,  the main code base that maybe I'm collaborating on with others. But if I just sort of get to directly make changes to the code.</p><p>[00:16:20] No one else is, you know, reviewing that in advance for any sort of mistakes or giving me feedback on how maybe I can improve those changes to the code base. And not having a process in place to do something like that is probably prone to causing error or catching problems later. So if you use anything like GitHub, GitLab, Bitbucket, they all have the ability to do a pull request process, which basically means you work on your code in sort of a separate branch and get terms, you know, from the main master code base, and then you make a formal request to merge your branch of code into your master or into maybe your development branch where you're working on things. </p><p>[00:17:03] And before that merge actually happens, someone actually has to approve it. You know, someone has to actually go into, say if you're using GitHub, going to GitHub and hit the approve button, and then the code can be merged from there.</p><p>[00:17:17] So. You know, the pull request process is the first step to, I think, creating a code review process. Like I said, you know, even if you weren't reviewing the code changes, but you at least were going through a formal process of putting up a request to change the code and someone else was approving it, that would be the first step.</p><p>[00:17:36] And then from there you'd probably want to influence your culture to like spend more time actually looking at the code. I'm getting feedback on it. And then integrating CI as well. And I can certainly talk about things. See I can do for your code review processes as well later. </p><p>[00:17:51] <strong>Leo Dion (Host): </strong>So basically like you have unit tests, obviously that need to be run and we did a whole episode on unit tests a few months ago, which you can check out. But like a pull request, that's where you'd have like your branch or your feature, and then you want to make sure to merge it into a specific version or master branch, and then somebody will go ahead and approve that. Does that sound about right? </p><p>[00:18:12] <strong>Kyle Newsome (Guest): </strong>Yeah</p><p>[00:18:12] <strong>Leo Dion (Host): </strong>and I think like one of the biggest challenges, and you just touched upon this, was the local dependencies and the certificates and profiles and things like that. That seems like one of the biggest challenges that I've faced with getting any sort of continuous integration set up is getting those certificates on some sort of server or putting them into the repo, but also in a way that it's secure.</p><p>[00:18:36] Because obviously you don't want anybody off the street to come in and get your repo and then put your app into the app store, but like there's a specific process for setting that up, right, where you can like encrypt the certificate, but then like have the password on the CI so that way you can decrypt it while at the same time, like making it secure, but also letting the CI system be able to approve and deploy an app.</p><p>[00:19:00] Is that right? </p><p>[00:19:01] <strong>Kyle Newsome (Guest): </strong>Yeah, absolutely. You ultimately want to expose. You're a certificate to as few people as possible. Ideally, you don't really want to be distributing these widely. So yeah, the fewer number of people that have that privileged, right - the better. And I mean, depending on the size of the team, you know, in enterprise situations, like I was working with a bank earlier this year.</p><p>[00:19:24] And they don't want the certificates or the profiles available to the developers at all. In fact, they have policies at the bank that, you know, a developer can't end to end both build the application and get it deployed to the store. There's actually multiple steps between to sort of make sure no one gets that much power.</p><p>[00:19:41] <strong>Leo Dion (Host): </strong>If you can say, I guess, how do they get around that? </p><p>[00:19:44] <strong>Kyle Newsome (Guest): </strong>Well, I mean, ultimately they have a dev ops team, and so these are, you know, operations guys who are sort of full time dedicated to building the applications and getting things configured properly so they get some access to this stuff. Although those certificates and profiles are still kept in a vault.</p><p>[00:20:02] There's like HashiCorp Vault is a product, I don't know if you're familiar with it, but it's just sort of a secure key store. So their CI system access is things from this vault, but they have permissions to work with the Vault and the CI process. But yeah, we weren't even really super involved. And that, you know, I could make some requests to change some of the CI workflows, but dev ops always was approving those.</p><p>[00:20:26] I couldn't change those myself. So interesting. It was just sort of one layer away from me that had the access ultimately. </p><p>[00:20:33] <strong>Leo Dion (Host): </strong>So if someone were to get started with CI, what service would you recommend first and foremost, and how do each differentiate themselves? </p><p>[00:20:44] <strong>Kyle Newsome (Guest): </strong>Right. Well, I think. My suggestion would maybe depend on, you know, whether, like if we're talking about just getting started with your first CI ever and you haven't done this at all, and we're talking about iOS, I've certainly enjoyed using BitRise because BitRise is very iOS and Android focused.</p><p>[00:21:06] When they first came out, they were even just iOS focused. And I found that the flow of getting started with them, they would, you know, do additional analysis on your project and try to sort of get it auto configured for you every time there's new versions of Xcode, they really try to be the first to get those beta versions of Xcode out onto their systems.</p><p>[00:21:28] So I found that they just, they have a very, like iOS is first class kind of attitude, which I like. Things like Travis CI and CircleCI are both. I guess I don't have much to differentiate between those two. They might have different price points, some of these different services. Also, I know like let's say you're doing an open source project that you want to put through CI. I think Travis or Circle might be better for that because they have a better free tier. </p><p>[00:21:56] <strong>Leo Dion (Host): </strong>Yup, yep. I've used Travis CI and we'll get into it a little bit, but I still haven't figured it out with Circle CI, and I've actually talked to some of the folks there, but Travis also does Mac apps. Which we'll talk about in a little bit.</p><p>[00:22:09] I think Circle supports that, but I haven't quite figured that out. It seems like the big hurdle with a lot of these surfaces, spoiler alert, is that you actually need a Mac to like run this stuff, which is a huge cost burden to any company in the cloud because they literally, like if you look at somebody like MacStadium, like you literally have to have a rack of Mac pros or Mac minis or iMac pros or whatever to like from this stuff. It's not like even with the VM, you need to run this stuff on a Mac. So I think like that's one of the big burdens with a lot of these services is like a lot of your CI services, they're going to be fine at doing like your Ruby or your Node JS and even some of the.net stuff, but like once you actually need a piece of like Mac hardware to do it, that kind of makes it more of a challenge cost-wise to these companies </p><p>[00:23:00] <strong>Kyle Newsome (Guest): </strong>for sure. And yeah, performance of some of these things, I guess when they're like running inside of virtual machines may not be as good as if you say got a really high end Mac mini or something and ran it locally because that is another option is self hosting, which we haven't touched on yet.</p><p>[00:23:17] And I don't really recommend self hosting for some reasons I'll bring up in a second, but just exploring what that means. You know, this is buying a computer to sort of have, you know, in your office that is connected with the system and running those things locally on your own computer. It meant you could do that either through Jenkins, which is a very popular one, or Xcode server.</p><p>[00:23:40] Apple has their own X code server. Although I don't know anyone who uses Xcode server. I don't know if you have worked with many companies that use it. I haven't found it to be very good personally. </p><p>[00:23:50] <strong>Leo Dion (Host): </strong>It's okay. So here's my situation that I've run into is I have a Mac app Speculid, which is for building app icons from SVG files or image sets, whatever. Okay. </p><p>[00:24:02] So like with this app, I've run into situations, especially early on where I needed to like actually test it on different like Mac environments and one thing you learn with like Mac development, I find one of the biggest challenges is that you don't have like reset simulator on the Mac, right? So I ended up sending up like a Virtual Box VM on my iMac to run Mojave or whatever is the latest OS and putting Xcode server on it and it works and it's like a great way for me to just like do reset simulator essentially by reverting to like a snapshot on a VM and that's what I've been using whenever I need to like test. There's been all sorts of weird issues like dependencies that have been installed or like I totally forgot about how different countries do decimal points differently and like all sorts of weird issues I've run into.</p><p>[00:24:54] That has been to my benefit with the CIA stuff. So like XCode server worked. It was fine. It was a great, was it as easy to set up as like Travis, which is probably the other situation I've run into? No, I don't think so. And of course it's like not the fastest, but it works. </p><p>[00:25:11] <strong>Kyle Newsome (Guest): </strong>It gets the steps done for sure.</p><p>[00:25:13] Like it's not pretty, it just sorta does the basics versus something like, I know BitRise. I mean I really liked their interface cause I think it's nice looking and it's something, I mean I know some companies, you know, even have sort of a culture of trying to make sure that sort of the build and whether it's kind of staying green is, you know, the developers are sort of aware of that all time.</p><p>[00:25:34] So maybe you have a dashboard that's kind of giving you an update on what your CI is and is it staying green. So sometimes using a nice CI that actually makes that look kind of nice to have, but it's not really the most important thing as just being able to run the steps. </p><p>[00:25:48] <strong>Leo Dion (Host): </strong>And then integration with the Xcode is really good.  And it was just a matter of like, the issue I ran into was just, I was using Travis CI cause Travis CI is free for open source projects and like it worked fine, but there was just a lot of things that I couldn't really like get into the guts of a Mac that I could do with the VM and Xcode server. So that's why I ended up getting that set up.</p><p>[00:26:09] And Travis CI doesn't necessarily have the latest betas installed for a lot of reasons. So I was able to like set up a CI system with whatever was the latest beta at that time. </p><p>[00:26:20] <strong>Kyle Newsome (Guest): </strong>Yeah. For ultimate sort of like power and control, having things, you know, self hosting is the way to go. For sure. You can do things just different that may not be possible.</p><p>[00:26:31] Like even the kinds of like caching can be different on some of these different services as well. I know that BitRise has some caching capabilities, but there might be a limit to the size of the cache. I've heard recently, I think maybe Circle CI didn't have a cache. Okay. Someone was telling me they were using either Travis or Circle and they couldn't cache the same way that BitRise could anyway.</p><p>[00:26:52] <strong>Leo Dion (Host): </strong>And when you say cache, what exactly are you talking about? </p><p>[00:26:55] <strong>Kyle Newsome (Guest): </strong>Just like holding onto some artifacts. Like, you know, sometimes you have dependencies such a, you know, a lot of people use CocoaPods </p><p>[00:27:02] <strong>Leo Dion (Host): </strong>and you know, want to rebuild and refinish those dependencies every single time. Is that what you mean? </p><p>[00:27:07] <strong>Kyle Newsome (Guest): </strong>For sure.</p><p>[00:27:08] <strong>Leo Dion (Host): </strong>Okay. </p><p>[00:27:08] <strong>Kyle Newsome (Guest): </strong>Exactly. That can certainly add to the time that it takes to get through your whole CI process. </p><p>[00:27:13] <strong>Leo Dion (Host): </strong>Yeah, that sounds like a lot. We had Abby Jackson on last week. We talked about modularization but she said like one of the big benefits is build times. So it's not something I really think about, but like if you're doing caching like what you're talking about, but that makes total sense. That's gonna like save a ton of time on your builds </p><p>[00:27:30] <strong>Kyle Newsome (Guest): </strong>for sure. One other thing with self hosting is the benefits is you get all the control, but the downsides is nobody's going to do that for you, so you become responsible for it. So I definitely think when a company decides whether they want to use a service or want to self host. They should really think about the dev ops costs associated with that in particular. </p><p>[00:27:52] <strong>Leo Dion (Host): </strong>Exactly. </p><p>[00:27:53] <strong>Kyle Newsome (Guest): </strong>Because if there's a beta, you're going to be responsible for getting that beta up and running. And if you realize that all of a sudden your team is growing and you need more machines, then you need to go buy and provision all of those machines and then get them collaborating together on a farm yourself again.</p><p>[00:28:10] And that is one thing that's really nice about using a service is that your team grows and you just buy the next tier or pay, you know, $5 more per month or whatever it costs per developer to grow your team like that. So these third party services scale very nicely. And yeah, the dev ops costs, you should really strongly consider before self hosting, I think for sure. </p><p>[00:28:31] <strong>Leo Dion (Host): </strong>Yeah. Do you have like an opinion on using a service like MacStadium  because the only reason I see it might be important for self hosting is security reasons or like Mac development where you like actually need an actual machine to like play around essentially with the computer itself and get those settings exactly the way you want it like otherwise, I don't see much of a reason to use self hosting service right. </p><p>[00:28:56] <strong>Kyle Newsome (Guest): </strong>Yeah. Unless you just, you want to do something really different. There is one organization I was working with, I can't talk too much about this one, but they wanted to be running a lot of different types of virtual - like they wanted to kind of virtualize their whole system during the CI process.</p><p>[00:29:13] So the servers that were being communicated with were all being run from that server as well. And so they were looking at moving towards self hosting to get some of those features that they couldn't get from doing it through these third party services. Because there are some limitations to just like how far you can configure these things. </p><p>[00:29:32] <strong>Leo Dion (Host): </strong>Exactly, exactly. </p><p>[00:29:33] <strong>Kyle Newsome (Guest): </strong>It's like I sort of temporary container. They boot up and they run some things and then they tear it down for you. Right, so you only get so much in that container. </p><p>[00:29:41] <strong>Leo Dion (Host): </strong>Like I'd almost suggest maybe looking at something like MacStadium like somewhere it's almost like a compromise in between, like what is it - it's like a layer of abstraction from running your own server locally, but not quite as abstract as like Travis CI or Circle or a BitRise because then like you don't have to do the IT work, but you still have to set up though less. So like that might be a decent compromise in some situations. </p><p>[00:30:07] <strong>Kyle Newsome (Guest): </strong>So I don't know MacStadium super well if I understand, it's sort of letting you actually get full access to a Mac machine.</p><p>[00:30:13] <strong>Leo Dion (Host): </strong>Exactly. </p><p>[00:30:14] <strong>Kyle Newsome (Guest): </strong>Remotely. Yeah. </p><p>[00:30:15] <strong>Leo Dion (Host): </strong>Yeah. They just have like. Mac minis that they run in their separate locations that you have access to. And I've done, like I've done the virtual box setup with getting a Mac server set up in virtual box. That way I can like tear it down and bring it back up, but that's only for like small apps that I've done.</p><p>[00:30:32] And then I'll post a link to my YouTube video about how I got Speculid set up on Travis CI, which is a Mac app and how I got that to work as well. </p><p>[00:30:41] So I wanted to jump in and talk a little bit more about Fastlane, which we got into and some of the tooling there, but you said you wanted to mention something about feedback loop and how feedback loops can be some issues you can run into with continuous integration.</p><p>[00:30:55] Do you want to explain that a little bit? </p><p>[00:30:57] <strong>Kyle Newsome (Guest): </strong>Sure. Continuous integration is something that I see as fitting as one of your feedback loops or sort of touch points, but to explain first a little bit about what the feedback loop is. You know, developer's going to get a piece of work in and then they're going to need to iterate on that several times before it goes out the door.</p><p>[00:31:14] And that iteration cycle, I would call your feedback loop and how long it takes for you to get feedback on something, whether it's working for you or not. You want to try to make that the smallest amount of time possible. Right? </p><p>[00:31:27] So there's lots of different points of feedback that we have. We're getting feedback as we're continuously like developing on something, running it, checking if it's working.</p><p>[00:31:36] We're getting feedback when we run unit tests, when we run UI tests, we're getting feedback when we pass things to the QA team and when we're say, getting approval from our designers and our product owners, but each one of these points of feedback takes a certain amount of time to like send it out and then get feedback and know whether to iterate on it further or whether you've sort of met the requirements.</p><p>[00:31:58] So I think we want to try to think about how well A - you know, some of the touch points with people, we want to make sure that we have like fast access to them and can turn around feedback quickly, but we also want to try to organize things in a way where the tightest feedback loops are sort of available to us first.</p><p>[00:32:14] We get those working and then we slowly work our way outward into the things that take longer and longer to get feedback from. So the first things are the development you're doing as you're iterating on it. Unit tests, I think, are a great way to get fast feedback on something as well. UI tests, those tend to get a little bit slower.</p><p>[00:32:34] Now, sometimes some UI tests suites, you know, may even take hours to run. So those are not necessarily the greatest way to get feedback. Those are something that might fit well in say, your continuous integration. Right. And I think this, again, so this is coming back to earlier, just like why continuous integration is important and sort of making sure that steps, like say running your UI tests don't get missed before you say go to QA or maybe get your final approvals.</p><p>[00:33:02] Because those types of feedback to take even longer sometimes than running some of those tests earlier, right. So I think that's where continuous integration fits in ultimately, is that you kind of want to make sure there's some steps that's making sure that's doing that proofing and giving you feedback as soon as possible.</p><p>[00:33:17] Because sometimes you ship something to QA and QA can't look at it until tomorrow, and then, you know, four hours later, then they give you the feedback and then you iterate on it. So really you want to be sending things to QA as perfect as possible. So yeah, again, just thinking about that feedback loop, what kinds of things can I get the feedback on the fastest to help me with my iterations before I go to the slowest things. CI, I think kind of fits somewhere nicely in the middle, like after I've done my work, but before I start sharing it out with the greater team, I want to have my continuous integration feedback loop in place.</p><p>[00:33:53] <strong>Leo Dion (Host): </strong>So you're saying like when it comes to the pipeline between the developer and QA, continuous integration kind of fits in there to kind of facilitate and help QA give you feedback, but on a much quicker timeline. Does that sound right? </p><p>[00:34:08] <strong>Kyle Newsome (Guest): </strong>Yeah, absolutely, and I mean continuous integration can even help with the pull requests or code review process itself.</p><p>[00:34:15] Like I'm really big on automating as much analysis as possible really so that even when it comes to requesting that your peers review code. They're not, you know, nitpicking on - Oh, you left it to do comment in here and Oh your spacing isn't quite right here. Cause those aren't really exciting things. And I don't think they contribute super positively to the culture to be nitpicking at code where you really want to automate those things.</p><p>[00:34:39] To help just kind of make sure everyone's code is in line and then let the team work on some of the higher level analysis of like, Oh, this is an interesting implementation, but if you use this trick, you might save, you know, five lines of code or something like that. Like that's the kind of feedback I want from peers.</p><p>[00:34:54] So CI, yeah. Can help do some QA before you get to your QA, and it can also help you do some code review before it even gets to your peers. </p><p>[00:35:01] <strong>Leo Dion (Host): </strong>Really interesting. I like that a lot. And then I guess let's just touch on it, but like the elephant in the room to a lot of this setup with continuous integration is fastlane.</p><p>[00:35:11] And I don't know if there's any other apps you'd recommend, but like I met Felix, I want to say like about a year and a half ago, and he was super nice. He's super into security now. I don't know if you've watched or gone to any of his talks, but he's really into. Man in the middle of tax where you can like have software that kind of listens into your traffic or all that kind of stuff, which I think is super important.</p><p>[00:35:34] We don't really talk much about, but like Fastlane has been around. I don't know since when, but it's definitely automated. A lot of like the app store API stuff and a few of the other things. What other benefits does Fastlane have, and especially when it comes to continuous integration, what does it bring to the table?</p><p>[00:35:53] <strong>Kyle Newsome (Guest): </strong>Yeah, so I mean, Fastlane has like a ton of different types of tasks you can run with it. </p><p>[00:35:59] <strong>Leo Dion (Host): </strong>And it's available for both iPhone apps and Android apps, correct? </p><p>[00:36:03] <strong>Kyle Newsome (Guest): </strong>Yes, it was iOS support first, but I believe it does all sorts of Android stuff now as well, too. But I don't feel like it's just added so many different tasks and all sorts of ways to communicate also with the Apple or like App Store Connect in order to help like get team members set up so it can do things even sort of outside your system of helping you just get your team set up. I recently worked on a team that had a good fast lane setup for helping people get. The configurations they needed, like pull down the development profiles that they needed just to run things on the simulator, sort of all automatically.</p><p>[00:36:38] That was something I actually hadn't seen Fastlane used before. So even beyond CIA, it just has tasks that are really useful to automate for an iOS team that maybe don't need to run more than every time you add a new developer to the team. But beyond that also, yeah, just full of lots of different tasks you can do to build, test the application on pure version number, take screenshots.</p><p>[00:36:59] And one other. I think very important thing to think about. Sometimes when you set up what's going to be happening in your continuous integration process, you can sort of choose - Oh, am I going to write the tasks that it's going to do? Am I going to configure those in the continuous integration system itself, or am I going to try to push as much of that configuration into my code repository, like commands for Fastlane to run.</p><p>[00:37:26] And the benefit of keeping it in your repository is that the developers have more control over it. Like I mentioned that example earlier where when I was working with a bank, the dev ops team was in charge of the CI, so really we wanted to put as much into Fastlane as possible because that's where we had more control over changing what targets were being built, et cetera, versus if we had put that into the CI system, we would have had to go through a much slower process in order to make changes to our build configurations. </p><p>[00:37:56] So yeah, putting things in Fastlane, I think helps developers keeping control of it. And you can also think about vendor lock-in.</p><p>[00:38:03] If you were saying, moving between. Maybe you're using a third party service and then you decided - Hey, I want to actually move to self hosting, or vice versa. Or say you're using Travis and then you decide, no, I'd prefer BitRise. If you have most of your commands in Fastlane, it's going to be easier to move between these services because you've used far less of the vendor oriented configurations. </p><p>[00:38:28] <strong>Leo Dion (Host): </strong>Yeah. You talked to a lot of people in server-side development, and I'll tell you, like vendor lock in has become a big deal on their end. So it's only a microcosm of that issue when it comes to like continuous integration services when it comes to iOS development so I can totally understand that.</p><p>[00:38:43] <strong>Kyle Newsome (Guest): </strong>Yeah vendor lock in for like server side is way, way more of a problem then what I'm talking about. But I mean, it's not even so much vendor lock in. It's just like, Oh - it's going to take me a little bit of time to get from this service to this service. But like the server side, people are dealing with like serious, like costs associated with moving their services over like nothing we see on our side.</p><p>[00:39:02] <strong>Leo Dion (Host): </strong>Right, exactly. Well, thank you so much for coming on. The show is really, really great to talk about this topic. I think it's super important and I'm glad we covered it. Going back server-side people have been doing this for awhile, but like when it comes to iOS stuff, I think, and watch and Mac and TV there, I always forget that one.</p><p>[00:39:21] I think this is a topic along with a test driven development that people should really engage with and integrate into their team. And where can people find you?</p><p>[00:39:29] <strong>Kyle Newsome (Guest): </strong>On Twitter? I guess @kylnew - it's just like the first three letters of my first name, first three letters of my last name. Other than that.</p><p>[00:39:36] Also, I have a website, pyrus.io that I do consulting through. I blog on there occasionally. I haven't blogged recently. Otherwise I'm just in the community in Toronto trying to run meetups and ran the SwiftTO conference just this past summer, which you spoke at about Vapor. Yeah.</p><p>[00:39:57] You can find me around Toronto, go to a Toronto Swift meetup and you'll probably see me there. </p><p>[00:40:01] <strong>Leo Dion (Host): </strong>Yes. And if you miss a meetup, you're doing the video work on those, aren't you? </p><p>[00:40:06] <strong>Kyle Newsome (Guest): </strong>Yeah. As much as possible. And trying to film all the meetups going on in Toronto, just because we did a survey from the conference and got feedback from people and definitely saw from even the conference feedback that like people find it hard sometimes to come into the city. Unless I'd say I like a full day of content. So trying to find ways to distribute more video content so that it's available to those who can't make it downtown for our meetups. </p><p>[00:40:31] <strong>Leo Dion (Host): </strong>I'd love to check those out. And Swift Toronto was a great conference. so we'll see if you guys do it again. So </p><p>[00:40:39] <strong>Kyle Newsome (Guest): </strong>hopefully I'll try to polish up the details. </p><p>[00:40:41] <strong>Leo Dion (Host): </strong>Yeah, yeah. Fantastic. Thanks again for joining us on this episode and we look forward to talking to you in a couple of weeks. Thanks again. </p><p>[00:40:51] <strong>Kyle Newsome (Guest): </strong>Take care. Thank you.</p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 13 Oct 2019 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/a14f868f/dfe1727b.mp3" length="39262829" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>2452</itunes:duration>
      <itunes:summary>In this episode we talk with Kyle Newsome about continuous integration with iOS and other Apple platforms development.</itunes:summary>
      <itunes:subtitle>In this episode we talk with Kyle Newsome about continuous integration with iOS and other Apple platforms development.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Modularizing in Xcode with Abbey Jackson</title>
      <itunes:episode>23</itunes:episode>
      <itunes:title>Modularizing in Xcode with Abbey Jackson</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">d610aa7d-56a1-411c-a90e-4e5ce1e4c2a6</guid>
      <link>https://share.transistor.fm/s/c8f9aa41</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li> <a href="https://abbeyjackson.ca"><strong>Abbey Jackson</strong></a><strong> - (</strong><a href="https://twitter.com/earthabbey"><strong>Twitter @earthabbey</strong></a><strong>)</strong><ul><li><a href="https://vimeo.com/showcase/6225806/video/354783100">Modularize All the Things - Abbey Jackson</a></li></ul>
</li></ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>Themes from Conferences</b></p><ul>
<li>The Importance with Meeting New People</li>
<li>Learning Old Features</li>
<li>Trying to Deep Dive into SwiftUI and its Future</li>
<li>The Benefits of SwiftUI for Designers</li>
<li>Comparing HTML and SwiftUI</li>
</ul><p><b>Breaking Down How Xcode Works</b></p><ul>
<li>How Different Components in Xcode Can Help Organize Your Code</li>
<li>How an Xcode Project Works</li>
<li>How Files result in Targets</li>
<li>Differences between Targets and Build Configuration</li>
<li>Dealing with Target Dependencies</li>
<li>Testing with Targets and Xcode</li>
<li>How Workspaces Differ from Projects</li>
</ul><p><b>Modularizing Components</b></p><ul>
<li>What are the best ways to organize your product?</li>
<li>Modularizing Your Persistence Layer</li>
<li>Importance of TDD and Protocol Oriented Programming</li>
<li>Other examples of modularizing: Network, Feature-cased, Authentication, User Profile, Location</li>
<li>Following Apple's SDK Framework Example</li>
</ul><p><b>Dealing with Source Control</b></p><ul>
<li>Using Git Submodules</li>
<li>Dependency Management Tools (i.e. SPM, Cocoapods, Carthage)</li>
<li>Using SDK Targets</li>
<li>Swift Package Manager</li>
</ul><p><b>The Benefits of Modularizing</b></p><ul>
<li>Decrease Build Times</li>
<li>Share Code and Functionality</li>
<li>Optimize Your Build Pipelines</li>
</ul><p><b>Post-September Purchasing Choices</b></p><ul>
<li>Apple Watch Series 5</li>
<li>iTunes vs App Store Gift Cards</li>
<li><a href="https://www.amazon.com/Lavolta-Carrying-Case-Apple-27-inch/dp/B01DYHDQNI">iMac Backpack</a></li>
</ul><p><b>Social Media</b></p><p><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a></p><p><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a></p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li> <a href="https://abbeyjackson.ca"><strong>Abbey Jackson</strong></a><strong> - (</strong><a href="https://twitter.com/earthabbey"><strong>Twitter @earthabbey</strong></a><strong>)</strong><ul><li><a href="https://vimeo.com/showcase/6225806/video/354783100">Modularize All the Things - Abbey Jackson</a></li></ul>
</li></ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>Themes from Conferences</b></p><ul>
<li>The Importance with Meeting New People</li>
<li>Learning Old Features</li>
<li>Trying to Deep Dive into SwiftUI and its Future</li>
<li>The Benefits of SwiftUI for Designers</li>
<li>Comparing HTML and SwiftUI</li>
</ul><p><b>Breaking Down How Xcode Works</b></p><ul>
<li>How Different Components in Xcode Can Help Organize Your Code</li>
<li>How an Xcode Project Works</li>
<li>How Files result in Targets</li>
<li>Differences between Targets and Build Configuration</li>
<li>Dealing with Target Dependencies</li>
<li>Testing with Targets and Xcode</li>
<li>How Workspaces Differ from Projects</li>
</ul><p><b>Modularizing Components</b></p><ul>
<li>What are the best ways to organize your product?</li>
<li>Modularizing Your Persistence Layer</li>
<li>Importance of TDD and Protocol Oriented Programming</li>
<li>Other examples of modularizing: Network, Feature-cased, Authentication, User Profile, Location</li>
<li>Following Apple's SDK Framework Example</li>
</ul><p><b>Dealing with Source Control</b></p><ul>
<li>Using Git Submodules</li>
<li>Dependency Management Tools (i.e. SPM, Cocoapods, Carthage)</li>
<li>Using SDK Targets</li>
<li>Swift Package Manager</li>
</ul><p><b>The Benefits of Modularizing</b></p><ul>
<li>Decrease Build Times</li>
<li>Share Code and Functionality</li>
<li>Optimize Your Build Pipelines</li>
</ul><p><b>Post-September Purchasing Choices</b></p><ul>
<li>Apple Watch Series 5</li>
<li>iTunes vs App Store Gift Cards</li>
<li><a href="https://www.amazon.com/Lavolta-Carrying-Case-Apple-27-inch/dp/B01DYHDQNI">iMac Backpack</a></li>
</ul><p><b>Social Media</b></p><p><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a></p><p><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a></p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 29 Sep 2019 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/c8f9aa41/c8c2a148.mp3" length="50640626" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>3163</itunes:duration>
      <itunes:summary>In this episode we talk with Abbey Jackson about how to improve testing and reliability with modularizing your iOS applications in Xcode.</itunes:summary>
      <itunes:subtitle>In this episode we talk with Abbey Jackson about how to improve testing and reliability with modularizing your iOS applications in Xcode.</itunes:subtitle>
      <itunes:keywords>Xcode, iOS, swift, macOS, watchOS, packages, dependencies</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>September 2019 Event</title>
      <itunes:episode>22</itunes:episode>
      <itunes:title>September 2019 Event</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">a33bead9-3e8c-49d1-b161-eb50565e7421</guid>
      <link>https://share.transistor.fm/s/7966a039</link>
      <description>
        <![CDATA[<p><b>Full Video</b></p><p><a href="https://youtu.be/5Qn22CN3hAA"><strong>Youtube Video - https://youtu.be/5Qn22CN3hAA</strong></a></p><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>Apple Arcade and Apple TV+</b></p><ul>
<li>Can there be a subscription service for apps similar to Arcade for games?</li>
<li>Was the pricing reasonable for most </li>
</ul><p><b>iPad (7th Generation)</b></p><ul>
<li>Is the iPad ready to be a laptop replacement?</li>
<li>Is the app ecosystem ready for professional apps on the iPad?</li>
</ul><p><b>Apple Watch Series 6</b></p><ul>
<li>What the continuing trend of the Apple Watch battery improvement?</li>
<li>Is the Apple Watch the device of the future?</li>
</ul><p><b>iPhone 11</b></p><ul>
<li>A continuing trend of maturity in the smartphone market?</li>
<li>Is the iPhone a phone or a camera?</li>
</ul><p><b>iOS 13</b></p><ul><li>
<a href="https://twitter.com/tonydehnke/status/1171891500969410560">Thoughts on if Apple bit off too much on the OS upgrades to deliver everything on time?</a> - @tonydehnke</li></ul><p><b>Social Media</b></p><p><a href="https://www.youtube.com/channel/UCnl3jF6GHAvlj1MZyb6Ka9g?view_as=subscriber"><strong>Youtube - BrightDigit</strong></a><br><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a></p><p><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a></p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Full Video</b></p><p><a href="https://youtu.be/5Qn22CN3hAA"><strong>Youtube Video - https://youtu.be/5Qn22CN3hAA</strong></a></p><p><b>Sponsors</b></p><p><a href="https://brightdigit.com/"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>Apple Arcade and Apple TV+</b></p><ul>
<li>Can there be a subscription service for apps similar to Arcade for games?</li>
<li>Was the pricing reasonable for most </li>
</ul><p><b>iPad (7th Generation)</b></p><ul>
<li>Is the iPad ready to be a laptop replacement?</li>
<li>Is the app ecosystem ready for professional apps on the iPad?</li>
</ul><p><b>Apple Watch Series 6</b></p><ul>
<li>What the continuing trend of the Apple Watch battery improvement?</li>
<li>Is the Apple Watch the device of the future?</li>
</ul><p><b>iPhone 11</b></p><ul>
<li>A continuing trend of maturity in the smartphone market?</li>
<li>Is the iPhone a phone or a camera?</li>
</ul><p><b>iOS 13</b></p><ul><li>
<a href="https://twitter.com/tonydehnke/status/1171891500969410560">Thoughts on if Apple bit off too much on the OS upgrades to deliver everything on time?</a> - @tonydehnke</li></ul><p><b>Social Media</b></p><p><a href="https://www.youtube.com/channel/UCnl3jF6GHAvlj1MZyb6Ka9g?view_as=subscriber"><strong>Youtube - BrightDigit</strong></a><br><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a></p><p><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a></p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 15 Sep 2019 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/7966a039/b2321e3f.mp3" length="9044163" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>1127</itunes:duration>
      <itunes:summary>In this special episode, Leo talks briefly about the September event this year: specifically what does Apple Arcade and Apple TV+ mean for the app business, can the iPad be a serious laptop competitor, iPhone is now a "professional" camera, the continued improvements to the Apple Watch and its battery, and lastly the maturity of the smartphone and it's affect on the app business.</itunes:summary>
      <itunes:subtitle>In this special episode, Leo talks briefly about the September event this year: specifically what does Apple Arcade and Apple TV+ mean for the app business, can the iPad be a serious laptop competitor, iPhone is now a "professional" camera, the continued </itunes:subtitle>
      <itunes:keywords>iPhone 11, Apple TV+, Apple Arcade, iPad, Apple Watch Series 6</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Developing for Multiple Platforms with Manton Reece</title>
      <itunes:episode>21</itunes:episode>
      <itunes:title>Developing for Multiple Platforms with Manton Reece</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">231442ca-7695-4436-a599-5a9f23037ba0</guid>
      <link>https://share.transistor.fm/s/3498c82f</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li> <a href="https://manton.org">Manton Reece</a><ul>
<li><a href="https://micro.blog/">Micro.blog</a></li>
<li><a href="https://micro.blog/manton">@manton - Micro.blog</a></li>
<li><a href="https://coreint.org">Core Int - Podcast with Daniel</a></li>
</ul>
</li></ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>Micro.blog</b></p><ul>
<li>Self-Hosted and Indie Web Focus</li>
<li>Dealing with Twitter Issues<ul>
<li>Developer-Friendly</li>
<li>Privacy</li>
<li>Community Issues</li>
</ul>
</li>
</ul><p><b>Marketing to an Audience</b></p><ul>
<li>Reach Out and Let People Know</li>
<li>Starting a Mailing List and Blog to Reach Out</li>
<li>Slow Growth Allows For Intermittent Improves Based On Audience Feedback</li>
<li>Maintaining Engagement</li>
<li>Using Automation with Mailchimp and other Mailing Lists</li>
<li>Using Kickstarter for Funding a New Project</li>
<li>Finding the right niche or niches</li>
<li>Providing value outside of comparing yourself</li>
</ul><p><b>Developing for Multiple Apple Platform</b></p><ul>
<li>Hosting through Linode using Sinatra + Ruby</li>
<li>How Micro.blog works behind the scenes</li>
<li>Having a Public API and Dealing with Third-Party APIs</li>
<li>Adopting standards</li>
<li>Dealing with Multiple Different UIs</li>
<li>Building Frameworks for other Developers</li>
<li>Differences between developing for the Mac vs. iPhone</li>
<li>Catalyst vs SwiftUI on the Mac</li>
<li>Constantly Releasing Updates</li>
</ul><p><b>Apple September Event</b></p><ul>
<li>What the new iPhone might mean for developers?</li>
<li>Maturity of the iPhone</li>
<li>Emphasis on Photography with third lens</li>
<li>Independence of the Watch App</li>
</ul><p><b>Social Media</b></p><p><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a></p><p><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a></p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li> <a href="https://manton.org">Manton Reece</a><ul>
<li><a href="https://micro.blog/">Micro.blog</a></li>
<li><a href="https://micro.blog/manton">@manton - Micro.blog</a></li>
<li><a href="https://coreint.org">Core Int - Podcast with Daniel</a></li>
</ul>
</li></ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>Micro.blog</b></p><ul>
<li>Self-Hosted and Indie Web Focus</li>
<li>Dealing with Twitter Issues<ul>
<li>Developer-Friendly</li>
<li>Privacy</li>
<li>Community Issues</li>
</ul>
</li>
</ul><p><b>Marketing to an Audience</b></p><ul>
<li>Reach Out and Let People Know</li>
<li>Starting a Mailing List and Blog to Reach Out</li>
<li>Slow Growth Allows For Intermittent Improves Based On Audience Feedback</li>
<li>Maintaining Engagement</li>
<li>Using Automation with Mailchimp and other Mailing Lists</li>
<li>Using Kickstarter for Funding a New Project</li>
<li>Finding the right niche or niches</li>
<li>Providing value outside of comparing yourself</li>
</ul><p><b>Developing for Multiple Apple Platform</b></p><ul>
<li>Hosting through Linode using Sinatra + Ruby</li>
<li>How Micro.blog works behind the scenes</li>
<li>Having a Public API and Dealing with Third-Party APIs</li>
<li>Adopting standards</li>
<li>Dealing with Multiple Different UIs</li>
<li>Building Frameworks for other Developers</li>
<li>Differences between developing for the Mac vs. iPhone</li>
<li>Catalyst vs SwiftUI on the Mac</li>
<li>Constantly Releasing Updates</li>
</ul><p><b>Apple September Event</b></p><ul>
<li>What the new iPhone might mean for developers?</li>
<li>Maturity of the iPhone</li>
<li>Emphasis on Photography with third lens</li>
<li>Independence of the Watch App</li>
</ul><p><b>Social Media</b></p><p><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a></p><p><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a></p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sat, 07 Sep 2019 23:55:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/3498c82f/1e618ff4.mp3" length="24328380" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>3195</itunes:duration>
      <itunes:summary>In this episode we talk with Manton Reece about his experience developing micro.blog for multiple Apple platforms as well as building his audience, monetization, other aspects of building an app.</itunes:summary>
      <itunes:subtitle>In this episode we talk with Manton Reece about his experience developing micro.blog for multiple Apple platforms as well as building his audience, monetization, other aspects of building an app.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>WWDC 2019 - Mac Development with Daniel Jalkut</title>
      <itunes:episode>20</itunes:episode>
      <itunes:title>WWDC 2019 - Mac Development with Daniel Jalkut</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">154294ac-69f1-448a-b25c-8bf923d84b9a</guid>
      <link>https://share.transistor.fm/s/4f8b37d3</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li> Daniel Jalkut<ul>
<li><a href="https://red-sweater.com">Red Sweater - Software Company</a></li>
<li><a href="https://bitsplitting.org">Daniel's Blog - https://bitsplitting.org</a></li>
<li><a href="https://coreint.org">Core Int - Podcast with Manton</a></li>
<li><a href="https://twitter.com/danielpunkass">(@danielpunkass) | Twitter</a></li>
</ul>
</li></ul><p><b>Previous Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/3d4c7634?preview=true">Empower Apps | WWDC 2019 - Apple Watch with Gary Sabo | Episode 18</a></li>
<li><a href="https://share.transistor.fm/s/03051561">Empower Apps | WWDC 2019 - Swift UI with Jason Anderson | Episode 19</a></li>
<li><a href="https://coreint.org/2019/06/episode-378-hi-i-make-macintosh-software/">Core Int | Episode 378: Hi, I make Macintosh Software</a></li>
<li><a href="https://coreint.org/2019/06/episode-377-just-a-tiny-company/">Core Int | Episode 377: Just A Tiny Company</a></li>
<li><a href="https://coreint.org/2019/06/episode-376-i-had-a-vegan-quesadilla/">Core Int | Episode 376: I Had A Vegan Quesadilla</a></li>
<li><a href="https://daringfireball.net/thetalkshow/2019/07/23/ep-257">Talk Show with John Gruber - Episode 257 - A Real Sandwich</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>WWDC 2019</b></p><ul>
<li>SwiftUI is the Future but is it Ready?</li>
<li>SwiftUI and Pragmatic Adoption and Migration</li>
</ul><p><b>How has Apple changed over the years?</b></p><ul>
<li>Apple conservative approach towards change</li>
<li>Not Releasing First</li>
</ul><p><b>What happened to Marzipan?</b></p><ul>
<li>Project Catalyst vs. SwiftUI</li>
<li>Using SwiftUI with AppKit</li>
<li>Artisanal vs Cross-Platform</li>
<li>Why would a company develop using Catalyst?<ul>
<li>
<a href="https://slack.engineering/rebuilding-slack-on-the-desktop-308d6fe94ae4">When a rewrite isn’t: rebuilding Slack on the desktop</a> </li>
<li>Is Slack in the business of writing exemplary apps?</li>
</ul>
</li>
<li>Pragmatism vs Art in Product Development<ul>
<li>How does Apple develop products?</li>
<li>Leading by Design</li>
</ul>
</li>
<li>Would you use SwiftUI in a Brand New App?</li>
</ul><p><b>Future of macOS</b></p><ul>
<li>Locking Down of macOS<ul><li><a href="https://daringfireball.net/thetalkshow/2019/07/23/ep-257">Talk Show with John Gruber - Episode 257 - A Real Sandwich</a></li></ul>
</li>
<li>Mac App Store vs. Distributing Yourself</li>
<li>How does Notarization work?</li>
<li>How does Gatekeeper work?<ul><li><a href="https://bitsplitting.org/2019/07/22/a-real-gatekeeper/">Daniel's Article - A Real Gatekeeper</a></li></ul>
</li>
<li>Apple - Making macOS more secure or more annoying</li>
<li>Is Sandboxing and the 30% cut worth it for the Mac App Store?</li>
<li><a href="https://speculid.com">Speculid - Easily Manage Graphics in Xcode Projects</a></li>
<li><a href="https://red-sweater.com/fastscripts/">FastScripts - Powerful script management utility</a></li>
<li><a href="https://daringfireball.net/thetalkshow/2019/07/23/ep-257">Non-Consensual Software</a></li>
</ul><p><b>Running an App Business</b></p><ul>
<li>Limits of the App Store as a Business</li>
<li>How to be a successful business and build great apps?</li>
<li>
<a href="https://saas.transistor.fm/episodes/did-we-solve-our-bandwidth-cost-crisis">Build Your Saas - Hosting Costs</a> </li>
<li><a href="https://stratechery.com/2019/apples-audacity/">Stratechery - The First Post-iPhone Keynote</a></li>
<li>Find Where the Market Is</li>
</ul><p><b>Social Media</b></p><p><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a></p><p><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a></p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li> Daniel Jalkut<ul>
<li><a href="https://red-sweater.com">Red Sweater - Software Company</a></li>
<li><a href="https://bitsplitting.org">Daniel's Blog - https://bitsplitting.org</a></li>
<li><a href="https://coreint.org">Core Int - Podcast with Manton</a></li>
<li><a href="https://twitter.com/danielpunkass">(@danielpunkass) | Twitter</a></li>
</ul>
</li></ul><p><b>Previous Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/3d4c7634?preview=true">Empower Apps | WWDC 2019 - Apple Watch with Gary Sabo | Episode 18</a></li>
<li><a href="https://share.transistor.fm/s/03051561">Empower Apps | WWDC 2019 - Swift UI with Jason Anderson | Episode 19</a></li>
<li><a href="https://coreint.org/2019/06/episode-378-hi-i-make-macintosh-software/">Core Int | Episode 378: Hi, I make Macintosh Software</a></li>
<li><a href="https://coreint.org/2019/06/episode-377-just-a-tiny-company/">Core Int | Episode 377: Just A Tiny Company</a></li>
<li><a href="https://coreint.org/2019/06/episode-376-i-had-a-vegan-quesadilla/">Core Int | Episode 376: I Had A Vegan Quesadilla</a></li>
<li><a href="https://daringfireball.net/thetalkshow/2019/07/23/ep-257">Talk Show with John Gruber - Episode 257 - A Real Sandwich</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://brightdigit.com"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? </li></ul><p><a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a></p><p><b>WWDC 2019</b></p><ul>
<li>SwiftUI is the Future but is it Ready?</li>
<li>SwiftUI and Pragmatic Adoption and Migration</li>
</ul><p><b>How has Apple changed over the years?</b></p><ul>
<li>Apple conservative approach towards change</li>
<li>Not Releasing First</li>
</ul><p><b>What happened to Marzipan?</b></p><ul>
<li>Project Catalyst vs. SwiftUI</li>
<li>Using SwiftUI with AppKit</li>
<li>Artisanal vs Cross-Platform</li>
<li>Why would a company develop using Catalyst?<ul>
<li>
<a href="https://slack.engineering/rebuilding-slack-on-the-desktop-308d6fe94ae4">When a rewrite isn’t: rebuilding Slack on the desktop</a> </li>
<li>Is Slack in the business of writing exemplary apps?</li>
</ul>
</li>
<li>Pragmatism vs Art in Product Development<ul>
<li>How does Apple develop products?</li>
<li>Leading by Design</li>
</ul>
</li>
<li>Would you use SwiftUI in a Brand New App?</li>
</ul><p><b>Future of macOS</b></p><ul>
<li>Locking Down of macOS<ul><li><a href="https://daringfireball.net/thetalkshow/2019/07/23/ep-257">Talk Show with John Gruber - Episode 257 - A Real Sandwich</a></li></ul>
</li>
<li>Mac App Store vs. Distributing Yourself</li>
<li>How does Notarization work?</li>
<li>How does Gatekeeper work?<ul><li><a href="https://bitsplitting.org/2019/07/22/a-real-gatekeeper/">Daniel's Article - A Real Gatekeeper</a></li></ul>
</li>
<li>Apple - Making macOS more secure or more annoying</li>
<li>Is Sandboxing and the 30% cut worth it for the Mac App Store?</li>
<li><a href="https://speculid.com">Speculid - Easily Manage Graphics in Xcode Projects</a></li>
<li><a href="https://red-sweater.com/fastscripts/">FastScripts - Powerful script management utility</a></li>
<li><a href="https://daringfireball.net/thetalkshow/2019/07/23/ep-257">Non-Consensual Software</a></li>
</ul><p><b>Running an App Business</b></p><ul>
<li>Limits of the App Store as a Business</li>
<li>How to be a successful business and build great apps?</li>
<li>
<a href="https://saas.transistor.fm/episodes/did-we-solve-our-bandwidth-cost-crisis">Build Your Saas - Hosting Costs</a> </li>
<li><a href="https://stratechery.com/2019/apples-audacity/">Stratechery - The First Post-iPhone Keynote</a></li>
<li>Find Where the Market Is</li>
</ul><p><b>Social Media</b></p><p><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a></p><p><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a></p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sat, 24 Aug 2019 23:05:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/4f8b37d3/3918a210.mp3" length="33300093" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>3890</itunes:duration>
      <itunes:summary>In this episode we talk with Daniel Jalkut of Red Sweater Software about what’s new in Mac Development post-WWDC 2019.</itunes:summary>
      <itunes:subtitle>In this episode we talk with Daniel Jalkut of Red Sweater Software about what’s new in Mac Development post-WWDC 2019.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>WWDC 2019 - Swift UI with Jason Anderson</title>
      <itunes:episode>19</itunes:episode>
      <itunes:title>WWDC 2019 - Swift UI with Jason Anderson</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">ff9c5bfb-d1ef-4729-adf9-9fd1958a9077</guid>
      <link>https://share.transistor.fm/s/03051561</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li> Jason Anderson <ul>
<li>
<a href="https://twitter.com/_jasonranderson">(@_jasonranderson) | Twitter</a> </li>
<li><a href="https://github.com/Jasonranderson">jasonranderson GitHub</a></li>
</ul>
</li></ul><p><b>Previous Episodes</b></p><ul><li><a href="https://share.transistor.fm/s/3d4c7634?preview=true">Empower Apps | WWDC 2019 - Apple Watch with Gary Sabo | Episode 18</a></li></ul><p><b>Sponsors</b></p><p><a href="https://360idev.com/"><strong>360|iDev- August 25 - 28th - Denver, CO</strong></a></p><ul>
<li>The Leading indie iOS/Mac (and watchOS, and tvOS) Developer conference</li>
<li>It’s all about Community and Code!</li>
<li>Four days of hands-on training, amazing sessions, and the great community. All Swift.</li>
</ul><p>Use the promo code <strong><em>FriendsInHighPlaces</em></strong> to get <a href="https://360idev.com/#tile_registration">20% off registration.<br></a><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? <a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a>
</li></ul><p><b>Functional Reactive Programming</b></p><ul>
<li><a href="https://github.com/ReactiveCocoa">ReactiveCocoa · GitHub</a></li>
<li><a href="https://developer.apple.com/documentation/combine">Combine | Apple Developer Documentation</a></li>
<li><a href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93viewmodel">Model–view–viewmodel - Wikipedia</a></li>
<li><a href="https://en.wikipedia.org/wiki/First-class_function">First-class function - Wikipedia</a></li>
</ul><p><b>Understanding Declarative Programming</b></p><ul>
<li>Better for Multiple Devices</li>
<li>Improved Team Collaboration</li>
<li>Xcode LivePreview</li>
<li>Keep View Model and Data Model Separate</li>
<li>Faster Iterative Development Long-Term</li>
</ul><p><b>Drawbacks of using Swift UI</b></p><ul>
<li>Limited to latest OS (iOS, macOS, watchOS, tvOS)</li>
<li>Lack of Documentation and Support</li>
<li>Collection Views (i.e. Grids)</li>
<li>Good Support of Communication Between of UIKit and SwiftUI</li>
<li>Not Best for New Recent Releases</li>
<li>Do Need To Use It Now</li>
<li><a href="https://www.youtube.com/watch?v=e5EzQgKx2Es&amp;t=2051s">Leo’s Swift UI Stream</a></li>
</ul><p><b>Social Media</b></p><p><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a></p><p><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a></p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li> Jason Anderson <ul>
<li>
<a href="https://twitter.com/_jasonranderson">(@_jasonranderson) | Twitter</a> </li>
<li><a href="https://github.com/Jasonranderson">jasonranderson GitHub</a></li>
</ul>
</li></ul><p><b>Previous Episodes</b></p><ul><li><a href="https://share.transistor.fm/s/3d4c7634?preview=true">Empower Apps | WWDC 2019 - Apple Watch with Gary Sabo | Episode 18</a></li></ul><p><b>Sponsors</b></p><p><a href="https://360idev.com/"><strong>360|iDev- August 25 - 28th - Denver, CO</strong></a></p><ul>
<li>The Leading indie iOS/Mac (and watchOS, and tvOS) Developer conference</li>
<li>It’s all about Community and Code!</li>
<li>Four days of hands-on training, amazing sessions, and the great community. All Swift.</li>
</ul><p>Use the promo code <strong><em>FriendsInHighPlaces</em></strong> to get <a href="https://360idev.com/#tile_registration">20% off registration.<br></a><br></p><p><strong>We have an opening for sponsors</strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? <a href="https://brightdigit.com/contact/">Contact me today if you are interested in sponsoring</a> or <a href="https://www.patreon.com/empowerappsshow">go to our Patreon page.</a>
</li></ul><p><b>Functional Reactive Programming</b></p><ul>
<li><a href="https://github.com/ReactiveCocoa">ReactiveCocoa · GitHub</a></li>
<li><a href="https://developer.apple.com/documentation/combine">Combine | Apple Developer Documentation</a></li>
<li><a href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93viewmodel">Model–view–viewmodel - Wikipedia</a></li>
<li><a href="https://en.wikipedia.org/wiki/First-class_function">First-class function - Wikipedia</a></li>
</ul><p><b>Understanding Declarative Programming</b></p><ul>
<li>Better for Multiple Devices</li>
<li>Improved Team Collaboration</li>
<li>Xcode LivePreview</li>
<li>Keep View Model and Data Model Separate</li>
<li>Faster Iterative Development Long-Term</li>
</ul><p><b>Drawbacks of using Swift UI</b></p><ul>
<li>Limited to latest OS (iOS, macOS, watchOS, tvOS)</li>
<li>Lack of Documentation and Support</li>
<li>Collection Views (i.e. Grids)</li>
<li>Good Support of Communication Between of UIKit and SwiftUI</li>
<li>Not Best for New Recent Releases</li>
<li>Do Need To Use It Now</li>
<li><a href="https://www.youtube.com/watch?v=e5EzQgKx2Es&amp;t=2051s">Leo’s Swift UI Stream</a></li>
</ul><p><b>Social Media</b></p><p><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a></p><p><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a></p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappshow</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sat, 10 Aug 2019 22:20:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/03051561/82555a1d.mp3" length="10202033" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>1358</itunes:duration>
      <itunes:summary>In this episode we talk with Jason Anderson about Swift UI and reactive Swift post-WWDC 2019.</itunes:summary>
      <itunes:subtitle>In this episode we talk with Jason Anderson about Swift UI and reactive Swift post-WWDC 2019.</itunes:subtitle>
      <itunes:keywords>swift ui, WWDC 2019, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>WWDC 2019 - Apple Watch with Gary Sabo</title>
      <itunes:episode>18</itunes:episode>
      <itunes:title>WWDC 2019 - Apple Watch with Gary Sabo</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">f5e45b06-d2a2-4de0-af14-8f319fe3eb98</guid>
      <link>https://share.transistor.fm/s/3d4c7634</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/garysabo">Gary Sabo</a><ul>
<li><a href="https://apps.apple.com/us/developer/myndarc-llc/id979588062">‎MyndArc, LLC Apps on the App Store</a></li>
<li><a href="https://join.slack.com/t/healthkitdevelopers/shared_invite/enQtMzEyOTg1NTk2MDY2LWJlMjc5ZWE1ZjNhMTdlNzk3MTQ4Y2EyYzg4ZmRkODdmNTU1NDMyYjhkMjNmNDAxY2NlZjZlMTE2OGJhOTJiMjE">HealthKit Slack</a></li>
</ul>
</li></ul><p><b>Previous Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/eddb8632">Unit Testing Episode</a></li>
<li><a href="https://share.transistor.fm/s/82709349">Apple Watch Series 4</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://360idev.com/">360|iDev- August 25 - 28th - Denver, CO</a></p><ul>
<li>The Leading indie iOS/Mac (and watchOS, and tvOS) Developer conference</li>
<li>It’s all about Community and Code!</li>
<li>Four days of hands-on training, amazing sessions, and the great community. All Swift.</li>
</ul><p>Use the promo code <strong>FriendsInHighPlaces </strong>to get <a href="https://360idev.com/#tile_registration">20% off registration.<br></a><br></p><p><a href="https://www.patreon.com/empowerappsshow"><strong>We have an opening for sponsors and patrons</strong></a><strong> </strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? <a href="https://brightdigit.com/contact/">Contact me today if you are interested</a> or <a href="https://www.patreon.com/empowerappsshow">join our Patreon</a>.</li></ul><p><b>Thoughts on WWDC</b></p><ul>
<li>
<strong>SwiftUI and the slow demise of Storyboards</strong><ul>
<li><a href="https://twitter.com/gruber/status/1014490721909444608">Gruber’s rumor about Declarite Programming</a></li>
<li>Swift and the slow demise of Objective-C</li>
</ul>
</li>
<li>
<a href="https://github.com/Blackjacx/WWDC#whats-new-in-swift"><strong>Github Repo on Talks</strong></a><ul>
<li><a href="https://developer.apple.com/videos/play/wwdc2019/218/">Exploring New Data Representations in HealthKit - WWDC 2019 - Videos - Apple Developer</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2019/219/">SwiftUI on watchOS - WWDC 2019 - Videos - Apple Developer</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2019/208/">Creating Independent Watch Apps - WWDC 2019 - Videos - Apple Developer</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2019/239/">Great Developer Habits - WWDC 2019 - Videos - Apple Developer</a></li>
</ul>
</li>
<li><a href="https://github.com/Juanpe/About-Swifr"><strong>Github Repo on SwiftUI</strong></a></li>
<li>
<a href="https://www.economist.com/babbage/2012/07/13/youve-been-sherlocked">You’ve been sherlocked - Operating systems</a><ul>
<li><a href="https://apps.apple.com/us/app/hockeytracker/id1297971760">‎HockeyTracker on the App Store</a></li>
<li>Gear Towards Your Specific Audience</li>
<li>Specific Activities with specific metrics</li>
</ul>
</li>
</ul><p><b>Independent Apple Watch Apps</b></p><ul>
<li><strong>Why does Apple Watch apps need iPhone app counterparts?</strong></li>
<li>
<strong>iPhone Counterparts of Apple Watch</strong> workout apps are for visualization</li>
<li><strong>Slow Deprecation of WatchConnectivity</strong></li>
<li>How do you <strong>syncing certain data between Apple Watch and iPhone?</strong><ul><li>HealthKit ,StoreKit, etc…</li></ul>
</li>
<li>What’s the <strong>position of the iPhone in the future</strong> with AR and the Apple Watch?</li>
<li>
<strong>SwiftUI</strong> on the Apple Watch</li>
<li>The new <strong>Apple Watch App Store</strong>
</li>
</ul><p><b>Where’s the Focus of the Apple Watch</b></p><ul>
<li><strong>Health and Fitness - Niche Fitness</strong></li>
<li><strong>Advanced Notifications</strong></li>
<li>
<strong>Location Tracking</strong> - GPS and Indoor Positioning System (Indoor GPS)</li>
<li><strong>Accessibility and Haptic Feedback</strong></li>
<li>
<strong>More Sensors</strong> in the Future?</li>
</ul><p><b>Maturity of HealthKit</b></p><ul>
<li>Lacking <strong>Inability to Edit</strong>
</li>
<li><strong>Apple Partnering with Health Companies</strong></li>
<li><strong>Allowing HealthKit on iPad and macOS?</strong></li>
</ul><p><b>Social Media</b></p><p><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a></p><p><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a></p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappsshow</a></p><p><b>Complete Transcription</b></p><p><strong>Leo Dion (Host): </strong>Hey Gary, how's it going? </p><p>[00:00:01] <strong>Gary Sabo (Guest): </strong>Doing well, Leo, how are you doing? </p><p>[00:00:02] <strong>Leo Dion (Host): </strong>Good. Good. So what were your thoughts from WWDC? </p><p>[00:00:07] <strong>Gary Sabo (Guest): </strong>Boy, so much. I think like a lot of people, just my immediate reaction was this with UI. I didn't hear rumors. I mean, I heard maybe I heard something about, you know, declarative framework, but I didn't expect that.</p><p>[00:00:18] And sort of the, what seems to be the eventual abandonment of the storyboard. So yeah, that was the biggest shock to me. </p><p>[00:00:26] <strong>Leo Dion (Host): </strong>We had some rumors about like declarative programming. I think Gruber had talked about that, but people were just kind of like, not making it as big of a deal about it because I think everybody was like marzipan, marzipan, marzipan.</p><p>[00:00:38] Right. And then it's like the project catalyst is kind of an afterthought. It's like, Holy crap, they're replacing the entire UI. Framework UI kit. I think it's still vibrant. I don't think it's dead by any means, because they've made some major improvements. It looks like to the way table views and even more so collection views are done, but you can kind of see the writings on the </p><p>[00:01:01] <strong>Gary Sabo (Guest): </strong>wall.</p><p>[00:01:02] <strong>Leo Dion (Host): </strong>Yeah, it's like Swift. It's like Swift four years or a . It's like, yeah, I mean objective is going to be here for awhile. It's going to be forever, quite frankly. But like that's called Swift UI. It's not called objective-C UI for specific reason. </p><p>[00:01:18] <strong>Gary Sabo (Guest): </strong>Right. And obviously companies have existing code bases, and if you were just starting out today, I still don't think I'd dive into Swift UI yet.</p><p>[00:01:27] You know, companies are going to need to support their existing projects for years, </p><p>[00:01:31] <strong>Leo Dion (Host): </strong>and somebody who's been playing around with it for two weeks. Yeah. Don't. I don't suggest jumping into it right now. </p><p>[00:01:38] <strong>Gary Sabo (Guest): </strong>Yeah. And it's still in beta, so keep that in mind as well. </p><p>[00:01:42] <strong>Leo Dion (Host): </strong>Very much so. Yeah. It was a big year. It's probably the biggest WWDC since Swift was introduced.</p><p>[00:01:49] We can safely say. </p><p>[00:01:50] <strong>Gary Sabo (Guest): </strong>I haven't gotten through all the talks. There's a github repo that I found or came across that kind of lists bullet points of the talks just so you don't have to invest the full 40 minutes. You can kind of just see if it's what you're interested in. So I've been going through that and just, I've been starting with obviously the ones that are most near and dear to me, like the WatchKit the Healthkit.</p><p>[00:02:11] But yeah, it seems like there's a lot to unpack. The combine is another thing there. Their foundation API. I didn't have a chance to watch that one yet either. And just like you said, Swift UI, there's I think five or six talks just on that, you know, and integration and stuff like that. </p><p>[00:02:27] <strong>Leo Dion (Host): </strong>Yeah. Post the link to that git hub repo. It'd be great to share. There was a git hub repo that had a list of Swift UI, a blog posts and tutorials. I mean, I know folks like Ray Wenderlich, paul Hudson already has like put some books they are pre-selling on it, but, there's some really great like tutorials there too that we can post those links in the notes.</p><p>[00:02:50] <strong>Gary Sabo (Guest): </strong>Okay. </p><p>[00:02:51]<strong>Sponsorship Sponsorship<br></strong><br></p><p>[00:02:51] <strong>Leo Dion (Host): </strong>Hey, I wanted to let you know, that empowerapps.show Is looking for sponsors and patrons. Our audience is growing and we'd love to showcase you, your company and your product on our show. If you want to be a patron, you can find us at https://www.patreon.com/empowerappsshow or if you want it to be a sponsor, reach out to me personally at leo@brightdigit.com your support is greatly appreciated and we look forward to showcasing your business and product on our show.</p><p>[00:03:20]<strong>Sponsorship Sponsorship End<br></strong><br></p><p>[00:03:20] One thing I wanted to talk about was, I think as two male developers we don't appreciate is like this new cycle tracking  feature. I think that's a big deal to a lot of folks, especially women. Cause I know like my wife and I just take it personal we dealt with infertility for about five years and we had like these stickers and like a binder, like a whole whole kit to track this stuff.</p><p>[00:03:49] And it was a pain in the neck. And then my wife, you know, who's probably not as techie as I am pretty techie, found this really great app. And she used it for a while, and then we had found that the app ended up getting taken down because of it was using the system with the same name and they didn't like that.</p><p>[00:04:09] So the, the folks who have that tracking system ended up giving them like a takedown notice and it really sucked. So,  it's really good that Apple has kind of like jumped in and kickstarted this stuff. Because I think it's going to help a lot of people, not just going to infertility, but for a variety of reasons or health reasons that women have.</p><p>[00:04:30] <strong>Gary Sabo (Guest): </strong>It's that classic, you know, Apple Sherlocking someone, right? And it sucks if you're the developer, but usually as when Apple chooses to take something into their space, it's usually benefits, you know, obviously asked the consumer so. </p><p>[00:04:44] <strong>Leo Dion (Host): </strong>Yeah. Like I think with a lot of sherlocking stuff, it's inevitable. Like anybody who builds a business around an action under sand, like Apple could always Sherlock it.</p><p>[00:04:53] It's about making yourself valuable enough that folks who are really into it, like they're going to download one of your great workout apps or they're going to download one of the Dave Smith's workout apps or something like that because it takes it to the next level. Whereas like Apple stuff is quite frankly, free.</p><p>[00:05:13] I think it also just gives some guidance to developers like, Oh, that's pretty cool. You can do this, and built on top of it. </p><p>[00:05:20] <strong>Gary Sabo (Guest): </strong>It's finding a niche that you know, in the space it like, just for example, like one of my apps HockeyTracker, I mean, conceivably Apple could have, some sort of custom hockey tracking part of their workout app.</p><p>[00:05:32] And I mean, my thought is mine goes down to the level that it, like tracks shifts during the hockey game. So like, you know, it knows whether you're on the bench or whether you're on the ice and then puts that number tells you how many shifts you had and what you know with the lengths were and things like that.</p><p>[00:05:48] It's kind of that level of detail that you think might be too, too zoomed in for an Apple app, which, knock on wood makes me think that I'm safe with that app but,I know what you're saying. And the other one too, isn't at some point, I think they're taking on sleep tracking. </p><p>[00:06:05] <strong>Leo Dion (Host): </strong>Oh yeah, for sure. I think that's definitely down the line.</p><p>[00:06:08] Either they're gonna, what do they call it, acqui-hire one of the great apps, or they're going to just make one their own. </p><p>[00:06:14] <strong>Gary Sabo (Guest): </strong>Yeah. Which makes total sense. I mean, obviously the watch, I mean, that's, I think that's one of the key. Probably use cases people use it for. </p><p>[00:06:22] <strong>Leo Dion (Host): </strong>Yeah. I use one. I think they're really helpful.</p><p>[00:06:25] Yeah. It's just a matter of understanding of that as part of part of your business. So maybe now's a good opportunity Gary for you to introduce yourself. What, what's your specialty when it comes to the Apple Watch and health kit and workouts? Sure. </p><p>[00:06:42] <strong>Gary Sabo (Guest): </strong>I began in 2014. Right. I'm self taught. So traditionally, I'm an attorney and when school would be an attorney, went to law school, but I'm self taught programmer.</p><p>[00:06:51] So when Swift was announced, that's when I jumped in. I had a little bit of coding experience before then, but that was really when I started building apps and, um, you know, releasing products into the store. And over time  basically just because I had ideas, I had their existing things that I wanted to do with my phone that they weren't possible.</p><p>[00:07:09] So I thought, well, I'll figure out how to do it in building myself and you know, how my own need and then maybe if somebody else is interested, you know, make a dollar or two. So over time I built a, some weather apps and apps on top of the Pinterest SDK a game based on the Twilight zone. </p><p>[00:07:25] I'm a hockey player and I think it was maybe two, two and a half years ago. I didn't even think about, you know, using my, I, I've had the Apple Watch series zero, but I never really thought about using it in hockey. And then one of my teammates was using it in the locker room and said that, Oh yeah, you could just start, you know, an Apple, an Apple Watch workout app.</p><p>[00:07:46] And then at the end of it, you could label it as hockey. Which to me, you know, it was just kind of a generic workout and then you just kind of name it hockey. And I was like, Hmm, I wonder if, um, you know, there's some space to build a custom hockey app. </p><p>[00:08:02] So it's the best thing I did, which really helped me was I posted in a hockey player Reddit and said, Hey, you know, I'm gonna, I'm an iOS developer, I've done watch app development before, and I had this idea and I got a lot of support from that community, and I was able to build a beta version of the app and then use those same Reddit members to transition them into a Slack community where, you know, they're able to like, you know, give me feature ideas or give me feedback.</p><p>[00:08:32] And to this day I still, you know, when I make a change in that app, I'll put up a poll on the Slack and have them vote on it. So it's usually driven. And so that's really been my focus the last two years. That hockey tracker app is kind of my flagship. Um, I've also done one for soccer, so it's soccer tracker, and I'm just most recently another app called sex tracker, which is kind of the same, along the same lines as tracking your metrics or VOT max and heart rates and that, but for instance, intimacy.</p><p>[00:09:03] <strong>Leo Dion (Host): </strong>Interesting. Is it mostly branding that separates the apps, or is it, what are some of the specific features that each app might have? </p><p>[00:09:15] <strong>Gary Sabo (Guest): </strong>Well, yeah, good example. So for example, in hockey, you know, you had this concept of a shift and then you also, over time, I think there are eight or nine different session types.</p><p>[00:09:26] So. You know, you could use it as a goalie, you could use it per pick up for an open scape. There's a coach mode. Um, there's a rough mode. And then you also, my focus of each of these apps have always been health and fitness and metrics, but you could also add your score, score the game, how many goals you scored, how many assists, if you're a goalie, how many shots against, and those sorts of things.</p><p>[00:09:48] And then there's a note section. Yeah. I mean, the biggest thing is just, you know, hockey is kind of. The algorithms that I built and everything are geared toward, you know, being on the ice. Again, the shifts where as soccer is, you know, more toward running. You don't have shifts. Some of them are the same. I mean, they track distance, they track speed.</p><p>[00:10:08] I try to do a lot with heart rates. One of the big things, the big features over the past, well I would say six months that I added is an effort level that's based on your time spent in the various heart rate zones. So if like if my max heart rate is, say 190. And you know, I've spend, so some of my top zone might be, you know, 170 to 190 and if I spend more time in that zone during the course of a game than my effort level is higher and things like that.</p><p>[00:10:39] I mean, you know, there are only so many metrics you have. It's just different ways of sort of packaging them and sort of analyzing that data for the user. </p><p>[00:10:48] <strong>Leo Dion (Host): </strong>Very cool. Yeah. I feel like there's so much potential with, with HealthKit and workout stuff. It's interesting the story with the Apple Watch being, we've gone from sending your friends heart rates and heart rates, but what was it called?</p><p>[00:11:04] I can't remember. Like your your  heart beating to like. Now it's pretty much predominantly a workout app or workout device, I should say, and it's, it seems like Apple is really starting to focus on that. Um, I made the leap. I foolishly made the leap to iOS 13 and watch OS 6 week on my primary devices.</p><p>[00:11:29] So I'm a fool don't do that. </p><p>[00:11:30] <strong>Gary Sabo (Guest): </strong>Does it seem stable so far?</p><p>[00:11:33] <strong>Leo Dion (Host): </strong>Yeah, it seems fine. iOS 13 is by no means perfect, but there, there's almost an enough issues in iOS 12 where it's like, how bad can it be? And I'd already put it on my iPads and my spare iPhone and I didn't have any major issues, so I was like, you know what?</p><p>[00:11:50] I'm just going to put it on the primary device. Let's just, usually it's not that big of a deal and it hasn't been, so now, yesterday I was just playing around on the watch. They have that noise detection feature which is really cool, like I don't know if you know what I'm talking about, but where like it'll detect if it's too loud.</p><p>[00:12:10] And if it is too loud, it, it will let you know, uh, so that you don't damage your hearing over the longterm. That's a pretty sweet feature. Like I'm amazed that they'd finally, you know, it was like, I wish I had thought of that. So, yeah. And it, to me, just looking at some of the stuff with WWDC, I think the other thing that the writing is on the wall is that the watch is going to be an independent device. </p><p>[00:12:38] I don't know what your thoughts are, but it seems like that's where we're going, especially with the way we're trying to no longer do you have to have watch app  packaged as a iOS app extension, but now it can be packaged as a separate app and now you got the app store on the watch and things like that.</p><p>[00:12:56] <strong>Gary Sabo (Guest): </strong>Yeah. But as far as the, um, the independent watch apps. Yeah. I mean, that's what I've really been thinking about that for the past few weeks and what that means and what type of opportunities that's going to present. I think just my existing apps and what they do might not be a great use case because.</p><p>[00:13:15] You know, they track, they use the watch to track and get your raw data, and they do display some UI. But then the iPhone is just a bigger screen and there's so much room to present, like we just talked about, you know, these charts of data. So I'm not sure that like those health and fitness apps are the best example.</p><p>[00:13:33] But one thing that immediately came to mind is one of my first ever apps was um. a commission, like I do real estate law, so a commission calculator for a real estate agent because, um, it was just a simple app, but you know where you type in the sales price and it tells you, okay, well the split with the buyer agent is maybe 3.5 and then maybe you pay a 20% referral to another agent and then maybe you're split with your broker is 50% and I actually had to, this was the first iteration of the watch, but actually had to build a calculator actually via the emoji digits and that's, yeah, that's how I ended up building it. But you know, I got it working and everything on the watch and then I was like, Oh, well to ship this, I had to build this kind of, you know, just generic iPhone app and basically do the same thing that, you know, it wasn't even the point of the app.</p><p>[00:14:22] The point was to have it on your watch. So something like that. It was a great example where, you know,  I probably spent another week building the iPhone part of it that you wouldn't even need now. </p><p>[00:14:33] <strong>Leo Dion (Host): </strong>Yeah, I totally agree. I think when it comes to fitness apps, the watch is exclusively used for tracking and maybe like sending up a workout.</p><p>[00:14:42] Well, a lot of the features of a typical workout or health app come from the fact that you can visualize it on the actual phone, because again, you can't really look at your reports on a, on a watch very easily. So yeah, I totally agree with that. It's also interesting with me trying to make the watch independent.</p><p>[00:15:00] They're kind of not deprecating watch connectivity, but more like saying, you really don't need it, I don't if they're trying to get you to kind of use cloud kit or some other server apparatus to communicate with the phone. Was that your impression? </p><p>[00:15:21] <strong>Gary Sabo (Guest): </strong>Yeah, that I had heard that as well.</p><p>[00:15:24] So maybe it's just implied. You know, that if you have an independent watch Apple, you wouldn't need to call out to the phone. To me, the devil is going to have to be in the details of that. A quick example is my apps. Um, if you, for whatever reason, I'm sure, I'm sure there's a reason, um, as far as CPU use or something like that.</p><p>[00:15:44] But if you query HealthKit on the watch for the user's body mass. You only get anything they've entered within the past seven days. You queried on the watch you get, I mean, on the iPhone, you get as far back as HealthKit started. I use that. I use that body mass and some of my calculations. So that's an area where I use watch connectivity because I have to call out, you know, wake up the phone.</p><p>[00:16:08] Make the phone query for the body mass and then send it back to the watch. So you know for them, for them to deprecate watch connectivity. For me, they need to update HealthKit to be able to make that full, you know, HealthKit call. </p><p>[00:16:22] <strong>Leo Dion (Host): </strong>Yeah, that's a really good point. Like how I think HealthKit, I'm first trying to think what else.</p><p>[00:16:27] But what other API APIs you'd want to directly connect with the iPhone with? But it seems like HealthKit would be the primary one where it's like the HealthKit data on the watch and the HealthKit data on the phone are not in sync. </p><p>[00:16:39] <strong>Gary Sabo (Guest): </strong>Right. Something else that came to mind. My apps currently don't do this, but if you want to put your watch up behind the paywall, there is no StoreKit on the watch.</p><p>[00:16:48] So if you want to check whether someone's, um, subscription-based app, whether they. Their subscriptions expired or, or not. Um, you need to use watch connectivity can be to that to call out to the phone and parse the receipt or something like that. </p><p>[00:17:04] <strong>Leo Dion (Host): </strong>Yeah, there you go. Yeah, and I'm sure there's going to be a ton of other API APIs we haven't even thought of where it's like you pretty much need direct connection to the phone.</p><p>[00:17:13] Right. What I'm going to guess is at some point they're just going to add an API to HealthKit or StoreKit so that you can do that stuff directly on the watch. One of the other things I could see is how paranoid they kind of are about battery usage. I could see that being an issue because if you need to work directly connect with the server or to the cloud, you're going to need, it's going to need to use the wifi or cell connection in order to do that.</p><p>[00:17:41] And you can't just depend on Bluetooth for it, which I'm assuming that's what they want most apps to do is they'd rather they directly use bluetooth as often as they can, just to say battery, essentially. </p><p>[00:17:54] <strong>Gary Sabo (Guest): </strong>Yeah, I agree. And I think, I mean, is it, is it realistic to think of the watches as an independent, you know, an independent device that would substitute and iPhone, you know, I mean, maybe you, you know, maybe in the future we'll have iPads where, you know, when we don't want to scroll through Instagram, but maybe, you know, Siri and, um, maybe, you know, the watch plus AirPods you know, would be robust enough that you could basically use voice dictation to basically do you know all the commands and all the input with text fields that you would normally do on your iPhone. </p><p>[00:18:31] <strong>Leo Dion (Host): </strong>I think that's where they liked that the direction to go, whether it's there now. Yeah. I'm not so sure.</p><p>[00:18:37] But I could, I know there'd be people, no, like I could see kids especially being like just giving them a watch that no iPhone and doing it that way. It's sort of like an iPod touch substitute in a lot of ways. </p><p>[00:18:50] <strong>Gary Sabo (Guest): </strong>Yeah. I have told people that that I think 50 years from now will be looked back, is the generation that always, you know, had our head head down looking at our phone and cause I think when you know glasses are finally a thing and it just going to seem that we were cave men, the way we walk around looking at our friends, </p><p>[00:19:09] <strong>Leo Dion (Host): </strong>Like look a like one of those like 80s shows where they have like the big ginormous, a satellite phone in the car. </p><p>[00:19:18] yeah, and I think like especially with the class is like the other thing, like totally outside of the subject of the Apple Watch, but like the other Friday on the wall is like ARKit, ARKit or like the constantly want to talk about that every year.</p><p>[00:19:33] You can  kind of tell like glasses or some sort of augmented reality display is on their horizon at some point. </p><p>[00:19:41] <strong>Gary Sabo (Guest): </strong>Yeah. I think a lot of us as iOS developers, I mean, I know I haven't delved into ARKit too much, but I think we're always kind of keeping it in the back of our heads because as soon as they announced the glasses, then there's going to be this huge opportunity and we're all going to become, you know, AR experts.</p><p>[00:19:59] <strong>Leo Dion (Host): </strong>Exactly. Yeah. I think the other thing, um, speaking of Swift UI, which is kind of the elephant in the room when it comes to WWDC, is, uh, looking at like the use cases of SwiftUI. I don't think. Like we've kind of discussed SwiftUI isn't perfect everywhere, but where I think it's a really good fit is on the watch.</p><p>[00:20:19] Like I think that is probably, if you're going to develop a watch app and you're going to develop a UI and almost seems like SwiftUI would be the first place to start and rather than like a lot of people want to just jump to the Mac and build their perfect Mac app in SwiftUI using Catalyst. I think honestly like Swifty wise, a good fit for the watch if there's anywhere else. </p><p>[00:20:40] <strong>Gary Sabo (Guest): </strong>That's what I was thinking too. It seems as far as the first place that you would want to like demo it, I think it would be a watch app to kind of reminds me of the stack view. If you remember how the stack view kind of started in WatchKit and then it was ported over to the iPhone.</p><p>[00:20:56] <strong>Leo Dion (Host): </strong>Yeah, exactly. </p><p>[00:20:57] <strong>Gary Sabo (Guest): </strong>The only thing that, and I'm sure I'm just, it's early days, but it's just hard to imagine. Given, you know, when you watch the demos, you know how it's going to be as customizable as storyboards are. I mean, storyboard is almost like having, you know, an art board and sketch. I mean, you could basically literally make it look like anything.</p><p>[00:21:18] Whereas it seems like the SwiftUI is pretty constrained. And again, I'm sure there's going to be a way, I just, I'm interested, how are we going to get there.</p><p>[00:21:26] <strong>Leo Dion (Host): </strong>Yeah. I'd almost say like the problem across the board with storyboards. Has it been that you can't do anything but more of the responsiveness and especially when you have like big development teams, the storyboards end up being kind of a pain in the neck.</p><p>[00:21:42] We did a podcast episodes a few weeks ago and it was the guys with test driven development and one of the terms that they kept using was source of true - source of truth. And it was funny cause then I watched WWDC and they're talking about SwiftUI and like they keep mentioning source of truth, and I was like, that's it.</p><p>[00:22:01] That we've talked about that. And like that's one of the issues was with storyboards is what you see is an exactly matching up with what. You're going to end up on your device. And like as far as like previews, I'm having issues right now, but obviously it's in beta. I think like that's where it's going to be super powerful is like your Declaritive UI is going to actually match up with what you see in the preview and it's actually going to match up with what you see on an actual device.</p><p>[00:22:28] I think that's where where the real, a lot of the benefits come from with SwiftUI like it's actually consistent. It actually works out. Whereas dealing with auto layout, dealing with size classes, there's always a little bit of ambiguity that something isn't going to work out quite like you'd thought.</p><p>[00:22:45] <strong>Gary Sabo (Guest): </strong>That was something else that maybe made sense to me. I have always heard, I've always heard, cause obviously I'm an independent developers. The storyboards for me are great, but in a team environment with merge conflicts and that sort of thing, that it can be tricky. But the other thing was, it makes sense to me.</p><p>[00:22:59] I don't, I don't know about you Leo, but just lately, maybe the past year or so, I mean I have a new Mac Book Pro with 32 gig of memory, but some of my complex iPhone UI, um, where I have, you know, maybe stack views embedded five or six deep and I get the beach ball. Just trying to move around the view. </p><p>[00:23:19] <strong>Leo Dion (Host): </strong>Yup. Yeah. </p><p>[00:23:20] <strong>Gary Sabo (Guest): </strong>I think maybe that's the other thing is that, you know, as, as we get even more complex than that, you're not gonna be able to do that. And that's where Swift UI maybe makes a lot more sense. </p><p>[00:23:30] <strong>Leo Dion (Host): </strong>Yeah. And that was looking at somebody who has been testing out SwiftUI versus just doing direct cocoa touch stuff and like it is a lot faster based on some of the early stuff.</p><p>[00:23:41] It just seems like it's much better at handling that. I don't know if they've somehow integrated Metal in with it or what, but it seems like it's a lot more optimized as opposed to the storyboards and some of the other older stuff in UIKit, </p><p>[00:23:54] <strong>Gary Sabo (Guest): </strong>which makes sense. I mean, right. Storyboards and interface builder date back to next. It's built in XML. Right? </p><p>[00:24:04] <strong>Leo Dion (Host): </strong>Yeah. XML. Nobody has figured out how to crack. </p><p>[00:24:09] <strong>360iDev Sponsorship Begin</strong>As you may have heard, I will be speaking at 360 iDev in Denver on August 27th. If you're a developer in the Apple platform, you should highly consider attending this year.  360iDev is a leading indie iOS, Mac, Apple Watch, and tvOS developer conference in the United States.</p><p>[00:24:27] And it's a great way to meet others in the community. Just go to 360idev.com and here's the promo code <em>friends in high places</em> to get 20% off. Again, this is 360idev.com and the promo code <em>friends in high places</em>. I'm looking forward to seeing you there. </p><p>[00:24:45]<strong>360iDev Sponsorship End<br></strong><br></p><p>[00:24:45] So what, like based on everything you saw at WWDC, what do you think is the difference or do you think there's been a big improvement or a bigger opportunity now to develop apps for the Apple Watch as opposed to like say a year or like two years ago?</p><p>[00:25:04] <strong>Gary Sabo (Guest): </strong>I think maybe the most interesting announcement was this Apple Watch App Store. And again, that's something that. Conceptually, I'm not sure how it will play out whether people will want to buy or, you know, maybe we'll be like, Message Apps and how that, I don't think that's really caught on the way Apple thought it would.</p><p>[00:25:20] I mean, as far as from a developers' perspective, I don't know about you, but just anecdotally. It seems like everywhere I go, no matter what generation, I've seen more and more Apple Watches. </p><p>[00:25:31] <strong>Leo Dion (Host): </strong>Yes, that's definitely been the case over the last year or two. </p><p>[00:25:34] <strong>Gary Sabo (Guest): </strong>Yeah, and I don't know what their sales numbers are, but it seems like they're doing well.</p><p>[00:25:40] Especially in the health and fitness. I mean, I think when, you know, when the Apple Watch originally came out, we didn't really understand how it was going to be used. We thought maybe we'd want to read tweets and read Instagram and read Facebook on it. Turned out that wasn't the case. It's just that we want, you know, we want notifications from it and we want to track our health and fitness.</p><p>[00:25:59] I mean, maybe there's, there's additional use cases that we're not thinking of. I think I'm fortunate in the health and fitness section/sector. You know that consumers are willing to download third party apps for the watch. But I know a lot of people who you know are not in none as much in the health and fitness.</p><p>[00:26:17] They're pretty happy with just the Apple Watches, some kind of stock apps. </p><p>[00:26:22] <strong>Leo Dion (Host): </strong>Yeah, and I also think you get a lot with the existing iOS notifications on the Apple Watch that you almost don't need a lot of custom app as far as for notifications. </p><p>[00:26:34] <strong>Gary Sabo (Guest): </strong>Right. But then, you know, thinking ahead now that you can build an independent watch app, you know, is there some use case and with SwiftUI, which is another thing to consider, I haven't played around with it yet on the watch, but it was a big limitation and not having like a core graphics and those sorts of API on the watch that you can make, you know, sort of the beautiful graphics that you could on the, on the iPhone. So. You know, with independent watch apps, is there some use case that is still yet to surface that we're not thinking of that will be an opportunity for developers? </p><p>[00:27:08] <strong>Leo Dion (Host): </strong>Well, let's just look at like health care. Do you think that there's still a lot of room in health care and fitness for more apps? Obviously, like you've developed a set of apps for various specific workouts. Do you think that's going to continue to grow. </p><p>[00:27:22] <strong>Gary Sabo (Guest): </strong>I think so. I mean, if just me personally, um, you know, and I have this line of track gaps, I would like to reach out and cover all the sports.</p><p>[00:27:31] I mean, I know there's existing, there's a very good tennis tracking app on the tennis player, and I know there are golf apps, but, um, I'm sure there's even more, you know, sort of obscure niche type sports. I mean, in fact, I think a buddy, a friend of mine showed me one for kayaking. It was a good looking, you know, dedicated app to track your kayaking on your watch. </p><p>[00:27:54] <strong>Leo Dion (Host): </strong>that's awesome. </p><p>[00:27:55] <strong>Gary Sabo (Guest): </strong>That's another thing is like, and I'm sure there's, you know, even sports more obscure than kayaking that I'm not thinking of, but when your market is in the world, who does that activity? You know? I'm sure there's an opportunity there, </p><p>[00:28:09] <strong>Leo Dion (Host): </strong>And with more and more owners of the Apple Watch, you're going to find a cross section of folks who are owners of the Apple Watch can play those obscure sports we don't think about </p><p>[00:28:19] <strong>Gary Sabo (Guest): </strong>Exactly like, another area I would like to get into next is, you know, football, lacrosse, those types of sports. But yeah, that's probably. Yeah, more resolution I guess is how I look at that. You know, was kind of you, the first line of apps for the run trackers and now you know, they're starting to get into those more obscure sports.</p><p>[00:28:40] Something that just popped into my head is, is there a like a B2B or a commercial space for the watch? I don't know if there's any, yeah. I don't know if there's anything like this now, but I remember on my uncle works in the accessibility field and I told him just an idea I had about if you had, say, like a, um, a non-sighted, um, employee and you can use the watch, you know, to get them to their desk every day, you know, if it's a big building or something like that just as an example, and you might be, you might be able to do that with the existing accessibility. </p><p>[00:29:15] <strong>Leo Dion (Host): </strong>Yeah. I've had this discussion with other developers, just how, like the haptic feedback stuff. Is it really taken advantage of on the watch? And that would be like a great example of that is like being able to feel kind of where you are, where you're located um, it seems like it would be a good fit, I think. Like with B2B. Yeah, location stuff. Anything having to do with GPS would be helpful on the Apple Watch. Besides of course, health and fitness. And you say where you need like more advance notifications. That would be really convenient on the Apple Watch.</p><p>[00:29:50] And I'm trying to, trying to think of what other industries could really take advantage of having such a small, convenient device like that. </p><p>[00:29:57] <strong>Gary Sabo (Guest): </strong>Yeah, I agree. Uh,  I remember too, I was treated about a year ago. I actually, ironically enough broke my ankle playing hockey, but my doctor had an Apple Watch and I asked her about it.</p><p>[00:30:08] And she said, do you mostly use it for, you know, her calendar, but, um, I'm sure, I mean, I don't know much about, you know, how hospitals work, but, you know, maybe if the nurses or the PA's, you know, contract where that doctor is, what room she's in, you know, maybe that would be helpful or something like that.</p><p>[00:30:28] <strong>Leo Dion (Host): </strong>Yeah. What's that term called for like indoor GPS? Cause that's definitely, I think something that's going to continue to grow. I wish I could remember what that term is called, but yeah, I think that'd be another spot or, yeah. And then you got something having to do with beacons. I don't even know if that API is still open at all, but there's a lot that can be done in those areas.</p><p>[00:30:47] Have you seen anything as far as WWDC is concerned when it comes to other updates to HealthKit or fitness or new APIs with workouts? </p><p>[00:30:56] <strong>Gary Sabo (Guest): </strong>Yeah, I'll be honest. I was actually moving, I went through a move and the week of WWDC, so I wasn't watching it live, and then I went in after and looked at all the videos and I was like, okay, let me check out all the health get videos.</p><p>[00:31:08] And there was one, I was like, wow, you know, cause last year I think there was like six. Then it's like five. </p><p>[00:31:17] I did the whole blog post about how working sessions work and it's like there was a lot, there was a lot of big improvements last year to workouts and HealthKit. Well, </p><p>[00:31:27] I think that's good though.</p><p>[00:31:28] You know, as a developer, you get a little bit of time to breathe and not have to play catch up so much this year. But, um, so it's that, it's the class on, um, I know HKQuantitySeriesSampleBuilder is in it, and it talks about sequencing. So I've watched that a few times, and I know, I think it's just sort of, um. tweaks as far as sort of the resolution. I think their, their, their example is if you're querying for heart rates, traditionally every heart rate object has the device type on it. Whereas if you now use this HKQuantitySeries, you can just get the timestamp and the value and not have to get that redundant device type every time was that their example that they used? Yeah. I think overall from health point of view, the big changes were last year, and this year is kind of a catch up here. </p><p>[00:32:22] <strong>Leo Dion (Host): </strong>Yeah, I agree. As far as like the workout stuff, I think it's more pushing folks to build apps for a future where the Apple Watch is essentially not no longer needed with, with an iPhone at the same time.</p><p>[00:32:34] And I think that's the big emphasis. And then of course with UI, like basically overhauling the way, you know, the use of WatchKit for building the UI. I think that was the big message this year with WOTC and the watch. </p><p>[00:32:46] <strong>Gary Sabo (Guest): </strong>One thing that has sort of been a maddening problem for me as a third party developer is that you cannot modify an HKWorkout.</p><p>[00:32:55] You, um, you know, if you, cause every HKworkout has, you know, it's associated data. You know, it's distance. Heart rates actually are not associated with a workout, but it's distance. It's calories. But then it also has metadata, which you can basically package anything you want and that metadata, but you can't modify a workout.</p><p>[00:33:15] And I'm sure Apple has their reasons, but what you're forced to do this dance anytime, you know, say the, the user wants to add a note to a workout. Well, I have to make a copy of the current workout, add the new note field to it. Save that new updated workout and then delete the old one and just, I'm not sure why, but um, you get a lot of errors back from Apple.</p><p>[00:33:41] It's an object. It's actually object filled the fine object for deletion whenever you tried to delete it. And I've had that problem for a long time. And if you Google around Strava, I think has the exact same problem because users complain in on iOS about duplicate workouts. And that's really, I think what the problem is, is because when you try to add something to a workout or receive it and you don't delete the old, you end up with a duplicate.</p><p>[00:34:06] So that was something that I was kind of hoping to get solved. And if I have whatever attend WWDC, that'd be a great question for. Um, but, um, but yeah, there was nothing that I heard that would solve that issue for me. </p><p>[00:34:21] <strong>Leo Dion (Host): </strong>What do you see as other APIs you think are missing for the Apple Watch or specifically HealthKit?</p><p>[00:34:30] <strong>Gary Sabo (Guest): </strong>I think HealthKit gets very robust. I'm excited about where they're going as far as the integration of, you know, they're partnering with some of the bigger hospitals and now you can pull down your data from your providers now into the cloud. Okay. Yeah. And it's a third party developer, you know, to me, there's, there's opportunity there because now you have actual help.</p><p>[00:34:50] Obviously you have to be sensitive with it and obviously Apple is going to require the appropriate authorizations, but provided you get it and you'd probably mid probably an amazing use cases. You know, and, and opportunities for third, third party developers. But one thing that is limiting, I think, is that it is only available on the iPhone and the Watch.</p><p>[00:35:08] So when we talk about, you know, marzipan, to me, that was never super realistic about it because until HealthKit is available on the Mac or on the iPad, you know, I can't really build my apps on those platforms. </p><p>[00:35:20] <strong>Leo Dion (Host): </strong>How is HealthKit stuff. Yeah, I always am uncertain. Is some health stuff in the cloud or is it all on device or how does that work exactly?</p><p>[00:35:32] <strong>Gary Sabo (Guest): </strong>It's cloud based. </p><p>[00:35:32] <strong>Leo Dion (Host): </strong>Okay. It is cloud-based. </p><p>[00:35:34] <strong>Gary Sabo (Guest): </strong>It's at a high level, </p><p>[00:35:36] <strong>Leo Dion (Host): </strong>so technically it would be feasible to have that data available on the Mac or on an iPad. </p><p>[00:35:42] <strong>Gary Sabo (Guest): </strong>Well, I think the problem is, I mean, just like, you know, nuts and bolts from a developer, you couldn't open up, Oh, well, just on the iPad for example, you have to, before you perform your authorization, you have to make sure the device that HealthKit is available, and that's where you, that's where you would fail on the iPad.</p><p>[00:36:00] Right. And then, I'm not even sure, you know, under under AppKit how it would work, but I would guess like, you know, you'd go to import health kit and it would find no module, you know, or something like that. </p><p>[00:36:11] <strong>Leo Dion (Host): </strong>But I mean, like, they don't have, like the data is in the cloud. It's just a matter of them providing some sort of library or module or framework essentially to access that data.</p><p>[00:36:21] <strong>Gary Sabo (Guest): </strong>Maybe that's underway and you know, we just haven't heard about it, but it's obviously a big part of Apple's, um, you know, API APIs. So when they talk about wanting to, you know, with one click push apps from the iPad to, to the Mac, it seems like it's a big segment of apps that they can. You know, it's just an easy tweak on their end to make that data available.</p><p>[00:36:43] <strong>Leo Dion (Host): </strong>Yep. Yeah, I agree. </p><p>[00:36:45] <strong>Gary Sabo (Guest): </strong>Cause I know my users would love, I mean, think about it on a 12.9 in giant pad pro to see, you know, your data from your workout graph. It would be beautiful. </p><p>[00:36:53] <strong>Leo Dion (Host): </strong>Yeah, that's exactly what I'm thinking is like you want to see that that data on the iPad, maybe the Mac would be the next spot, maybe the web, and I think it would be great to have that stuff available cause it's visualization.</p><p>[00:37:04] That's where a lot of this workout stuff is super helpful is being able to visualize it and see it. Do you think that there's going to be a new watch this year? </p><p>[00:37:15] <strong>Gary Sabo (Guest): </strong>That's a good question. So we just had the series for, I guess that was last year. I'm not sure their release cycle isn't, it seems like it's every two years.</p><p>[00:37:23] <strong>Leo Dion (Host): </strong>Is it okay? </p><p>[00:37:24] <strong>Gary Sabo (Guest): </strong>I think just improving the sensors. I know sometimes, like you know, my users, for example. They'll say, Hey, um, you know, I had a, you know, I was playing soccer and it said I ran 35 miles per hour. And I don't think that's possible, you know, say, well, my app isn't really taking the, you know, taking the reading it's the Apple Watch sensors and you know, we're still at the infancy of wearable technology. So I think over time the sensors will just get more accurate. I don't know if it's ever been thought about, but just a simple use case. I've always wanted to know, like either body temperature or room temperature, you know, adding in their mom and or in the watch.</p><p>[00:38:01] <strong>Leo Dion (Host): </strong>I agree completely. I think that would be great. Humid, witty, stuff like that. Cause I think they, a lot of it they think, Oh you can just depend on like the web just kind of tell you a local temperature. Like sometimes it's nice to have room temperature and like body temperature and stuff like that as well.</p><p>[00:38:17] Obviously can go down the whole rabbit hole of like all those sensors. Like diabetes, I think is a super huge market. I think that they want to crack. We know that there's been reports about that and some of the other stuff, like blood alcohol levels, I could see them working on that somehow without having to, you know, do anything to poke, to poke a person essentially.</p><p>[00:38:42] <strong>Gary Sabo (Guest): </strong>That's actually something I'm very interested in and I think it's sorta like the glasses, you know, whenever that is to get, you know, whenever technology is able to catch up there and we are able to store to access the blood, I mean, obviously Theranos in everybody's mind, but if something akin to Theranos that was actually worked, you know, it could be possible, </p><p>[00:39:04] <strong>Leo Dion (Host): </strong>not just smoke and mirrors.</p><p>[00:39:06] <strong>Gary Sabo (Guest): </strong>Right. Exactly. And I wouldn't surprise me of Apple, you know, was the first one to figure it out. If there's some way that you could, you know, just get enough blood to be able to analyze it. You just think, to me, that's where HealthKit, that's where the future is going to be, is that I don't think cancers are necessarily going to, you know, quote unquote cure it.</p><p>[00:39:25] But I think if we have 24/7 monitoring of blood markers, like the instant that that cancer begins to develop, if you could start to treat for it instead of having to wait six months for your next checkup. Yeah, no, I think that's really where we'll start to be able to fight these diseases better.</p><p>[00:39:45] <strong>Leo Dion (Host): </strong>Yeah, I agree completely, and I think that's kind of where the long tail future, the longterm future of the Apple Watch will be is a lot of the other health kits stuff that's so, so important to people stay at where he lives. Gary, thank you so much for coming on. Anything else you want to talk about before we close out?</p><p>[00:40:05] <strong>Gary Sabo (Guest): </strong>The only other thing I had in my notes was - I haven't got to watch it yet, but just looking through that site, I said, I'll post it in the notes, but it was a talk called good developer habits. It looks really good, so I'm excited to check that out. </p><p>[00:40:18] <strong>Leo Dion (Host): </strong>Yeah, that sounds awesome. We'll post that in the notes as well.</p><p>[00:40:22] Are you on Twitter or how can people get ahold of you? </p><p>[00:40:26] <strong>Gary Sabo (Guest): </strong>Sure. My company is Myndarc LLC, so if you wanted to check out any of my apps, you can just go Google the app store in mind Ark, M, Y N, B, a R C. And then I'm @GarySabo on Twitter </p><p>[00:40:39] <strong>Leo Dion (Host): </strong>Awesome. And then if folks want to get ahold of me, you can find my company @brightdigit, brightdigit.com it's @brightdigit on Twitter and Instagram and BrightDigit on Facebook.</p><p>[00:40:53] I am looking for new contract work, so if you are a company that needs help. With building a custom iOS app or a watch up, especially in the way the Apple Watch has been growing and becoming more and more powerful. Definitely reach out to me. You can reach me, leo@brightdigit.com. Gary, thank you so much for coming on the show.</p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li>
<a href="https://twitter.com/garysabo">Gary Sabo</a><ul>
<li><a href="https://apps.apple.com/us/developer/myndarc-llc/id979588062">‎MyndArc, LLC Apps on the App Store</a></li>
<li><a href="https://join.slack.com/t/healthkitdevelopers/shared_invite/enQtMzEyOTg1NTk2MDY2LWJlMjc5ZWE1ZjNhMTdlNzk3MTQ4Y2EyYzg4ZmRkODdmNTU1NDMyYjhkMjNmNDAxY2NlZjZlMTE2OGJhOTJiMjE">HealthKit Slack</a></li>
</ul>
</li></ul><p><b>Previous Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/eddb8632">Unit Testing Episode</a></li>
<li><a href="https://share.transistor.fm/s/82709349">Apple Watch Series 4</a></li>
</ul><p><b>Sponsors</b></p><p><a href="https://360idev.com/">360|iDev- August 25 - 28th - Denver, CO</a></p><ul>
<li>The Leading indie iOS/Mac (and watchOS, and tvOS) Developer conference</li>
<li>It’s all about Community and Code!</li>
<li>Four days of hands-on training, amazing sessions, and the great community. All Swift.</li>
</ul><p>Use the promo code <strong>FriendsInHighPlaces </strong>to get <a href="https://360idev.com/#tile_registration">20% off registration.<br></a><br></p><p><a href="https://www.patreon.com/empowerappsshow"><strong>We have an opening for sponsors and patrons</strong></a><strong> </strong></p><ul><li>Do you have a product or service which can target our ever growing community of developers as well as technology and business leaders? <a href="https://brightdigit.com/contact/">Contact me today if you are interested</a> or <a href="https://www.patreon.com/empowerappsshow">join our Patreon</a>.</li></ul><p><b>Thoughts on WWDC</b></p><ul>
<li>
<strong>SwiftUI and the slow demise of Storyboards</strong><ul>
<li><a href="https://twitter.com/gruber/status/1014490721909444608">Gruber’s rumor about Declarite Programming</a></li>
<li>Swift and the slow demise of Objective-C</li>
</ul>
</li>
<li>
<a href="https://github.com/Blackjacx/WWDC#whats-new-in-swift"><strong>Github Repo on Talks</strong></a><ul>
<li><a href="https://developer.apple.com/videos/play/wwdc2019/218/">Exploring New Data Representations in HealthKit - WWDC 2019 - Videos - Apple Developer</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2019/219/">SwiftUI on watchOS - WWDC 2019 - Videos - Apple Developer</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2019/208/">Creating Independent Watch Apps - WWDC 2019 - Videos - Apple Developer</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2019/239/">Great Developer Habits - WWDC 2019 - Videos - Apple Developer</a></li>
</ul>
</li>
<li><a href="https://github.com/Juanpe/About-Swifr"><strong>Github Repo on SwiftUI</strong></a></li>
<li>
<a href="https://www.economist.com/babbage/2012/07/13/youve-been-sherlocked">You’ve been sherlocked - Operating systems</a><ul>
<li><a href="https://apps.apple.com/us/app/hockeytracker/id1297971760">‎HockeyTracker on the App Store</a></li>
<li>Gear Towards Your Specific Audience</li>
<li>Specific Activities with specific metrics</li>
</ul>
</li>
</ul><p><b>Independent Apple Watch Apps</b></p><ul>
<li><strong>Why does Apple Watch apps need iPhone app counterparts?</strong></li>
<li>
<strong>iPhone Counterparts of Apple Watch</strong> workout apps are for visualization</li>
<li><strong>Slow Deprecation of WatchConnectivity</strong></li>
<li>How do you <strong>syncing certain data between Apple Watch and iPhone?</strong><ul><li>HealthKit ,StoreKit, etc…</li></ul>
</li>
<li>What’s the <strong>position of the iPhone in the future</strong> with AR and the Apple Watch?</li>
<li>
<strong>SwiftUI</strong> on the Apple Watch</li>
<li>The new <strong>Apple Watch App Store</strong>
</li>
</ul><p><b>Where’s the Focus of the Apple Watch</b></p><ul>
<li><strong>Health and Fitness - Niche Fitness</strong></li>
<li><strong>Advanced Notifications</strong></li>
<li>
<strong>Location Tracking</strong> - GPS and Indoor Positioning System (Indoor GPS)</li>
<li><strong>Accessibility and Haptic Feedback</strong></li>
<li>
<strong>More Sensors</strong> in the Future?</li>
</ul><p><b>Maturity of HealthKit</b></p><ul>
<li>Lacking <strong>Inability to Edit</strong>
</li>
<li><strong>Apple Partnering with Health Companies</strong></li>
<li><strong>Allowing HealthKit on iPad and macOS?</strong></li>
</ul><p><b>Social Media</b></p><p><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a></p><p><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a></p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a></p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a><br><a href="https://www.patreon.com/empowerappsshow">Patreon - empowerappsshow</a></p><p><b>Complete Transcription</b></p><p><strong>Leo Dion (Host): </strong>Hey Gary, how's it going? </p><p>[00:00:01] <strong>Gary Sabo (Guest): </strong>Doing well, Leo, how are you doing? </p><p>[00:00:02] <strong>Leo Dion (Host): </strong>Good. Good. So what were your thoughts from WWDC? </p><p>[00:00:07] <strong>Gary Sabo (Guest): </strong>Boy, so much. I think like a lot of people, just my immediate reaction was this with UI. I didn't hear rumors. I mean, I heard maybe I heard something about, you know, declarative framework, but I didn't expect that.</p><p>[00:00:18] And sort of the, what seems to be the eventual abandonment of the storyboard. So yeah, that was the biggest shock to me. </p><p>[00:00:26] <strong>Leo Dion (Host): </strong>We had some rumors about like declarative programming. I think Gruber had talked about that, but people were just kind of like, not making it as big of a deal about it because I think everybody was like marzipan, marzipan, marzipan.</p><p>[00:00:38] Right. And then it's like the project catalyst is kind of an afterthought. It's like, Holy crap, they're replacing the entire UI. Framework UI kit. I think it's still vibrant. I don't think it's dead by any means, because they've made some major improvements. It looks like to the way table views and even more so collection views are done, but you can kind of see the writings on the </p><p>[00:01:01] <strong>Gary Sabo (Guest): </strong>wall.</p><p>[00:01:02] <strong>Leo Dion (Host): </strong>Yeah, it's like Swift. It's like Swift four years or a . It's like, yeah, I mean objective is going to be here for awhile. It's going to be forever, quite frankly. But like that's called Swift UI. It's not called objective-C UI for specific reason. </p><p>[00:01:18] <strong>Gary Sabo (Guest): </strong>Right. And obviously companies have existing code bases, and if you were just starting out today, I still don't think I'd dive into Swift UI yet.</p><p>[00:01:27] You know, companies are going to need to support their existing projects for years, </p><p>[00:01:31] <strong>Leo Dion (Host): </strong>and somebody who's been playing around with it for two weeks. Yeah. Don't. I don't suggest jumping into it right now. </p><p>[00:01:38] <strong>Gary Sabo (Guest): </strong>Yeah. And it's still in beta, so keep that in mind as well. </p><p>[00:01:42] <strong>Leo Dion (Host): </strong>Very much so. Yeah. It was a big year. It's probably the biggest WWDC since Swift was introduced.</p><p>[00:01:49] We can safely say. </p><p>[00:01:50] <strong>Gary Sabo (Guest): </strong>I haven't gotten through all the talks. There's a github repo that I found or came across that kind of lists bullet points of the talks just so you don't have to invest the full 40 minutes. You can kind of just see if it's what you're interested in. So I've been going through that and just, I've been starting with obviously the ones that are most near and dear to me, like the WatchKit the Healthkit.</p><p>[00:02:11] But yeah, it seems like there's a lot to unpack. The combine is another thing there. Their foundation API. I didn't have a chance to watch that one yet either. And just like you said, Swift UI, there's I think five or six talks just on that, you know, and integration and stuff like that. </p><p>[00:02:27] <strong>Leo Dion (Host): </strong>Yeah. Post the link to that git hub repo. It'd be great to share. There was a git hub repo that had a list of Swift UI, a blog posts and tutorials. I mean, I know folks like Ray Wenderlich, paul Hudson already has like put some books they are pre-selling on it, but, there's some really great like tutorials there too that we can post those links in the notes.</p><p>[00:02:50] <strong>Gary Sabo (Guest): </strong>Okay. </p><p>[00:02:51]<strong>Sponsorship Sponsorship<br></strong><br></p><p>[00:02:51] <strong>Leo Dion (Host): </strong>Hey, I wanted to let you know, that empowerapps.show Is looking for sponsors and patrons. Our audience is growing and we'd love to showcase you, your company and your product on our show. If you want to be a patron, you can find us at https://www.patreon.com/empowerappsshow or if you want it to be a sponsor, reach out to me personally at leo@brightdigit.com your support is greatly appreciated and we look forward to showcasing your business and product on our show.</p><p>[00:03:20]<strong>Sponsorship Sponsorship End<br></strong><br></p><p>[00:03:20] One thing I wanted to talk about was, I think as two male developers we don't appreciate is like this new cycle tracking  feature. I think that's a big deal to a lot of folks, especially women. Cause I know like my wife and I just take it personal we dealt with infertility for about five years and we had like these stickers and like a binder, like a whole whole kit to track this stuff.</p><p>[00:03:49] And it was a pain in the neck. And then my wife, you know, who's probably not as techie as I am pretty techie, found this really great app. And she used it for a while, and then we had found that the app ended up getting taken down because of it was using the system with the same name and they didn't like that.</p><p>[00:04:09] So the, the folks who have that tracking system ended up giving them like a takedown notice and it really sucked. So,  it's really good that Apple has kind of like jumped in and kickstarted this stuff. Because I think it's going to help a lot of people, not just going to infertility, but for a variety of reasons or health reasons that women have.</p><p>[00:04:30] <strong>Gary Sabo (Guest): </strong>It's that classic, you know, Apple Sherlocking someone, right? And it sucks if you're the developer, but usually as when Apple chooses to take something into their space, it's usually benefits, you know, obviously asked the consumer so. </p><p>[00:04:44] <strong>Leo Dion (Host): </strong>Yeah. Like I think with a lot of sherlocking stuff, it's inevitable. Like anybody who builds a business around an action under sand, like Apple could always Sherlock it.</p><p>[00:04:53] It's about making yourself valuable enough that folks who are really into it, like they're going to download one of your great workout apps or they're going to download one of the Dave Smith's workout apps or something like that because it takes it to the next level. Whereas like Apple stuff is quite frankly, free.</p><p>[00:05:13] I think it also just gives some guidance to developers like, Oh, that's pretty cool. You can do this, and built on top of it. </p><p>[00:05:20] <strong>Gary Sabo (Guest): </strong>It's finding a niche that you know, in the space it like, just for example, like one of my apps HockeyTracker, I mean, conceivably Apple could have, some sort of custom hockey tracking part of their workout app.</p><p>[00:05:32] And I mean, my thought is mine goes down to the level that it, like tracks shifts during the hockey game. So like, you know, it knows whether you're on the bench or whether you're on the ice and then puts that number tells you how many shifts you had and what you know with the lengths were and things like that.</p><p>[00:05:48] It's kind of that level of detail that you think might be too, too zoomed in for an Apple app, which, knock on wood makes me think that I'm safe with that app but,I know what you're saying. And the other one too, isn't at some point, I think they're taking on sleep tracking. </p><p>[00:06:05] <strong>Leo Dion (Host): </strong>Oh yeah, for sure. I think that's definitely down the line.</p><p>[00:06:08] Either they're gonna, what do they call it, acqui-hire one of the great apps, or they're going to just make one their own. </p><p>[00:06:14] <strong>Gary Sabo (Guest): </strong>Yeah. Which makes total sense. I mean, obviously the watch, I mean, that's, I think that's one of the key. Probably use cases people use it for. </p><p>[00:06:22] <strong>Leo Dion (Host): </strong>Yeah. I use one. I think they're really helpful.</p><p>[00:06:25] Yeah. It's just a matter of understanding of that as part of part of your business. So maybe now's a good opportunity Gary for you to introduce yourself. What, what's your specialty when it comes to the Apple Watch and health kit and workouts? Sure. </p><p>[00:06:42] <strong>Gary Sabo (Guest): </strong>I began in 2014. Right. I'm self taught. So traditionally, I'm an attorney and when school would be an attorney, went to law school, but I'm self taught programmer.</p><p>[00:06:51] So when Swift was announced, that's when I jumped in. I had a little bit of coding experience before then, but that was really when I started building apps and, um, you know, releasing products into the store. And over time  basically just because I had ideas, I had their existing things that I wanted to do with my phone that they weren't possible.</p><p>[00:07:09] So I thought, well, I'll figure out how to do it in building myself and you know, how my own need and then maybe if somebody else is interested, you know, make a dollar or two. So over time I built a, some weather apps and apps on top of the Pinterest SDK a game based on the Twilight zone. </p><p>[00:07:25] I'm a hockey player and I think it was maybe two, two and a half years ago. I didn't even think about, you know, using my, I, I've had the Apple Watch series zero, but I never really thought about using it in hockey. And then one of my teammates was using it in the locker room and said that, Oh yeah, you could just start, you know, an Apple, an Apple Watch workout app.</p><p>[00:07:46] And then at the end of it, you could label it as hockey. Which to me, you know, it was just kind of a generic workout and then you just kind of name it hockey. And I was like, Hmm, I wonder if, um, you know, there's some space to build a custom hockey app. </p><p>[00:08:02] So it's the best thing I did, which really helped me was I posted in a hockey player Reddit and said, Hey, you know, I'm gonna, I'm an iOS developer, I've done watch app development before, and I had this idea and I got a lot of support from that community, and I was able to build a beta version of the app and then use those same Reddit members to transition them into a Slack community where, you know, they're able to like, you know, give me feature ideas or give me feedback.</p><p>[00:08:32] And to this day I still, you know, when I make a change in that app, I'll put up a poll on the Slack and have them vote on it. So it's usually driven. And so that's really been my focus the last two years. That hockey tracker app is kind of my flagship. Um, I've also done one for soccer, so it's soccer tracker, and I'm just most recently another app called sex tracker, which is kind of the same, along the same lines as tracking your metrics or VOT max and heart rates and that, but for instance, intimacy.</p><p>[00:09:03] <strong>Leo Dion (Host): </strong>Interesting. Is it mostly branding that separates the apps, or is it, what are some of the specific features that each app might have? </p><p>[00:09:15] <strong>Gary Sabo (Guest): </strong>Well, yeah, good example. So for example, in hockey, you know, you had this concept of a shift and then you also, over time, I think there are eight or nine different session types.</p><p>[00:09:26] So. You know, you could use it as a goalie, you could use it per pick up for an open scape. There's a coach mode. Um, there's a rough mode. And then you also, my focus of each of these apps have always been health and fitness and metrics, but you could also add your score, score the game, how many goals you scored, how many assists, if you're a goalie, how many shots against, and those sorts of things.</p><p>[00:09:48] And then there's a note section. Yeah. I mean, the biggest thing is just, you know, hockey is kind of. The algorithms that I built and everything are geared toward, you know, being on the ice. Again, the shifts where as soccer is, you know, more toward running. You don't have shifts. Some of them are the same. I mean, they track distance, they track speed.</p><p>[00:10:08] I try to do a lot with heart rates. One of the big things, the big features over the past, well I would say six months that I added is an effort level that's based on your time spent in the various heart rate zones. So if like if my max heart rate is, say 190. And you know, I've spend, so some of my top zone might be, you know, 170 to 190 and if I spend more time in that zone during the course of a game than my effort level is higher and things like that.</p><p>[00:10:39] I mean, you know, there are only so many metrics you have. It's just different ways of sort of packaging them and sort of analyzing that data for the user. </p><p>[00:10:48] <strong>Leo Dion (Host): </strong>Very cool. Yeah. I feel like there's so much potential with, with HealthKit and workout stuff. It's interesting the story with the Apple Watch being, we've gone from sending your friends heart rates and heart rates, but what was it called?</p><p>[00:11:04] I can't remember. Like your your  heart beating to like. Now it's pretty much predominantly a workout app or workout device, I should say, and it's, it seems like Apple is really starting to focus on that. Um, I made the leap. I foolishly made the leap to iOS 13 and watch OS 6 week on my primary devices.</p><p>[00:11:29] So I'm a fool don't do that. </p><p>[00:11:30] <strong>Gary Sabo (Guest): </strong>Does it seem stable so far?</p><p>[00:11:33] <strong>Leo Dion (Host): </strong>Yeah, it seems fine. iOS 13 is by no means perfect, but there, there's almost an enough issues in iOS 12 where it's like, how bad can it be? And I'd already put it on my iPads and my spare iPhone and I didn't have any major issues, so I was like, you know what?</p><p>[00:11:50] I'm just going to put it on the primary device. Let's just, usually it's not that big of a deal and it hasn't been, so now, yesterday I was just playing around on the watch. They have that noise detection feature which is really cool, like I don't know if you know what I'm talking about, but where like it'll detect if it's too loud.</p><p>[00:12:10] And if it is too loud, it, it will let you know, uh, so that you don't damage your hearing over the longterm. That's a pretty sweet feature. Like I'm amazed that they'd finally, you know, it was like, I wish I had thought of that. So, yeah. And it, to me, just looking at some of the stuff with WWDC, I think the other thing that the writing is on the wall is that the watch is going to be an independent device. </p><p>[00:12:38] I don't know what your thoughts are, but it seems like that's where we're going, especially with the way we're trying to no longer do you have to have watch app  packaged as a iOS app extension, but now it can be packaged as a separate app and now you got the app store on the watch and things like that.</p><p>[00:12:56] <strong>Gary Sabo (Guest): </strong>Yeah. But as far as the, um, the independent watch apps. Yeah. I mean, that's what I've really been thinking about that for the past few weeks and what that means and what type of opportunities that's going to present. I think just my existing apps and what they do might not be a great use case because.</p><p>[00:13:15] You know, they track, they use the watch to track and get your raw data, and they do display some UI. But then the iPhone is just a bigger screen and there's so much room to present, like we just talked about, you know, these charts of data. So I'm not sure that like those health and fitness apps are the best example.</p><p>[00:13:33] But one thing that immediately came to mind is one of my first ever apps was um. a commission, like I do real estate law, so a commission calculator for a real estate agent because, um, it was just a simple app, but you know where you type in the sales price and it tells you, okay, well the split with the buyer agent is maybe 3.5 and then maybe you pay a 20% referral to another agent and then maybe you're split with your broker is 50% and I actually had to, this was the first iteration of the watch, but actually had to build a calculator actually via the emoji digits and that's, yeah, that's how I ended up building it. But you know, I got it working and everything on the watch and then I was like, Oh, well to ship this, I had to build this kind of, you know, just generic iPhone app and basically do the same thing that, you know, it wasn't even the point of the app.</p><p>[00:14:22] The point was to have it on your watch. So something like that. It was a great example where, you know,  I probably spent another week building the iPhone part of it that you wouldn't even need now. </p><p>[00:14:33] <strong>Leo Dion (Host): </strong>Yeah, I totally agree. I think when it comes to fitness apps, the watch is exclusively used for tracking and maybe like sending up a workout.</p><p>[00:14:42] Well, a lot of the features of a typical workout or health app come from the fact that you can visualize it on the actual phone, because again, you can't really look at your reports on a, on a watch very easily. So yeah, I totally agree with that. It's also interesting with me trying to make the watch independent.</p><p>[00:15:00] They're kind of not deprecating watch connectivity, but more like saying, you really don't need it, I don't if they're trying to get you to kind of use cloud kit or some other server apparatus to communicate with the phone. Was that your impression? </p><p>[00:15:21] <strong>Gary Sabo (Guest): </strong>Yeah, that I had heard that as well.</p><p>[00:15:24] So maybe it's just implied. You know, that if you have an independent watch Apple, you wouldn't need to call out to the phone. To me, the devil is going to have to be in the details of that. A quick example is my apps. Um, if you, for whatever reason, I'm sure, I'm sure there's a reason, um, as far as CPU use or something like that.</p><p>[00:15:44] But if you query HealthKit on the watch for the user's body mass. You only get anything they've entered within the past seven days. You queried on the watch you get, I mean, on the iPhone, you get as far back as HealthKit started. I use that. I use that body mass and some of my calculations. So that's an area where I use watch connectivity because I have to call out, you know, wake up the phone.</p><p>[00:16:08] Make the phone query for the body mass and then send it back to the watch. So you know for them, for them to deprecate watch connectivity. For me, they need to update HealthKit to be able to make that full, you know, HealthKit call. </p><p>[00:16:22] <strong>Leo Dion (Host): </strong>Yeah, that's a really good point. Like how I think HealthKit, I'm first trying to think what else.</p><p>[00:16:27] But what other API APIs you'd want to directly connect with the iPhone with? But it seems like HealthKit would be the primary one where it's like the HealthKit data on the watch and the HealthKit data on the phone are not in sync. </p><p>[00:16:39] <strong>Gary Sabo (Guest): </strong>Right. Something else that came to mind. My apps currently don't do this, but if you want to put your watch up behind the paywall, there is no StoreKit on the watch.</p><p>[00:16:48] So if you want to check whether someone's, um, subscription-based app, whether they. Their subscriptions expired or, or not. Um, you need to use watch connectivity can be to that to call out to the phone and parse the receipt or something like that. </p><p>[00:17:04] <strong>Leo Dion (Host): </strong>Yeah, there you go. Yeah, and I'm sure there's going to be a ton of other API APIs we haven't even thought of where it's like you pretty much need direct connection to the phone.</p><p>[00:17:13] Right. What I'm going to guess is at some point they're just going to add an API to HealthKit or StoreKit so that you can do that stuff directly on the watch. One of the other things I could see is how paranoid they kind of are about battery usage. I could see that being an issue because if you need to work directly connect with the server or to the cloud, you're going to need, it's going to need to use the wifi or cell connection in order to do that.</p><p>[00:17:41] And you can't just depend on Bluetooth for it, which I'm assuming that's what they want most apps to do is they'd rather they directly use bluetooth as often as they can, just to say battery, essentially. </p><p>[00:17:54] <strong>Gary Sabo (Guest): </strong>Yeah, I agree. And I think, I mean, is it, is it realistic to think of the watches as an independent, you know, an independent device that would substitute and iPhone, you know, I mean, maybe you, you know, maybe in the future we'll have iPads where, you know, when we don't want to scroll through Instagram, but maybe, you know, Siri and, um, maybe, you know, the watch plus AirPods you know, would be robust enough that you could basically use voice dictation to basically do you know all the commands and all the input with text fields that you would normally do on your iPhone. </p><p>[00:18:31] <strong>Leo Dion (Host): </strong>I think that's where they liked that the direction to go, whether it's there now. Yeah. I'm not so sure.</p><p>[00:18:37] But I could, I know there'd be people, no, like I could see kids especially being like just giving them a watch that no iPhone and doing it that way. It's sort of like an iPod touch substitute in a lot of ways. </p><p>[00:18:50] <strong>Gary Sabo (Guest): </strong>Yeah. I have told people that that I think 50 years from now will be looked back, is the generation that always, you know, had our head head down looking at our phone and cause I think when you know glasses are finally a thing and it just going to seem that we were cave men, the way we walk around looking at our friends, </p><p>[00:19:09] <strong>Leo Dion (Host): </strong>Like look a like one of those like 80s shows where they have like the big ginormous, a satellite phone in the car. </p><p>[00:19:18] yeah, and I think like especially with the class is like the other thing, like totally outside of the subject of the Apple Watch, but like the other Friday on the wall is like ARKit, ARKit or like the constantly want to talk about that every year.</p><p>[00:19:33] You can  kind of tell like glasses or some sort of augmented reality display is on their horizon at some point. </p><p>[00:19:41] <strong>Gary Sabo (Guest): </strong>Yeah. I think a lot of us as iOS developers, I mean, I know I haven't delved into ARKit too much, but I think we're always kind of keeping it in the back of our heads because as soon as they announced the glasses, then there's going to be this huge opportunity and we're all going to become, you know, AR experts.</p><p>[00:19:59] <strong>Leo Dion (Host): </strong>Exactly. Yeah. I think the other thing, um, speaking of Swift UI, which is kind of the elephant in the room when it comes to WWDC, is, uh, looking at like the use cases of SwiftUI. I don't think. Like we've kind of discussed SwiftUI isn't perfect everywhere, but where I think it's a really good fit is on the watch.</p><p>[00:20:19] Like I think that is probably, if you're going to develop a watch app and you're going to develop a UI and almost seems like SwiftUI would be the first place to start and rather than like a lot of people want to just jump to the Mac and build their perfect Mac app in SwiftUI using Catalyst. I think honestly like Swifty wise, a good fit for the watch if there's anywhere else. </p><p>[00:20:40] <strong>Gary Sabo (Guest): </strong>That's what I was thinking too. It seems as far as the first place that you would want to like demo it, I think it would be a watch app to kind of reminds me of the stack view. If you remember how the stack view kind of started in WatchKit and then it was ported over to the iPhone.</p><p>[00:20:56] <strong>Leo Dion (Host): </strong>Yeah, exactly. </p><p>[00:20:57] <strong>Gary Sabo (Guest): </strong>The only thing that, and I'm sure I'm just, it's early days, but it's just hard to imagine. Given, you know, when you watch the demos, you know how it's going to be as customizable as storyboards are. I mean, storyboard is almost like having, you know, an art board and sketch. I mean, you could basically literally make it look like anything.</p><p>[00:21:18] Whereas it seems like the SwiftUI is pretty constrained. And again, I'm sure there's going to be a way, I just, I'm interested, how are we going to get there.</p><p>[00:21:26] <strong>Leo Dion (Host): </strong>Yeah. I'd almost say like the problem across the board with storyboards. Has it been that you can't do anything but more of the responsiveness and especially when you have like big development teams, the storyboards end up being kind of a pain in the neck.</p><p>[00:21:42] We did a podcast episodes a few weeks ago and it was the guys with test driven development and one of the terms that they kept using was source of true - source of truth. And it was funny cause then I watched WWDC and they're talking about SwiftUI and like they keep mentioning source of truth, and I was like, that's it.</p><p>[00:22:01] That we've talked about that. And like that's one of the issues was with storyboards is what you see is an exactly matching up with what. You're going to end up on your device. And like as far as like previews, I'm having issues right now, but obviously it's in beta. I think like that's where it's going to be super powerful is like your Declaritive UI is going to actually match up with what you see in the preview and it's actually going to match up with what you see on an actual device.</p><p>[00:22:28] I think that's where where the real, a lot of the benefits come from with SwiftUI like it's actually consistent. It actually works out. Whereas dealing with auto layout, dealing with size classes, there's always a little bit of ambiguity that something isn't going to work out quite like you'd thought.</p><p>[00:22:45] <strong>Gary Sabo (Guest): </strong>That was something else that maybe made sense to me. I have always heard, I've always heard, cause obviously I'm an independent developers. The storyboards for me are great, but in a team environment with merge conflicts and that sort of thing, that it can be tricky. But the other thing was, it makes sense to me.</p><p>[00:22:59] I don't, I don't know about you Leo, but just lately, maybe the past year or so, I mean I have a new Mac Book Pro with 32 gig of memory, but some of my complex iPhone UI, um, where I have, you know, maybe stack views embedded five or six deep and I get the beach ball. Just trying to move around the view. </p><p>[00:23:19] <strong>Leo Dion (Host): </strong>Yup. Yeah. </p><p>[00:23:20] <strong>Gary Sabo (Guest): </strong>I think maybe that's the other thing is that, you know, as, as we get even more complex than that, you're not gonna be able to do that. And that's where Swift UI maybe makes a lot more sense. </p><p>[00:23:30] <strong>Leo Dion (Host): </strong>Yeah. And that was looking at somebody who has been testing out SwiftUI versus just doing direct cocoa touch stuff and like it is a lot faster based on some of the early stuff.</p><p>[00:23:41] It just seems like it's much better at handling that. I don't know if they've somehow integrated Metal in with it or what, but it seems like it's a lot more optimized as opposed to the storyboards and some of the other older stuff in UIKit, </p><p>[00:23:54] <strong>Gary Sabo (Guest): </strong>which makes sense. I mean, right. Storyboards and interface builder date back to next. It's built in XML. Right? </p><p>[00:24:04] <strong>Leo Dion (Host): </strong>Yeah. XML. Nobody has figured out how to crack. </p><p>[00:24:09] <strong>360iDev Sponsorship Begin</strong>As you may have heard, I will be speaking at 360 iDev in Denver on August 27th. If you're a developer in the Apple platform, you should highly consider attending this year.  360iDev is a leading indie iOS, Mac, Apple Watch, and tvOS developer conference in the United States.</p><p>[00:24:27] And it's a great way to meet others in the community. Just go to 360idev.com and here's the promo code <em>friends in high places</em> to get 20% off. Again, this is 360idev.com and the promo code <em>friends in high places</em>. I'm looking forward to seeing you there. </p><p>[00:24:45]<strong>360iDev Sponsorship End<br></strong><br></p><p>[00:24:45] So what, like based on everything you saw at WWDC, what do you think is the difference or do you think there's been a big improvement or a bigger opportunity now to develop apps for the Apple Watch as opposed to like say a year or like two years ago?</p><p>[00:25:04] <strong>Gary Sabo (Guest): </strong>I think maybe the most interesting announcement was this Apple Watch App Store. And again, that's something that. Conceptually, I'm not sure how it will play out whether people will want to buy or, you know, maybe we'll be like, Message Apps and how that, I don't think that's really caught on the way Apple thought it would.</p><p>[00:25:20] I mean, as far as from a developers' perspective, I don't know about you, but just anecdotally. It seems like everywhere I go, no matter what generation, I've seen more and more Apple Watches. </p><p>[00:25:31] <strong>Leo Dion (Host): </strong>Yes, that's definitely been the case over the last year or two. </p><p>[00:25:34] <strong>Gary Sabo (Guest): </strong>Yeah, and I don't know what their sales numbers are, but it seems like they're doing well.</p><p>[00:25:40] Especially in the health and fitness. I mean, I think when, you know, when the Apple Watch originally came out, we didn't really understand how it was going to be used. We thought maybe we'd want to read tweets and read Instagram and read Facebook on it. Turned out that wasn't the case. It's just that we want, you know, we want notifications from it and we want to track our health and fitness.</p><p>[00:25:59] I mean, maybe there's, there's additional use cases that we're not thinking of. I think I'm fortunate in the health and fitness section/sector. You know that consumers are willing to download third party apps for the watch. But I know a lot of people who you know are not in none as much in the health and fitness.</p><p>[00:26:17] They're pretty happy with just the Apple Watches, some kind of stock apps. </p><p>[00:26:22] <strong>Leo Dion (Host): </strong>Yeah, and I also think you get a lot with the existing iOS notifications on the Apple Watch that you almost don't need a lot of custom app as far as for notifications. </p><p>[00:26:34] <strong>Gary Sabo (Guest): </strong>Right. But then, you know, thinking ahead now that you can build an independent watch app, you know, is there some use case and with SwiftUI, which is another thing to consider, I haven't played around with it yet on the watch, but it was a big limitation and not having like a core graphics and those sorts of API on the watch that you can make, you know, sort of the beautiful graphics that you could on the, on the iPhone. So. You know, with independent watch apps, is there some use case that is still yet to surface that we're not thinking of that will be an opportunity for developers? </p><p>[00:27:08] <strong>Leo Dion (Host): </strong>Well, let's just look at like health care. Do you think that there's still a lot of room in health care and fitness for more apps? Obviously, like you've developed a set of apps for various specific workouts. Do you think that's going to continue to grow. </p><p>[00:27:22] <strong>Gary Sabo (Guest): </strong>I think so. I mean, if just me personally, um, you know, and I have this line of track gaps, I would like to reach out and cover all the sports.</p><p>[00:27:31] I mean, I know there's existing, there's a very good tennis tracking app on the tennis player, and I know there are golf apps, but, um, I'm sure there's even more, you know, sort of obscure niche type sports. I mean, in fact, I think a buddy, a friend of mine showed me one for kayaking. It was a good looking, you know, dedicated app to track your kayaking on your watch. </p><p>[00:27:54] <strong>Leo Dion (Host): </strong>that's awesome. </p><p>[00:27:55] <strong>Gary Sabo (Guest): </strong>That's another thing is like, and I'm sure there's, you know, even sports more obscure than kayaking that I'm not thinking of, but when your market is in the world, who does that activity? You know? I'm sure there's an opportunity there, </p><p>[00:28:09] <strong>Leo Dion (Host): </strong>And with more and more owners of the Apple Watch, you're going to find a cross section of folks who are owners of the Apple Watch can play those obscure sports we don't think about </p><p>[00:28:19] <strong>Gary Sabo (Guest): </strong>Exactly like, another area I would like to get into next is, you know, football, lacrosse, those types of sports. But yeah, that's probably. Yeah, more resolution I guess is how I look at that. You know, was kind of you, the first line of apps for the run trackers and now you know, they're starting to get into those more obscure sports.</p><p>[00:28:40] Something that just popped into my head is, is there a like a B2B or a commercial space for the watch? I don't know if there's any, yeah. I don't know if there's anything like this now, but I remember on my uncle works in the accessibility field and I told him just an idea I had about if you had, say, like a, um, a non-sighted, um, employee and you can use the watch, you know, to get them to their desk every day, you know, if it's a big building or something like that just as an example, and you might be, you might be able to do that with the existing accessibility. </p><p>[00:29:15] <strong>Leo Dion (Host): </strong>Yeah. I've had this discussion with other developers, just how, like the haptic feedback stuff. Is it really taken advantage of on the watch? And that would be like a great example of that is like being able to feel kind of where you are, where you're located um, it seems like it would be a good fit, I think. Like with B2B. Yeah, location stuff. Anything having to do with GPS would be helpful on the Apple Watch. Besides of course, health and fitness. And you say where you need like more advance notifications. That would be really convenient on the Apple Watch.</p><p>[00:29:50] And I'm trying to, trying to think of what other industries could really take advantage of having such a small, convenient device like that. </p><p>[00:29:57] <strong>Gary Sabo (Guest): </strong>Yeah, I agree. Uh,  I remember too, I was treated about a year ago. I actually, ironically enough broke my ankle playing hockey, but my doctor had an Apple Watch and I asked her about it.</p><p>[00:30:08] And she said, do you mostly use it for, you know, her calendar, but, um, I'm sure, I mean, I don't know much about, you know, how hospitals work, but, you know, maybe if the nurses or the PA's, you know, contract where that doctor is, what room she's in, you know, maybe that would be helpful or something like that.</p><p>[00:30:28] <strong>Leo Dion (Host): </strong>Yeah. What's that term called for like indoor GPS? Cause that's definitely, I think something that's going to continue to grow. I wish I could remember what that term is called, but yeah, I think that'd be another spot or, yeah. And then you got something having to do with beacons. I don't even know if that API is still open at all, but there's a lot that can be done in those areas.</p><p>[00:30:47] Have you seen anything as far as WWDC is concerned when it comes to other updates to HealthKit or fitness or new APIs with workouts? </p><p>[00:30:56] <strong>Gary Sabo (Guest): </strong>Yeah, I'll be honest. I was actually moving, I went through a move and the week of WWDC, so I wasn't watching it live, and then I went in after and looked at all the videos and I was like, okay, let me check out all the health get videos.</p><p>[00:31:08] And there was one, I was like, wow, you know, cause last year I think there was like six. Then it's like five. </p><p>[00:31:17] I did the whole blog post about how working sessions work and it's like there was a lot, there was a lot of big improvements last year to workouts and HealthKit. Well, </p><p>[00:31:27] I think that's good though.</p><p>[00:31:28] You know, as a developer, you get a little bit of time to breathe and not have to play catch up so much this year. But, um, so it's that, it's the class on, um, I know HKQuantitySeriesSampleBuilder is in it, and it talks about sequencing. So I've watched that a few times, and I know, I think it's just sort of, um. tweaks as far as sort of the resolution. I think their, their, their example is if you're querying for heart rates, traditionally every heart rate object has the device type on it. Whereas if you now use this HKQuantitySeries, you can just get the timestamp and the value and not have to get that redundant device type every time was that their example that they used? Yeah. I think overall from health point of view, the big changes were last year, and this year is kind of a catch up here. </p><p>[00:32:22] <strong>Leo Dion (Host): </strong>Yeah, I agree. As far as like the workout stuff, I think it's more pushing folks to build apps for a future where the Apple Watch is essentially not no longer needed with, with an iPhone at the same time.</p><p>[00:32:34] And I think that's the big emphasis. And then of course with UI, like basically overhauling the way, you know, the use of WatchKit for building the UI. I think that was the big message this year with WOTC and the watch. </p><p>[00:32:46] <strong>Gary Sabo (Guest): </strong>One thing that has sort of been a maddening problem for me as a third party developer is that you cannot modify an HKWorkout.</p><p>[00:32:55] You, um, you know, if you, cause every HKworkout has, you know, it's associated data. You know, it's distance. Heart rates actually are not associated with a workout, but it's distance. It's calories. But then it also has metadata, which you can basically package anything you want and that metadata, but you can't modify a workout.</p><p>[00:33:15] And I'm sure Apple has their reasons, but what you're forced to do this dance anytime, you know, say the, the user wants to add a note to a workout. Well, I have to make a copy of the current workout, add the new note field to it. Save that new updated workout and then delete the old one and just, I'm not sure why, but um, you get a lot of errors back from Apple.</p><p>[00:33:41] It's an object. It's actually object filled the fine object for deletion whenever you tried to delete it. And I've had that problem for a long time. And if you Google around Strava, I think has the exact same problem because users complain in on iOS about duplicate workouts. And that's really, I think what the problem is, is because when you try to add something to a workout or receive it and you don't delete the old, you end up with a duplicate.</p><p>[00:34:06] So that was something that I was kind of hoping to get solved. And if I have whatever attend WWDC, that'd be a great question for. Um, but, um, but yeah, there was nothing that I heard that would solve that issue for me. </p><p>[00:34:21] <strong>Leo Dion (Host): </strong>What do you see as other APIs you think are missing for the Apple Watch or specifically HealthKit?</p><p>[00:34:30] <strong>Gary Sabo (Guest): </strong>I think HealthKit gets very robust. I'm excited about where they're going as far as the integration of, you know, they're partnering with some of the bigger hospitals and now you can pull down your data from your providers now into the cloud. Okay. Yeah. And it's a third party developer, you know, to me, there's, there's opportunity there because now you have actual help.</p><p>[00:34:50] Obviously you have to be sensitive with it and obviously Apple is going to require the appropriate authorizations, but provided you get it and you'd probably mid probably an amazing use cases. You know, and, and opportunities for third, third party developers. But one thing that is limiting, I think, is that it is only available on the iPhone and the Watch.</p><p>[00:35:08] So when we talk about, you know, marzipan, to me, that was never super realistic about it because until HealthKit is available on the Mac or on the iPad, you know, I can't really build my apps on those platforms. </p><p>[00:35:20] <strong>Leo Dion (Host): </strong>How is HealthKit stuff. Yeah, I always am uncertain. Is some health stuff in the cloud or is it all on device or how does that work exactly?</p><p>[00:35:32] <strong>Gary Sabo (Guest): </strong>It's cloud based. </p><p>[00:35:32] <strong>Leo Dion (Host): </strong>Okay. It is cloud-based. </p><p>[00:35:34] <strong>Gary Sabo (Guest): </strong>It's at a high level, </p><p>[00:35:36] <strong>Leo Dion (Host): </strong>so technically it would be feasible to have that data available on the Mac or on an iPad. </p><p>[00:35:42] <strong>Gary Sabo (Guest): </strong>Well, I think the problem is, I mean, just like, you know, nuts and bolts from a developer, you couldn't open up, Oh, well, just on the iPad for example, you have to, before you perform your authorization, you have to make sure the device that HealthKit is available, and that's where you, that's where you would fail on the iPad.</p><p>[00:36:00] Right. And then, I'm not even sure, you know, under under AppKit how it would work, but I would guess like, you know, you'd go to import health kit and it would find no module, you know, or something like that. </p><p>[00:36:11] <strong>Leo Dion (Host): </strong>But I mean, like, they don't have, like the data is in the cloud. It's just a matter of them providing some sort of library or module or framework essentially to access that data.</p><p>[00:36:21] <strong>Gary Sabo (Guest): </strong>Maybe that's underway and you know, we just haven't heard about it, but it's obviously a big part of Apple's, um, you know, API APIs. So when they talk about wanting to, you know, with one click push apps from the iPad to, to the Mac, it seems like it's a big segment of apps that they can. You know, it's just an easy tweak on their end to make that data available.</p><p>[00:36:43] <strong>Leo Dion (Host): </strong>Yep. Yeah, I agree. </p><p>[00:36:45] <strong>Gary Sabo (Guest): </strong>Cause I know my users would love, I mean, think about it on a 12.9 in giant pad pro to see, you know, your data from your workout graph. It would be beautiful. </p><p>[00:36:53] <strong>Leo Dion (Host): </strong>Yeah, that's exactly what I'm thinking is like you want to see that that data on the iPad, maybe the Mac would be the next spot, maybe the web, and I think it would be great to have that stuff available cause it's visualization.</p><p>[00:37:04] That's where a lot of this workout stuff is super helpful is being able to visualize it and see it. Do you think that there's going to be a new watch this year? </p><p>[00:37:15] <strong>Gary Sabo (Guest): </strong>That's a good question. So we just had the series for, I guess that was last year. I'm not sure their release cycle isn't, it seems like it's every two years.</p><p>[00:37:23] <strong>Leo Dion (Host): </strong>Is it okay? </p><p>[00:37:24] <strong>Gary Sabo (Guest): </strong>I think just improving the sensors. I know sometimes, like you know, my users, for example. They'll say, Hey, um, you know, I had a, you know, I was playing soccer and it said I ran 35 miles per hour. And I don't think that's possible, you know, say, well, my app isn't really taking the, you know, taking the reading it's the Apple Watch sensors and you know, we're still at the infancy of wearable technology. So I think over time the sensors will just get more accurate. I don't know if it's ever been thought about, but just a simple use case. I've always wanted to know, like either body temperature or room temperature, you know, adding in their mom and or in the watch.</p><p>[00:38:01] <strong>Leo Dion (Host): </strong>I agree completely. I think that would be great. Humid, witty, stuff like that. Cause I think they, a lot of it they think, Oh you can just depend on like the web just kind of tell you a local temperature. Like sometimes it's nice to have room temperature and like body temperature and stuff like that as well.</p><p>[00:38:17] Obviously can go down the whole rabbit hole of like all those sensors. Like diabetes, I think is a super huge market. I think that they want to crack. We know that there's been reports about that and some of the other stuff, like blood alcohol levels, I could see them working on that somehow without having to, you know, do anything to poke, to poke a person essentially.</p><p>[00:38:42] <strong>Gary Sabo (Guest): </strong>That's actually something I'm very interested in and I think it's sorta like the glasses, you know, whenever that is to get, you know, whenever technology is able to catch up there and we are able to store to access the blood, I mean, obviously Theranos in everybody's mind, but if something akin to Theranos that was actually worked, you know, it could be possible, </p><p>[00:39:04] <strong>Leo Dion (Host): </strong>not just smoke and mirrors.</p><p>[00:39:06] <strong>Gary Sabo (Guest): </strong>Right. Exactly. And I wouldn't surprise me of Apple, you know, was the first one to figure it out. If there's some way that you could, you know, just get enough blood to be able to analyze it. You just think, to me, that's where HealthKit, that's where the future is going to be, is that I don't think cancers are necessarily going to, you know, quote unquote cure it.</p><p>[00:39:25] But I think if we have 24/7 monitoring of blood markers, like the instant that that cancer begins to develop, if you could start to treat for it instead of having to wait six months for your next checkup. Yeah, no, I think that's really where we'll start to be able to fight these diseases better.</p><p>[00:39:45] <strong>Leo Dion (Host): </strong>Yeah, I agree completely, and I think that's kind of where the long tail future, the longterm future of the Apple Watch will be is a lot of the other health kits stuff that's so, so important to people stay at where he lives. Gary, thank you so much for coming on. Anything else you want to talk about before we close out?</p><p>[00:40:05] <strong>Gary Sabo (Guest): </strong>The only other thing I had in my notes was - I haven't got to watch it yet, but just looking through that site, I said, I'll post it in the notes, but it was a talk called good developer habits. It looks really good, so I'm excited to check that out. </p><p>[00:40:18] <strong>Leo Dion (Host): </strong>Yeah, that sounds awesome. We'll post that in the notes as well.</p><p>[00:40:22] Are you on Twitter or how can people get ahold of you? </p><p>[00:40:26] <strong>Gary Sabo (Guest): </strong>Sure. My company is Myndarc LLC, so if you wanted to check out any of my apps, you can just go Google the app store in mind Ark, M, Y N, B, a R C. And then I'm @GarySabo on Twitter </p><p>[00:40:39] <strong>Leo Dion (Host): </strong>Awesome. And then if folks want to get ahold of me, you can find my company @brightdigit, brightdigit.com it's @brightdigit on Twitter and Instagram and BrightDigit on Facebook.</p><p>[00:40:53] I am looking for new contract work, so if you are a company that needs help. With building a custom iOS app or a watch up, especially in the way the Apple Watch has been growing and becoming more and more powerful. Definitely reach out to me. You can reach me, leo@brightdigit.com. Gary, thank you so much for coming on the show.</p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 28 Jul 2019 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/3d4c7634/09170915.mp3" length="18546595" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>2489</itunes:duration>
      <itunes:summary>In this episode we talk with Gary Sabo about the Apple Watch post-WWDC 2019. We talk about Independent Watch Apps,	Swift UI and watchOS 6,	HealthKit, Fitness apps and more.</itunes:summary>
      <itunes:subtitle>In this episode we talk with Gary Sabo about the Apple Watch post-WWDC 2019. We talk about Independent Watch Apps,	Swift UI and watchOS 6,	HealthKit, Fitness apps and more.</itunes:subtitle>
      <itunes:keywords>apple watch, health, wwdc 2019, fitness tracking, swift ui</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Subcontracting with Joe Cieplinski</title>
      <itunes:episode>17</itunes:episode>
      <itunes:title>Subcontracting with Joe Cieplinski</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">4d0d6472-ec86-48fd-ac81-9a7e0ae9b5ca</guid>
      <link>https://share.transistor.fm/s/b059197f</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li> <a href="https://joec.design">Joe Cieplinski</a> <ul>
<li><a href="https://twitter.com/jcieplinski">jcieplinski (@jcieplinski) - Twitter</a></li>
<li><a href="https://micro.blog/joec">Micro.blog - @joec</a></li>
<li><a href="https://recaf.app">RECaf - Effortless Caffeine Tracking</a></li>
<li><a href="https://releasenotes.tv">Release Notes | The Business of Online Businesses</a></li>
</ul>
</li></ul><p><b>Previous Episodes</b></p><ul><li><a href="https://share.transistor.fm/s/c2631188">Cross Platform Comparison with Rob Kerr</a></li></ul><p><b>Sponsors</b></p><p><a href="https://360idev.com"><strong>360|iDev</strong> - August 25 - 28th - Denver, CO</a></p><ul>
<li>The Leading indie iOS/Mac (and watchOS, and tvOS) Developer conference</li>
<li>It's all about Community and Code!</li>
<li>Four days of hands-on training, amazing sessions, and the great community. All Swift.</li>
</ul><p>Use the promo code <strong>FriendsInHighPlaces </strong>to get <a href="https://360idev.com/#tile_registration"><strong>20% off registration.</strong></a><strong></strong></p><p><a href="https://brightdigit.com"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><b>Thoughts on WWDC </b></p><ul>
<li><a href="https://joecieplinski.com/blog/2018/03/30/wwdc-on-a-budget/">WWDC on a Budget</a></li>
<li><a href="http://altconf.com">AltConf</a></li>
</ul><p><strong>Business + Developer Conferences</strong></p><ul>
<li><a href="http://peersconf.com">Peers Conference</a></li>
<li><a href="https://2019.releasenotes.tv">Release Notes 2019</a></li>
</ul><p><strong>Why Should You Be A Subcontractor?</strong></p><ul>
<li>
<strong>An Agency needs flexibility</strong> and an extra developer for a project</li>
<li>
<strong>An Agency needs a special expertise</strong> (i.e. HealthKit, WatchKit, etc…)</li>
<li>Fill a need for a particular platform and expertise (i.e. iOS) on team with other platform developers</li>
</ul><p><strong>Things to Consider for iOS Developers</strong></p><ul>
<li>
<strong>Have a portfolio and resume</strong> - help the agency sell you to other companies</li>
<li>
<strong>Be a </strong><a href="https://en.wikipedia.org/wiki/T-shaped_skills"><strong>T-shaped</strong></a><strong> developer</strong> - know the how to build an iOS app but also have a special expertise in an area</li>
<li>
<strong>Consider being a consultant</strong> - help build iOS development teams for companies while also making more money</li>
<li>
<strong>Know developers of other platforms -</strong> such as Android - if you can work with them then this provides even more value to the agency</li>
</ul><p><strong>Challenges of Being a Subcontractor</strong></p><ul>
<li>
<strong>Giving up Flexibility</strong> - you can be dropped at anytime because you only filling a role till a full-time employee is hired</li>
<li>
<strong>Communication and Management</strong> - Understood Your Role Within the Structure</li>
<li>
<strong>Don't Talk Money with Client Directly</strong> - Discussions on Money and Time should go though the agency always not directly with the client</li>
<li>
<strong>Don’t Sell Yourself as an Individual</strong> - remember you represent the agency</li>
<li>
<strong>Listen to the Team</strong> - Follow the agency and client’s protocols and guidelines such as their coding style, etc…</li>
</ul><p><strong>Speaking at 360|iDev</strong></p><ul>
<li><a href="https://360idev.com/sessions/when-a-simple-algorithm-will-do/">Joe’s Talk - <strong>When a Simple Algorithm will Do</strong></a></li>
<li><a href="https://360idev.com/sessions/the-multi-threaded-asynchronous-parallel-world-of-swift/">Leo’s Talk - <strong>The Multi-Threaded Asynchronous Parallel World of Swift</strong></a></li>
</ul><p><strong>Social Media</strong></p><p><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a>  <br><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a> </p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a> </p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a> </p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li> <a href="https://joec.design">Joe Cieplinski</a> <ul>
<li><a href="https://twitter.com/jcieplinski">jcieplinski (@jcieplinski) - Twitter</a></li>
<li><a href="https://micro.blog/joec">Micro.blog - @joec</a></li>
<li><a href="https://recaf.app">RECaf - Effortless Caffeine Tracking</a></li>
<li><a href="https://releasenotes.tv">Release Notes | The Business of Online Businesses</a></li>
</ul>
</li></ul><p><b>Previous Episodes</b></p><ul><li><a href="https://share.transistor.fm/s/c2631188">Cross Platform Comparison with Rob Kerr</a></li></ul><p><b>Sponsors</b></p><p><a href="https://360idev.com"><strong>360|iDev</strong> - August 25 - 28th - Denver, CO</a></p><ul>
<li>The Leading indie iOS/Mac (and watchOS, and tvOS) Developer conference</li>
<li>It's all about Community and Code!</li>
<li>Four days of hands-on training, amazing sessions, and the great community. All Swift.</li>
</ul><p>Use the promo code <strong>FriendsInHighPlaces </strong>to get <a href="https://360idev.com/#tile_registration"><strong>20% off registration.</strong></a><strong></strong></p><p><a href="https://brightdigit.com"><strong>BrightDigit</strong></a></p><ul>
<li>Specialize in helping businesses build apps for iPhone, iPad, Mac and Apple Watch</li>
<li>10 years of experience developing for a variety of Apple platform</li>
<li>Helping dev shops which lack experience with Apple platforms and Swift</li>
</ul><p><a href="https://brightdigit.com/contact/"><strong>Contact me if you need help today.</strong></a></p><p><b>Thoughts on WWDC </b></p><ul>
<li><a href="https://joecieplinski.com/blog/2018/03/30/wwdc-on-a-budget/">WWDC on a Budget</a></li>
<li><a href="http://altconf.com">AltConf</a></li>
</ul><p><strong>Business + Developer Conferences</strong></p><ul>
<li><a href="http://peersconf.com">Peers Conference</a></li>
<li><a href="https://2019.releasenotes.tv">Release Notes 2019</a></li>
</ul><p><strong>Why Should You Be A Subcontractor?</strong></p><ul>
<li>
<strong>An Agency needs flexibility</strong> and an extra developer for a project</li>
<li>
<strong>An Agency needs a special expertise</strong> (i.e. HealthKit, WatchKit, etc…)</li>
<li>Fill a need for a particular platform and expertise (i.e. iOS) on team with other platform developers</li>
</ul><p><strong>Things to Consider for iOS Developers</strong></p><ul>
<li>
<strong>Have a portfolio and resume</strong> - help the agency sell you to other companies</li>
<li>
<strong>Be a </strong><a href="https://en.wikipedia.org/wiki/T-shaped_skills"><strong>T-shaped</strong></a><strong> developer</strong> - know the how to build an iOS app but also have a special expertise in an area</li>
<li>
<strong>Consider being a consultant</strong> - help build iOS development teams for companies while also making more money</li>
<li>
<strong>Know developers of other platforms -</strong> such as Android - if you can work with them then this provides even more value to the agency</li>
</ul><p><strong>Challenges of Being a Subcontractor</strong></p><ul>
<li>
<strong>Giving up Flexibility</strong> - you can be dropped at anytime because you only filling a role till a full-time employee is hired</li>
<li>
<strong>Communication and Management</strong> - Understood Your Role Within the Structure</li>
<li>
<strong>Don't Talk Money with Client Directly</strong> - Discussions on Money and Time should go though the agency always not directly with the client</li>
<li>
<strong>Don’t Sell Yourself as an Individual</strong> - remember you represent the agency</li>
<li>
<strong>Listen to the Team</strong> - Follow the agency and client’s protocols and guidelines such as their coding style, etc…</li>
</ul><p><strong>Speaking at 360|iDev</strong></p><ul>
<li><a href="https://360idev.com/sessions/when-a-simple-algorithm-will-do/">Joe’s Talk - <strong>When a Simple Algorithm will Do</strong></a></li>
<li><a href="https://360idev.com/sessions/the-multi-threaded-asynchronous-parallel-world-of-swift/">Leo’s Talk - <strong>The Multi-Threaded Asynchronous Parallel World of Swift</strong></a></li>
</ul><p><strong>Social Media</strong></p><p><a href="https://twitter.com/brightdigit">Twitter - @brightdigit</a>  <br><a href="http://facebook.com/brightdigit">Facebook - BrightDigit</a> </p><p><a href="https://www.linkedin.com/company/bright-digit">LinkedIn - BrightDigit</a> </p><p><a href="https://www.instagram.com/brightdigit/">Instagram - @brightdigit</a> </p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 14 Jul 2019 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/b059197f/0d1b3a18.mp3" length="23786922" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>2465</itunes:duration>
      <itunes:summary>In this episode we talk with Joe Cieplinski of Breakpoint Studio and Release Notes about the challenges and benefits companies and freelancers face in a subcontracting relationship.</itunes:summary>
      <itunes:subtitle>In this episode we talk with Joe Cieplinski of Breakpoint Studio and Release Notes about the challenges and benefits companies and freelancers face in a subcontracting relationship.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Cross Platform Comparison with Rob Kerr</title>
      <itunes:episode>16</itunes:episode>
      <itunes:title>Cross Platform Comparison with Rob Kerr</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">f185d9f4-6e89-4969-a702-77328240b48c</guid>
      <link>https://share.transistor.fm/s/c2631188</link>
      <description>
        <![CDATA[<p><b>Guest</b></p><ul><li><a href="https://twitter.com/rekerrsive/"><strong>Rob Kerr - @rekerrsive</strong></a></li></ul><p><b>Why should companies go with a cross-platform solution?</b></p><ul>
<li>Consistent User Experience (whether that's a good idea or not)</li>
<li>Synchronicity in Code Base</li>
<li>Budget - Use existing team expertise </li>
</ul><p><b>What are the differences between cross-platform solutions?</b></p><ul>
<li>
<strong>Web Based</strong> - Cordova, Ionic, PhoneGap</li>
<li>
<strong>Bridging Solution </strong>- Flutter, React Native, NativeScript</li>
<li>
<strong>Language Based</strong> - Xamarin - Use C# to Call Native API</li>
</ul><p><b>What are the challenges with cross-platform solution?</b></p><ul>
<li>Dependent on Vendor Support<ul><li>Dev teams need to keep Cross-Platform Tooling up to date</li></ul>
</li>
<li>Using a Specific API (Metal, HealthKit, etc…) <ul><li>May not be supported by Cross-Platform Tool</li></ul>
</li>
<li>There may be instances such as UI - you want differences between devices</li>
</ul><p><b>Social Media</b></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter - @brightdigit<br></strong></a><a href="http://facebook.com/brightdigit"><strong>Facebook - BrightDigit</strong></a><strong><br></strong><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn - BrightDigit</strong></a><strong><br></strong><a href="https://www.instagram.com/brightdigit/"><strong>Instagram - @brightdigit</strong></a></p><p><b>Transcript</b></p><p>[00:00:00] <strong>Leo Dion (Host): </strong>Today with us. We have Rob Kerr. You want to go ahead and introduce yourself. </p><p>[00:00:05] <strong>Rob Kerr (Guest): </strong>My name is Rob Kerr. I'm a consultant working primarily in mobile platforms a lot of native development but more and more it's cross-platform with Xamarin, Flutter, and some other tools and I work with primarily business customers who are looking to deliver applications to both IOS and Android with the most efficient development process that they can experience.</p><p>[00:00:29] <strong>Leo Dion (Host): </strong>Awesome, really glad to have you on Rob. I've known you for three or four years now. It seems like. </p><p>[00:00:35] <strong>Rob Kerr (Guest): </strong>Something like that. </p><p>[00:00:37] <strong>Leo Dion (Host): </strong>Yeah, and we've met either at meetups or touch base every so often. So it sounds like recently you've been doing a lot of cross-platform development. And like I said, I have a little bit of experience with that of dabbled a little bit in Cordova as well.</p><p>[00:00:54] My bread-and-butter, my expertise is obviously Swift [that is] native Swift development. That's what I like to do. I think it has a lot of advantages but there could be situations like business reasons valid business reasons to go cross-platform, right? </p><p>[00:01:10] <strong>Rob Kerr (Guest): </strong>Yeah, I think so. And I think you and I have similar backgrounds in solutions as far as Apple. I've done a ton of native development in Swift and iOS and some on Android as well. Probably the last year or two a lot of my work has been cross platform and it's kind of driven by that business need or want to you know, hit both platforms efficiently. And currently in the IOS app store has you know about 1.8 million apps and the Play Store has about 2.1 million but the stats tell us that I think AppFigures had a study that only 450 thousand apps are truly cross platform where the same application is deployed in both platforms, which is you know, it's really small numbers less than 10 percent.</p><p>[00:01:54] And so when will you find is you know, Everyone would kind of like to be on both platforms at the same time, but not a lot of folks are or at least not not an efficient way. So in the past you mentioned Cordova and PhoneGap and probably five or six years ago that was almost the only game in town.</p><p>[00:02:11] But now this cross-platform frameworks are you know sprouting up quite a bit and all of the mega vendors offer something like Flutter or React Native or Xamarin from Microsoft. And so it's definitely coming into its own and there's certainly those those applications like business applications, especially where you need to have both platforms, but maybe don't want to fund building the app twice once for each so yeah, I think so.</p><p>[00:02:38] <strong>Leo Dion (Host): </strong>What are some situations where businesses should choose cross platform as opposed to a native? </p><p>[00:02:46] <strong>Rob Kerr (Guest): </strong>Yeah, that's a good question. And that's you know comes up a lot because the sort of the reasons not to usually drive into accessing very exotic APIs and things like that. In my mind if a business really wants to deliver on both platforms, especially if they like to do it at the same time that kind of tends toward cross-platform if you can particularly if the user experience they wanted to be the same on both platforms then using something cross-platform maybe doesn't mandate it but certainly makes it much likely that an application is going to work the same way so that when the support call comes in then you know somebody who needs to help a user doesn't have to think about you know, how does this work on Android how does this work on iOS. How's the potentially work on Windows? </p><p>[00:03:29] Then the obvious, you know elephant in the room is just budget. If you have to build the same application twice that costs, you know potentially twice as much typically usually other different teams that work on IOS and Android if they're done completely native.</p><p>[00:03:44] And then you know, you really have to think about in the long term how does that go into support cost? So if the application has to have a life cycle, new features that we added bugs need to be fixed, if they're written in two different languages than two platforms than that's something to think about so. As I think about it and on the consumer market, if you are going to develop an application to compete with one of Apple's native apps or Android and it needs to be really exotic, you know, cross-platform might not be the right choice for that.</p><p>[00:04:16] But for the vast majority of apps are content consumpution or business orientated and so on It's probably the majority of the leading cross-platform tools can deliver an app with the same user experience. So something to think about.</p><p>[00:04:33] <strong>Leo Dion (Host): </strong>It's funny you mention user experience. I would say that can be a benefit of cross-platform but also a hindrance in a lot of ways because like recently I was doing work with the client and they were really good about making sure that the user experience was actually different on both platforms precisely because of the expectations that certain like Android users have with their UI and Apple users have with their UI - there are definitely big differences. Specificly I'm just like thinking about like hamburger menus is like we don't have hamburger menus is very much on iOS and that's that's one of the jarring things is when you use a cross-platform app.</p><p>[00:05:18] It can be obvious and jarring when you're using an app that is built cross platform, but doesn't like take into account like the user experience differences between both platforms. </p><p>[00:05:33] <strong>Rob Kerr (Guest): </strong>Yeah, there's a little bit to unpack there because as I've worked with clients that you know, definitely wanted pixel-perfect identical experiences in both platforms.</p><p>[00:05:42] Now, you might argue that you shouldn't do that right and Google and Apple and tell you shouldn't do that because you're not following their conventions and that's a very valid argument, but the cross-platform tooling doesn't really dictate that you have to have that same experience on both platforms.</p><p>[00:05:58] <strong>Leo Dion (Host): </strong>Right. I think it really depends. It really depends on which cross-platform tool you're using </p><p>[00:06:05] <strong>Rob Kerr (Guest): </strong>It does but even on most of them, I mean you can implement something conditionally. So you say that you know, this is the view used on Android. That's the view used on iOS for example, if that's what you want.</p><p>[00:06:17] I don't think cross platform prevents that but conversely if you really want a very identical experience cross-platform probably enables it better than forcing a common UI paradigm into the two different native tools but your central point about you know, not deviating from the design aesthetic of iOS and how it works, you know, whether you want to use a tab view controller versus a hamburger menu is very valid point and an important design issue to think about.</p><p>[00:06:48] <strong>Leo Dion (Host): </strong>Yeah, that's interesting. I'm just kind of curious going a little bit more into that. What is the reasoning behind having a consistent experience </p><p>[00:06:58] <strong>Rob Kerr (Guest): </strong>UX? Yeah.</p><p>[00:06:59] <strong>Leo Dion (Host): </strong>Because your typical UX person would be like no no no, it should not act exactly the same way on every platform. Is that is that usually like an executive decision that's done despite how it's not the right decision? Or is it a business decision typically to do that. Like I'm just kind of curious about that. </p><p>[00:07:23] <strong>Rob Kerr (Guest): </strong>Yeah, because what I think you just said is you think designers would not want that. I've actually worked for designers that exactly wanted that so I think it depends on the thought leadership behind the app the.</p><p>[00:07:34] Most compelling I think business reason that I've heard is kind of from a support perspective that that an app is going out and then a support department needs to support it. And when a user wants to know well, how do I go into the settings menu? If it isn't the same then they need to know how to support it in both directions.</p><p>[00:07:53] So I think there's some degree of. Validity to that concern but I don't think it should override, you know, the overall user adoption and user satisfaction with the app. So even many iOS apps use hamburger menu is even though that's really not an iOS thing. </p><p>[00:08:08] <strong>Leo Dion (Host): </strong>I don't like hamburger menus </p><p>[00:08:11] <strong>Rob Kerr (Guest): </strong>on iOS</p><p>[00:08:12] you know, but a lot of apps do you use it and you know many Android apps will you know use tab bar instead completely and not even have that flyover menu. So I think though the kind of a point is that that you can do it differently or not do it differently. I don't think the cross platform tools necessarily corner you to have to use a lowest common denominator. But if that's in your intent, it's probably more and more efficient way to do it. </p><p>[00:08:41] <strong>Leo Dion (Host): </strong>Yeah, I could see how that might. I'm okay. If the decision is yeah, it's not a great user experience. We're willing to admit that for budgetary reasons. We we just want to like have a consistent experience. I totally get that but I like that makes total sense.</p><p>[00:08:55] But if it's like actually like no no we're going to make iOS users have this uncomfortable experience because we think it's better. It's like I don't know about that. </p><p>[00:09:06] <strong>Rob Kerr (Guest): </strong>Yeah, well, I would hope someone wouldn't want to like do it in order to give them an uncomfortable experience. </p><p>[00:09:12] <strong>Leo Dion (Host): </strong>Yeah, I don't mean like purposely but just like they actually think that they know the best way to design on an iPhone better than Apple does it's like or vice versa, right?</p><p>[00:09:21] Like that would be an uncomfortable conversation to have yeah, and when we're talking budget. I'll talk to people about the specific subject. There was a great talk last year. I went to in New York given by one of the guys at can't think of his name now Artsy and he talked about transitioning to React Native and how their team transition to React Native and it sounds like that decision was more based on the fact that they already have an existing experience with react.</p><p>[00:09:56] <strong>Rob Kerr (Guest): </strong>All right, </p><p>[00:09:57] <strong>Leo Dion (Host): </strong>and so it seems like when we talk budget, typically we're talking at what and we talked about this in a previous episode on back-end development. Like what your team is already comfortable with is going to be like the healthiest way rather than trying to like necessarily shove Swift or Objective-C in Xcode down their throats if they're not willing to make that sacrifice and training and hiring like it totally makes sense to like just already use what's already existing in your team in those cases. It's a sacrifice obviously because you're not going to get as good of an experience perhaps that specialize in different platforms. But in the end like it might be a way to like save some money is just hey, this team has great cohesion doing react and React Native. Let's just stick with that.</p><p>[00:10:44] <strong>Rob Kerr (Guest): </strong>Yeah, I mean you can't ignore the kind of what resources do you already have what things you're already know how to support if you're building a mobile application to complement a suite of Enterprise, you know other applications and that other team can eventually support the mobile have to because you use similar technology or you know, I mean that that's certainly a benefit and I think there's you know, that is an important factor to consider. So, you know you and I touched on Xamarin earlier and C# - It's XAML. </p><p>[00:11:14] If you use Xamarin forms, you know, it uses Visual Studio, you know, if you already have 50 people in your company that use all that kind of thing every day, then yeah that might make a lot of sense versus building a very small team that you know is specializing in Swift or Objective-C or Java.</p><p>[00:11:32] If you lose one of those folks then you're in a lot of pain because you have to replace them. And I think you if you look across like what cross-platform tools different people advocate is very often the technology, they already know. So, you know web oriented folks will typically advocate, you know, kind of a phonegap or you know, react or ionic because you know, they're familiar with those those tools already.</p><p>[00:11:57] The Microsoft shops probably going to be very interested in Xamarin because it's very C# orientated. Flutter is really gaining a lot of traction from Google and it runs with Dart underneath which which which doesn't really have an installed base some you know, so we'll see where that goes but on some of those other ones, you know, absolutely if you have folks had already have those 80% of the skills. They need to build the app. That might make a lot of sense. </p><p>[00:12:25] <strong>Leo Dion (Host): </strong>What are some of the differences between the different cross-platform solutions because I know some are kind of like basically like your Cordova is essentially taking a bunch of HTML and JavaScript and CSS and building it into an app within a container some like React Native and Xamarin might just take whatever language you prefer and essentially like rebuild it into a actual binary and may include like some sort of library so that I can run what are the main differences between these different cross-platform solutions? </p><p>[00:13:00] <strong>Rob Kerr (Guest): </strong>I think it's an important question because very often most people think about cross-platform or hear about them and think that all these tools are really the same or you know exact peers. And they're really not and I really think it falls into three segments roughly. And there's some blending between the segments a little bit but I think this is a good way to think about it. The first is web technology driven tools in that are primarily using HTML JavaScript and as you said, they're running almost as a local website within a web viewer some container. Cordova and phonegap are the first that did this- they definitely  fall in this camp. Ionic falls in this camp pretty much. It can bridge a little bit to Native but mainly it's running as a web app as a single page web app with any container. And you know these I see, you know, mainly appealing to web development skill folks that you know, they're really good at web.</p><p>[00:13:56] They want to get mobile as fast as they can so this can make a lot of sense and I think it does make a lot of sense for many kinds of apps especially if they are consumption focused like a mobile news reader or magazine website, you know can be a really good fit. </p><p>[00:14:09] Now the second segment I think of is like tools that have some common language for the UI and and then have some way to bridge to native SDKs. And that's kind of the thread here is how close to native sdks are you? How abstracted are you into more of a web environment? And you know, the second one is really a common language and there's some bridge and React Native probably falls into this category because it's using React for the UI, but you can access native sdks through bridges and so on - maybe not as efficient as being fully native, but at least you can you can get there most of the time. Flutter probably is a little bit in this camp as well. It's you know, it's of completely abstracted environment, but you can get to native when you really need to. I think these tools are maybe a little more complex to use because you're sort of have one foot in both camps and debugging can be a challenge and so on but it kind of might be the best of both worlds depending your perspective.</p><p>[00:15:06] And then the third is guy can think of you know, there's a few tools to fit in there. Xamarin is probably one and that's that's where you're using the common language, but actually programming directly to underlying APIs. So in Xamarin you use C# to call the same methods in apis that you would in Swift or Objective-C and it generates native iOS code at the other end. There's some complexity there and so on but I think those three kind of segments.</p><p>[00:15:35] Are the ones that think about you know web driven, bridged, and just native with other languages kind of tools - that's that's why I think they fit. There's some bleed over obviously and some people say well this one's a little bit more in the first then the second that could be true but from a skills and adoption point of view I think that's a good model.  </p><p>[00:15:53] <strong>Leo Dion (Host): </strong>Where does Flutter fit into that is that just basically Dart for calling native apis? </p><p>[00:16:00] <strong>Rob Kerr (Guest): </strong>Flutter is unique because like with Xamarin or no, I think even to some extent React Native. It's your rendering like in Xamarian your rendering a native like UI button in iOS and on Android it's you know, it's rendering a native Android button you're just using C# in that case to do that </p><p>[00:16:19] Flutter is different because it actually is everything you see is drawn by Flutter on a Skia canvas. So that's kind of cool because you know, exactly what you're getting both platforms. It's very fast. And I think it'll go 60 frames per second or something like that.</p><p>[00:16:34] So it's a kind of like Cordova in a way but better but it also does have access to some native sdks as well - not all of them and that team is working on the bridging but it's if it's somewhere in the middle. I think I put a serve in the center camp of something that's common common language and bridging to native to an extent.</p><p>[00:16:55] <strong>Leo Dion (Host): </strong>Cool. So the difference between like React Native in Xamarin is that like React Native has its own set of apis whereas Xamarin is just using like - you still have uiviewcontroller for instance, but it's in C#, correct? </p><p>[00:17:10] <strong>Rob Kerr (Guest): </strong>Yeah, I think that's the right way to think about it as an react to you guys have kind of using a an abstract paradigm react and then it has a bridge to Native culture.</p><p>[00:17:20] So so you can get there whereas, you know examine is really totally native unless you use Xamarin forms but if you Xamarin iOS and Xamarin Android you just using a different language to access the underlying operating system apis. And then Xamarin, you know, the reason you would want from their perspective, the reason you would want to do that is because all that common code like web access and business logic and all that is completely shared. It's on C# and there's just no deviation between platforms. At least that's the concept right. </p><p>[00:17:50] <strong>Leo Dion (Host): </strong>That makes total sense. What out of those three types are out of the platforms that you seen what do you prefer? </p><p>[00:17:58] <strong>Rob Kerr (Guest): </strong>It's really good question. So definitely I tend to gravitate a little bit toward. You know, what's a really good fit for the organization. What's going to be good for long-term TCO and support I do work with a lot of  business customers. I think Xamarin is a really good fit there.</p><p>[00:18:14] I actually like it like working with Xamarin because it works directly with the operating system. So if I have algorithms and Swift that access HealthKit and can do all the things that Health get does I could pretty much Port those. The Xamarin without any changes and it has source-level debugger going at every level which is kind of nice. So I like that platform, it's not that commonly used I guess in you know outside of the business realm. Then outside of that realm I do like Flutter. I like what Flutters doing right now and the support it has behind it. So I'm hopeful that that will continue to grow and get better and React Native is you know fairly common out there and freely use in there. So there's a lot of folks available to work on that technology. I think it's pretty compelling. I haven't done much work with with React Native, but you know Associates that have used in love it, you know kind of sold me that that's a pretty good solution.</p><p>[00:19:07] Probably the ones I avoid a little bit are more the web driven ones. So the phonegap and ionic, you know, I think they're very good and they can have a place but at least the projects I've worked on. Dig more into the weeds with tell using Health Care using Apple pay and so on and so on and and I think the further you get away from the ability to get the Native APIs the less of a good strategic decision that technology is probably going to be.</p><p>[00:19:34] <strong>Leo Dion (Host): </strong>Yeah, and another one I'm thinking of is NativeScript, which that's JavaScript. Yeah, just as well. That's done by the guys at Progress I believe so. </p><p>[00:19:45] <strong>Rob Kerr (Guest): </strong>Yeah it is. Yeah. It's yeah NativeScript is I mean, it is really interesting. It's some. It's even more native than React Native, I guess right but you know that probably its biggest </p><p>[00:19:57] <strong>Leo Dion (Host): </strong>challenge is that the amount </p><p>[00:19:59] <strong>Rob Kerr (Guest): </strong>of folks out there that you the ecosystem.</p><p>[00:20:02] I mean, it's just really not there. Most people probably never heard of it. But and there's so many competitors that I think they're going to have to travel a challenge getting traction, but technically very compelling. </p><p>[00:20:15] <strong>Leo Dion (Host): </strong>I think I hear a lot of ionic and usually if it's a fairly simple app, you don't have to deal with the Native APIs in that case. I know that there's some bridges but not it's not anywhere near as comfortable as working with the other one. </p><p>[00:20:33] <strong>Rob Kerr (Guest): </strong>Yeah, ionic actually worked on a project for a client two or three years ago. And and we did some you know, we were able to get to a lot of native things you can bind, you know at the time Swift was really new so we needed to print some things on Zebra printers which had to be done with Native objective-c and we were able to glue it together. The debugging again was a challenge because you can't necessarily debug that library that that are the framework that you're linking in very easily.</p><p>[00:21:03] So that was a challenge. But ionic, I think what we had trouble most with was kind of controlling the UI a little bit because it's a web-based and and then just generally it's the completely open source volunteer ecosystem. </p><p>[00:21:17] <strong>Leo Dion (Host): </strong>Well, the other thing about ionic is you're locked into angular, whereas if you use something like that, I think you know phonegap and ionic.</p><p>[00:21:25] I think they're the same thing essentially but if you like break it down to like Cordova, so the correct me if I'm wrong but like Cordova is an underlying Apache open source project that will convert web applications to mobile apps right and then ionic is kind of built on top of that and then also brings in angularjs.</p><p>[00:21:47] Is that correct? </p><p>[00:21:48] <strong>Rob Kerr (Guest): </strong>Yeah, pretty much. But you know, I don't necessarily see there's a downside is as much as the reason that you're doing it, </p><p>[00:21:54] right exactly. Yeah, so if you already have an angular team, then it makes total sense to go with ionic. You can go a step lower than that and use Cordova. If for instance your a VueJS team that might make more sense as well.</p><p>[00:22:11] Yeah, I think Cordova is basically running a web app in. You know in a web view with some, you know specific JS, you know CSS files. So it's pretty plain Jane, but all the platforms I think kind of funny categories if you're you know, Ionic, you know is you know has it has its particular framework, you know, if you like reacts with power like React Native if you like dotnet you probably like Xamarin, you know, and so on so it's it's and that's where these projects came from its, you know groups that specialized in those platforms came up with a mobile solution so it's I think part of part of the package. </p><p>[00:22:48] <strong>Leo Dion (Host): </strong>And then I hear a lot of React Native. That's typically the biggest one I hear and then Flutter is kind of the one that's gained a lot of momentum of the last few months and then here in Michigan. We have a lot of C# and Java developers. So it makes total sense where you'll hear Xamarin being used is typically amongst companies that already have like they're either Microsoft shops, or they have a ton of C# developers and make sense for them to go with Xamarin </p><p>[00:23:16] <strong>Rob Kerr (Guest): </strong>Exactly and all of those if you sort of you know, follow the money kind of thing, you know React Native is Facebook, Flutter is Google, Xamarin is Microsoft and then there are a lot of Open Source volunteer Community Driven things you know it out there as well. And I guess you know Native Script has a corporate behind it as well, but it's not really a mega vendor. </p><p>[00:23:35] <strong>Leo Dion (Host): </strong>Right, yep. Exactly. What are some of the biggest challenges or what are some of the points within a working on a project where you were just like guys you're making this much harder than you need to you guys should really consider switching over and transitioning to doing a native app or what are some like code smells or smells within a project that you're like - okay at this point I think you guys should consider opening up xcode learning some Swift because this is not going to work out in the long run. </p><p>[00:24:06] <strong>Rob Kerr (Guest): </strong>Yep that's really good question and it's definitely something to consider because if you're starting a new product that  your likelihood of being able to switch to something else has is low once you have that much sunk cost into it.</p><p>[00:24:19] So and I think it's a it's really good. You know, what are some of the challenges probably the first isn't necessarily feature driven, but but just that if you use a cross platform platform or development tool to develop something, you know, you're not going to be going directly to Apple for support you're not going to be using Apple's apis directly.</p><p>[00:24:39] So you have to kind of think about that a little bit that's kind of obvious. Right? Because the whole idea of cross-platform is your working abstraction layer, but you know, your team does need to have still a pretty good understanding of the underlying operating systems and so on so there's there's somebody still need to do.</p><p>[00:24:55] As far the kind of feature driven [development], I was talking to a client and They said you know, we're thinking cross-platform - here's what we want to do. The red flags I am probably looking for is you know, are you trying to do something that is really really specific to the operating system underneath. So are you trying to use metal on iOS which you might not find any support and most cross platform tools now.</p><p>[00:25:20] Or are you trying to you know do something like earlier we talked about, you know, having a completely different experience on the two platforms. Well, if it is really completely different than you're still going to be writing it twice just in a different framework and you know, does that make sense?</p><p>[00:25:35] Another thing? I kind of look at her think about is how much of this app is you I how much of the app is underneath logic and code and things like that. So if an application is like 90% not the UI then cross-platform may make a lot of sense why I write a lot of business logic and database logic and calculations in two different languages to hit two platforms, you know, maybe it makes more sense to consolidate them.</p><p>[00:26:01] But you know, if the app is primarily, you know, if it's something that is totally UI driven 90% of it is kind of UI stuff and you want that UI to be very different on two platforms. That's like well maybe cross-platform doesn't doesn't make a lot of sense. </p><p>[00:26:18] <strong>Leo Dion (Host): </strong>Yeah. I think those are really good points before we close out. Is there anything else you wanted to mention? </p><p>[00:26:24] <strong>Rob Kerr (Guest): </strong>No, I think that's a pretty good discussion. There's tremendous interest and you probably see it to with you know, being able to ship the both platforms at the same time and you know, but having completely incompatible ecosystems makes that kind of tough.</p><p>[00:26:37] So I think a lot of people are thinking about this and you know, unfortunately or fortunately there's probably six really good choices out there to of technology stacks to use and not not everyone is is right for everybody. So it's a. </p><p>[00:26:51] <strong>Leo Dion (Host): </strong>Yeah, I think a lot of folks go into it thinking it's a shortcut it does help but it really depends on your team and it really isn't as much of a shortcut as people realize just to kind of reiterate what you're talking about here.</p><p>[00:27:05] Like I think the good ones is like if you really want a consistent user experience like you really insist upon it probably cross platform is the way to go. If you want like your releases to be in sync that makes total sense. And then of course if you're going to have an already existing team that is familiar with some sort of language or framework that's going to be used by a cross-platform solution then using it saves you money will help your budget when you first start off. The other thing I was going to say is like if you want to test an idea like you want to just put an app on both platforms to test that specific idea - maybe cross-platform is a great way to do it as well. </p><p>[00:27:44] You talked about the three differences between cross-platform solutions your Cordova based which is essentially a web View and then there's the bridge Solutions like Flutter React Native Native script and then solutions that are strictly language-based if your team is familiar C#, they're probably going to want to go with Xamarin which just basically takes the Swift and objective-c and turns it into C# for your team and just use a platform solution that is something that your team is somewhat familiar with if you already have a react team if you already have a C# team or web dev team that gives you an idea of where to go. But however, the real challenge is if you're going to use a cross-platform solution is that your in end up being dependent on another vendor or another community that is going to add another layer of complexity when it comes to support. So not only are you going to be beholding to Google or Apple? But now you have to be dependent on the react team or Xamarin the folks at Microsoft or the folks at ionic to make sure that they stay up-to-date with whatever changes come to iOS or Android.</p><p>[00:28:50] If you're using a specific API that's special to a operating system such as metal or health kit or just thinking of like Apple pay anything like that. That's very specific to an API that might be good indication that you might actually want to go with Swift and Native. Then if you are expecting to really personalize the UI to different platforms and there's a lot of UI involved it might also be a good indication that you want to go native as opposed to going with a cross-platform solution. You think I covered that pretty well? </p><p>[00:29:28] <strong>Rob Kerr (Guest): </strong>I think so. Yeah, I think and you know, it's kind of a thread that runs through there is a how much how much are you going to write code wise or UI development that can be used in both, you know both platforms. So it's something really to think about but I think that's a good summary, yeah.</p><p>[00:29:43]<strong>Leo Dion (Host): </strong> Rob. Are you available on social media? </p><p>[00:29:46] <strong>Rob Kerr (Guest): </strong>I am you can find me on Twitter @recursive. </p><p>[00:29:53] <strong>Leo Dion (Host): </strong>Awesome. And before we close out, I have one question for you actually it's more like two questions for you. It seems like every guest we ask this question. When you do Native, what do you use to build your user interface? Are you a storyboard or coding person? </p><p>[00:30:07] <strong>Rob Kerr (Guest): </strong>So this is the code in storyboard question.  (laughter) </p><p>[00:30:10] <strong>Leo Dion (Host): </strong>Yeah. Yeah. </p><p>[00:30:11] <strong>Rob Kerr (Guest): </strong>Yeah, I don't think there's a middle ground answer to that other than saying...</p><p>[00:30:15] <strong>Leo Dion (Host): </strong>Well If  you're a coward if you're middle ground, but other than that...  (laughter) </p><p>[00:30:21] <strong>Rob Kerr (Guest): </strong>Well I'm not a coward, I I tend to use storyboards because I find it easier to support down the road kind of, you know, rather than writing a lot of code, but I have done both on the Apple platform. </p><p>[00:30:38] <strong>Leo Dion (Host): </strong>Yeah, I go back and forth on it, I think like if you're on a big team storyboards are really really difficult because you're going to end up with emerging issues.</p><p>[00:30:47] <strong>Rob Kerr (Guest): </strong>Yeah merging issues is you know, it's a big deal for storyboards. It gives a visual declarative thing about what's going on with the app kind of like it but it seems like, you know, we're moving toward more declarative UI on this with SwiftUI is doing  that's what Flutter does with dart and it seems like the winds blowing in that direction.</p><p>[00:31:03] But if I you know, if I have a pretty standardized user user interface, I'll use a storyboard for that. It makes a lot of sense. </p><p>[00:31:09] <strong>Leo Dion (Host): </strong>Yeah, especially when you are first starting off. So yeah Swift UI - I was going to get into it. What do you think of SwiftUI?</p><p>[00:31:16] <strong>Rob Kerr (Guest): </strong>You know, it's a really good direction. It's to be seen but what I loaded up a development Mac with with the new version of Mac OS and installed xcode 11 on there and tried it out and and I really like it. The whole cycle where you In Mobile where you lay out your app screens and you know kind of get it working and then you know compiled build deploy to device and then you know washing repeat the most platforms are trying to deal with that react certainly is React Native as a platform that tries to address that and Flutter to an extent. I think they'll get there.</p><p>[00:31:52] But SwiftUI is aimed right at that and I think the way they're implemented that is is just right and you know, as you mentioned merge conflicts with UIKIt and so on and that's kind of solves that problem because it's just code at that point. Yeah, and I like the to definitely the split pane where you can make changes on the UI as if it was a storyboard and it updates the declarative code on the left side. I think that's really cool.</p><p>[00:32:14] <strong>Leo Dion (Host): </strong>I just hate that you need Catalina in order to really take advantage of it. Other than that, that's fantastic .</p><p>[00:32:22] <strong>Rob Kerr (Guest): </strong>It's temporary thing. It only supports iOS 13, which  means it's really not going to come into its own for, you know, a couple of years probably - it's right  direction. I like that direction. </p><p>[00:32:33] <strong>Leo Dion (Host): </strong>I mean if you're willing for an app to be in the App Store in October and November then I would totally recommend people look at Swift UI for their brand new app if they're willing to wait on it. I don't know like </p><p>[00:32:46] <strong>Rob Kerr (Guest): </strong>it's pretty buggy at the moment. So yeah, it is taking a risk, but certainly if you're starting something absolutely brand-new and you're comfortable only shipping for iOS 13 then sure. Why not? Yeah, </p><p>[00:32:58] <strong>Leo Dion (Host): </strong>that's what I meant. Of course. But yeah, so funny how out of this whole thing people were looking forward to iPad apps on the Mac and marzipan and like out of nowhere comes this like brand new and I love how it's completely severed. My some people aren't going to like it but it's completely severed from Objective-C.</p><p>[00:33:17] It takes advantage of like the whole Swift and Swift DLC stuff and creates a decently healthy way to build UIs because even it going back to the question going between storyboards and coding your own you I like I think a lot of people would, going back to [the] cross-platform  Development discussion, a lot of people like building their UI in HTML and it makes sense like CSS and HTML are just a lot easier to work with and having a declarative way to build your UI using Swift UI.</p><p>[00:33:50] It's a much more comfortable way because like storyboards all that stuff was like it's a black box like you can't go into that XML and figure out how to manually add like a button to user interface using storyboards. It's impossible. And then decode it like I do like the some of the stuff that they've added and last couple of years with constraints, but it's nowhere near as nice as what we've gotten with with declaratively building user interfaces and this is exactly the way user interfaces should be built. It makes total sense. </p><p>[00:34:26] <strong>Rob Kerr (Guest): </strong>A lot of people think so. Yeah. </p><p>[00:34:28] <strong>Leo Dion (Host): </strong>Well, thank you so much for coming on the show, and maybe we'll talk about the stuff again. </p><p>[00:34:34] <strong>Rob Kerr (Guest): </strong>Great. I've enjoyed being here. I appreciate the invitation and great conversation.</p><p>[00:34:38] Thank you. Yep. </p><p>[00:34:39] <strong>Leo Dion (Host): </strong>You're welcome.</p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guest</b></p><ul><li><a href="https://twitter.com/rekerrsive/"><strong>Rob Kerr - @rekerrsive</strong></a></li></ul><p><b>Why should companies go with a cross-platform solution?</b></p><ul>
<li>Consistent User Experience (whether that's a good idea or not)</li>
<li>Synchronicity in Code Base</li>
<li>Budget - Use existing team expertise </li>
</ul><p><b>What are the differences between cross-platform solutions?</b></p><ul>
<li>
<strong>Web Based</strong> - Cordova, Ionic, PhoneGap</li>
<li>
<strong>Bridging Solution </strong>- Flutter, React Native, NativeScript</li>
<li>
<strong>Language Based</strong> - Xamarin - Use C# to Call Native API</li>
</ul><p><b>What are the challenges with cross-platform solution?</b></p><ul>
<li>Dependent on Vendor Support<ul><li>Dev teams need to keep Cross-Platform Tooling up to date</li></ul>
</li>
<li>Using a Specific API (Metal, HealthKit, etc…) <ul><li>May not be supported by Cross-Platform Tool</li></ul>
</li>
<li>There may be instances such as UI - you want differences between devices</li>
</ul><p><b>Social Media</b></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter - @brightdigit<br></strong></a><a href="http://facebook.com/brightdigit"><strong>Facebook - BrightDigit</strong></a><strong><br></strong><a href="https://www.linkedin.com/company/bright-digit"><strong>LinkedIn - BrightDigit</strong></a><strong><br></strong><a href="https://www.instagram.com/brightdigit/"><strong>Instagram - @brightdigit</strong></a></p><p><b>Transcript</b></p><p>[00:00:00] <strong>Leo Dion (Host): </strong>Today with us. We have Rob Kerr. You want to go ahead and introduce yourself. </p><p>[00:00:05] <strong>Rob Kerr (Guest): </strong>My name is Rob Kerr. I'm a consultant working primarily in mobile platforms a lot of native development but more and more it's cross-platform with Xamarin, Flutter, and some other tools and I work with primarily business customers who are looking to deliver applications to both IOS and Android with the most efficient development process that they can experience.</p><p>[00:00:29] <strong>Leo Dion (Host): </strong>Awesome, really glad to have you on Rob. I've known you for three or four years now. It seems like. </p><p>[00:00:35] <strong>Rob Kerr (Guest): </strong>Something like that. </p><p>[00:00:37] <strong>Leo Dion (Host): </strong>Yeah, and we've met either at meetups or touch base every so often. So it sounds like recently you've been doing a lot of cross-platform development. And like I said, I have a little bit of experience with that of dabbled a little bit in Cordova as well.</p><p>[00:00:54] My bread-and-butter, my expertise is obviously Swift [that is] native Swift development. That's what I like to do. I think it has a lot of advantages but there could be situations like business reasons valid business reasons to go cross-platform, right? </p><p>[00:01:10] <strong>Rob Kerr (Guest): </strong>Yeah, I think so. And I think you and I have similar backgrounds in solutions as far as Apple. I've done a ton of native development in Swift and iOS and some on Android as well. Probably the last year or two a lot of my work has been cross platform and it's kind of driven by that business need or want to you know, hit both platforms efficiently. And currently in the IOS app store has you know about 1.8 million apps and the Play Store has about 2.1 million but the stats tell us that I think AppFigures had a study that only 450 thousand apps are truly cross platform where the same application is deployed in both platforms, which is you know, it's really small numbers less than 10 percent.</p><p>[00:01:54] And so when will you find is you know, Everyone would kind of like to be on both platforms at the same time, but not a lot of folks are or at least not not an efficient way. So in the past you mentioned Cordova and PhoneGap and probably five or six years ago that was almost the only game in town.</p><p>[00:02:11] But now this cross-platform frameworks are you know sprouting up quite a bit and all of the mega vendors offer something like Flutter or React Native or Xamarin from Microsoft. And so it's definitely coming into its own and there's certainly those those applications like business applications, especially where you need to have both platforms, but maybe don't want to fund building the app twice once for each so yeah, I think so.</p><p>[00:02:38] <strong>Leo Dion (Host): </strong>What are some situations where businesses should choose cross platform as opposed to a native? </p><p>[00:02:46] <strong>Rob Kerr (Guest): </strong>Yeah, that's a good question. And that's you know comes up a lot because the sort of the reasons not to usually drive into accessing very exotic APIs and things like that. In my mind if a business really wants to deliver on both platforms, especially if they like to do it at the same time that kind of tends toward cross-platform if you can particularly if the user experience they wanted to be the same on both platforms then using something cross-platform maybe doesn't mandate it but certainly makes it much likely that an application is going to work the same way so that when the support call comes in then you know somebody who needs to help a user doesn't have to think about you know, how does this work on Android how does this work on iOS. How's the potentially work on Windows? </p><p>[00:03:29] Then the obvious, you know elephant in the room is just budget. If you have to build the same application twice that costs, you know potentially twice as much typically usually other different teams that work on IOS and Android if they're done completely native.</p><p>[00:03:44] And then you know, you really have to think about in the long term how does that go into support cost? So if the application has to have a life cycle, new features that we added bugs need to be fixed, if they're written in two different languages than two platforms than that's something to think about so. As I think about it and on the consumer market, if you are going to develop an application to compete with one of Apple's native apps or Android and it needs to be really exotic, you know, cross-platform might not be the right choice for that.</p><p>[00:04:16] But for the vast majority of apps are content consumpution or business orientated and so on It's probably the majority of the leading cross-platform tools can deliver an app with the same user experience. So something to think about.</p><p>[00:04:33] <strong>Leo Dion (Host): </strong>It's funny you mention user experience. I would say that can be a benefit of cross-platform but also a hindrance in a lot of ways because like recently I was doing work with the client and they were really good about making sure that the user experience was actually different on both platforms precisely because of the expectations that certain like Android users have with their UI and Apple users have with their UI - there are definitely big differences. Specificly I'm just like thinking about like hamburger menus is like we don't have hamburger menus is very much on iOS and that's that's one of the jarring things is when you use a cross-platform app.</p><p>[00:05:18] It can be obvious and jarring when you're using an app that is built cross platform, but doesn't like take into account like the user experience differences between both platforms. </p><p>[00:05:33] <strong>Rob Kerr (Guest): </strong>Yeah, there's a little bit to unpack there because as I've worked with clients that you know, definitely wanted pixel-perfect identical experiences in both platforms.</p><p>[00:05:42] Now, you might argue that you shouldn't do that right and Google and Apple and tell you shouldn't do that because you're not following their conventions and that's a very valid argument, but the cross-platform tooling doesn't really dictate that you have to have that same experience on both platforms.</p><p>[00:05:58] <strong>Leo Dion (Host): </strong>Right. I think it really depends. It really depends on which cross-platform tool you're using </p><p>[00:06:05] <strong>Rob Kerr (Guest): </strong>It does but even on most of them, I mean you can implement something conditionally. So you say that you know, this is the view used on Android. That's the view used on iOS for example, if that's what you want.</p><p>[00:06:17] I don't think cross platform prevents that but conversely if you really want a very identical experience cross-platform probably enables it better than forcing a common UI paradigm into the two different native tools but your central point about you know, not deviating from the design aesthetic of iOS and how it works, you know, whether you want to use a tab view controller versus a hamburger menu is very valid point and an important design issue to think about.</p><p>[00:06:48] <strong>Leo Dion (Host): </strong>Yeah, that's interesting. I'm just kind of curious going a little bit more into that. What is the reasoning behind having a consistent experience </p><p>[00:06:58] <strong>Rob Kerr (Guest): </strong>UX? Yeah.</p><p>[00:06:59] <strong>Leo Dion (Host): </strong>Because your typical UX person would be like no no no, it should not act exactly the same way on every platform. Is that is that usually like an executive decision that's done despite how it's not the right decision? Or is it a business decision typically to do that. Like I'm just kind of curious about that. </p><p>[00:07:23] <strong>Rob Kerr (Guest): </strong>Yeah, because what I think you just said is you think designers would not want that. I've actually worked for designers that exactly wanted that so I think it depends on the thought leadership behind the app the.</p><p>[00:07:34] Most compelling I think business reason that I've heard is kind of from a support perspective that that an app is going out and then a support department needs to support it. And when a user wants to know well, how do I go into the settings menu? If it isn't the same then they need to know how to support it in both directions.</p><p>[00:07:53] So I think there's some degree of. Validity to that concern but I don't think it should override, you know, the overall user adoption and user satisfaction with the app. So even many iOS apps use hamburger menu is even though that's really not an iOS thing. </p><p>[00:08:08] <strong>Leo Dion (Host): </strong>I don't like hamburger menus </p><p>[00:08:11] <strong>Rob Kerr (Guest): </strong>on iOS</p><p>[00:08:12] you know, but a lot of apps do you use it and you know many Android apps will you know use tab bar instead completely and not even have that flyover menu. So I think though the kind of a point is that that you can do it differently or not do it differently. I don't think the cross platform tools necessarily corner you to have to use a lowest common denominator. But if that's in your intent, it's probably more and more efficient way to do it. </p><p>[00:08:41] <strong>Leo Dion (Host): </strong>Yeah, I could see how that might. I'm okay. If the decision is yeah, it's not a great user experience. We're willing to admit that for budgetary reasons. We we just want to like have a consistent experience. I totally get that but I like that makes total sense.</p><p>[00:08:55] But if it's like actually like no no we're going to make iOS users have this uncomfortable experience because we think it's better. It's like I don't know about that. </p><p>[00:09:06] <strong>Rob Kerr (Guest): </strong>Yeah, well, I would hope someone wouldn't want to like do it in order to give them an uncomfortable experience. </p><p>[00:09:12] <strong>Leo Dion (Host): </strong>Yeah, I don't mean like purposely but just like they actually think that they know the best way to design on an iPhone better than Apple does it's like or vice versa, right?</p><p>[00:09:21] Like that would be an uncomfortable conversation to have yeah, and when we're talking budget. I'll talk to people about the specific subject. There was a great talk last year. I went to in New York given by one of the guys at can't think of his name now Artsy and he talked about transitioning to React Native and how their team transition to React Native and it sounds like that decision was more based on the fact that they already have an existing experience with react.</p><p>[00:09:56] <strong>Rob Kerr (Guest): </strong>All right, </p><p>[00:09:57] <strong>Leo Dion (Host): </strong>and so it seems like when we talk budget, typically we're talking at what and we talked about this in a previous episode on back-end development. Like what your team is already comfortable with is going to be like the healthiest way rather than trying to like necessarily shove Swift or Objective-C in Xcode down their throats if they're not willing to make that sacrifice and training and hiring like it totally makes sense to like just already use what's already existing in your team in those cases. It's a sacrifice obviously because you're not going to get as good of an experience perhaps that specialize in different platforms. But in the end like it might be a way to like save some money is just hey, this team has great cohesion doing react and React Native. Let's just stick with that.</p><p>[00:10:44] <strong>Rob Kerr (Guest): </strong>Yeah, I mean you can't ignore the kind of what resources do you already have what things you're already know how to support if you're building a mobile application to complement a suite of Enterprise, you know other applications and that other team can eventually support the mobile have to because you use similar technology or you know, I mean that that's certainly a benefit and I think there's you know, that is an important factor to consider. So, you know you and I touched on Xamarin earlier and C# - It's XAML. </p><p>[00:11:14] If you use Xamarin forms, you know, it uses Visual Studio, you know, if you already have 50 people in your company that use all that kind of thing every day, then yeah that might make a lot of sense versus building a very small team that you know is specializing in Swift or Objective-C or Java.</p><p>[00:11:32] If you lose one of those folks then you're in a lot of pain because you have to replace them. And I think you if you look across like what cross-platform tools different people advocate is very often the technology, they already know. So, you know web oriented folks will typically advocate, you know, kind of a phonegap or you know, react or ionic because you know, they're familiar with those those tools already.</p><p>[00:11:57] The Microsoft shops probably going to be very interested in Xamarin because it's very C# orientated. Flutter is really gaining a lot of traction from Google and it runs with Dart underneath which which which doesn't really have an installed base some you know, so we'll see where that goes but on some of those other ones, you know, absolutely if you have folks had already have those 80% of the skills. They need to build the app. That might make a lot of sense. </p><p>[00:12:25] <strong>Leo Dion (Host): </strong>What are some of the differences between the different cross-platform solutions because I know some are kind of like basically like your Cordova is essentially taking a bunch of HTML and JavaScript and CSS and building it into an app within a container some like React Native and Xamarin might just take whatever language you prefer and essentially like rebuild it into a actual binary and may include like some sort of library so that I can run what are the main differences between these different cross-platform solutions? </p><p>[00:13:00] <strong>Rob Kerr (Guest): </strong>I think it's an important question because very often most people think about cross-platform or hear about them and think that all these tools are really the same or you know exact peers. And they're really not and I really think it falls into three segments roughly. And there's some blending between the segments a little bit but I think this is a good way to think about it. The first is web technology driven tools in that are primarily using HTML JavaScript and as you said, they're running almost as a local website within a web viewer some container. Cordova and phonegap are the first that did this- they definitely  fall in this camp. Ionic falls in this camp pretty much. It can bridge a little bit to Native but mainly it's running as a web app as a single page web app with any container. And you know these I see, you know, mainly appealing to web development skill folks that you know, they're really good at web.</p><p>[00:13:56] They want to get mobile as fast as they can so this can make a lot of sense and I think it does make a lot of sense for many kinds of apps especially if they are consumption focused like a mobile news reader or magazine website, you know can be a really good fit. </p><p>[00:14:09] Now the second segment I think of is like tools that have some common language for the UI and and then have some way to bridge to native SDKs. And that's kind of the thread here is how close to native sdks are you? How abstracted are you into more of a web environment? And you know, the second one is really a common language and there's some bridge and React Native probably falls into this category because it's using React for the UI, but you can access native sdks through bridges and so on - maybe not as efficient as being fully native, but at least you can you can get there most of the time. Flutter probably is a little bit in this camp as well. It's you know, it's of completely abstracted environment, but you can get to native when you really need to. I think these tools are maybe a little more complex to use because you're sort of have one foot in both camps and debugging can be a challenge and so on but it kind of might be the best of both worlds depending your perspective.</p><p>[00:15:06] And then the third is guy can think of you know, there's a few tools to fit in there. Xamarin is probably one and that's that's where you're using the common language, but actually programming directly to underlying APIs. So in Xamarin you use C# to call the same methods in apis that you would in Swift or Objective-C and it generates native iOS code at the other end. There's some complexity there and so on but I think those three kind of segments.</p><p>[00:15:35] Are the ones that think about you know web driven, bridged, and just native with other languages kind of tools - that's that's why I think they fit. There's some bleed over obviously and some people say well this one's a little bit more in the first then the second that could be true but from a skills and adoption point of view I think that's a good model.  </p><p>[00:15:53] <strong>Leo Dion (Host): </strong>Where does Flutter fit into that is that just basically Dart for calling native apis? </p><p>[00:16:00] <strong>Rob Kerr (Guest): </strong>Flutter is unique because like with Xamarin or no, I think even to some extent React Native. It's your rendering like in Xamarian your rendering a native like UI button in iOS and on Android it's you know, it's rendering a native Android button you're just using C# in that case to do that </p><p>[00:16:19] Flutter is different because it actually is everything you see is drawn by Flutter on a Skia canvas. So that's kind of cool because you know, exactly what you're getting both platforms. It's very fast. And I think it'll go 60 frames per second or something like that.</p><p>[00:16:34] So it's a kind of like Cordova in a way but better but it also does have access to some native sdks as well - not all of them and that team is working on the bridging but it's if it's somewhere in the middle. I think I put a serve in the center camp of something that's common common language and bridging to native to an extent.</p><p>[00:16:55] <strong>Leo Dion (Host): </strong>Cool. So the difference between like React Native in Xamarin is that like React Native has its own set of apis whereas Xamarin is just using like - you still have uiviewcontroller for instance, but it's in C#, correct? </p><p>[00:17:10] <strong>Rob Kerr (Guest): </strong>Yeah, I think that's the right way to think about it as an react to you guys have kind of using a an abstract paradigm react and then it has a bridge to Native culture.</p><p>[00:17:20] So so you can get there whereas, you know examine is really totally native unless you use Xamarin forms but if you Xamarin iOS and Xamarin Android you just using a different language to access the underlying operating system apis. And then Xamarin, you know, the reason you would want from their perspective, the reason you would want to do that is because all that common code like web access and business logic and all that is completely shared. It's on C# and there's just no deviation between platforms. At least that's the concept right. </p><p>[00:17:50] <strong>Leo Dion (Host): </strong>That makes total sense. What out of those three types are out of the platforms that you seen what do you prefer? </p><p>[00:17:58] <strong>Rob Kerr (Guest): </strong>It's really good question. So definitely I tend to gravitate a little bit toward. You know, what's a really good fit for the organization. What's going to be good for long-term TCO and support I do work with a lot of  business customers. I think Xamarin is a really good fit there.</p><p>[00:18:14] I actually like it like working with Xamarin because it works directly with the operating system. So if I have algorithms and Swift that access HealthKit and can do all the things that Health get does I could pretty much Port those. The Xamarin without any changes and it has source-level debugger going at every level which is kind of nice. So I like that platform, it's not that commonly used I guess in you know outside of the business realm. Then outside of that realm I do like Flutter. I like what Flutters doing right now and the support it has behind it. So I'm hopeful that that will continue to grow and get better and React Native is you know fairly common out there and freely use in there. So there's a lot of folks available to work on that technology. I think it's pretty compelling. I haven't done much work with with React Native, but you know Associates that have used in love it, you know kind of sold me that that's a pretty good solution.</p><p>[00:19:07] Probably the ones I avoid a little bit are more the web driven ones. So the phonegap and ionic, you know, I think they're very good and they can have a place but at least the projects I've worked on. Dig more into the weeds with tell using Health Care using Apple pay and so on and so on and and I think the further you get away from the ability to get the Native APIs the less of a good strategic decision that technology is probably going to be.</p><p>[00:19:34] <strong>Leo Dion (Host): </strong>Yeah, and another one I'm thinking of is NativeScript, which that's JavaScript. Yeah, just as well. That's done by the guys at Progress I believe so. </p><p>[00:19:45] <strong>Rob Kerr (Guest): </strong>Yeah it is. Yeah. It's yeah NativeScript is I mean, it is really interesting. It's some. It's even more native than React Native, I guess right but you know that probably its biggest </p><p>[00:19:57] <strong>Leo Dion (Host): </strong>challenge is that the amount </p><p>[00:19:59] <strong>Rob Kerr (Guest): </strong>of folks out there that you the ecosystem.</p><p>[00:20:02] I mean, it's just really not there. Most people probably never heard of it. But and there's so many competitors that I think they're going to have to travel a challenge getting traction, but technically very compelling. </p><p>[00:20:15] <strong>Leo Dion (Host): </strong>I think I hear a lot of ionic and usually if it's a fairly simple app, you don't have to deal with the Native APIs in that case. I know that there's some bridges but not it's not anywhere near as comfortable as working with the other one. </p><p>[00:20:33] <strong>Rob Kerr (Guest): </strong>Yeah, ionic actually worked on a project for a client two or three years ago. And and we did some you know, we were able to get to a lot of native things you can bind, you know at the time Swift was really new so we needed to print some things on Zebra printers which had to be done with Native objective-c and we were able to glue it together. The debugging again was a challenge because you can't necessarily debug that library that that are the framework that you're linking in very easily.</p><p>[00:21:03] So that was a challenge. But ionic, I think what we had trouble most with was kind of controlling the UI a little bit because it's a web-based and and then just generally it's the completely open source volunteer ecosystem. </p><p>[00:21:17] <strong>Leo Dion (Host): </strong>Well, the other thing about ionic is you're locked into angular, whereas if you use something like that, I think you know phonegap and ionic.</p><p>[00:21:25] I think they're the same thing essentially but if you like break it down to like Cordova, so the correct me if I'm wrong but like Cordova is an underlying Apache open source project that will convert web applications to mobile apps right and then ionic is kind of built on top of that and then also brings in angularjs.</p><p>[00:21:47] Is that correct? </p><p>[00:21:48] <strong>Rob Kerr (Guest): </strong>Yeah, pretty much. But you know, I don't necessarily see there's a downside is as much as the reason that you're doing it, </p><p>[00:21:54] right exactly. Yeah, so if you already have an angular team, then it makes total sense to go with ionic. You can go a step lower than that and use Cordova. If for instance your a VueJS team that might make more sense as well.</p><p>[00:22:11] Yeah, I think Cordova is basically running a web app in. You know in a web view with some, you know specific JS, you know CSS files. So it's pretty plain Jane, but all the platforms I think kind of funny categories if you're you know, Ionic, you know is you know has it has its particular framework, you know, if you like reacts with power like React Native if you like dotnet you probably like Xamarin, you know, and so on so it's it's and that's where these projects came from its, you know groups that specialized in those platforms came up with a mobile solution so it's I think part of part of the package. </p><p>[00:22:48] <strong>Leo Dion (Host): </strong>And then I hear a lot of React Native. That's typically the biggest one I hear and then Flutter is kind of the one that's gained a lot of momentum of the last few months and then here in Michigan. We have a lot of C# and Java developers. So it makes total sense where you'll hear Xamarin being used is typically amongst companies that already have like they're either Microsoft shops, or they have a ton of C# developers and make sense for them to go with Xamarin </p><p>[00:23:16] <strong>Rob Kerr (Guest): </strong>Exactly and all of those if you sort of you know, follow the money kind of thing, you know React Native is Facebook, Flutter is Google, Xamarin is Microsoft and then there are a lot of Open Source volunteer Community Driven things you know it out there as well. And I guess you know Native Script has a corporate behind it as well, but it's not really a mega vendor. </p><p>[00:23:35] <strong>Leo Dion (Host): </strong>Right, yep. Exactly. What are some of the biggest challenges or what are some of the points within a working on a project where you were just like guys you're making this much harder than you need to you guys should really consider switching over and transitioning to doing a native app or what are some like code smells or smells within a project that you're like - okay at this point I think you guys should consider opening up xcode learning some Swift because this is not going to work out in the long run. </p><p>[00:24:06] <strong>Rob Kerr (Guest): </strong>Yep that's really good question and it's definitely something to consider because if you're starting a new product that  your likelihood of being able to switch to something else has is low once you have that much sunk cost into it.</p><p>[00:24:19] So and I think it's a it's really good. You know, what are some of the challenges probably the first isn't necessarily feature driven, but but just that if you use a cross platform platform or development tool to develop something, you know, you're not going to be going directly to Apple for support you're not going to be using Apple's apis directly.</p><p>[00:24:39] So you have to kind of think about that a little bit that's kind of obvious. Right? Because the whole idea of cross-platform is your working abstraction layer, but you know, your team does need to have still a pretty good understanding of the underlying operating systems and so on so there's there's somebody still need to do.</p><p>[00:24:55] As far the kind of feature driven [development], I was talking to a client and They said you know, we're thinking cross-platform - here's what we want to do. The red flags I am probably looking for is you know, are you trying to do something that is really really specific to the operating system underneath. So are you trying to use metal on iOS which you might not find any support and most cross platform tools now.</p><p>[00:25:20] Or are you trying to you know do something like earlier we talked about, you know, having a completely different experience on the two platforms. Well, if it is really completely different than you're still going to be writing it twice just in a different framework and you know, does that make sense?</p><p>[00:25:35] Another thing? I kind of look at her think about is how much of this app is you I how much of the app is underneath logic and code and things like that. So if an application is like 90% not the UI then cross-platform may make a lot of sense why I write a lot of business logic and database logic and calculations in two different languages to hit two platforms, you know, maybe it makes more sense to consolidate them.</p><p>[00:26:01] But you know, if the app is primarily, you know, if it's something that is totally UI driven 90% of it is kind of UI stuff and you want that UI to be very different on two platforms. That's like well maybe cross-platform doesn't doesn't make a lot of sense. </p><p>[00:26:18] <strong>Leo Dion (Host): </strong>Yeah. I think those are really good points before we close out. Is there anything else you wanted to mention? </p><p>[00:26:24] <strong>Rob Kerr (Guest): </strong>No, I think that's a pretty good discussion. There's tremendous interest and you probably see it to with you know, being able to ship the both platforms at the same time and you know, but having completely incompatible ecosystems makes that kind of tough.</p><p>[00:26:37] So I think a lot of people are thinking about this and you know, unfortunately or fortunately there's probably six really good choices out there to of technology stacks to use and not not everyone is is right for everybody. So it's a. </p><p>[00:26:51] <strong>Leo Dion (Host): </strong>Yeah, I think a lot of folks go into it thinking it's a shortcut it does help but it really depends on your team and it really isn't as much of a shortcut as people realize just to kind of reiterate what you're talking about here.</p><p>[00:27:05] Like I think the good ones is like if you really want a consistent user experience like you really insist upon it probably cross platform is the way to go. If you want like your releases to be in sync that makes total sense. And then of course if you're going to have an already existing team that is familiar with some sort of language or framework that's going to be used by a cross-platform solution then using it saves you money will help your budget when you first start off. The other thing I was going to say is like if you want to test an idea like you want to just put an app on both platforms to test that specific idea - maybe cross-platform is a great way to do it as well. </p><p>[00:27:44] You talked about the three differences between cross-platform solutions your Cordova based which is essentially a web View and then there's the bridge Solutions like Flutter React Native Native script and then solutions that are strictly language-based if your team is familiar C#, they're probably going to want to go with Xamarin which just basically takes the Swift and objective-c and turns it into C# for your team and just use a platform solution that is something that your team is somewhat familiar with if you already have a react team if you already have a C# team or web dev team that gives you an idea of where to go. But however, the real challenge is if you're going to use a cross-platform solution is that your in end up being dependent on another vendor or another community that is going to add another layer of complexity when it comes to support. So not only are you going to be beholding to Google or Apple? But now you have to be dependent on the react team or Xamarin the folks at Microsoft or the folks at ionic to make sure that they stay up-to-date with whatever changes come to iOS or Android.</p><p>[00:28:50] If you're using a specific API that's special to a operating system such as metal or health kit or just thinking of like Apple pay anything like that. That's very specific to an API that might be good indication that you might actually want to go with Swift and Native. Then if you are expecting to really personalize the UI to different platforms and there's a lot of UI involved it might also be a good indication that you want to go native as opposed to going with a cross-platform solution. You think I covered that pretty well? </p><p>[00:29:28] <strong>Rob Kerr (Guest): </strong>I think so. Yeah, I think and you know, it's kind of a thread that runs through there is a how much how much are you going to write code wise or UI development that can be used in both, you know both platforms. So it's something really to think about but I think that's a good summary, yeah.</p><p>[00:29:43]<strong>Leo Dion (Host): </strong> Rob. Are you available on social media? </p><p>[00:29:46] <strong>Rob Kerr (Guest): </strong>I am you can find me on Twitter @recursive. </p><p>[00:29:53] <strong>Leo Dion (Host): </strong>Awesome. And before we close out, I have one question for you actually it's more like two questions for you. It seems like every guest we ask this question. When you do Native, what do you use to build your user interface? Are you a storyboard or coding person? </p><p>[00:30:07] <strong>Rob Kerr (Guest): </strong>So this is the code in storyboard question.  (laughter) </p><p>[00:30:10] <strong>Leo Dion (Host): </strong>Yeah. Yeah. </p><p>[00:30:11] <strong>Rob Kerr (Guest): </strong>Yeah, I don't think there's a middle ground answer to that other than saying...</p><p>[00:30:15] <strong>Leo Dion (Host): </strong>Well If  you're a coward if you're middle ground, but other than that...  (laughter) </p><p>[00:30:21] <strong>Rob Kerr (Guest): </strong>Well I'm not a coward, I I tend to use storyboards because I find it easier to support down the road kind of, you know, rather than writing a lot of code, but I have done both on the Apple platform. </p><p>[00:30:38] <strong>Leo Dion (Host): </strong>Yeah, I go back and forth on it, I think like if you're on a big team storyboards are really really difficult because you're going to end up with emerging issues.</p><p>[00:30:47] <strong>Rob Kerr (Guest): </strong>Yeah merging issues is you know, it's a big deal for storyboards. It gives a visual declarative thing about what's going on with the app kind of like it but it seems like, you know, we're moving toward more declarative UI on this with SwiftUI is doing  that's what Flutter does with dart and it seems like the winds blowing in that direction.</p><p>[00:31:03] But if I you know, if I have a pretty standardized user user interface, I'll use a storyboard for that. It makes a lot of sense. </p><p>[00:31:09] <strong>Leo Dion (Host): </strong>Yeah, especially when you are first starting off. So yeah Swift UI - I was going to get into it. What do you think of SwiftUI?</p><p>[00:31:16] <strong>Rob Kerr (Guest): </strong>You know, it's a really good direction. It's to be seen but what I loaded up a development Mac with with the new version of Mac OS and installed xcode 11 on there and tried it out and and I really like it. The whole cycle where you In Mobile where you lay out your app screens and you know kind of get it working and then you know compiled build deploy to device and then you know washing repeat the most platforms are trying to deal with that react certainly is React Native as a platform that tries to address that and Flutter to an extent. I think they'll get there.</p><p>[00:31:52] But SwiftUI is aimed right at that and I think the way they're implemented that is is just right and you know, as you mentioned merge conflicts with UIKIt and so on and that's kind of solves that problem because it's just code at that point. Yeah, and I like the to definitely the split pane where you can make changes on the UI as if it was a storyboard and it updates the declarative code on the left side. I think that's really cool.</p><p>[00:32:14] <strong>Leo Dion (Host): </strong>I just hate that you need Catalina in order to really take advantage of it. Other than that, that's fantastic .</p><p>[00:32:22] <strong>Rob Kerr (Guest): </strong>It's temporary thing. It only supports iOS 13, which  means it's really not going to come into its own for, you know, a couple of years probably - it's right  direction. I like that direction. </p><p>[00:32:33] <strong>Leo Dion (Host): </strong>I mean if you're willing for an app to be in the App Store in October and November then I would totally recommend people look at Swift UI for their brand new app if they're willing to wait on it. I don't know like </p><p>[00:32:46] <strong>Rob Kerr (Guest): </strong>it's pretty buggy at the moment. So yeah, it is taking a risk, but certainly if you're starting something absolutely brand-new and you're comfortable only shipping for iOS 13 then sure. Why not? Yeah, </p><p>[00:32:58] <strong>Leo Dion (Host): </strong>that's what I meant. Of course. But yeah, so funny how out of this whole thing people were looking forward to iPad apps on the Mac and marzipan and like out of nowhere comes this like brand new and I love how it's completely severed. My some people aren't going to like it but it's completely severed from Objective-C.</p><p>[00:33:17] It takes advantage of like the whole Swift and Swift DLC stuff and creates a decently healthy way to build UIs because even it going back to the question going between storyboards and coding your own you I like I think a lot of people would, going back to [the] cross-platform  Development discussion, a lot of people like building their UI in HTML and it makes sense like CSS and HTML are just a lot easier to work with and having a declarative way to build your UI using Swift UI.</p><p>[00:33:50] It's a much more comfortable way because like storyboards all that stuff was like it's a black box like you can't go into that XML and figure out how to manually add like a button to user interface using storyboards. It's impossible. And then decode it like I do like the some of the stuff that they've added and last couple of years with constraints, but it's nowhere near as nice as what we've gotten with with declaratively building user interfaces and this is exactly the way user interfaces should be built. It makes total sense. </p><p>[00:34:26] <strong>Rob Kerr (Guest): </strong>A lot of people think so. Yeah. </p><p>[00:34:28] <strong>Leo Dion (Host): </strong>Well, thank you so much for coming on the show, and maybe we'll talk about the stuff again. </p><p>[00:34:34] <strong>Rob Kerr (Guest): </strong>Great. I've enjoyed being here. I appreciate the invitation and great conversation.</p><p>[00:34:38] Thank you. Yep. </p><p>[00:34:39] <strong>Leo Dion (Host): </strong>You're welcome.</p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 30 Jun 2019 04:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/c2631188/ef6383eb.mp3" length="17228118" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>2083</itunes:duration>
      <itunes:summary>In this episode we talk with Rob Kerr (@rekerrsive), mobile development consultant, about cross platform developer tools such as Ionic, React Native, Xamarin, Flutter, and others. We compare them with native Swift development and talk about how Swift UI might change that landscape.</itunes:summary>
      <itunes:subtitle>In this episode we talk with Rob Kerr (@rekerrsive), mobile development consultant, about cross platform developer tools such as Ionic, React Native, Xamarin, Flutter, and others. We compare them with native Swift development and talk about how Swift UI m</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Test-Driven Development with Joshua Greene and Michael Katz </title>
      <itunes:episode>15</itunes:episode>
      <itunes:title>Test-Driven Development with Joshua Greene and Michael Katz </itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">342c7763-32b7-4c65-8171-e8d2b6784c94</guid>
      <link>https://share.transistor.fm/s/eddb8632</link>
      <description>
        <![CDATA[<p><b>Guests</b></p><ul>
<li>
<a href="https://twitter.com/jrg_developer"><strong>Joshua Greene - @jrg_developer</strong></a><strong> - </strong><a href="https://www.raywenderlich.com"><strong>Senior Author for raywenderlich.com</strong></a>
</li>
<li>
<a href="https://twitter.com/themikekatz"><strong>Michael Katz - @themikekatz</strong></a><strong> - </strong><a href="https://www.raywenderlich.com"><strong>Senior Author for raywenderlich.com</strong></a>
</li>
</ul><p><b>Book - <a href="https://store.raywenderlich.com/products/ios-test-driven-development">iOS Test Driven Development</a></b></p><p><b>Links</b></p><ul>
<li><a href="https://github.com/Quick/Nimble">Nimble</a></li>
<li><a href="https://github.com/Quick/Quick">Quick</a></li>
</ul><p><b>Previous Episodes</b></p><ul><li><a href="https://share.transistor.fm/s/7247db7e">Episode 14: iOS App Architecutre </a></li></ul><p><b>Show Notes</b></p><p><strong>The Components of Test-Driven Development</strong></p><ul>
<li>Keep Your Iterations Small</li>
<li>Test First </li>
<li>Circular Progress of Testing and Developing Functionality</li>
<li>Avoid Testing other APIs (i.e. Integration Testing)</li>
<li>Use Mock Data for Outside Dependencies</li>
<li>Behavioral Driven Development vs XCTest</li>
</ul><p><strong>How to Encourage TDD in Your Team and Company</strong></p><ul>
<li>Make sure Maintainability and Specs are Met</li>
<li>Prevent Regressions with New Features</li>
<li>Regular Code Reviews</li>
<li>Tests Should Be Required Before Deployment</li>
<li>Encourage a Culture of Testing</li>
<li>Slow Add Tests to Projects Missing Them</li>
</ul><p><strong>Common Mistakes When Doing Test Driven Development</strong></p><ul>
<li>Following the <em>Golden Path</em>and not testing edge cases and errors</li>
<li>Following Test Coverage too strictly or not enough</li>
<li>Use Multiple Test Targets</li>
<li><strong>Write Tests First</strong></li>
</ul><p><strong>For Experimenting with New APIs</strong></p><ul>
<li>Use Spike Solutions to Experiment</li>
<li>Write Temporary Tests</li>
<li>Use Playground to Test Code</li>
</ul><p><strong>Continuous Integration Tools</strong></p><ul>
<li>Jenkins</li>
<li>Travis-CI</li>
<li>CircleCI</li>
<li>Xcode Server</li>
<li>Fastlane</li>
</ul><p><strong>WWDC and TDD</strong></p><ul>
<li>New Performance Tests</li>
<li>Test Plan for Xcode</li>
<li>SwiftUI, Live Previews, and Modeling</li>
</ul><p><a href="https://developer.apple.com/videos/play/wwdc2019/413/"><strong>WWDC 2019 - Testing in Xcode </strong></a></p><p><b>Social Media</b></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter - @brightdigit<br></strong></a><a href="http://facebook.com/brightdigit"><strong>Facebook - BrightDigit</strong></a></p><p><b><a href="https://www.instagram.com/brightdigit/"><strong>Brand New Instagram! - @brightdigit</strong></a></b></p><p><b>Full Transcription</b></p><p><strong>Leo Dion (Host): </strong>So hey guys, how's it going? </p><p>[00:00:01] <strong>Michael Katz (Guest): </strong>Great. How are you?</p><p>[00:00:02] <strong>Leo Dion (Host): </strong>Good good, just been trying to catch up with WWDC. What's your general thoughts so far. </p><p>[00:00:07] <strong>Michael Katz (Guest): </strong>It seems like this is about the biggest one we've had since they introduced Swift. There's just so much stuff. </p><p>[00:00:12] <strong>Leo Dion (Host): </strong>Yeah, that's exactly what I was thinking especially with the UI changes. So have you started investing money to buy a $1000 stand? </p><p>[00:00:20] <strong>Michael Katz (Guest): </strong>Yeah, I wish. Fortunately at my company, we actually do video editing. We have editing bays already have racks of Mac Pros. So I assume that those will get upgraded with the new machines at the fancy monitor so I can go downstairs and drool over them when I'm not actually. It's working on my MacBook. </p><p>[00:00:36] <strong>Leo Dion (Host): </strong>Yeah, I mean that's the thing about these devices. They're not for developers like there for video editing like massive 3d rendering that kind of stuff and big production companies </p><p>[00:00:45] <strong>Joshua Greene (Guest): </strong>Maybe if you're doing like 3D games or something as a developer. I could see it being really worthwhile but for business or Enterprise type apps it may be a little bit of an overkill which is definitely pretty awesome. But day to day maybe not so much. </p><p>[00:00:59] <strong>Leo Dion (Host): </strong>Yeah, exactly. So if people want to tweet at us or we're also at brightdigit on Twitter at brightdigit on Instagram and Facebook. Let us know your thoughts on WWDC and any thoughts you might have about all the new stuff that's coming  out.</p><p>[00:01:15] Guys, so apparently you have a book coming out pretty soon. Is that correct? So go ahead and introduce yourselves to let me know a little bit about this book. </p><p>[00:01:24] <strong>Joshua Greene (Guest): </strong>So my name is Joshua Greene. I am a longtime author for RayWenderlich.com</p><p>[00:01:30] I've done everything from creating tutorials to books to videos. This is a new project that we're putting together to teach test-driven development it's called <em>iOS Test-Driven Development by Tutorials</em> </p><p>[00:01:45] <strong>Michael Katz (Guest): </strong>And I'm Michael Katz and similar story. I've been with Ray Wenderlich for a number of years and also done books tutorials.</p><p>[00:01:53] Spoke at the RW Devcon. Haven't done any screen cast yet, but maybe someday and they are passionate about test-driven development and we both came I think independently to the idea of writing a testing book and editor-in-chief put us together. And here we are most of the way through it.</p><p>[00:02:11] Just getting ready to finally finish it up. </p><p>[00:02:13] <strong>Leo Dion (Host): </strong>So test-driven development, I remember once it was like almost more than half decade ago, probably almost 10 years ago, I went to a conference in Chicago and I think it was Bob Martin who gave a talk on test-driven development the idea being like first you write your test and then you write your code.</p><p>[00:02:33] Is that kind of the gist of it or what are the components of test-driven development? What exactly does that mean? </p><p>[00:02:39] <strong>Joshua Greene (Guest): </strong>Yeah, definitely writing tests first is definitely a big part of it. Keeping iterations small. I think test-driven development is all about, you know, writing one small thing you write a small test to implement something that you need to get implemented.</p><p>[00:02:54] You show the test actually doesn't pass you implement. Whatever code is required to get it the pass and then you verify it passes. And you just repeat this process over and over so that when you finally, you know, got your app out not only have you got all the features written you've got all of the tests that you're going to need alongside it but it's not like you just write all the tests in advance. It's literally a small step by a small step is kind of what makes it different and special. </p><p>[00:03:20] <strong>Michael Katz (Guest): </strong>It's a circle you just go over and over again at a little test and yet add some code to fix that test and you test the next piece and you add the code for that and so on so you're always in lockstep. </p><p>[00:03:31] <strong>Leo Dion (Host): </strong>So the problem I have had with test-driven development and iOS is some of the stuff that is pertaining to like the UI or perhaps like test-driven development, sometimes you have different screen sizes, obviously, you might have to deal with something like core data or networking. How do you overcome those challenges when you're trying to do test-driven development?</p><p>[00:03:57] <strong>Michael Katz (Guest): </strong>I think we think about using TDD. Is that it really forces you to think about what your code is doing? And so if you want to make sure that your code is testable and you're starting out with no code. You're going to write your code in a way that is so if you have a dependency on something external to the system like a database or an API or screen, you'll want to write your code, you know, where you have a model. For instance any test the models all the business logic and the data logic and so on and then you can add the UI on top of that and then use a different type of testing like UI tests to handle making sure that the UI is correct, but that way you're certain that your business logic and state is consistent and complete before you even get there.</p><p>[00:04:36] <strong>Joshua Greene (Guest): </strong>With TDD, even if you're following TDD from the get-go there. It Is not to say that you have to test everything per say. For example, if you're going to be caught by another their way like at the compiler is going to throw an error if you actually hit an error while you're doing TDD that counts as a failed test </p><p>[00:04:54] with the UI portion, I typically look at it as if it's something I can configure in interface Builder, I don't, you know, not necessarily going to test that too heavy in terms of TDD because it's something I can see on screen and might mention there's other tests that I can use if I really want to put test in place for UI testing and so.</p><p>[00:05:14] TDD is really about you know, structuring your code in such a way that it is testable putting in protocols instead of talking directly to a database for like Mike says, you know talking to models that are structured in such a way that you can actually put test where you get the biggest bang for your buck as far as testing goes.</p><p>[00:05:30] <strong>Leo Dion (Host): </strong>So it sounds to me like we're talking here about kind of this is similar exactly to what we talked about in our last episode. When we talked about architecture and the fact that you need to architect your app around models, and it sounds like you're basically talking about what specially when it comes to Swift, you know, doing protocol oriented programming and using mocks in your testing as opposed to directly connecting with things like user interface or your database or your network. Is that what I'm hearing?</p><p>[00:06:00] <strong>Michael Katz (Guest): </strong>Exactly? In the book. I have a chapter where we're building at a fitness app and instead of connecting to Core Motion we basically build a protocol around it so we can Mock and stub data and act as if these things were happening live, but they're actually just being faked by the tests.</p><p>[00:06:17] And that's the type of thing you would use for a pretty much any kind of Hardware or network or UI that you can do in your code. So we separate the logic and the pieces that are about the app that are unique from the things that are handled by the operating system. </p><p>[00:06:29] <strong>Leo Dion (Host): </strong>Yeah, that's awesome. And I think that's one of the things I really like about TDD is that not only is it a great way to make sure your code actually works in all cases but it also encourages healthy architecture in the end because you're allowing for different things to be plugged in like I need a fake core motion or health kit or core data or whatever. I can fake it in my test so that way when I test the actual application like you said those are different tests, they're not tdd necessarily. </p><p>[00:07:01] <strong>Michael Katz (Guest): </strong>It's particularly true when you're testing error condition. So if you have a logic in your code that handles detecting when a call is dropped and then when you reconnect to restart something in this kind of hard to test especially in a CI situation where you're building and testing your app on a server that's plugged into gigabit Ethernet.</p><p>[00:07:20] So by using TDD enrollment you've already separated out that networking layer. So you can just Supply errors and different combinations and ordering of conditions to test out that your app is going to handle those appropriately even if they're very difficult to test it manually. </p><p>[00:07:34] <strong>Joshua Greene (Guest): </strong>Even if you're starting from a point where it so you don't have a completely new application.</p><p>[00:07:39] It's not to say that you can you know, not introduced EDD later on, you know, a lot of these same principles of you want to talk through something else. Even if you directly coupled yourself to talking to a networking calls or to core data or whatever, you know external API is. You're talking to that directly.</p><p>[00:07:57] You can break those dependencies and you know move your architecture in the right way, even after the app is already, you know launched or had a few versions out. We actually have some chapters in the book that go into details about taking a legacy based app and moving it towards TDD. So. I'd say that tdd is a great start if you're just kicking off an app, but even if you're not you can still use and consider TDD just you know in sure you're writing those tests first and again, you know, just making sure that you've got the correct coverage and bang for the buck as far as testing goes.</p><p>[00:08:28] <strong>Michael Katz (Guest): </strong>Yeah, you can start writing test at any time in this way. So even if you have an app and even if you have tests that you've written sort of after the fact to validate your behavior when you write new code you can start doing TDD at any point. </p><p>[00:08:40] <strong>Leo Dion (Host): </strong>So what are some challenges that people typically face when it comes to developing like in Xcode for iOS that's different from say like your typical vue.js developer or PHP or python?</p><p>[00:08:57] Do you guys typically use the standard packages like the XC test stuff that comes with xcode and iOS, or do you use your own custom packages for mocking or what are some challenges that you've seen people face specifically in iOS.</p><p>[00:09:12] <strong>Michael Katz (Guest): </strong>I  think Xcode default is he test case is a little bit cumbersome is very much based on the old Xunit or Junit type testing which is gosh has to be 20 years old at this point. Yeah. I think it's out of the 90s where it was a long time ago. </p><p>[00:09:28] <strong>Leo Dion (Host): </strong>It was a long time ago. </p><p>[00:09:29] <strong>Michael Katz (Guest): </strong>So my company we actually use a form of what we call behavioral driven testing. So it's more descriptive. We use of Frameworks called Quick and Nimble. Which is a layer on top of XC test, so you still run the test and xcode and you get the same reports out that you do but it's a different API and XCtest so it makes it you know easier to read the test understand but it also because it's a layer on top is slower than using actually test, directly so it's the trade-off there. </p><p>[00:09:59] <strong>Joshua Greene (Guest): </strong>I'm gonna have to disagree with you a little bit my in that I would say - yes Quick and Nimble is fantastic as far as making things more descriptive and so forth. But to me like it's more syntactical flavoring if you will then it is a strict requirement </p><p>[00:10:14] XCTest very much so used to be you had to have something in addition to it. You had to have some way to do like asynchronous testing the very first version of XCTest didn't really even provide a way to set up any sort of expectations. I'd say today though, if you really want to and a lot of my day-to-day stuff, I typically unless there's a strong reason why I like you're saying unless I need to do it and some sort of behavior descriptive way that I want to actually set upfront i don't necessarily opt for going to something else always just from the get-go. You can very much so use XCTest right out of the box and it is testing completes - well as complete as you can get with Swift and really having true mock support, but you can basically do everything with XCTest that you can do with Quick and Nimble.</p><p>[00:10:59] It's just like you said, maybe it's a little bit more verbose or maybe there's a little bit that you might do differently versus some of these BDD type Frameworks that give you some nice syntax.</p><p>[00:11:10] <strong>Leo Dion (Host): </strong>I've worked with like mocha for like nodejs and some JavaScript stuff. I think that's behavioral driven, but it sounds to me like Quick and Nimble gives you that like syntactical sugar in a good way to like explain what each test actually does.</p><p>[00:11:25] Where as XCTest doesn't give you that but it does give you the basic logic and API for doing just logical tests. Which is more or less what TDD is really driving at. Is that correct? </p><p>[00:11:37] <strong>Joshua Greene (Guest): </strong>Yeah, I'd say the XCTest doesn't give you the naming syntaxes or so forth or you know, like the nice thing about BDD and really the main difference, you know, but on the other end of the things I'm close to the plain vanilla here than Mike it sounds like. </p><p>[00:11:49] The nice thing about the BDD Frameworks like Quick and Nimble is it will provide you the ability to say okay here's a descriptive string describing what I'm actually trying to test here. You can do the same thing using method signatures and that's actually what we show in the book there.</p><p>[00:12:03] [That] is if you named your test correctly, you know describing what you're doing describing what is actually being tested in the expected outcome. You can get a lot of the same benefits from the just a vanilla XCTest. But like Mike said it's you know more so by naming conventions that you set up less so directly supported by XCTest itself.</p><p>[00:12:23] <strong>Leo Dion (Host): </strong>So I want to jump a little bit more into TDD and talk about some of the terminology and some of the stuff that's involved. So, we talked a little bit about like mocking what exactly is mocking and what's it used for when it comes to test driven development. If there's any other terms, I'm forgetting that are components of test driven development let me know. </p><p>[00:12:45] <strong>Michael Katz (Guest): </strong>Yeah, so. When you're running tests, there's a whole Suite of objects that are commonly called test doubles where basically you have an object. That's just for testing that parallels production code [or] main app code. </p><p>[00:13:03] So a mock is an object that behaves like the code. So for instance you have like a mock network connection or like an nsurl session. And if you supply a command to that like low data, your mock is responsible for handing back some set of fake data that you supplied to the test knows ahead of time what's going to happen and it's going to succeed or not with mocks in particular it is to verify that certain methods or behaviors happen along with that. So if you call we go back to the mock data URL idea that you would verify that the data was returned correctly or if an error was made if you set it to make an error that the error callback gets called and so on. You can also verify that certain methods are only called once or twice.</p><p>[00:13:49] So if you have a tertiary object further down so that when you save an object to a database you want to make sure that you're not saving that same thing twice so there's no duplication in the code. You can verify that using a mock by adding methods to count the number of times a method is called and so on. I 'm not sure that was clear but maybe Josh can help here.</p><p>[00:14:06] <strong>Joshua Greene (Guest): </strong>I agree with what you're saying there Mike the only sort of difference in my mind as far as Mocks vs. a test double there. A test double may not provide like verification that behavior like you verify that a sort of method was called.</p><p>[00:14:22] It may just accept those methods and just fill in as a dummy, you know, the simplest way to make just like a test double in my mind would be you know subclass something out or conform to a protocol and then implement nothing. And those are basically the two options that you have in Swift is you either implement a protocol to create a mock and then you can you know, just pass that to either be an initializer or you know setting it as a property.</p><p>[00:14:46] Or you can subclass something else and again, you know pass it in but one way or another you have to be able to insert yourself in this hierarchy of getting these calls. When creating a mock there we're actually validating whatever happens happens in you know, maybe the correct order or maybe it's that it happens the correct count whatever you're trying to actually accomplish at the time there we're not just filling, you know, just a dummy requirement.</p><p>[00:15:10] But with that said, sometimes we could create a mock it may be that the initializer requires you to have some sort of other object, but you don't really care you're going to intercept calls and inbetween you might just create something. That's just an empty object. And that's what I call like a test double dummy to me.</p><p>[00:15:25] So I guess in a way my point is the mocks are a special type of test double that provides verification. </p><p>[00:15:31] <strong>Leo Dion (Host): </strong>So basically like for instance, I have a protocol or a mock of what a network called would be guy just like create a mock that pretends to do the call and then have like a Boolean property says like is called and just set it to true and then that way I can verify that that network call has been made.</p><p>[00:15:48] Is that kind of what we're talking about? </p><p>[00:15:50] <strong>Joshua Greene (Guest): </strong>Yeah, then the simplest thing would be holding onto a boolean and just saying that it was actually called. But you know, especially networking. You're likely going to need to return something. Right?  </p><p>[00:16:01] <strong>Leo Dion (Host): </strong>Right exactly. So then you return some sort of like mock data based on that network call of some sort.</p><p>[00:16:07] <strong>Joshua Greene (Guest): </strong>Exactly and with the mocks or that test double is you could actually have like with a real networking API you got to go hit a server. It's going to take however long to connect to that get data parse it return it that you've got the full stack there right. Versus with the mock you can immediately like asynchronously pass something back or if you want to turn it in for you know, take it from an asynchronous to synchronous call.</p><p>[00:16:29] You can do that with the mark. So you eliminate having to talk to anything real then actually using a mock. It makes your test much much more faster and much more consistent as far as what you expect to happen. Given certain criteria, you can set up the criteria. </p><p>[00:16:44] <strong>Michael Katz (Guest): </strong>Yeah, absolutely. </p><p>[00:16:45] <strong>Leo Dion (Host): </strong>Are there any libraries or Frameworks that you would recommend to help create those mocks or do you just pretty much implement whatever protocol is going to pretend to do like networking or database or whatever it is?</p><p>[00:16:58] <strong>Joshua Greene (Guest): </strong>For me, I guess the sort of nicety that Objective-C had but Swift is actively moving away from this is the ability to actually have mocked that are true mocks and that you say all right i want to mock this object and it magically happens for you using things like OC mock was a very popular framework that allows you to do this in Objective C. </p><p>[00:17:20] This isn't possible in Swift, because the Swift team actively wants to move things from the runtime to compile time and for production code that makes a lot of sense because anything that you can move to compile time, you can catch an error at compile time you throw an error it doesn't build, you know, the developer has to fix that.</p><p>[00:17:38] If something gets all the way through runtime, you likely have a runtime crash. So they're really trying to get rid of those runtime crashes. Unfortunately, that makes it basically impossible to do what OC mock was doing with just pure Swift because there's nothing to you know, put yourself in between as far as a runtime that you can actually intercept messages there.</p><p>[00:17:57] Instead, you basically only have two choices you either conform to a protocol and implement all the methods there or you take whatever real object is and subclass that and just override whatever behavior such as you know, what you're talking about maybe you capture a boolean instead of whatever the superclass - the real object would have been doing.</p><p>[00:18:17] Now with that said you could definitely do those by hand. You have no choice as far as doing this at compile time. You have to compile something so you can write it by hand or there are a few niceties out there like Sourcery for example is a nice tool that allows you to write code. Do it if I hear you say here's a template that I want to use anytime that I see this protocol, you know, that may be conformed some auto-generating or something Sourcery can write that for you.</p><p>[00:18:42] So one way or another it has to be compiled time, but there are tools out there to help with some of you know, the harder bits of that or the annoying bits or boiler plate bits.</p><p>[00:18:50] <strong>Leo Dion (Host): </strong>I've just started playing around with Sourcery. Sourcery is amazing what you could do with it. Yeah. Usually what I end up doing is just implementing that protocol in creating my own mock in the test Library.</p><p>[00:19:00] That's essentially what I do because like you said you Don't have that ability that Dynamic runtime ability to just like create something on the fly like you can with Objective C. </p><p>[00:19:10] So what are some other tips or tricks you have when it comes to like TDD besides mocking trying to think if there's anything else that I think is a major component when it comes to TDD but mocking is a big one and if you have a healthy architecture then I think you're good with mocking.</p><p>[00:19:29] I guess we'll jump into like what are some ways you can encourage TDD in your team like what are some ways that like somebody who was higher up like a CTO or a manager can make sure that we're getting the tests that we need and that code is actually being tested and  written in a way that it is testable.</p><p>[00:19:50] <strong>Michael Katz (Guest): </strong>There are two things especially if you're talking to a CTO that they like to hear is that maintainability and scalability and making sure that you have a complete working set of tests allows the team to be more efficient and add features faster in the future.</p><p>[00:20:05] So. You know that you can add something without worrying that you're going to break existing behavior, especially as the app gets more complicated over time we want to make sure that as people come and go in the organization or just as you forget because you're doing a million different things that there's some requirement that doesn't get lost because it was never really written down in a spec somewhere but there's a test for it </p><p>[00:20:26] <strong>Joshua Greene (Guest): </strong>Yep, definitely maintainability is a win factor if you will as far as not having test versus having test. Also, prevention of regressions, you know Mike is kind of get up there to if you don't have any tests not only is it something that it may be that nobody on the team understands how it is because tests form documentation and maybe that later on you introduce bugs that you fixed in V1 yeah, that's a sad thing to actually see.</p><p>[00:20:53] The wins though are definitely those lines. As far as how to get your team to do it though. I'd say first and foremost, especially if a team of any sort of no more than just a couple developers you should be promoting code reviews and in the code reviews if I you know, see somebody on my team and they put out a code review that doesn't have any unit tests I'm immediately rejecting it and it has to have tests in order to even be considered to get into production.</p><p>[00:21:21] How do you know if it works without tests? So there is sort of a you know, a philosophy of you must do testing, but you can obviously write unit tests without following TDD. I'd say as far as if you want to get your team to do tdd and you know bring up this test first mentality and get the benefits that TDD. Provides with, you know you write tests for as you're going to get better coverage and typically things will be designed any more testable way versus trying to do that after the fact I'd say the first and foremost your team needs to know how to do it.</p><p>[00:21:52] If your team doesn't know test-driven development or know and just have any experience in that area. It's hard to say go and do test-driven development with that said, you know Mike and I you know part of the reason for writing this book was we looked at the community and said, you know iOS community knows about unit testing knows, you know about these things to some extent but we don't think there is a strong grasp for how TDD works. So that was a strong part of why we're actually putting this book together. </p><p>[00:22:20] So I'd say check out, you know things like art book check out the raywenderlich.com for you know, where you can go to get these materials to help get your team up to speed but you know, once they're up to speed keep the bar high make sure that there's something in place like code reviews to make sure that it's actually happening </p><p>[00:22:35] <strong>Michael Katz (Guest): </strong>When I've rolled it out on teams, usually what I do is I write a feature in with the team there so that we can serve like a pair programming or four-person five-person programming to see the process and go through it because it can be a little strange if you're not used to doing it a little slow in the first few days until you get the hang but once you do it, it's just like, you know the second nature because it's just this iterative step. </p><p>[00:22:59] So having someone that can can walk through and hold hands a little bit also makes it easy to make that transition. I also have a culture of testing that really wants this and is willing to allow developers the ability to take it on. </p><p>[00:23:13] <strong>Joshua Greene (Guest): </strong>I'd say as far as things that prevented him from going to this especially if the apps been around forever. If you've got an app and it's got you know several hundred or thousands or more classes in it just saying, all right, you've got to do this cycle where you build and compile every 30 seconds or are you know faster than that. It may take several minutes to compile the full app let alone run all the tests, right? </p><p>[00:23:36] You do have to do this in a way where one thing we are actually going to release a chapter on this in the book even is that you need design not only the core app in a way that it can be testable but there's nothing wrong with actually saying you can pull out a module and so you've got a feature that's implemented just in a module and all of the code for what it's doing is within that module any sort of externalities to its using this third party API or maybe even a different piece of your core application you can put a protocol in between. </p><p>[00:24:05] So breaking things up in a way that okay. Here's this small bit here. That's a modulo a different piece that you accomplished has a different goal or something else. That's a different module. So you go from this huge monolithic app to alright a set of libraries or frameworks, whatever you're often used based on your use cases that can be compiled to really quickly - you can run the test against them really quickly and you know can be changed pretty much independently without affecting the rest of the code base. That's fantastic. That's the you know, code that isn't tightly coupled anymore. It's Loosely coupled to the rest of the system. It's testable. It's something that can scale, you know as much as you need it to. </p><p>[00:24:42] <strong>Michael Katz (Guest): </strong>One of the things that was a game-changer for me and doing this with a existing large app was just accepting that it was okay to do TDD for just a new code and any file that was their existing did not go through that level of rigor and acceptance as it is and then in the book also we described how to like slowly add tests for the things that were there before so you can mix and match TDD even though what works best in doing it, you know straight up fresh you can add it into your process slowly and not have to to write, you know, three thousands tests before you can start writing that code because usually you're under some deadline to get something out there.</p><p>[00:25:22] <strong>Leo Dion (Host): </strong>Yeah. I think that's a big part about introducing anything new to a project. I'm thinking about it this week with SwiftUI like when they introduce Swift at you shouldn't go in and rewrite your whole project to be in Swift. If it's an Objective-C. You shouldn't, you know rip out every storyboard and convert everything to SwiftUI for a thousand reasons and I think just with tdd like you shouldn't just go in and start writing tests for all of your existing code.</p><p>[00:25:46] Like I think it's just easier to slowly introduce it as you write new features and naturally over time. It will develop that like, most of your code will end up being test driven in the end. </p><p>[00:25:56] <strong>Joshua Greene (Guest): </strong>Definitely, you don't need to just jump into here and go right to the deep end. You can start by just adding it like Mike said for new code only or identify hey, here's this core part of the app. We really need to make sure that this works or we need to make some changes around this. How can we make sure we're not going to break in the process? There's nothing that says you can't put in test place there. As you need them and identify them you don't have to go back and just add I actually be against this at my teens come and said we want to introduce TDD.</p><p>[00:26:26] I'm going to add tests throughout the app for I can chip it in new features. No, that's not a good thing to do. It's probably going to be something that you're going to waste time with that. So adding them slowly over time, especially for the very big apps may actually be not only the best choice, but maybe the only choice if you actually want to, you know, continue moving forward with delivering and, you know creating new features at the same time.</p><p>[00:26:48] <strong>Leo Dion (Host): </strong>So what are some other mistakes you think either with teams that are getting started with test-driven development or just teams that are doing thinking that they're doing test-driven development but actually, they're not. What are some common mistakes that teams and developers make when they're doing TDD.</p><p>[00:27:04] <strong>Michael Katz (Guest): </strong>So I think you know one of the mistakes is only covering the happy path or golden path through the code. So you want to make sure that you're testing the edge cases and different combinations of parameters. And if you find that your function has, you know, 4200, you know different combinations of input and that's kind of a code smell there. It may be an indication to break things up into smaller pieces. </p><p>[00:27:30] <strong>Leo Dion (Host): </strong>How do you create enough test data so that you know, you're testing as many cases as possible. Like let's say you have a function that takes in addition like does addition does that mean that I need to test every addition problem possible? What would be a great way to like break that down? </p><p>[00:27:45] <strong>Michael Katz (Guest): </strong>With math, you've got your basic, you know, making sure that you have you cover zeros in a negative values values at the max, you know max float, max int those type of things when you're doing it. Those are probably more academic. I think most apps are in the putting JSON into a table sort.</p><p>[00:28:03] So for their you know, your bounds or more, you know, did you get back an empty array to have text you know for a field that's 6 megabytes when you're expecting just a sentence, you know those type of things. It's probably a good thing. I get help somewhere. That's like common things to look out for for that.</p><p>[00:28:21] If you have code like an if statement or branch or you know, I do catch those are pretty good indicators that you should have a test at least covers that so you can use the test coverage as a way of least making sure that you've executing the code. </p><p>[00:28:34] <strong>Leo Dion (Host): </strong>Yeah. That's what it sounds like is like you're basically talking about test coverage which if I understand correctly is like basically making sure that every line of code. Xcode does it actually I don't know about you guys but it seems to do a decent job as far as the test coverage instrumentation. But like it'll actually tell you if you've covered every if branch and or switch case in every line of code and it gives you a percentage that's seems pretty reasonable.</p><p>[00:28:59] <strong>Michael Katz (Guest): </strong>Yeah, and that's a good start. It won't cover the out-of-bounds issues or overflows underflows the errors with formatting and things like that because you're still running that code so you can. End of what the function is trying to do as well, but it just covers a good way to start.</p><p>[00:29:14] The tricky thing we've run into with test coverage those we have multiple test targets and [with] Xcode I haven't found a good way to sort of sum up the coverage across multiple test targets and maybe the new test plans handles that. </p><p>[00:29:27] <strong>Leo Dion (Host): </strong>What do you mean by test targets just briefly? </p><p>[00:29:30] <strong>Michael Katz (Guest): </strong>So just like you can have multiple targets you can build Frameworks within a project, multiple apps. You can build multiple test targets so you can group your tests based upon you can have test that just cover networking or databases or test the cover each framework and a test suite and in your scheme, you can specify that when you run the test action which test targets get run and so we've broken up our app into many different libraries and each library has its own test target so we can either run all the suites or if we're just modifying code and one of the Frameworks we just run the tests when you're doing a local development. </p><p>[00:30:07] <strong>Joshua Greene (Guest): </strong>That's a good reason to you know, as far as why coverage isn't the end-all be-all story. So it may not be you know, especially in Mike's case there because he has the multiple targets. It isn't actually a true story in that they could be that you've got two targets and they've each got 50%/50% do you have a hundred percent coverage?</p><p>[00:30:25] Is there any overlap between the two of them? It's difficult to say right? So I'd say another sort of common errors, especially as far as management goes is you know giving too much emphasis to test coverage. Test coverage should be something you look at, you know, if you have zero percent versus 80% Obviously I'm going to say oh 80% is probably covering more than you know, the closer you get to the zero, but it's not the most important metric if you said as a manager I'm going to say a hundred percent of you know, the code must be covered by tests. I don't think that's a good goal. </p><p>[00:30:58] You know, it doesn't tell you actually, you know very much for what that is. All it indicates is a particular line of code was executed. You know, was it executed with the right inputs?</p><p>[00:31:07] Was it executed with all the edge cases? Like Mike is talking about. I don't know. So my point is use it as a starting point. But that's not the only thing you should consider you got to look at, you know are the cases that are the edge cases are the normal flows are all you know, all of the entire picture is what you should actually be considering </p><p>[00:31:26] The nice thing about doing tdd, by the way instead of instead of writing these after the fact and adding the unit test on after you've got all the if else has or switches or whatever your code is. Tdd says in order to add new functionality after I did the test first. So, TDD for the most part is going to be more likely to get you in a case where you've covered all of these edge cases. Now in certain times, especially with things like the out of bounds, you might miss something right and you might miss you know, here's this one weird edge case we didn't think about and you know, we accidentally wrote code that either car forms correctly that's a win or you know misses this thing without actually having to test in place. That's okay even after you do TDD or you know, you have test if you identify you're missing a test add a test. Nothing that says you can always go back and you know add more where you need. But you know knowing up front you got most of everything. That's what tdd, you know provides you a stronger guarantee of than just adding test willy-nilly.</p><p>[00:32:24]<strong>Marker<br></strong><br></p><p>[00:32:24] <strong>Leo Dion (Host): </strong>One question I have when I am right starting to write like an app is sometimes I need to like explore a particular API and just to make sure I have the functionality of that API down before I've even gotten to a point to understand what to test .</p><p>[00:32:42] So for instance you're talking like Core Motion or  something like HealthKit. I need to understand how HealthKit expects me to get the data back. So I end up actually writing the code before I've even written the test. How do you explore tdd when you're like working with a brand new API that you've never even worked with?</p><p>[00:33:03] <strong>Joshua Greene (Guest): </strong>For me, there's nothing wrong with doing a spike solution. So I've never used an API before how good is my code actually going to be the first go around that, you know, I'm actually touching or using this thing. Maybe it's okay, but probably not great. Right I can go and explore this in a test app and compiling just a few classes is going to be way quicker than compiling my entire code base and just play with it.</p><p>[00:33:27] You know, maybe n after I'm done I can look back and say well this isn't actually too bad and then I might actually rewrite whatever I did in a TDD fashion and you know improve it from there or I might say, oh this code is I mean, at least I learned what I was trying to learn but is actually pretty off o it's not going in my case.</p><p>[00:33:45] I can entirely throw away a spike that takes me just an hour a couple hours to do and go back and then you know implement it in a correct TDD fashion. That's you know, one way the other way is if you do have some notion of what it does and how it's supposed to work. You can write tests in advance that has the, you know, just the behavior of how the thing works that you're trying to interact with things like Core Motion might be harder because it's actually doing asyncronous things or requiring you to move around in the real world for those sorts of bits. They are, you know, it may be that you can't do a lot of the testing upfront but other sorts of APIs like maybe making REST-ful calls. You can wait on a REST-ful call and you know, accept that I'm just going to write these tests as a temporary thing to see what it returns.</p><p>[00:34:31] There's nothing wrong with doing that and you know just using as experimentation. So for me if I'm touching a new thing. Those are my go to either use a spike solution that I may or may not keep and if I do keep I'm gonna have to write tests for it in a TDD fashion or just write tests that are temporary tests that are for exploratory only and throw them away after I'm done because they're not actually useful or that might be useful for learning but they're not useful for keeping in my project forever.</p><p>[00:34:57] <strong>Leo Dion (Host): </strong>It's almost like a rewrite like you basically explore the solution right and that kind of does the behavior more or less and then go through and then rewrite it with a little bit more architecture and tests within it. Is that what I'm hearing? </p><p>[00:35:10] <strong>Joshua Greene (Guest): </strong>You never used it before right so if you've never used an API, you're not going to know how it works or what's best to do with it.</p><p>[00:35:16] What's not to do? Your first solution probably isn't going to be great. So a lot of times it's worthwhile to throw out whatever you're doing because it's more of a learning thing than it is anything that's going to truly be worthwhile to put in production </p><p>[00:35:29] <strong>Michael Katz (Guest): </strong>100% for me. One of the things that we have in our workspace is we have a couple of playgrounds where we actually import the local frameworks for our project. So if we wanted to like test how something new interacts with the code, we've already built we have that ready to go. And so you can spend some time in the playground adding a code calling a new API seeing how that goes. Obviously it doesn't really work for Hardware dependent things but for learning Core Location or you know something with SQL some like that there's definitely work there.</p><p>[00:36:00] <strong>Leo Dion (Host): </strong>Is there anything else you wanted to talk about when it comes to test driven development before I ask more about WWDC?</p><p>[00:36:07] <strong>Michael Katz (Guest): </strong>I think it's becoming more and more industry standard especially and I'm sure it's been in the server-side world for a long time. But in terms of the app world, I know I've had conversations with my executives and they start talking about it in a meeting and it usually takes a couple of years before they learn about whatever the cool new thing is.</p><p>[00:36:27] I think going forward we're going to be living in a world where this is more natural and each year Xcode gets a little bit better in terms of supporting the test, especially in terms of test running and test performance. One thing we do really touch on is how you some kind of continuous integration going which I think is it's not essential because TDD is just a methodology but in practice if you have a server that's always running these tests it makes it easier to catch things and make sure that there are issues with merges or multiple developers working on something not everyone may run all the tests before they submit. </p><p>[00:37:01] <strong>Leo Dion (Host): </strong>Yeah, let's talk a little bit about continuous integration. What have you done as far as that's concerned? Like I've done like open source projects on GitHub and I pretty much run Travis CI for doing my you know, simple essentially running my tests and testing out on different operating systems and different devices.</p><p>[00:37:21] What are some ways that you've done continuous integration? How have you seen benefits from that.</p><p>[00:37:25] <strong>Michael Katz (Guest): </strong>We use Jenkins. So we have a local server that actually we have I don't know how many Mac Mini nodes that run our tests and we use is a product called FastLane, which I think is pretty common in the iOS world.</p><p>[00:37:39] It's kind of like the. It sits on top of xcode build and allows you to basically specify the configuration for building and testing and you can run multiple tests and upload iTunes connect and things like that as part of the service but the important thing there is we have probably about 50 Engineers that contribute to our code base and so it's essential to make sure that what we have is always in good working order.</p><p>[00:38:04] But if you're working at a small team or you're working by yourself Travis or Circle CI are good solutions. Xcode server is what Apple keeps pushing. I haven't seen anyone use that in practice, but it has all the Integrations with Xcode so if you're able to use it and you're just building an iOS or macOS app and I think it's going to work out pretty well for you because it knows all about Esco tests and code coverage and things like that. </p><p>[00:38:30] <strong>Leo Dion (Host): </strong>Yeah, I've worked with xcode server. I've actually set up a virtual machine to run whatever the feud like, I'll probably set up one in a week or so and using Catalina and then put Xcode server on it. It's pretty decent like there's a lot to it some tweaking and things that you have to consider when you set up your project. But yeah, it works pretty decent. </p><p>[00:38:48] <strong>Joshua Greene (Guest): </strong>Yeah, so I basically used all of them myself and I'd say given the choice between using nothing or picking at random even right the picking at random is gonna be better than using nothing at all. Especially, you know, the more engineers you have the bigger bang you actually get for wanting to use continuous integration and sure at some point it's just strictly required frankly.</p><p>[00:39:10] You know, like my team is pretty large, but if you have maybe one or two developers. Especially if you're following TDD, I don't know they're strictly required for for that size per se because you do want to be constantly just running all over the test. Right? But once you reach a certain point where you have to ensure, okay, the projects is just so large or you got so many engineers that you really need to have some safeguards and checks in place other than just you know, Cowboy. Everybody agrees this is the right way to do it. Continuous integration definitely is a requirement. You know and Xcode server is a good one will be you know, especially if you have a Mac Mini or something around or haven't done it with the Virtual Machine although the now I want to try so that's a good suggestion but it's an easy thing. </p><p>[00:39:52] <strong>Leo Dion (Host): </strong>Especially if you're doing anything or if you're going to be trying new stuff, you probably want to put Catalina on a VM instead of running it on your main machine that's living on the edge. If you want to do that </p><p>[00:40:02] <strong>Joshua Greene (Guest): </strong>The Mac minis are still pretty cheap so our group uses just a small fleet of Mac minis as well there, but the cheaper route is going the VM for sure. So I guess maybe parallel or something depending on how you're running it and I suppose maybe have to buy the parallelization software. I don't know. </p><p>[00:40:20] <strong>Leo Dion (Host): </strong>Yeah, great guys. Thank you so much for coming on the show before we close out. You want to talk a little bit about your book again. </p><p>[00:40:28] <strong>Michael Katz (Guest): </strong>It's an iOS test-driven development by tutorials available now at raywenderlich.com we have an early access that has the first third of the book and the whole book should be out in the fall. It covers the whole TDD from starting from nothing. We have a whole big piece networking because there's almost every app has that and It's tricky to test we have chapters on how to work with a big legacy app especially where legacy means no tests or insufficient testing.</p><p>[00:41:00] It goes through each of these things step by step. So you follow along. So unlike other books that may give a more theoretical approach emerges say here's what your code should look like. This is very step by step you follow along going through adding the tests adding the test targets, the whole shebang.</p><p>[00:41:17] <strong>Joshua Greene (Guest): </strong>I'd say we've done the hard work for you going through the Apple apis and you know have a very experienced developers that you know Mike and I've used this for several years. Mike has used this for several years here. You don't want to learn all this stuff by yourself. It'll take longer. It'll be harder to do if you want to get up to speed and get running quickly.</p><p>[00:41:36] It's the best way just get the book save yourself some time. Save yourself some sanity happened to not go through those Apple API to yourself and get running quickly and  get up to speed quickly. </p><p>[00:41:47] <strong>Leo Dion (Host): </strong>Yeah, that's fantastic. I'm really looking forward to take a look at this book and just learning some new ways to do TDD when it comes to Xcode and iOS.</p><p>[00:41:57] Before we close out, do you guys have any thoughts on some of the new stuff from WWDC and how it pertains to test driven development? </p><p>[00:42:06] <strong>Michael Katz (Guest): </strong>Unfortunately, it's about six hours from the what's new in testing in Xcode. So what I've seen so far as just been what they've covered in the what's new in Xcode and the State of the Union, but it looks like that there's some new methods for.</p><p>[00:42:21] We've had the measuring blocks before that measure the time your test takes I know it looks like you can also measure memory usage, disk usage, and a bunch of other things which is really great. They're not really like for test-driven development. But when you're building reliability tests and performance tests, and with those are going to be pretty handy and then there's this new thing called test plans which basically.</p><p>[00:42:42] Takes all the management of tests from the scheme into a separate top-level object in your project and you can rerun your tests against multiple configurations. So you can run all your tests in English and then run all the tests again in French or whatever in one click. They also have four different test ordering and different runtime checks and all that so it takes one manual step out of the loop, but I wouldn't necessarily think it's super revolutionary. What do you think Josh? </p><p>[00:43:10] <strong>Joshua Greene (Guest): </strong>I'm totally with you as far as the new features. They look pretty cool for Xcode goes. I also wanted to point out that with the SwiftUI they've really gone very much so protocol oriented development.</p><p>[00:43:22] That's great news for things like testing and test driven development here anytime you can put in a protocol in place you can insert a mock very easily into whatever set up it is so I'm very excited to see how they've really architected SwiftUI and it looks like just testing is going to be a lot easier compared to some of the previous solutions where you've got concrete class and just figuring out how you're going to mock that out, you know via subclass or whatnot may have been very difficult with pure UIKit.</p><p>[00:43:51] It looks like SwiftUI is gonna help us quite a bit in the testing realm. So I'm very excited to dive into it and learn everything about you know all the cool stuff that they've done and cool stuff to make developers lives easier with testing. </p><p>[00:44:04] <strong>Leo Dion (Host): </strong>You're talking about the difference between like UIViewController, which is this class.</p><p>[00:44:08] You have to subclass as opposed to like the SwiftUI View protocol which you can pretty much mock up any way you want to right? </p><p>[00:44:15] <strong>Joshua Greene (Guest): </strong>Exactly yeah, the whole UIViewController thing, there's so much concrete stuff in that it's difficult to truly create great mocks with it. I mean you can, you know, create a mock by subclassing uiviewcontroller, right.</p><p>[00:44:28] But had that been a protocol, I mean you can combine protocols so much more easily combined functionality using protocol oriented development. But creating mocks the same thing, you can just conform to that Mark and just Implement whatever message you actually care about and it's just much more elegant solution a much more, you know architecture friendly solution going with the protocol then something concrete.</p><p>[00:44:51] So it's a very good job on Apple's part and you know it's my take on it so. I haven't gone to see all of the defaults implementations of stuff they give you but you know, hopefully it's saying and you know, from what I have seen it looks very well done. </p><p>[00:45:04] <strong>Michael Katz (Guest): </strong>One of those things with SwiftUI is there really is from sample code encouraging people to build out separate model classes, which also makes it easier to test.</p><p>[00:45:13] <strong>Leo Dion (Host): </strong>You're talking like the previews </p><p>[00:45:15] <strong>Michael Katz (Guest): </strong>Yeah with the previews and you can have being able to put multiple previews in the assistant.</p><p>[00:45:20] I think I'll make it great for testing not really testing but just visualizing the different conditions before you even get to the point of completing your code, but the at state you can have a separate model class be bound to your view as you to put that logic of loading data and changing data and so on outside of the view of other people couple and their view controllers the setting of The View State and then the model state so it's exciting. </p><p>[00:45:45] <strong>Joshua Greene (Guest): </strong>It looks like they're kind of pushing Mike component-based development too you know, I've seen like so many developers where you need a custom UI tap controller or something, right. So you go and instead of right and something your own which may be in the right solution you go and you try to reuse Apple's and then you're trying to hack internal methods and so forth and it's just hard to do with all the Swift you I think they provided a same base and said look you need new components. You can create something. I'm excited for testing because the idea being you could split those off into their own library. Here's this component that I need or set of components that I need and just pull them in as you need and ensure that they're tested really well. So again, it just looks really well done. So the team did a really good job as far as everything I've seen so far. </p><p>[00:46:25] <strong>Leo Dion (Host): </strong>Well, thank you so much guys for coming on the program if folks want to get ahold of you. What's the best way?</p><p>[00:46:31] <strong>Joshua Greene (Guest): </strong>Sure so if you have questions about the book, we actually have a forum on raywenderlich.com. We actively monitor that as authors of the book.</p><p>[00:46:41] So if you have questions ask them there and we will actually answer you for anything that you've got. If you want to reach us personally jrgdeveloper@gmail.com by email or Twitter @grg_developer </p><p>[00:46:53] <strong>Michael Katz (Guest): </strong>and I'm @themikekatz on Twitter </p><p>[00:46:56] <strong>Leo Dion (Host): </strong>well, thank you so much for coming on and maybe we'll talk again later about Swift UI and how that's going to improve test-driven development.</p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guests</b></p><ul>
<li>
<a href="https://twitter.com/jrg_developer"><strong>Joshua Greene - @jrg_developer</strong></a><strong> - </strong><a href="https://www.raywenderlich.com"><strong>Senior Author for raywenderlich.com</strong></a>
</li>
<li>
<a href="https://twitter.com/themikekatz"><strong>Michael Katz - @themikekatz</strong></a><strong> - </strong><a href="https://www.raywenderlich.com"><strong>Senior Author for raywenderlich.com</strong></a>
</li>
</ul><p><b>Book - <a href="https://store.raywenderlich.com/products/ios-test-driven-development">iOS Test Driven Development</a></b></p><p><b>Links</b></p><ul>
<li><a href="https://github.com/Quick/Nimble">Nimble</a></li>
<li><a href="https://github.com/Quick/Quick">Quick</a></li>
</ul><p><b>Previous Episodes</b></p><ul><li><a href="https://share.transistor.fm/s/7247db7e">Episode 14: iOS App Architecutre </a></li></ul><p><b>Show Notes</b></p><p><strong>The Components of Test-Driven Development</strong></p><ul>
<li>Keep Your Iterations Small</li>
<li>Test First </li>
<li>Circular Progress of Testing and Developing Functionality</li>
<li>Avoid Testing other APIs (i.e. Integration Testing)</li>
<li>Use Mock Data for Outside Dependencies</li>
<li>Behavioral Driven Development vs XCTest</li>
</ul><p><strong>How to Encourage TDD in Your Team and Company</strong></p><ul>
<li>Make sure Maintainability and Specs are Met</li>
<li>Prevent Regressions with New Features</li>
<li>Regular Code Reviews</li>
<li>Tests Should Be Required Before Deployment</li>
<li>Encourage a Culture of Testing</li>
<li>Slow Add Tests to Projects Missing Them</li>
</ul><p><strong>Common Mistakes When Doing Test Driven Development</strong></p><ul>
<li>Following the <em>Golden Path</em>and not testing edge cases and errors</li>
<li>Following Test Coverage too strictly or not enough</li>
<li>Use Multiple Test Targets</li>
<li><strong>Write Tests First</strong></li>
</ul><p><strong>For Experimenting with New APIs</strong></p><ul>
<li>Use Spike Solutions to Experiment</li>
<li>Write Temporary Tests</li>
<li>Use Playground to Test Code</li>
</ul><p><strong>Continuous Integration Tools</strong></p><ul>
<li>Jenkins</li>
<li>Travis-CI</li>
<li>CircleCI</li>
<li>Xcode Server</li>
<li>Fastlane</li>
</ul><p><strong>WWDC and TDD</strong></p><ul>
<li>New Performance Tests</li>
<li>Test Plan for Xcode</li>
<li>SwiftUI, Live Previews, and Modeling</li>
</ul><p><a href="https://developer.apple.com/videos/play/wwdc2019/413/"><strong>WWDC 2019 - Testing in Xcode </strong></a></p><p><b>Social Media</b></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter - @brightdigit<br></strong></a><a href="http://facebook.com/brightdigit"><strong>Facebook - BrightDigit</strong></a></p><p><b><a href="https://www.instagram.com/brightdigit/"><strong>Brand New Instagram! - @brightdigit</strong></a></b></p><p><b>Full Transcription</b></p><p><strong>Leo Dion (Host): </strong>So hey guys, how's it going? </p><p>[00:00:01] <strong>Michael Katz (Guest): </strong>Great. How are you?</p><p>[00:00:02] <strong>Leo Dion (Host): </strong>Good good, just been trying to catch up with WWDC. What's your general thoughts so far. </p><p>[00:00:07] <strong>Michael Katz (Guest): </strong>It seems like this is about the biggest one we've had since they introduced Swift. There's just so much stuff. </p><p>[00:00:12] <strong>Leo Dion (Host): </strong>Yeah, that's exactly what I was thinking especially with the UI changes. So have you started investing money to buy a $1000 stand? </p><p>[00:00:20] <strong>Michael Katz (Guest): </strong>Yeah, I wish. Fortunately at my company, we actually do video editing. We have editing bays already have racks of Mac Pros. So I assume that those will get upgraded with the new machines at the fancy monitor so I can go downstairs and drool over them when I'm not actually. It's working on my MacBook. </p><p>[00:00:36] <strong>Leo Dion (Host): </strong>Yeah, I mean that's the thing about these devices. They're not for developers like there for video editing like massive 3d rendering that kind of stuff and big production companies </p><p>[00:00:45] <strong>Joshua Greene (Guest): </strong>Maybe if you're doing like 3D games or something as a developer. I could see it being really worthwhile but for business or Enterprise type apps it may be a little bit of an overkill which is definitely pretty awesome. But day to day maybe not so much. </p><p>[00:00:59] <strong>Leo Dion (Host): </strong>Yeah, exactly. So if people want to tweet at us or we're also at brightdigit on Twitter at brightdigit on Instagram and Facebook. Let us know your thoughts on WWDC and any thoughts you might have about all the new stuff that's coming  out.</p><p>[00:01:15] Guys, so apparently you have a book coming out pretty soon. Is that correct? So go ahead and introduce yourselves to let me know a little bit about this book. </p><p>[00:01:24] <strong>Joshua Greene (Guest): </strong>So my name is Joshua Greene. I am a longtime author for RayWenderlich.com</p><p>[00:01:30] I've done everything from creating tutorials to books to videos. This is a new project that we're putting together to teach test-driven development it's called <em>iOS Test-Driven Development by Tutorials</em> </p><p>[00:01:45] <strong>Michael Katz (Guest): </strong>And I'm Michael Katz and similar story. I've been with Ray Wenderlich for a number of years and also done books tutorials.</p><p>[00:01:53] Spoke at the RW Devcon. Haven't done any screen cast yet, but maybe someday and they are passionate about test-driven development and we both came I think independently to the idea of writing a testing book and editor-in-chief put us together. And here we are most of the way through it.</p><p>[00:02:11] Just getting ready to finally finish it up. </p><p>[00:02:13] <strong>Leo Dion (Host): </strong>So test-driven development, I remember once it was like almost more than half decade ago, probably almost 10 years ago, I went to a conference in Chicago and I think it was Bob Martin who gave a talk on test-driven development the idea being like first you write your test and then you write your code.</p><p>[00:02:33] Is that kind of the gist of it or what are the components of test-driven development? What exactly does that mean? </p><p>[00:02:39] <strong>Joshua Greene (Guest): </strong>Yeah, definitely writing tests first is definitely a big part of it. Keeping iterations small. I think test-driven development is all about, you know, writing one small thing you write a small test to implement something that you need to get implemented.</p><p>[00:02:54] You show the test actually doesn't pass you implement. Whatever code is required to get it the pass and then you verify it passes. And you just repeat this process over and over so that when you finally, you know, got your app out not only have you got all the features written you've got all of the tests that you're going to need alongside it but it's not like you just write all the tests in advance. It's literally a small step by a small step is kind of what makes it different and special. </p><p>[00:03:20] <strong>Michael Katz (Guest): </strong>It's a circle you just go over and over again at a little test and yet add some code to fix that test and you test the next piece and you add the code for that and so on so you're always in lockstep. </p><p>[00:03:31] <strong>Leo Dion (Host): </strong>So the problem I have had with test-driven development and iOS is some of the stuff that is pertaining to like the UI or perhaps like test-driven development, sometimes you have different screen sizes, obviously, you might have to deal with something like core data or networking. How do you overcome those challenges when you're trying to do test-driven development?</p><p>[00:03:57] <strong>Michael Katz (Guest): </strong>I think we think about using TDD. Is that it really forces you to think about what your code is doing? And so if you want to make sure that your code is testable and you're starting out with no code. You're going to write your code in a way that is so if you have a dependency on something external to the system like a database or an API or screen, you'll want to write your code, you know, where you have a model. For instance any test the models all the business logic and the data logic and so on and then you can add the UI on top of that and then use a different type of testing like UI tests to handle making sure that the UI is correct, but that way you're certain that your business logic and state is consistent and complete before you even get there.</p><p>[00:04:36] <strong>Joshua Greene (Guest): </strong>With TDD, even if you're following TDD from the get-go there. It Is not to say that you have to test everything per say. For example, if you're going to be caught by another their way like at the compiler is going to throw an error if you actually hit an error while you're doing TDD that counts as a failed test </p><p>[00:04:54] with the UI portion, I typically look at it as if it's something I can configure in interface Builder, I don't, you know, not necessarily going to test that too heavy in terms of TDD because it's something I can see on screen and might mention there's other tests that I can use if I really want to put test in place for UI testing and so.</p><p>[00:05:14] TDD is really about you know, structuring your code in such a way that it is testable putting in protocols instead of talking directly to a database for like Mike says, you know talking to models that are structured in such a way that you can actually put test where you get the biggest bang for your buck as far as testing goes.</p><p>[00:05:30] <strong>Leo Dion (Host): </strong>So it sounds to me like we're talking here about kind of this is similar exactly to what we talked about in our last episode. When we talked about architecture and the fact that you need to architect your app around models, and it sounds like you're basically talking about what specially when it comes to Swift, you know, doing protocol oriented programming and using mocks in your testing as opposed to directly connecting with things like user interface or your database or your network. Is that what I'm hearing?</p><p>[00:06:00] <strong>Michael Katz (Guest): </strong>Exactly? In the book. I have a chapter where we're building at a fitness app and instead of connecting to Core Motion we basically build a protocol around it so we can Mock and stub data and act as if these things were happening live, but they're actually just being faked by the tests.</p><p>[00:06:17] And that's the type of thing you would use for a pretty much any kind of Hardware or network or UI that you can do in your code. So we separate the logic and the pieces that are about the app that are unique from the things that are handled by the operating system. </p><p>[00:06:29] <strong>Leo Dion (Host): </strong>Yeah, that's awesome. And I think that's one of the things I really like about TDD is that not only is it a great way to make sure your code actually works in all cases but it also encourages healthy architecture in the end because you're allowing for different things to be plugged in like I need a fake core motion or health kit or core data or whatever. I can fake it in my test so that way when I test the actual application like you said those are different tests, they're not tdd necessarily. </p><p>[00:07:01] <strong>Michael Katz (Guest): </strong>It's particularly true when you're testing error condition. So if you have a logic in your code that handles detecting when a call is dropped and then when you reconnect to restart something in this kind of hard to test especially in a CI situation where you're building and testing your app on a server that's plugged into gigabit Ethernet.</p><p>[00:07:20] So by using TDD enrollment you've already separated out that networking layer. So you can just Supply errors and different combinations and ordering of conditions to test out that your app is going to handle those appropriately even if they're very difficult to test it manually. </p><p>[00:07:34] <strong>Joshua Greene (Guest): </strong>Even if you're starting from a point where it so you don't have a completely new application.</p><p>[00:07:39] It's not to say that you can you know, not introduced EDD later on, you know, a lot of these same principles of you want to talk through something else. Even if you directly coupled yourself to talking to a networking calls or to core data or whatever, you know external API is. You're talking to that directly.</p><p>[00:07:57] You can break those dependencies and you know move your architecture in the right way, even after the app is already, you know launched or had a few versions out. We actually have some chapters in the book that go into details about taking a legacy based app and moving it towards TDD. So. I'd say that tdd is a great start if you're just kicking off an app, but even if you're not you can still use and consider TDD just you know in sure you're writing those tests first and again, you know, just making sure that you've got the correct coverage and bang for the buck as far as testing goes.</p><p>[00:08:28] <strong>Michael Katz (Guest): </strong>Yeah, you can start writing test at any time in this way. So even if you have an app and even if you have tests that you've written sort of after the fact to validate your behavior when you write new code you can start doing TDD at any point. </p><p>[00:08:40] <strong>Leo Dion (Host): </strong>So what are some challenges that people typically face when it comes to developing like in Xcode for iOS that's different from say like your typical vue.js developer or PHP or python?</p><p>[00:08:57] Do you guys typically use the standard packages like the XC test stuff that comes with xcode and iOS, or do you use your own custom packages for mocking or what are some challenges that you've seen people face specifically in iOS.</p><p>[00:09:12] <strong>Michael Katz (Guest): </strong>I  think Xcode default is he test case is a little bit cumbersome is very much based on the old Xunit or Junit type testing which is gosh has to be 20 years old at this point. Yeah. I think it's out of the 90s where it was a long time ago. </p><p>[00:09:28] <strong>Leo Dion (Host): </strong>It was a long time ago. </p><p>[00:09:29] <strong>Michael Katz (Guest): </strong>So my company we actually use a form of what we call behavioral driven testing. So it's more descriptive. We use of Frameworks called Quick and Nimble. Which is a layer on top of XC test, so you still run the test and xcode and you get the same reports out that you do but it's a different API and XCtest so it makes it you know easier to read the test understand but it also because it's a layer on top is slower than using actually test, directly so it's the trade-off there. </p><p>[00:09:59] <strong>Joshua Greene (Guest): </strong>I'm gonna have to disagree with you a little bit my in that I would say - yes Quick and Nimble is fantastic as far as making things more descriptive and so forth. But to me like it's more syntactical flavoring if you will then it is a strict requirement </p><p>[00:10:14] XCTest very much so used to be you had to have something in addition to it. You had to have some way to do like asynchronous testing the very first version of XCTest didn't really even provide a way to set up any sort of expectations. I'd say today though, if you really want to and a lot of my day-to-day stuff, I typically unless there's a strong reason why I like you're saying unless I need to do it and some sort of behavior descriptive way that I want to actually set upfront i don't necessarily opt for going to something else always just from the get-go. You can very much so use XCTest right out of the box and it is testing completes - well as complete as you can get with Swift and really having true mock support, but you can basically do everything with XCTest that you can do with Quick and Nimble.</p><p>[00:10:59] It's just like you said, maybe it's a little bit more verbose or maybe there's a little bit that you might do differently versus some of these BDD type Frameworks that give you some nice syntax.</p><p>[00:11:10] <strong>Leo Dion (Host): </strong>I've worked with like mocha for like nodejs and some JavaScript stuff. I think that's behavioral driven, but it sounds to me like Quick and Nimble gives you that like syntactical sugar in a good way to like explain what each test actually does.</p><p>[00:11:25] Where as XCTest doesn't give you that but it does give you the basic logic and API for doing just logical tests. Which is more or less what TDD is really driving at. Is that correct? </p><p>[00:11:37] <strong>Joshua Greene (Guest): </strong>Yeah, I'd say the XCTest doesn't give you the naming syntaxes or so forth or you know, like the nice thing about BDD and really the main difference, you know, but on the other end of the things I'm close to the plain vanilla here than Mike it sounds like. </p><p>[00:11:49] The nice thing about the BDD Frameworks like Quick and Nimble is it will provide you the ability to say okay here's a descriptive string describing what I'm actually trying to test here. You can do the same thing using method signatures and that's actually what we show in the book there.</p><p>[00:12:03] [That] is if you named your test correctly, you know describing what you're doing describing what is actually being tested in the expected outcome. You can get a lot of the same benefits from the just a vanilla XCTest. But like Mike said it's you know more so by naming conventions that you set up less so directly supported by XCTest itself.</p><p>[00:12:23] <strong>Leo Dion (Host): </strong>So I want to jump a little bit more into TDD and talk about some of the terminology and some of the stuff that's involved. So, we talked a little bit about like mocking what exactly is mocking and what's it used for when it comes to test driven development. If there's any other terms, I'm forgetting that are components of test driven development let me know. </p><p>[00:12:45] <strong>Michael Katz (Guest): </strong>Yeah, so. When you're running tests, there's a whole Suite of objects that are commonly called test doubles where basically you have an object. That's just for testing that parallels production code [or] main app code. </p><p>[00:13:03] So a mock is an object that behaves like the code. So for instance you have like a mock network connection or like an nsurl session. And if you supply a command to that like low data, your mock is responsible for handing back some set of fake data that you supplied to the test knows ahead of time what's going to happen and it's going to succeed or not with mocks in particular it is to verify that certain methods or behaviors happen along with that. So if you call we go back to the mock data URL idea that you would verify that the data was returned correctly or if an error was made if you set it to make an error that the error callback gets called and so on. You can also verify that certain methods are only called once or twice.</p><p>[00:13:49] So if you have a tertiary object further down so that when you save an object to a database you want to make sure that you're not saving that same thing twice so there's no duplication in the code. You can verify that using a mock by adding methods to count the number of times a method is called and so on. I 'm not sure that was clear but maybe Josh can help here.</p><p>[00:14:06] <strong>Joshua Greene (Guest): </strong>I agree with what you're saying there Mike the only sort of difference in my mind as far as Mocks vs. a test double there. A test double may not provide like verification that behavior like you verify that a sort of method was called.</p><p>[00:14:22] It may just accept those methods and just fill in as a dummy, you know, the simplest way to make just like a test double in my mind would be you know subclass something out or conform to a protocol and then implement nothing. And those are basically the two options that you have in Swift is you either implement a protocol to create a mock and then you can you know, just pass that to either be an initializer or you know setting it as a property.</p><p>[00:14:46] Or you can subclass something else and again, you know pass it in but one way or another you have to be able to insert yourself in this hierarchy of getting these calls. When creating a mock there we're actually validating whatever happens happens in you know, maybe the correct order or maybe it's that it happens the correct count whatever you're trying to actually accomplish at the time there we're not just filling, you know, just a dummy requirement.</p><p>[00:15:10] But with that said, sometimes we could create a mock it may be that the initializer requires you to have some sort of other object, but you don't really care you're going to intercept calls and inbetween you might just create something. That's just an empty object. And that's what I call like a test double dummy to me.</p><p>[00:15:25] So I guess in a way my point is the mocks are a special type of test double that provides verification. </p><p>[00:15:31] <strong>Leo Dion (Host): </strong>So basically like for instance, I have a protocol or a mock of what a network called would be guy just like create a mock that pretends to do the call and then have like a Boolean property says like is called and just set it to true and then that way I can verify that that network call has been made.</p><p>[00:15:48] Is that kind of what we're talking about? </p><p>[00:15:50] <strong>Joshua Greene (Guest): </strong>Yeah, then the simplest thing would be holding onto a boolean and just saying that it was actually called. But you know, especially networking. You're likely going to need to return something. Right?  </p><p>[00:16:01] <strong>Leo Dion (Host): </strong>Right exactly. So then you return some sort of like mock data based on that network call of some sort.</p><p>[00:16:07] <strong>Joshua Greene (Guest): </strong>Exactly and with the mocks or that test double is you could actually have like with a real networking API you got to go hit a server. It's going to take however long to connect to that get data parse it return it that you've got the full stack there right. Versus with the mock you can immediately like asynchronously pass something back or if you want to turn it in for you know, take it from an asynchronous to synchronous call.</p><p>[00:16:29] You can do that with the mark. So you eliminate having to talk to anything real then actually using a mock. It makes your test much much more faster and much more consistent as far as what you expect to happen. Given certain criteria, you can set up the criteria. </p><p>[00:16:44] <strong>Michael Katz (Guest): </strong>Yeah, absolutely. </p><p>[00:16:45] <strong>Leo Dion (Host): </strong>Are there any libraries or Frameworks that you would recommend to help create those mocks or do you just pretty much implement whatever protocol is going to pretend to do like networking or database or whatever it is?</p><p>[00:16:58] <strong>Joshua Greene (Guest): </strong>For me, I guess the sort of nicety that Objective-C had but Swift is actively moving away from this is the ability to actually have mocked that are true mocks and that you say all right i want to mock this object and it magically happens for you using things like OC mock was a very popular framework that allows you to do this in Objective C. </p><p>[00:17:20] This isn't possible in Swift, because the Swift team actively wants to move things from the runtime to compile time and for production code that makes a lot of sense because anything that you can move to compile time, you can catch an error at compile time you throw an error it doesn't build, you know, the developer has to fix that.</p><p>[00:17:38] If something gets all the way through runtime, you likely have a runtime crash. So they're really trying to get rid of those runtime crashes. Unfortunately, that makes it basically impossible to do what OC mock was doing with just pure Swift because there's nothing to you know, put yourself in between as far as a runtime that you can actually intercept messages there.</p><p>[00:17:57] Instead, you basically only have two choices you either conform to a protocol and implement all the methods there or you take whatever real object is and subclass that and just override whatever behavior such as you know, what you're talking about maybe you capture a boolean instead of whatever the superclass - the real object would have been doing.</p><p>[00:18:17] Now with that said you could definitely do those by hand. You have no choice as far as doing this at compile time. You have to compile something so you can write it by hand or there are a few niceties out there like Sourcery for example is a nice tool that allows you to write code. Do it if I hear you say here's a template that I want to use anytime that I see this protocol, you know, that may be conformed some auto-generating or something Sourcery can write that for you.</p><p>[00:18:42] So one way or another it has to be compiled time, but there are tools out there to help with some of you know, the harder bits of that or the annoying bits or boiler plate bits.</p><p>[00:18:50] <strong>Leo Dion (Host): </strong>I've just started playing around with Sourcery. Sourcery is amazing what you could do with it. Yeah. Usually what I end up doing is just implementing that protocol in creating my own mock in the test Library.</p><p>[00:19:00] That's essentially what I do because like you said you Don't have that ability that Dynamic runtime ability to just like create something on the fly like you can with Objective C. </p><p>[00:19:10] So what are some other tips or tricks you have when it comes to like TDD besides mocking trying to think if there's anything else that I think is a major component when it comes to TDD but mocking is a big one and if you have a healthy architecture then I think you're good with mocking.</p><p>[00:19:29] I guess we'll jump into like what are some ways you can encourage TDD in your team like what are some ways that like somebody who was higher up like a CTO or a manager can make sure that we're getting the tests that we need and that code is actually being tested and  written in a way that it is testable.</p><p>[00:19:50] <strong>Michael Katz (Guest): </strong>There are two things especially if you're talking to a CTO that they like to hear is that maintainability and scalability and making sure that you have a complete working set of tests allows the team to be more efficient and add features faster in the future.</p><p>[00:20:05] So. You know that you can add something without worrying that you're going to break existing behavior, especially as the app gets more complicated over time we want to make sure that as people come and go in the organization or just as you forget because you're doing a million different things that there's some requirement that doesn't get lost because it was never really written down in a spec somewhere but there's a test for it </p><p>[00:20:26] <strong>Joshua Greene (Guest): </strong>Yep, definitely maintainability is a win factor if you will as far as not having test versus having test. Also, prevention of regressions, you know Mike is kind of get up there to if you don't have any tests not only is it something that it may be that nobody on the team understands how it is because tests form documentation and maybe that later on you introduce bugs that you fixed in V1 yeah, that's a sad thing to actually see.</p><p>[00:20:53] The wins though are definitely those lines. As far as how to get your team to do it though. I'd say first and foremost, especially if a team of any sort of no more than just a couple developers you should be promoting code reviews and in the code reviews if I you know, see somebody on my team and they put out a code review that doesn't have any unit tests I'm immediately rejecting it and it has to have tests in order to even be considered to get into production.</p><p>[00:21:21] How do you know if it works without tests? So there is sort of a you know, a philosophy of you must do testing, but you can obviously write unit tests without following TDD. I'd say as far as if you want to get your team to do tdd and you know bring up this test first mentality and get the benefits that TDD. Provides with, you know you write tests for as you're going to get better coverage and typically things will be designed any more testable way versus trying to do that after the fact I'd say the first and foremost your team needs to know how to do it.</p><p>[00:21:52] If your team doesn't know test-driven development or know and just have any experience in that area. It's hard to say go and do test-driven development with that said, you know Mike and I you know part of the reason for writing this book was we looked at the community and said, you know iOS community knows about unit testing knows, you know about these things to some extent but we don't think there is a strong grasp for how TDD works. So that was a strong part of why we're actually putting this book together. </p><p>[00:22:20] So I'd say check out, you know things like art book check out the raywenderlich.com for you know, where you can go to get these materials to help get your team up to speed but you know, once they're up to speed keep the bar high make sure that there's something in place like code reviews to make sure that it's actually happening </p><p>[00:22:35] <strong>Michael Katz (Guest): </strong>When I've rolled it out on teams, usually what I do is I write a feature in with the team there so that we can serve like a pair programming or four-person five-person programming to see the process and go through it because it can be a little strange if you're not used to doing it a little slow in the first few days until you get the hang but once you do it, it's just like, you know the second nature because it's just this iterative step. </p><p>[00:22:59] So having someone that can can walk through and hold hands a little bit also makes it easy to make that transition. I also have a culture of testing that really wants this and is willing to allow developers the ability to take it on. </p><p>[00:23:13] <strong>Joshua Greene (Guest): </strong>I'd say as far as things that prevented him from going to this especially if the apps been around forever. If you've got an app and it's got you know several hundred or thousands or more classes in it just saying, all right, you've got to do this cycle where you build and compile every 30 seconds or are you know faster than that. It may take several minutes to compile the full app let alone run all the tests, right? </p><p>[00:23:36] You do have to do this in a way where one thing we are actually going to release a chapter on this in the book even is that you need design not only the core app in a way that it can be testable but there's nothing wrong with actually saying you can pull out a module and so you've got a feature that's implemented just in a module and all of the code for what it's doing is within that module any sort of externalities to its using this third party API or maybe even a different piece of your core application you can put a protocol in between. </p><p>[00:24:05] So breaking things up in a way that okay. Here's this small bit here. That's a modulo a different piece that you accomplished has a different goal or something else. That's a different module. So you go from this huge monolithic app to alright a set of libraries or frameworks, whatever you're often used based on your use cases that can be compiled to really quickly - you can run the test against them really quickly and you know can be changed pretty much independently without affecting the rest of the code base. That's fantastic. That's the you know, code that isn't tightly coupled anymore. It's Loosely coupled to the rest of the system. It's testable. It's something that can scale, you know as much as you need it to. </p><p>[00:24:42] <strong>Michael Katz (Guest): </strong>One of the things that was a game-changer for me and doing this with a existing large app was just accepting that it was okay to do TDD for just a new code and any file that was their existing did not go through that level of rigor and acceptance as it is and then in the book also we described how to like slowly add tests for the things that were there before so you can mix and match TDD even though what works best in doing it, you know straight up fresh you can add it into your process slowly and not have to to write, you know, three thousands tests before you can start writing that code because usually you're under some deadline to get something out there.</p><p>[00:25:22] <strong>Leo Dion (Host): </strong>Yeah. I think that's a big part about introducing anything new to a project. I'm thinking about it this week with SwiftUI like when they introduce Swift at you shouldn't go in and rewrite your whole project to be in Swift. If it's an Objective-C. You shouldn't, you know rip out every storyboard and convert everything to SwiftUI for a thousand reasons and I think just with tdd like you shouldn't just go in and start writing tests for all of your existing code.</p><p>[00:25:46] Like I think it's just easier to slowly introduce it as you write new features and naturally over time. It will develop that like, most of your code will end up being test driven in the end. </p><p>[00:25:56] <strong>Joshua Greene (Guest): </strong>Definitely, you don't need to just jump into here and go right to the deep end. You can start by just adding it like Mike said for new code only or identify hey, here's this core part of the app. We really need to make sure that this works or we need to make some changes around this. How can we make sure we're not going to break in the process? There's nothing that says you can't put in test place there. As you need them and identify them you don't have to go back and just add I actually be against this at my teens come and said we want to introduce TDD.</p><p>[00:26:26] I'm going to add tests throughout the app for I can chip it in new features. No, that's not a good thing to do. It's probably going to be something that you're going to waste time with that. So adding them slowly over time, especially for the very big apps may actually be not only the best choice, but maybe the only choice if you actually want to, you know, continue moving forward with delivering and, you know creating new features at the same time.</p><p>[00:26:48] <strong>Leo Dion (Host): </strong>So what are some other mistakes you think either with teams that are getting started with test-driven development or just teams that are doing thinking that they're doing test-driven development but actually, they're not. What are some common mistakes that teams and developers make when they're doing TDD.</p><p>[00:27:04] <strong>Michael Katz (Guest): </strong>So I think you know one of the mistakes is only covering the happy path or golden path through the code. So you want to make sure that you're testing the edge cases and different combinations of parameters. And if you find that your function has, you know, 4200, you know different combinations of input and that's kind of a code smell there. It may be an indication to break things up into smaller pieces. </p><p>[00:27:30] <strong>Leo Dion (Host): </strong>How do you create enough test data so that you know, you're testing as many cases as possible. Like let's say you have a function that takes in addition like does addition does that mean that I need to test every addition problem possible? What would be a great way to like break that down? </p><p>[00:27:45] <strong>Michael Katz (Guest): </strong>With math, you've got your basic, you know, making sure that you have you cover zeros in a negative values values at the max, you know max float, max int those type of things when you're doing it. Those are probably more academic. I think most apps are in the putting JSON into a table sort.</p><p>[00:28:03] So for their you know, your bounds or more, you know, did you get back an empty array to have text you know for a field that's 6 megabytes when you're expecting just a sentence, you know those type of things. It's probably a good thing. I get help somewhere. That's like common things to look out for for that.</p><p>[00:28:21] If you have code like an if statement or branch or you know, I do catch those are pretty good indicators that you should have a test at least covers that so you can use the test coverage as a way of least making sure that you've executing the code. </p><p>[00:28:34] <strong>Leo Dion (Host): </strong>Yeah. That's what it sounds like is like you're basically talking about test coverage which if I understand correctly is like basically making sure that every line of code. Xcode does it actually I don't know about you guys but it seems to do a decent job as far as the test coverage instrumentation. But like it'll actually tell you if you've covered every if branch and or switch case in every line of code and it gives you a percentage that's seems pretty reasonable.</p><p>[00:28:59] <strong>Michael Katz (Guest): </strong>Yeah, and that's a good start. It won't cover the out-of-bounds issues or overflows underflows the errors with formatting and things like that because you're still running that code so you can. End of what the function is trying to do as well, but it just covers a good way to start.</p><p>[00:29:14] The tricky thing we've run into with test coverage those we have multiple test targets and [with] Xcode I haven't found a good way to sort of sum up the coverage across multiple test targets and maybe the new test plans handles that. </p><p>[00:29:27] <strong>Leo Dion (Host): </strong>What do you mean by test targets just briefly? </p><p>[00:29:30] <strong>Michael Katz (Guest): </strong>So just like you can have multiple targets you can build Frameworks within a project, multiple apps. You can build multiple test targets so you can group your tests based upon you can have test that just cover networking or databases or test the cover each framework and a test suite and in your scheme, you can specify that when you run the test action which test targets get run and so we've broken up our app into many different libraries and each library has its own test target so we can either run all the suites or if we're just modifying code and one of the Frameworks we just run the tests when you're doing a local development. </p><p>[00:30:07] <strong>Joshua Greene (Guest): </strong>That's a good reason to you know, as far as why coverage isn't the end-all be-all story. So it may not be you know, especially in Mike's case there because he has the multiple targets. It isn't actually a true story in that they could be that you've got two targets and they've each got 50%/50% do you have a hundred percent coverage?</p><p>[00:30:25] Is there any overlap between the two of them? It's difficult to say right? So I'd say another sort of common errors, especially as far as management goes is you know giving too much emphasis to test coverage. Test coverage should be something you look at, you know, if you have zero percent versus 80% Obviously I'm going to say oh 80% is probably covering more than you know, the closer you get to the zero, but it's not the most important metric if you said as a manager I'm going to say a hundred percent of you know, the code must be covered by tests. I don't think that's a good goal. </p><p>[00:30:58] You know, it doesn't tell you actually, you know very much for what that is. All it indicates is a particular line of code was executed. You know, was it executed with the right inputs?</p><p>[00:31:07] Was it executed with all the edge cases? Like Mike is talking about. I don't know. So my point is use it as a starting point. But that's not the only thing you should consider you got to look at, you know are the cases that are the edge cases are the normal flows are all you know, all of the entire picture is what you should actually be considering </p><p>[00:31:26] The nice thing about doing tdd, by the way instead of instead of writing these after the fact and adding the unit test on after you've got all the if else has or switches or whatever your code is. Tdd says in order to add new functionality after I did the test first. So, TDD for the most part is going to be more likely to get you in a case where you've covered all of these edge cases. Now in certain times, especially with things like the out of bounds, you might miss something right and you might miss you know, here's this one weird edge case we didn't think about and you know, we accidentally wrote code that either car forms correctly that's a win or you know misses this thing without actually having to test in place. That's okay even after you do TDD or you know, you have test if you identify you're missing a test add a test. Nothing that says you can always go back and you know add more where you need. But you know knowing up front you got most of everything. That's what tdd, you know provides you a stronger guarantee of than just adding test willy-nilly.</p><p>[00:32:24]<strong>Marker<br></strong><br></p><p>[00:32:24] <strong>Leo Dion (Host): </strong>One question I have when I am right starting to write like an app is sometimes I need to like explore a particular API and just to make sure I have the functionality of that API down before I've even gotten to a point to understand what to test .</p><p>[00:32:42] So for instance you're talking like Core Motion or  something like HealthKit. I need to understand how HealthKit expects me to get the data back. So I end up actually writing the code before I've even written the test. How do you explore tdd when you're like working with a brand new API that you've never even worked with?</p><p>[00:33:03] <strong>Joshua Greene (Guest): </strong>For me, there's nothing wrong with doing a spike solution. So I've never used an API before how good is my code actually going to be the first go around that, you know, I'm actually touching or using this thing. Maybe it's okay, but probably not great. Right I can go and explore this in a test app and compiling just a few classes is going to be way quicker than compiling my entire code base and just play with it.</p><p>[00:33:27] You know, maybe n after I'm done I can look back and say well this isn't actually too bad and then I might actually rewrite whatever I did in a TDD fashion and you know improve it from there or I might say, oh this code is I mean, at least I learned what I was trying to learn but is actually pretty off o it's not going in my case.</p><p>[00:33:45] I can entirely throw away a spike that takes me just an hour a couple hours to do and go back and then you know implement it in a correct TDD fashion. That's you know, one way the other way is if you do have some notion of what it does and how it's supposed to work. You can write tests in advance that has the, you know, just the behavior of how the thing works that you're trying to interact with things like Core Motion might be harder because it's actually doing asyncronous things or requiring you to move around in the real world for those sorts of bits. They are, you know, it may be that you can't do a lot of the testing upfront but other sorts of APIs like maybe making REST-ful calls. You can wait on a REST-ful call and you know, accept that I'm just going to write these tests as a temporary thing to see what it returns.</p><p>[00:34:31] There's nothing wrong with doing that and you know just using as experimentation. So for me if I'm touching a new thing. Those are my go to either use a spike solution that I may or may not keep and if I do keep I'm gonna have to write tests for it in a TDD fashion or just write tests that are temporary tests that are for exploratory only and throw them away after I'm done because they're not actually useful or that might be useful for learning but they're not useful for keeping in my project forever.</p><p>[00:34:57] <strong>Leo Dion (Host): </strong>It's almost like a rewrite like you basically explore the solution right and that kind of does the behavior more or less and then go through and then rewrite it with a little bit more architecture and tests within it. Is that what I'm hearing? </p><p>[00:35:10] <strong>Joshua Greene (Guest): </strong>You never used it before right so if you've never used an API, you're not going to know how it works or what's best to do with it.</p><p>[00:35:16] What's not to do? Your first solution probably isn't going to be great. So a lot of times it's worthwhile to throw out whatever you're doing because it's more of a learning thing than it is anything that's going to truly be worthwhile to put in production </p><p>[00:35:29] <strong>Michael Katz (Guest): </strong>100% for me. One of the things that we have in our workspace is we have a couple of playgrounds where we actually import the local frameworks for our project. So if we wanted to like test how something new interacts with the code, we've already built we have that ready to go. And so you can spend some time in the playground adding a code calling a new API seeing how that goes. Obviously it doesn't really work for Hardware dependent things but for learning Core Location or you know something with SQL some like that there's definitely work there.</p><p>[00:36:00] <strong>Leo Dion (Host): </strong>Is there anything else you wanted to talk about when it comes to test driven development before I ask more about WWDC?</p><p>[00:36:07] <strong>Michael Katz (Guest): </strong>I think it's becoming more and more industry standard especially and I'm sure it's been in the server-side world for a long time. But in terms of the app world, I know I've had conversations with my executives and they start talking about it in a meeting and it usually takes a couple of years before they learn about whatever the cool new thing is.</p><p>[00:36:27] I think going forward we're going to be living in a world where this is more natural and each year Xcode gets a little bit better in terms of supporting the test, especially in terms of test running and test performance. One thing we do really touch on is how you some kind of continuous integration going which I think is it's not essential because TDD is just a methodology but in practice if you have a server that's always running these tests it makes it easier to catch things and make sure that there are issues with merges or multiple developers working on something not everyone may run all the tests before they submit. </p><p>[00:37:01] <strong>Leo Dion (Host): </strong>Yeah, let's talk a little bit about continuous integration. What have you done as far as that's concerned? Like I've done like open source projects on GitHub and I pretty much run Travis CI for doing my you know, simple essentially running my tests and testing out on different operating systems and different devices.</p><p>[00:37:21] What are some ways that you've done continuous integration? How have you seen benefits from that.</p><p>[00:37:25] <strong>Michael Katz (Guest): </strong>We use Jenkins. So we have a local server that actually we have I don't know how many Mac Mini nodes that run our tests and we use is a product called FastLane, which I think is pretty common in the iOS world.</p><p>[00:37:39] It's kind of like the. It sits on top of xcode build and allows you to basically specify the configuration for building and testing and you can run multiple tests and upload iTunes connect and things like that as part of the service but the important thing there is we have probably about 50 Engineers that contribute to our code base and so it's essential to make sure that what we have is always in good working order.</p><p>[00:38:04] But if you're working at a small team or you're working by yourself Travis or Circle CI are good solutions. Xcode server is what Apple keeps pushing. I haven't seen anyone use that in practice, but it has all the Integrations with Xcode so if you're able to use it and you're just building an iOS or macOS app and I think it's going to work out pretty well for you because it knows all about Esco tests and code coverage and things like that. </p><p>[00:38:30] <strong>Leo Dion (Host): </strong>Yeah, I've worked with xcode server. I've actually set up a virtual machine to run whatever the feud like, I'll probably set up one in a week or so and using Catalina and then put Xcode server on it. It's pretty decent like there's a lot to it some tweaking and things that you have to consider when you set up your project. But yeah, it works pretty decent. </p><p>[00:38:48] <strong>Joshua Greene (Guest): </strong>Yeah, so I basically used all of them myself and I'd say given the choice between using nothing or picking at random even right the picking at random is gonna be better than using nothing at all. Especially, you know, the more engineers you have the bigger bang you actually get for wanting to use continuous integration and sure at some point it's just strictly required frankly.</p><p>[00:39:10] You know, like my team is pretty large, but if you have maybe one or two developers. Especially if you're following TDD, I don't know they're strictly required for for that size per se because you do want to be constantly just running all over the test. Right? But once you reach a certain point where you have to ensure, okay, the projects is just so large or you got so many engineers that you really need to have some safeguards and checks in place other than just you know, Cowboy. Everybody agrees this is the right way to do it. Continuous integration definitely is a requirement. You know and Xcode server is a good one will be you know, especially if you have a Mac Mini or something around or haven't done it with the Virtual Machine although the now I want to try so that's a good suggestion but it's an easy thing. </p><p>[00:39:52] <strong>Leo Dion (Host): </strong>Especially if you're doing anything or if you're going to be trying new stuff, you probably want to put Catalina on a VM instead of running it on your main machine that's living on the edge. If you want to do that </p><p>[00:40:02] <strong>Joshua Greene (Guest): </strong>The Mac minis are still pretty cheap so our group uses just a small fleet of Mac minis as well there, but the cheaper route is going the VM for sure. So I guess maybe parallel or something depending on how you're running it and I suppose maybe have to buy the parallelization software. I don't know. </p><p>[00:40:20] <strong>Leo Dion (Host): </strong>Yeah, great guys. Thank you so much for coming on the show before we close out. You want to talk a little bit about your book again. </p><p>[00:40:28] <strong>Michael Katz (Guest): </strong>It's an iOS test-driven development by tutorials available now at raywenderlich.com we have an early access that has the first third of the book and the whole book should be out in the fall. It covers the whole TDD from starting from nothing. We have a whole big piece networking because there's almost every app has that and It's tricky to test we have chapters on how to work with a big legacy app especially where legacy means no tests or insufficient testing.</p><p>[00:41:00] It goes through each of these things step by step. So you follow along. So unlike other books that may give a more theoretical approach emerges say here's what your code should look like. This is very step by step you follow along going through adding the tests adding the test targets, the whole shebang.</p><p>[00:41:17] <strong>Joshua Greene (Guest): </strong>I'd say we've done the hard work for you going through the Apple apis and you know have a very experienced developers that you know Mike and I've used this for several years. Mike has used this for several years here. You don't want to learn all this stuff by yourself. It'll take longer. It'll be harder to do if you want to get up to speed and get running quickly.</p><p>[00:41:36] It's the best way just get the book save yourself some time. Save yourself some sanity happened to not go through those Apple API to yourself and get running quickly and  get up to speed quickly. </p><p>[00:41:47] <strong>Leo Dion (Host): </strong>Yeah, that's fantastic. I'm really looking forward to take a look at this book and just learning some new ways to do TDD when it comes to Xcode and iOS.</p><p>[00:41:57] Before we close out, do you guys have any thoughts on some of the new stuff from WWDC and how it pertains to test driven development? </p><p>[00:42:06] <strong>Michael Katz (Guest): </strong>Unfortunately, it's about six hours from the what's new in testing in Xcode. So what I've seen so far as just been what they've covered in the what's new in Xcode and the State of the Union, but it looks like that there's some new methods for.</p><p>[00:42:21] We've had the measuring blocks before that measure the time your test takes I know it looks like you can also measure memory usage, disk usage, and a bunch of other things which is really great. They're not really like for test-driven development. But when you're building reliability tests and performance tests, and with those are going to be pretty handy and then there's this new thing called test plans which basically.</p><p>[00:42:42] Takes all the management of tests from the scheme into a separate top-level object in your project and you can rerun your tests against multiple configurations. So you can run all your tests in English and then run all the tests again in French or whatever in one click. They also have four different test ordering and different runtime checks and all that so it takes one manual step out of the loop, but I wouldn't necessarily think it's super revolutionary. What do you think Josh? </p><p>[00:43:10] <strong>Joshua Greene (Guest): </strong>I'm totally with you as far as the new features. They look pretty cool for Xcode goes. I also wanted to point out that with the SwiftUI they've really gone very much so protocol oriented development.</p><p>[00:43:22] That's great news for things like testing and test driven development here anytime you can put in a protocol in place you can insert a mock very easily into whatever set up it is so I'm very excited to see how they've really architected SwiftUI and it looks like just testing is going to be a lot easier compared to some of the previous solutions where you've got concrete class and just figuring out how you're going to mock that out, you know via subclass or whatnot may have been very difficult with pure UIKit.</p><p>[00:43:51] It looks like SwiftUI is gonna help us quite a bit in the testing realm. So I'm very excited to dive into it and learn everything about you know all the cool stuff that they've done and cool stuff to make developers lives easier with testing. </p><p>[00:44:04] <strong>Leo Dion (Host): </strong>You're talking about the difference between like UIViewController, which is this class.</p><p>[00:44:08] You have to subclass as opposed to like the SwiftUI View protocol which you can pretty much mock up any way you want to right? </p><p>[00:44:15] <strong>Joshua Greene (Guest): </strong>Exactly yeah, the whole UIViewController thing, there's so much concrete stuff in that it's difficult to truly create great mocks with it. I mean you can, you know, create a mock by subclassing uiviewcontroller, right.</p><p>[00:44:28] But had that been a protocol, I mean you can combine protocols so much more easily combined functionality using protocol oriented development. But creating mocks the same thing, you can just conform to that Mark and just Implement whatever message you actually care about and it's just much more elegant solution a much more, you know architecture friendly solution going with the protocol then something concrete.</p><p>[00:44:51] So it's a very good job on Apple's part and you know it's my take on it so. I haven't gone to see all of the defaults implementations of stuff they give you but you know, hopefully it's saying and you know, from what I have seen it looks very well done. </p><p>[00:45:04] <strong>Michael Katz (Guest): </strong>One of those things with SwiftUI is there really is from sample code encouraging people to build out separate model classes, which also makes it easier to test.</p><p>[00:45:13] <strong>Leo Dion (Host): </strong>You're talking like the previews </p><p>[00:45:15] <strong>Michael Katz (Guest): </strong>Yeah with the previews and you can have being able to put multiple previews in the assistant.</p><p>[00:45:20] I think I'll make it great for testing not really testing but just visualizing the different conditions before you even get to the point of completing your code, but the at state you can have a separate model class be bound to your view as you to put that logic of loading data and changing data and so on outside of the view of other people couple and their view controllers the setting of The View State and then the model state so it's exciting. </p><p>[00:45:45] <strong>Joshua Greene (Guest): </strong>It looks like they're kind of pushing Mike component-based development too you know, I've seen like so many developers where you need a custom UI tap controller or something, right. So you go and instead of right and something your own which may be in the right solution you go and you try to reuse Apple's and then you're trying to hack internal methods and so forth and it's just hard to do with all the Swift you I think they provided a same base and said look you need new components. You can create something. I'm excited for testing because the idea being you could split those off into their own library. Here's this component that I need or set of components that I need and just pull them in as you need and ensure that they're tested really well. So again, it just looks really well done. So the team did a really good job as far as everything I've seen so far. </p><p>[00:46:25] <strong>Leo Dion (Host): </strong>Well, thank you so much guys for coming on the program if folks want to get ahold of you. What's the best way?</p><p>[00:46:31] <strong>Joshua Greene (Guest): </strong>Sure so if you have questions about the book, we actually have a forum on raywenderlich.com. We actively monitor that as authors of the book.</p><p>[00:46:41] So if you have questions ask them there and we will actually answer you for anything that you've got. If you want to reach us personally jrgdeveloper@gmail.com by email or Twitter @grg_developer </p><p>[00:46:53] <strong>Michael Katz (Guest): </strong>and I'm @themikekatz on Twitter </p><p>[00:46:56] <strong>Leo Dion (Host): </strong>well, thank you so much for coming on and maybe we'll talk again later about Swift UI and how that's going to improve test-driven development.</p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 16 Jun 2019 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/eddb8632/a18c0801.mp3" length="21018143" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>2824</itunes:duration>
      <itunes:summary>In this episode we talk with Joshua Greene and Michael Katz, authors of iOS Test Driven Development by Tutorials. In this episode, we talk about:
- Why is test-driven development is important for any dev team?
- How is TDD best employed with iOS development
- What are some exceptions to test-driven development?
</itunes:summary>
      <itunes:subtitle>In this episode we talk with Joshua Greene and Michael Katz, authors of iOS Test Driven Development by Tutorials. In this episode, we talk about:
- Why is test-driven development is important for any dev team?
- How is TDD best employed with iOS develop</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>iOS App Architecture with René Cacheaux and Josh Berlin</title>
      <itunes:episode>14</itunes:episode>
      <itunes:title>iOS App Architecture with René Cacheaux and Josh Berlin</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">85894c31-1766-4456-9dac-2d276654ca10</guid>
      <link>https://share.transistor.fm/s/7247db7e</link>
      <description>
        <![CDATA[<p><b>Guests</b></p><ul>
<li><a href="https://twitter.com/jab2109"><strong>Josh Berlin - @jab2109</strong></a></li>
<li><a href="https://twitter.com/rcachatx?lang=en"><strong>René Cacheaux - @RCachATX</strong></a></li>
</ul><p><b>Book - <a href="https://store.raywenderlich.com/products/advanced-ios-app-architecture">Advanced iOS App Architecture</a></b></p><p><b>Links</b></p><ul>
<li><a href="https://github.com/Swinject/Swinject">Swinject</a></li>
<li><a href="https://github.com/ReactiveX/RxSwift">RxSwift</a></li>
<li><a href="https://www.youtube.com/watch?v=OD_yHH_R7qo">Advanced Unidirectional Architecture with Rene Cacheaux - Live Tutorial Session - RWDevCon 2018</a></li>
<li><a href="https://github.com/alcatraz/Alcatraz">Alcatraz RIP</a></li>
<li><a href="https://developer.apple.com/documentation/xcodekit/creating_a_source_editor_extension">Xcode Extensions</a></li>
</ul><p><b>Previous Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/3ee56c45">Episode 7: Apple 2019</a></li>
<li><a href="https://share.transistor.fm/s/ffcb9fc1">Episode 8: Cloud and Backend Services</a></li>
<li><a href="https://share.transistor.fm/s/bcf9bb21">Episode 12: iOS Developer Interviews with Alex Bush</a></li>
</ul><p><b>Show Notes</b></p><p><strong>Challenges with Architecture in iOS Application Development</strong></p><ul>
<li>Dealing with the lack of guidance from Apple</li>
<li>Slow <a href="https://www.scruminc.com/velocity/">team velocity</a> caused By large volumes of code</li>
<li>Architecture is important when the team is large enough to benefit</li>
</ul> One day when the team grows more, you’re going to potentially have more problems.<br>Josh Berlin<ul>
<li>The need to slow down and establish an architecture in an app</li>
<li>constant communication and early meeting to discuss patterns and practices (i.e. Architecture)</li>
<li>How team dynamic affects the need for leadership</li>
</ul><p><strong>Applying Patterns to iOS Application Architecture </strong></p><ul>
<li>
<a href="https://developer.apple.com/library/archive/documentation/General/Conceptual/DevPedia-CocoaCore/MVC.html">MVC</a> vs Other Patterns such as <a href="https://github.com/ReactiveX/RxSwift">RxSwift</a>
</li>
<li>How design patterns naturally develop</li>
<li>Using third party libraries</li>
<li>The importance of team DNA</li>
<li>The importance of <a href="https://en.wikipedia.org/wiki/Dependency_injection">dependency injection</a>
</li>
<li>Tooling - iOS and Swift vs Android and Kotlin</li>
<li>The problems with Storyboards and having healthy architecture</li>
</ul><p><strong>WWDC Hopes and Dreams</strong></p><p><a href="https://twitter.com/jab2109"><em>Josh Berlin - @jab2109</em></a></p><ul><li>Dark Theme (iOS)</li></ul><p><a href="https://twitter.com/rcachatx?lang=en">René Cacheaux - @RCachATX</a></p><ul>
<li>Marzipan</li>
<li><a href="https://gist.github.com/lattner/31ed37682ef1576b16bca1432ea9f782">Swift Concurrency Primitives</a></li>
</ul><p><a href="https://twitter.com/leogdion"><em>Leo Dion - @leogdion</em></a></p><ul>
<li>Xcode Improvements</li>
<li>More Exposure for Services and <a href="https://share.transistor.fm/s/ffcb9fc1">Server Side Swift</a>
</li>
<li><a href="https://swift.org/package-manager/">Swift Package Manager</a></li>
<li>More Developer Tools</li>
</ul><p>What happened to <a href="https://github.com/alcatraz/Alcatraz">Alcatraz</a> and <a href="https://developer.apple.com/documentation/xcodekit/creating_a_source_editor_extension">Xcode Extensions</a>?</p><p><b>Social Media</b></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter - @brightdigit<br></strong></a><a href="http://facebook.com/brightdigit"><strong>Facebook - BrightDigit</strong></a></p><p><b><a href="https://www.instagram.com/brightdigit/"><strong>Brand New Instagram! - @brightdigit</strong></a></b></p><p><br></p><p><b>Transcript</b></p><p><strong>Leo Dion (Host): </strong>[00:00:00] Hello, welcome to another episode of EmpowerApps Show today. We have with us René Cacheaux and Josh Berlin. Guys, thanks for coming on. </p><p><strong>René Cacheaux (Guest): </strong>[00:00:08] Thanks for having us. </p><p><strong>Josh Berlin (Guest): </strong>[00:00:09] Yeah.</p><p><strong>Leo Dion (Host): </strong>[00:00:09] So I've heard a lot of issues that companies have with architecture especially architecture with iOS apps and I know you guys have a book coming out as part of the Ray Wenderlich series - IOS app architecture. So this is something I'm really interested [in]. Maybe if you can kind of define the problems you've seen a lot of companies run into when it comes to architecting a successful mobile app, especially in iOS. </p><p><strong>René Cacheaux (Guest): </strong>[00:00:40] Yeah, one of the biggest challenges with iOS development is that there's really no strong opinion from Apple. So everyone's really kind of left to roll their own patterns. The biggest issues that I've seen is just slow in-team velocity, because we read a lot more code than we write. Everytime that we go into a code base to add a new feature, fix a bug, or something - the more tightly coupled all the pieces of your app are [and] the more you have to read to kind of understand all the things that you need to understand to make a safe change without breaking something. And so, kind of architecture really helps speed up your team because if you can kind of use the right patterns and break things up into no easy to reason about chunks. It's much much easier to find where you need to make the change and have confidence that you are not going to break something. So that's what I would say kind of like the main points on that.</p><p><strong>Josh Berlin (Guest): </strong>[00:01:39] Yeah and another thing is like a lot of apps that are built usually start with maybe like one person or a small team and  that developer has an opinion about how to architect the app and as a team grows and the product org wants more changes [it] becomes a lot harder to make those changes if the team isn't on board with one type of architecture and everyone is going to have their own opinion. It's going to be a lot easier to make these changes. If everyone agrees on one architecture and knows where to our find everything, everything is documented because one day when the team grows more, you know, you're going to potentially have more problems - like René was saying finding things in the code base. When the app is small it's not as big of a deal but when it grows it becomes a lot more challenging, so it's good to get these architectural patterns in early on and have everyone on board.</p><p><strong>Leo Dion (Host): </strong>[00:02:36] Maybe talk a little bit about your background and how did you guys get into iOS development? </p><p><strong>René Cacheaux (Guest): </strong>[00:02:40] So I got into it back in around 2008. I was doing a bunch of kind of web Java server face, you know internal it development and my wife had bought an iPhone and was kind of really trying to get me on board with the Apple ecosystem. Back then I was kind of Microsoft guy. You know, I was like, I'll try developing for this it would be interesting and I just got hooked honestly like. Working with like very abstract things kind of in the cloud and kind of in the background versus working on something that you can kind of feel and touch and look and show your friends kind of a really really cool thing. That's how I got into it. </p><p><strong>Leo Dion (Host): </strong>[00:03:17] How about you Josh? </p><p><strong>Josh Berlin (Guest): </strong>[00:03:18] Yeah. So in college, it was like maybe 10 years ago and iOS first came out. No one was really teaching this in school and I wanted a fitness tracker. So I built one for myself and ended up getting a job at a company building business products for Windows. They wanted to Android and iOS app and somehow I got the job. I'm in a building iOS apps ever since then. </p><p><strong>Leo Dion (Host): </strong>[00:03:43] It's funny. So how big are the teams that you've worked with? </p><p><strong>René Cacheaux (Guest): </strong>[00:03:46] All kinds of ranges. I mean Josh and I used to work at a consultancy called Mutual Mobile. The kind of a big project that we work together on were kind of establish all this architecture stuff. We had a team about six iOS and about six Android but you know in that agency we had other projects that were like two on each platform - so anywhere between two and six on each platform when we were in which the mobile </p><p><strong>Leo Dion (Host): </strong>[00:04:10] It seems like one of the big things I'm hearing is as more and more code gets written there's almost use the term interesting use in terms of velocity and it is a specific term obviously the agile world, but I can understand what you mean you basically mean speed of the project and its movement but I would almost say like when you get more and more code. It becomes more and more difficult to manage and then on top of it. There's like an inertia there. The bigger it gets the heavier it gets and the harder it is to move it. It seems to me like what you're saying is like good architecture makes it much quicker and much easier to add more and more components to an app. Is that correct? </p><p><strong>René Cacheaux (Guest): </strong>[00:04:49] Yeah, the weird part about it though is to get to the point where you get those benefits. You do have to kind of slow down a little bit. And that's the part that most organizations struggle with is that they want that high-velocity upfront on day zero and you just can't get that. If you don't spend the time to work together as a team and really figure out the patterns that everyone's on board with and really kind of experiment a little bit and kind of lock it in. That's one thing that, the project that I worked with Josh on. You know, the first couple months it was a pretty slow process. I mean we had everyone in every code review. We experimented with the patterns that we were using and we were tweaking them and whatnot. And so at the very beginning, it really wasn't a high-velocity project probably slower than average. But then about three or four months into it, we started moving really really fast and we had a big deadline because this project was for a big brand, for the World Cup and we needed it by certain day and it was a pretty large scope project. And by the end of it the last about three four months of it, I mean we were moving super fast. Everyone was able to build features pretty quickly. I know Josh if you want to expand on any of that stuff. </p><p><strong>Josh Berlin (Guest): </strong>[00:06:05] I think we were pretty lucky to have those two to three months to really nail down the architecture we liked and to implement an architecture that would allow us after that like initial ramp-up period to build new features super super fast and not break everything because If we didn't have those first two months and we just started like writing code like building new features. I don't even know like everything probably would have crumbled because we didn't have a good foundation. So I think it's super important. Like maybe you don't need two to three months, but maybe even two to three weeks when you start a new project to really nail down the architecture and figure out how you're going to be able to build features quickly later on and test them.</p><p><strong>Leo Dion (Host): </strong>[00:06:48] Do you think part of it is making sure somebody is there to enforce consistency or do you need like an architecture role set up for a team or what are ways that you can like foster that within a company?</p><p><strong>Josh Berlin (Guest): </strong>[00:07:01] I don't think you need necessarily an architecture role, but I think that having meetings at the early stages of products about architecture is very important </p><p><strong>Leo Dion (Host): </strong>[00:07:13] And you're talking like highly technical meetings, right?</p><p><strong>Josh Berlin (Guest): </strong>[00:07:15] Yes, very technical like a lot of diagrams like class diagrams how everything is going to fit together and like coming up with some patterns. So I don't think you need necessarily like someone who's an architect on the project. I mean it definitely would help but I think like just a team of four or five people could have these meetings and figure this stuff out early on.</p><p><strong>Leo Dion (Host): </strong>[00:07:34] Do you need somebody to call the shots at all?</p><p><strong>Josh Berlin (Guest): </strong>[00:07:37] I mean I think it's probably better if you have someone driving this and everyone just kind of like tuning their plan, but I don't think it's completely necessary. I mean as long as everyone and I think what's more important is everyone's in agreement and everyone feels that they can have input and they're not just like doing what this one person says.</p><p><strong>Leo Dion (Host): </strong>[00:07:58] Yeah. I've been in situations like that where there's somebody who pretty much is it ordering everybody what to do as far as architecture? And yeah, it can be really difficult to be in situations like that.</p><p><strong>René Cacheaux (Guest): </strong>[00:08:08] I think the DNA of the team has a lot to do with it. I've been on very different kinds of teams and in teams we have folks that are very like self-motivated. You don't really need someone calling the shots and other teams. I've been on their folks that you know, maybe you want some more guidance and so for those are actually wanting someone to call the shots. So I think it really depends on kind of the personality and makeup of each team. But it definitely helps to have at least someone driving and at least the best way it's worked I think is making sure that whoever is driving is very open-minded and is more interested in having decisions being made less than pushing their personal agenda what they personally think is the best architecture.</p><p><strong>Leo Dion (Host): </strong>[00:08:51] I really like that. It's a really good point. So maybe you guys can get into a little bit of the nitty-gritty what are like the different styles or different patterns that people can implement especially when it comes to iOS apps and architecture. </p><p><strong>René Cacheaux (Guest): </strong>[00:09:06] So there's three main styles that we've kind of categorized most of the patterns into. The more traditional work all the MV patterns, which are like MVC and MVP and MVVM. </p><p><strong>Leo Dion (Host): </strong>[00:09:16] And so like Apple, obviously, they really push MVC. </p><p><strong>René Cacheaux (Guest): </strong>[00:09:20] Yes.</p><p><strong>Leo Dion (Host): </strong>[00:09:21] If there's any pattern that they push usually MVC is one of their oldest and most steadfast patterns</p><p><strong>René Cacheaux (Guest): </strong>[00:09:27] They push it a lot. You know, UIKit [and] Cocoa Touch is designed around that pattern. And so that's the pattern that you will fight the least with when you're working with cocoa touch. It's a good pattern and there's a lot of materials out their on folks that are trying to kind of demystify all the negative kind of vibes around. You see because you can do MVC very well. I think that's actually the main thing that we learned Josh and I working together is that it's not so much a matter of which pattern you use its how well you put it to practice and you can like take any pattern and do a horrible job of applying it. You can take any pattern and do a great job of applying it. Like Dave Delong who used to work at Apple. He's a big proponent of MVC has a lot of cool articles out there on hey MVC is not so bad you just, you know decompose your view controllers into smart controllers and you'll be fine. You don't have to do this whole in MVP thing to fix those problems. </p><p><strong>Josh Berlin (Guest): </strong>[00:10:19] Yeah, like everyone hates on MVC but like I think a lot of it is just like how you implement it. It's not so much that in VC is a bad pattern is just like kind of like a broad thing and there's a lot of ways to do it poorly and a lot of ways do it well.</p><p><strong>Leo Dion (Host): </strong>[00:10:33] Yeah, we had Alex Bush on who does contract work for Uber and his big complaint was how MVC gets unwieldy with really really really large projects. And that's kind of what I've heard. I use MVC. I don't have really large projects that I feel uncomfortable still implementing it but I think one of the things I've seen especially novice developers do is they'll take a pattern like a specific design pattern and just use it to use it without understanding why they use it. Most of the time, design patterns, I feel like they end up growing out of an it like just based on my experience. I've experienced enough that patterns just a naturally develop in your code if you're already using a lot of other things like making sure that things only do one thing. I forgot what that's called or, you know having a healthy use of like protocols or interfaces that automatically creates healthy patterns that follow patterns that we've seen in various books and stuff. </p><p><strong>René Cacheaux (Guest): </strong>[00:11:33] Yeah, I experienced that exact same kind of sequence of events where like I first learned about design patterns and it was like a kid in a candy store. I was like, I want to use as many of these as I can and then it kind of dies down and then when you just start trying to solve the problems that are in front of you it's like you said that you'll end up using those patterns but not because you said oh I want to use the Observer pattern. It's more because oh you have these external signals coming from the outside coming into the view controller and you want to decouple the view controller from that - let me build an observer for that. </p><p><strong>Leo Dion (Host): </strong>[00:12:05] Yeah, and then you realize wait a second. This is an observer pattern. It's like how they naturally grow out of your code. </p><p><strong>René Cacheaux (Guest): </strong>[00:12:11] Yeah. Exactly. </p><p><strong>Josh Berlin (Guest): </strong>[00:12:12] Yeah. </p><p><strong>Leo Dion (Host): </strong>[00:12:12] What other patterns do you see used throughout iOS? </p><p><strong>Josh Berlin (Guest): </strong>[00:12:17] Yeah. I think they'll like the reactive pattern has been super hot lately.</p><p><strong>Leo Dion (Host): </strong>[00:12:21] Yes. </p><p><strong>Josh Berlin (Guest): </strong>[00:12:22] Maybe it's not the best. Thing to do on iOS like to write all this reactive code actually at the company. I work for now when I started a year and a few months ago the app was using a lot of RX Swift. </p><p><strong>Leo Dion (Host): </strong>[00:12:34] And RX Swift is hot right now </p><p><strong>Josh Berlin (Guest): </strong>[00:12:36] It's very hot. It's very hot. And when I first started I was I know RX left and I know like how to write it but it's still like sometimes when you look at a new project with Rx Swift you're kind of just like it's hard to wrap your head around what's going on. It's kind of funny because now a year later we have no RX Swift in the project. We've moved completely away from reactive programming and I think that's more of like, it's just easier to understand sometimes when the whole team doesn't know our RX Swift. It's like well do we want to continue down this path teach everyone this new style this like new trendy hot style or you want to move to something more of like an MVC pattern where everyone's more familiar and it's maybe more readable for everybody. </p><p><strong>Leo Dion (Host): </strong>[00:13:18] I also feel like I don't like bringing in third-party libraries like necessarily fight against the grain of I'm not against that pattern specific. But if you're like, let's say for instance, you're doing react like Facebook. React JavaScript stuff, right? Okay, at least that follows that pattern you're not fighting against the grain because that's what the whole thing is set up for but iOS like you're fighting against Apple and their push for MVC and okay if that's what you want to do. That's fine. But if after you know WWDC things though, work out that way like you're dependent on the React Swift team to like keep up with it, which that's up to you. That's a risk you're have to be willing to take</p><p><strong>René Cacheaux (Guest): </strong>[00:13:56] Again. Like I think that's where the team DNA kind of comes in and that's why I think that it's bad advice to say here's the one architecture that you should always use. It's really about looking at who you're working with because there's some folks that are really into that stuff. And so I've been in environments both very reactive in both not and. Direct trainer bring a reactive into a non reactive environment is really hard is really really hard. Like Josh said it's almost not worth it. The other thing I think that kind of popped in my mind while we're discussing this stuff was that I would bring in third-party libraries one of the things that I kind of don't like about RX whiffed is that it's a really big library and if you really think about the common use cases, you're probably only using about maybe 60% of the library maybe 50% So you're only using a portion of it, but you're paying all the binary costs in the weight that it brings in. I really wish they could break it down into like a core version of it or not, but. Bringing third party dependencies can be pretty bad or pretty heavy on your app. </p><p><strong>Leo Dion (Host): </strong>[00:14:57] Yeah, I kind of agree. So anything else you want to talk about as far as different styles. I know like dependency injection has been big, protocol oriented programming especially important in the Swift realm.</p><p><strong>René Cacheaux (Guest): </strong>[00:15:11] Yeah, I mean that's Dependency Injection is kind of cool because it's kind of a universal concept that we've been able to apply to all the different patterns. So I think of Dependency Injection as kind of like the foundation of the architecture where you can put patterns on top of it and if there's one thing that you want to focus on getting a right, I think especially if you're trying to build for a large team or large set of teams dependency injections is really important to get and the thing there is Josh and I've done this several different ways as we were learning the pattern and using it in different environments and different teams different companies. We started writing everything by hand because with Dependency Injection, there are Frameworks and libraries that kind of help you follow the pattern and that's typically where everyone goes to is oh, let me find a library or framework that helps with dependency injection. We found that using those libraries hurts more than helps. We found that handwriting all your dependency injection containers is actually the easiest way to write code that's easy to understand. It's a little more painful. It's a little bit more boilerplate a little bit more boring work, but on the other side of that you get a code base that's much easier to read and understand and trace through that's my advice I would give to any iOS developer is sure like look at the frameworks and play around with them and use them at the end of the day. I would recommend starting with handwriting stuff. The key thing there is. To make sure you don't put everything in one container, you know break it up down into multiple containers. But if you do that, you'll find that it's much easier to manage or do you agree with that Josh? </p><p><strong>Josh Berlin (Guest): </strong>[00:16:41] Yeah hundred percent. I mean, I think you're going to do one thing to make your app architecture better. It's like. Use dependency injection and like René was saying D.I. Can go from very simple to very very very complicated. </p><p><strong>Leo Dion (Host): </strong>[00:16:55] I want to break down dependency injection because some folks might not know what exactly that means. I'm gonna try at what I do. So I learned dependency injection at my previous employer? It was like this is amazing. Now this allows for unit testing, easy plugins and stuff. We had talked before the recording about how like I used to be a C# developer interview. Castle Windsor for dependency injection, which is great because Castle Windsor, it can do all the reflections so I can like look up whatever the default implementation of a specific interfaces and automatically do that for you but then if you want to like use mocks, you can use mocks to unit test as well. And I miss some of that ability to do reflection, automate some of the ability to plug in certain classes. So the way I've done dependency injection is kind of employing the protocol oriented way of creating a protocol for almost everything and then having specific components. Like for instance I have a class that needs I think that turns a wheel. So I have a protocol for turning a wheel and then I'll have a specific implementation of that. And then that way the constructor for that thing that takes in the thing that turns the wheel can take in anything that turns the wheel it doesn't matter but then I have a default implementation that I use an app and then in my unit test I might have a mock one just to see you know that it works regardless of what gets plugged in. Is that kind of what we're talking about here? </p><p><strong>René Cacheaux (Guest): </strong>[00:18:19] Yeah, and we're talking about also like the resolution of these things. So like when you say okay, I want to create this object and this object has a dependency on three other objects that may be a conform to specific protocol how that instruction happens how the assembly of the dependency graph happens. That's where tools like swinge act and other kind of dependency injection frameworks help you out. But the thing that we found is that those tools use what's called runtime resolution. So when you say I want this object, like let's say I want this view controller and it depends on this networking thingy. And this database thingy when you say hey give me this view controller. It does the resolution at runtime it rather than compile time. So if for some reason you don't register how to create a network thingy or a database thingy, you won't find out until you run the app, which is kind of a more dangerous way of doing it. Whereas if you just handwrite your dependency containers that. Know how to create a view controller with it network thingy and database thingy. You'll find out at compile time. If you're not able to create a database object conforming this protocol and injecting into the constructor it just you know, we should won't compile which is great for a really big app where you have lots of different protocols and services and objects and a large dependency graph. You don't want to depend on having to run through all the runtime logic to expose any kind of missing dependencies there so.</p><p><strong>Leo Dion (Host): </strong>[00:19:44] Yeah, that's what I feel like has been the big roadblock for me is the lack of like decent resolution frameworks to plug in. So I just end up, you know hard-coding in the app and taking defaults and things like that.</p><p><strong>René Cacheaux (Guest): </strong>[00:19:57] Yeah, and that's exactly how we found it to be the most helpful. Yep. </p><p><strong>Josh Berlin (Guest): </strong>[00:20:00] I mean even doing it that way like you're still getting all the benefits of dependency injection where your Constructors take in interfaces like protocols and these classes become testable. Even though you're not using a framework or still getting all the benefits of DI doing it yourself by hand.</p><p><strong>Leo Dion (Host): </strong>[00:20:18] Exactly. And then you know, when you do a unit test you can mock it you're not dependent on that specifically so you guys have had experience what other languages have you had experience developing. Sounds like René you've done some Java stuff. </p><p><strong>René Cacheaux (Guest): </strong>[00:20:30] Yeah, Java and JavaScript. I've done Kotlin, Objective-C, and Swift. Those are the main ones. </p><p><strong>Josh Berlin (Guest): </strong>[00:20:39] A couple years ago. I spent some time doing a reactive element the JavaScript. </p><p><strong>Leo Dion (Host): </strong>[00:20:45] Okay. </p><p><strong>Josh Berlin (Guest): </strong>[00:20:45] Yeah, I've done some Java before a little bit of Kotlin. </p><p><strong>Leo Dion (Host): </strong>[00:20:49] What have you found as what's unique as far as IOS app architecture? Would have been unique benefits that unique challenges that you've seen, you know with that and with the dev tools in general.</p><p><strong>René Cacheaux (Guest): </strong>[00:21:02] That's good question. There's a lot of thoughts there that are running through my mind. So one of the things that I think is challenging is that Apple even though they do push MVC quite heavily and cocoa touch does kind of you know is designed with MVC in my they don't seem to have a very strong opinion about it at least not around tooling and things like that. Whereas like in the Android side Google's really into architecture these days and they're putting out like libraries that are all about just architecture. It kind of helped folks, you know, architect their apps. And so I think the platform having an opinion really helps because it allows people to kind of rally around that set of patterns or that sort of thing and build tooling libraries that kind of just work with it and like an IOS and Android you don't have to use those things, right, but if you want to move. It's a good default. Whereas an iOS we really don't have that. So that's I think a challenge. </p><p><strong>Leo Dion (Host): </strong>[00:21:55] It's funny you mention that because I'm doing a talk on multi-threaded like asynchronous development. I'm preparing for it. And one of the big libraries for Swift to do that is actually done by Google. Yeah, even though we have like Swift NIO by Apple, Google is even providing libraries for Swift developers. </p><p><strong>René Cacheaux (Guest): </strong>[00:22:14] Yeah, and I guess Swift is a huge a challenge right? Because it's a great language. It's moving so slowly. I mean you can pair it with something like Kotlin. We just have huge gaps in Swift like concurrency primitives that are not there and I'm calling you have things like her routines and things like that. It's just, you know Collins moving a lot faster than Swift. And so when you're doing both Android and iOS today's a weird time to be doing both because there's a lot lacking or not on the iOS side. It used to be the other way around.</p><p><strong>Leo Dion (Host): </strong>[00:22:41] Yeah. I mean it almost seems like with Swift they've slowed down because they've placed a high priority on like ABI stability. I think now that they've gotten over that hurdle. It'll be interesting to see and we'll get into that like what they might come up with as far as development tools for iOS and maybe updates to Swift as a language. How about as far as like Xcode devtools? It seems like we're going in the same direction where it's just like Xcode. It's painful to do Swift development on sometimes like I'm glad we have some refactoring stuff but just like autocomplete sometimes it works. Sometimes it doesn't very cryptic messages from the compiler when we just aren't doing our generic protocols the right way that it wants us to. What other stuff have you run into?</p><p><strong>Josh Berlin (Guest): </strong>[00:23:28] The error messages are kind of a tough. I think it's another reason to just make your apps as simple as possible. That's why I like sometimes using third-party libraries just makes all the error messages worse and it's harder to find bugs </p><p><strong>Leo Dion (Host): </strong>[00:23:42] It fixes one problem, but crazy three more. </p><p><strong>Josh Berlin (Guest): </strong>[00:23:44] Yeah. So like maybe you have like a really cool architecture and like you have one way data flow, you know, everything works properly, but when something breaks, it might be a lot harder to fix versus if you go a simple around simple architecture, you're kind of setting yourself up for success later on. So think like like Xcode has come a long way in the last 10 years, but you still have to fight it sometimes for sure. </p><p><strong>René Cacheaux (Guest): </strong>[00:24:09] It's definitely creaking any like the fact that they had a kind of rebuild the build system underneath it completely. I mean it really needs it have an overhaul. Yeah. </p><p><strong>Josh Berlin (Guest): </strong>[00:24:19] Yeah build times are pretty high.</p><p><strong>Leo Dion (Host): </strong>[00:24:21] It's not as bad as iTunes, but still it needs help. </p><p><strong>Josh Berlin (Guest): </strong>[00:24:24] And the thing is like Google's just continuously improving their IDs and it kind of like makes me want to start doing more Android development not like I love iOS like that's my number one. It is I think interesting because they're doing so much with architecture and their build system is amazing. Right? So iOS developers can learn a lot from the Android platform. </p><p><strong>Leo Dion (Host): </strong>[00:24:46] Yeah, it's amazing to see like there are some really good tools out there that third parties have built like I'm just thinking I like Fastlane and see what you will about Cocoapods or Carthage, but they're essentially filling in the gap that Apple hasn't provide like hopefully Swift Package Management can fill a lot of that Gap like with dependencies, but still it's nice to see that at least there's a community out there filling in the gaps  that apple hasn't filled, right?</p><p><strong>René Cacheaux (Guest): </strong>[00:25:13] It's strange though because you know apple is such a large organization with so much money. You know, I feel like if they really wanted to solve these problems. They probably could do a pretty good job and they are doing things like they acquired BuddyBuild and so we'll see what happens with that. But I still feel like there's so much more that they could do in terms of helping developers in the environments that they are in today because a lot of the tooling that Apple builds. Apple doesn't use themselves things like Interface Builder isn't that widely used I think in apple and so what happens is a lot of the stuff that Apple builds is not really tailored for large organizations or large teams building large apps. And so that's where the community has to kind of jump in and fill those gaps which you know, the community has a really good job of it. I feel like apple could do even better job of it given all the resources that they have, Hopefully </p><p><strong>Leo Dion (Host): </strong>[00:26:03] You speak about interface Builder. So let's get into it like especially with architecture. How do you deal with managing your UI, but keeping a healthy architecture. I'm a storyboard guy, but I'm by no means somebody who's going to like shove it down anybody's throat. I totally get how painful it can be especially working on a team when you have like merging you have to deal with some crap like that. But what are your recommendations or your personal styling?</p><p><strong>René Cacheaux (Guest): </strong>[00:26:33] I would not recommend anyone use interface Builder especially in large teams. </p><p><strong>Leo Dion (Host): </strong>[00:26:37] Yes. </p><p><strong>René Cacheaux (Guest): </strong>[00:26:38] That's one of the strong opinions that I do have is mostly because with interface Builder. You don't have a source of Truth everything that you put in your storyboard or your nib file is subject to change by the code underneath it. And so when you're looking at the story board itself in your kind of tweaking the layouts and you're taking the constraints and stuff like that. There's nothing stopping the code underneath the completely changing that and so when there's bugs and stuff, sometimes it's really hard to figure out the root cause because you can't just look at the storyboard. That's not enough. You have to go to storyboard and you have to look at the code. So that's one of the things that Apple could fix that. The other thing around is if you use a storyboard still kind of the way that Apple suggest you use them with segues and stuff like that. We do end up coupling all your view controllers together and there are kind of acts around it to make it less so but they're still pretty hacky. The simplest example is just a navigation stack, right, you know, you have a navigation controller and you have your presenting like, you know a list of things and you tap on an item with segues you're going to have to instantiate the next view controller in that first view controller. Now your tightly coupling those two things. If you needed to reorganize the navigation path, you're gonna have to go in to touch all the view controllers and kind of remove things around. So those are like a couple of big things I would say there's other ones but they're the ones that up my mind </p><p><strong>Josh Berlin (Guest): </strong>[00:27:54] Also like Auto layout code is not that hard to write by hand. I think the initial ramp up time is pretty high. It takes a little bit to learn how to build constraints by hand.</p><p><strong>Leo Dion (Host): </strong>[00:28:05] You're talking about like the visual format language?</p><p><strong>Josh Berlin (Guest): </strong>[00:28:08] I'm just talking about like all the helper methods that Apple provides to create constraints and like constrained one view to another one in code </p><p><strong>Leo Dion (Host): </strong>[00:28:16] Interesting. Okay. </p><p><strong>René Cacheaux (Guest): </strong>[00:28:17] Yeah. They added like a new anchor API that makes it way easier </p><p><strong>Josh Berlin (Guest): </strong>[00:28:20] So nice. Yeah and like you can write it some helper methods around that stuff reading this in your view classes is really nice and it's really easy to look at a view and see how everything's laid out in code and the other thing is like simple views in Interface Builder. Maybe it's easier to build those using like like a storyboard or seeing the views like laid out on screen versus encode but once you start doing like animations and changing constraints that stuff is so much easier to write in code. </p><p><strong>René Cacheaux (Guest): </strong>[00:28:51] One thing you mention there Josh is I think a lot of folks don't use this enough where you can totally subclass uiview and do all your styling and layout in there as opposed to in a view controller. I still see a tons of you controllers with times of layout and styling code. I think that's one of the biggest complaints about not doing your UI and code is like, oh it blows my view controllers in your dad's all this layout and style code into my view controllers. And so. You know what I usually say is. Okay. Well, that's fine. Just subclass your route uiview do it all in there and that really nicely separates the viewcontroller kind of controlling logic from like the UI and a styling logic. </p><p><strong>Leo Dion (Host): </strong>[00:29:27] Yeah that goes back to the whole point about having healthy app architecture. Your view should not be in the controller like drawing your view should be in your view. That's what it's there for. </p><p><strong>René Cacheaux (Guest): </strong>[00:29:35] Exactly. </p><p><strong>Leo Dion (Host): </strong>[00:29:37] Cool. Well, thanks guys for coming on. So do you want to talk a little bit about your book that's coming out? </p><p><strong>René Cacheaux (Guest): </strong>[00:29:42] Yeah, definitely. So it's been lots of effort getting this book out. We've been working on it for I think about three years now, we're super excited about it. We really wanted to write something that was extremely pragmatic and something that would tackle all the real world scenarios of architecture. I think I've read a bunch of different architecture books that have come out and they're very theoretical they usually have very simple example code and so what we decided to do is to try to build out as much of a real app as we could possibly do and so what we did is we built basically an app that's kind of like an Uber app, but it's kind of fun. It's a kangaroos pick you up, so it's called Koober. And so yeah, you can hail a kangaroo </p><p><strong>Leo Dion (Host): </strong>[00:30:26] I started watching your YouTube video. You did a presentation on it, about Koober I loved it. Yeah, and I'll post a link to that as well.</p><p><strong>René Cacheaux (Guest): </strong>[00:30:33] It was a lot of fun. We based it off of Uber. So we built as much of Uber as we possibly could and so we had to tackle some hard problems. We couldn't shy away from things like navigation. Or things like authentication tokens and authentication stuff. And so we tackled all of those things. So because of that we didn't cover that many architectures. I think we cover three but we cover them pretty deeply and so yeah, I mean that's a couple of things I'm excited about actually probably the thing I'm most excited about is Josh and I are working together last, you know, six or so years. We kind of came up with her own kind of architecture and the last chapter of the book kind of covers that and we're pretty excited about it. Hopefully the community will have a good response to it. And I'm sure Josh has lots of thoughts on it. </p><p><strong>Josh Berlin (Guest): </strong>[00:31:20] I'm excited to hear what people think about  elements. It's an architecture that we created a Mutual Mobile  a long time ago, and we really try to provide a set of useful. Architecture patterns that people can like pick and choose which ones they like and yeah, we're pretty excited to see what people think of that. </p><p><strong>Leo Dion (Host): </strong>[00:31:39] Awesome. The name of the book is Advanced IOS app architecture and you can find out right at Ray Wenderlich's site. I'll provide the link in the notes just to plug our podcast. We are at brightdigit on Twitter as well as Facebook and I just started Instagram so you should definitely check that out. And before we close out guys, I wanted to ask you maybe your top three or top two things. You're most looking forward to at WWDC this year.</p><p><strong>Josh Berlin (Guest): </strong>[00:32:07] I know my number one. Definitely the Dark theme and I'm really excited to see what they do with seeming because that's something I've been working on at work lately is building a theming for our app and there's a lot of like third party theme libraries that are available right now. And I'm excited to see how Apple is going to do this.</p><p><strong>Leo Dion (Host): </strong>[00:32:29] Yeah, I'm excited about that too. </p><p><strong>René Cacheaux (Guest): </strong>[00:32:31] Oh boy. I have things that I want that I don't think are going to happen if this is gonna happen if they're cool. Obviously, I did. My number one. Most realistic was Marzipan. Just seeing what that looks like. I think I'm most interested in seeing how much of the macOS stuff is exposed like things like Safari extensions and stuff like that. Things that I would like to have that probably I think might not happen. I'd love for them to present concurrency primitives for. Something like co-routines would be so awesome. It would be really really cool </p><p><strong>Leo Dion (Host): </strong>[00:33:02] I feel like that if they're gonna announce it like a Swift is open source. That's the thing. I'm thinking about Swift is open source. So if they're going to announce that they would announce it. I think that's gonna be a Swift 6 or 5.3 or 5.2 thing. I think is definitely on the radar but I doubt we're going to hear about it at WWDC. But yeah, I totally agree. We need a async await. We need some of that stuff. </p><p><strong>René Cacheaux (Guest): </strong>[00:33:24] So you never know but yeah, I don't expect it. Yeah, those are my two. </p><p><strong>Leo Dion (Host): </strong>[00:33:28] Yeah. I was just going to say going back. Like I wish they'd fix our Xcode. I wish they'd get some of that stuff fixed. I think Swift Package Manager should be integrated into Xcode and it shouldn't be so difficult. I've become a big fan of some of the server side stuff. I'd like to at least have some sort of plug. For like Swift NIO and all the different Vapor and all the Kitura and all those projects because I think they're missing a lot of that push that Apple could give it. I'm really interested to see and I've done an episode on it as Apple has moved more into services if we're going to see Apple do anything for developers when it comes to services. Are we going to see more robust like CloudKit or integration with that because we have Firebase right Firebase is elephant in the room. Like where's Apple and this. So anything else guys before we close out? </p><p><strong>René Cacheaux (Guest): </strong>[00:34:18] The only I would say is you reminded me of something what happened to Xcode Extensions, like nothing like it was gonna go somewhere. It wouldn't go anywhere yet. </p><p><strong>Leo Dion (Host): </strong>[00:34:26] Yeah. Yeah exactly </p><p><strong>Josh Berlin (Guest): </strong>[00:34:28] Alcatraz thing. Yeah. I've hardly ever used anything some cool stuff on there though. </p><p><strong>Leo Dion (Host): </strong>[00:34:33] And it seems like that stuff is really more developer tools. Just more robust developer tools. That's all I'm asking for but I am interested in Marzipan and how that's going to work out. I've done some mac development and it's not that bad but there's a lot of old old </p><p><strong>René Cacheaux (Guest): </strong>[00:34:47] it's painful. </p><p><strong>Leo Dion (Host): </strong>[00:34:49] It's old. That's my problem with it. It's very Objective-C focused. And so I think Marzipan will breathe some fresh air. But my worry is that we're going to get kind of how. Lot of lazy companies but take their iPhone apps and just make them really big on the iPad. I have a feeling it's going to be the same on the Mac, unfortunately. Yeah, cool where can folks get a hold of you as far as on social media. </p><p><strong>René Cacheaux (Guest): </strong>[00:35:14] I'm on Twitter. My handle is at rcacheatx. That's where I primarily am. </p><p><strong>Josh Berlin (Guest): </strong>[00:35:21] My Twitter handle is at jab2109</p><p><strong>Leo Dion (Host): </strong>[00:35:25] So guys. Thanks again for coming on the show. It's been fantastic, and I would love to have you go again talking more about architecture and how it can help teams work out and expressing. Thanks, Leo.</p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Guests</b></p><ul>
<li><a href="https://twitter.com/jab2109"><strong>Josh Berlin - @jab2109</strong></a></li>
<li><a href="https://twitter.com/rcachatx?lang=en"><strong>René Cacheaux - @RCachATX</strong></a></li>
</ul><p><b>Book - <a href="https://store.raywenderlich.com/products/advanced-ios-app-architecture">Advanced iOS App Architecture</a></b></p><p><b>Links</b></p><ul>
<li><a href="https://github.com/Swinject/Swinject">Swinject</a></li>
<li><a href="https://github.com/ReactiveX/RxSwift">RxSwift</a></li>
<li><a href="https://www.youtube.com/watch?v=OD_yHH_R7qo">Advanced Unidirectional Architecture with Rene Cacheaux - Live Tutorial Session - RWDevCon 2018</a></li>
<li><a href="https://github.com/alcatraz/Alcatraz">Alcatraz RIP</a></li>
<li><a href="https://developer.apple.com/documentation/xcodekit/creating_a_source_editor_extension">Xcode Extensions</a></li>
</ul><p><b>Previous Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/3ee56c45">Episode 7: Apple 2019</a></li>
<li><a href="https://share.transistor.fm/s/ffcb9fc1">Episode 8: Cloud and Backend Services</a></li>
<li><a href="https://share.transistor.fm/s/bcf9bb21">Episode 12: iOS Developer Interviews with Alex Bush</a></li>
</ul><p><b>Show Notes</b></p><p><strong>Challenges with Architecture in iOS Application Development</strong></p><ul>
<li>Dealing with the lack of guidance from Apple</li>
<li>Slow <a href="https://www.scruminc.com/velocity/">team velocity</a> caused By large volumes of code</li>
<li>Architecture is important when the team is large enough to benefit</li>
</ul> One day when the team grows more, you’re going to potentially have more problems.<br>Josh Berlin<ul>
<li>The need to slow down and establish an architecture in an app</li>
<li>constant communication and early meeting to discuss patterns and practices (i.e. Architecture)</li>
<li>How team dynamic affects the need for leadership</li>
</ul><p><strong>Applying Patterns to iOS Application Architecture </strong></p><ul>
<li>
<a href="https://developer.apple.com/library/archive/documentation/General/Conceptual/DevPedia-CocoaCore/MVC.html">MVC</a> vs Other Patterns such as <a href="https://github.com/ReactiveX/RxSwift">RxSwift</a>
</li>
<li>How design patterns naturally develop</li>
<li>Using third party libraries</li>
<li>The importance of team DNA</li>
<li>The importance of <a href="https://en.wikipedia.org/wiki/Dependency_injection">dependency injection</a>
</li>
<li>Tooling - iOS and Swift vs Android and Kotlin</li>
<li>The problems with Storyboards and having healthy architecture</li>
</ul><p><strong>WWDC Hopes and Dreams</strong></p><p><a href="https://twitter.com/jab2109"><em>Josh Berlin - @jab2109</em></a></p><ul><li>Dark Theme (iOS)</li></ul><p><a href="https://twitter.com/rcachatx?lang=en">René Cacheaux - @RCachATX</a></p><ul>
<li>Marzipan</li>
<li><a href="https://gist.github.com/lattner/31ed37682ef1576b16bca1432ea9f782">Swift Concurrency Primitives</a></li>
</ul><p><a href="https://twitter.com/leogdion"><em>Leo Dion - @leogdion</em></a></p><ul>
<li>Xcode Improvements</li>
<li>More Exposure for Services and <a href="https://share.transistor.fm/s/ffcb9fc1">Server Side Swift</a>
</li>
<li><a href="https://swift.org/package-manager/">Swift Package Manager</a></li>
<li>More Developer Tools</li>
</ul><p>What happened to <a href="https://github.com/alcatraz/Alcatraz">Alcatraz</a> and <a href="https://developer.apple.com/documentation/xcodekit/creating_a_source_editor_extension">Xcode Extensions</a>?</p><p><b>Social Media</b></p><p><a href="https://twitter.com/brightdigit"><strong>Twitter - @brightdigit<br></strong></a><a href="http://facebook.com/brightdigit"><strong>Facebook - BrightDigit</strong></a></p><p><b><a href="https://www.instagram.com/brightdigit/"><strong>Brand New Instagram! - @brightdigit</strong></a></b></p><p><br></p><p><b>Transcript</b></p><p><strong>Leo Dion (Host): </strong>[00:00:00] Hello, welcome to another episode of EmpowerApps Show today. We have with us René Cacheaux and Josh Berlin. Guys, thanks for coming on. </p><p><strong>René Cacheaux (Guest): </strong>[00:00:08] Thanks for having us. </p><p><strong>Josh Berlin (Guest): </strong>[00:00:09] Yeah.</p><p><strong>Leo Dion (Host): </strong>[00:00:09] So I've heard a lot of issues that companies have with architecture especially architecture with iOS apps and I know you guys have a book coming out as part of the Ray Wenderlich series - IOS app architecture. So this is something I'm really interested [in]. Maybe if you can kind of define the problems you've seen a lot of companies run into when it comes to architecting a successful mobile app, especially in iOS. </p><p><strong>René Cacheaux (Guest): </strong>[00:00:40] Yeah, one of the biggest challenges with iOS development is that there's really no strong opinion from Apple. So everyone's really kind of left to roll their own patterns. The biggest issues that I've seen is just slow in-team velocity, because we read a lot more code than we write. Everytime that we go into a code base to add a new feature, fix a bug, or something - the more tightly coupled all the pieces of your app are [and] the more you have to read to kind of understand all the things that you need to understand to make a safe change without breaking something. And so, kind of architecture really helps speed up your team because if you can kind of use the right patterns and break things up into no easy to reason about chunks. It's much much easier to find where you need to make the change and have confidence that you are not going to break something. So that's what I would say kind of like the main points on that.</p><p><strong>Josh Berlin (Guest): </strong>[00:01:39] Yeah and another thing is like a lot of apps that are built usually start with maybe like one person or a small team and  that developer has an opinion about how to architect the app and as a team grows and the product org wants more changes [it] becomes a lot harder to make those changes if the team isn't on board with one type of architecture and everyone is going to have their own opinion. It's going to be a lot easier to make these changes. If everyone agrees on one architecture and knows where to our find everything, everything is documented because one day when the team grows more, you know, you're going to potentially have more problems - like René was saying finding things in the code base. When the app is small it's not as big of a deal but when it grows it becomes a lot more challenging, so it's good to get these architectural patterns in early on and have everyone on board.</p><p><strong>Leo Dion (Host): </strong>[00:02:36] Maybe talk a little bit about your background and how did you guys get into iOS development? </p><p><strong>René Cacheaux (Guest): </strong>[00:02:40] So I got into it back in around 2008. I was doing a bunch of kind of web Java server face, you know internal it development and my wife had bought an iPhone and was kind of really trying to get me on board with the Apple ecosystem. Back then I was kind of Microsoft guy. You know, I was like, I'll try developing for this it would be interesting and I just got hooked honestly like. Working with like very abstract things kind of in the cloud and kind of in the background versus working on something that you can kind of feel and touch and look and show your friends kind of a really really cool thing. That's how I got into it. </p><p><strong>Leo Dion (Host): </strong>[00:03:17] How about you Josh? </p><p><strong>Josh Berlin (Guest): </strong>[00:03:18] Yeah. So in college, it was like maybe 10 years ago and iOS first came out. No one was really teaching this in school and I wanted a fitness tracker. So I built one for myself and ended up getting a job at a company building business products for Windows. They wanted to Android and iOS app and somehow I got the job. I'm in a building iOS apps ever since then. </p><p><strong>Leo Dion (Host): </strong>[00:03:43] It's funny. So how big are the teams that you've worked with? </p><p><strong>René Cacheaux (Guest): </strong>[00:03:46] All kinds of ranges. I mean Josh and I used to work at a consultancy called Mutual Mobile. The kind of a big project that we work together on were kind of establish all this architecture stuff. We had a team about six iOS and about six Android but you know in that agency we had other projects that were like two on each platform - so anywhere between two and six on each platform when we were in which the mobile </p><p><strong>Leo Dion (Host): </strong>[00:04:10] It seems like one of the big things I'm hearing is as more and more code gets written there's almost use the term interesting use in terms of velocity and it is a specific term obviously the agile world, but I can understand what you mean you basically mean speed of the project and its movement but I would almost say like when you get more and more code. It becomes more and more difficult to manage and then on top of it. There's like an inertia there. The bigger it gets the heavier it gets and the harder it is to move it. It seems to me like what you're saying is like good architecture makes it much quicker and much easier to add more and more components to an app. Is that correct? </p><p><strong>René Cacheaux (Guest): </strong>[00:04:49] Yeah, the weird part about it though is to get to the point where you get those benefits. You do have to kind of slow down a little bit. And that's the part that most organizations struggle with is that they want that high-velocity upfront on day zero and you just can't get that. If you don't spend the time to work together as a team and really figure out the patterns that everyone's on board with and really kind of experiment a little bit and kind of lock it in. That's one thing that, the project that I worked with Josh on. You know, the first couple months it was a pretty slow process. I mean we had everyone in every code review. We experimented with the patterns that we were using and we were tweaking them and whatnot. And so at the very beginning, it really wasn't a high-velocity project probably slower than average. But then about three or four months into it, we started moving really really fast and we had a big deadline because this project was for a big brand, for the World Cup and we needed it by certain day and it was a pretty large scope project. And by the end of it the last about three four months of it, I mean we were moving super fast. Everyone was able to build features pretty quickly. I know Josh if you want to expand on any of that stuff. </p><p><strong>Josh Berlin (Guest): </strong>[00:06:05] I think we were pretty lucky to have those two to three months to really nail down the architecture we liked and to implement an architecture that would allow us after that like initial ramp-up period to build new features super super fast and not break everything because If we didn't have those first two months and we just started like writing code like building new features. I don't even know like everything probably would have crumbled because we didn't have a good foundation. So I think it's super important. Like maybe you don't need two to three months, but maybe even two to three weeks when you start a new project to really nail down the architecture and figure out how you're going to be able to build features quickly later on and test them.</p><p><strong>Leo Dion (Host): </strong>[00:06:48] Do you think part of it is making sure somebody is there to enforce consistency or do you need like an architecture role set up for a team or what are ways that you can like foster that within a company?</p><p><strong>Josh Berlin (Guest): </strong>[00:07:01] I don't think you need necessarily an architecture role, but I think that having meetings at the early stages of products about architecture is very important </p><p><strong>Leo Dion (Host): </strong>[00:07:13] And you're talking like highly technical meetings, right?</p><p><strong>Josh Berlin (Guest): </strong>[00:07:15] Yes, very technical like a lot of diagrams like class diagrams how everything is going to fit together and like coming up with some patterns. So I don't think you need necessarily like someone who's an architect on the project. I mean it definitely would help but I think like just a team of four or five people could have these meetings and figure this stuff out early on.</p><p><strong>Leo Dion (Host): </strong>[00:07:34] Do you need somebody to call the shots at all?</p><p><strong>Josh Berlin (Guest): </strong>[00:07:37] I mean I think it's probably better if you have someone driving this and everyone just kind of like tuning their plan, but I don't think it's completely necessary. I mean as long as everyone and I think what's more important is everyone's in agreement and everyone feels that they can have input and they're not just like doing what this one person says.</p><p><strong>Leo Dion (Host): </strong>[00:07:58] Yeah. I've been in situations like that where there's somebody who pretty much is it ordering everybody what to do as far as architecture? And yeah, it can be really difficult to be in situations like that.</p><p><strong>René Cacheaux (Guest): </strong>[00:08:08] I think the DNA of the team has a lot to do with it. I've been on very different kinds of teams and in teams we have folks that are very like self-motivated. You don't really need someone calling the shots and other teams. I've been on their folks that you know, maybe you want some more guidance and so for those are actually wanting someone to call the shots. So I think it really depends on kind of the personality and makeup of each team. But it definitely helps to have at least someone driving and at least the best way it's worked I think is making sure that whoever is driving is very open-minded and is more interested in having decisions being made less than pushing their personal agenda what they personally think is the best architecture.</p><p><strong>Leo Dion (Host): </strong>[00:08:51] I really like that. It's a really good point. So maybe you guys can get into a little bit of the nitty-gritty what are like the different styles or different patterns that people can implement especially when it comes to iOS apps and architecture. </p><p><strong>René Cacheaux (Guest): </strong>[00:09:06] So there's three main styles that we've kind of categorized most of the patterns into. The more traditional work all the MV patterns, which are like MVC and MVP and MVVM. </p><p><strong>Leo Dion (Host): </strong>[00:09:16] And so like Apple, obviously, they really push MVC. </p><p><strong>René Cacheaux (Guest): </strong>[00:09:20] Yes.</p><p><strong>Leo Dion (Host): </strong>[00:09:21] If there's any pattern that they push usually MVC is one of their oldest and most steadfast patterns</p><p><strong>René Cacheaux (Guest): </strong>[00:09:27] They push it a lot. You know, UIKit [and] Cocoa Touch is designed around that pattern. And so that's the pattern that you will fight the least with when you're working with cocoa touch. It's a good pattern and there's a lot of materials out their on folks that are trying to kind of demystify all the negative kind of vibes around. You see because you can do MVC very well. I think that's actually the main thing that we learned Josh and I working together is that it's not so much a matter of which pattern you use its how well you put it to practice and you can like take any pattern and do a horrible job of applying it. You can take any pattern and do a great job of applying it. Like Dave Delong who used to work at Apple. He's a big proponent of MVC has a lot of cool articles out there on hey MVC is not so bad you just, you know decompose your view controllers into smart controllers and you'll be fine. You don't have to do this whole in MVP thing to fix those problems. </p><p><strong>Josh Berlin (Guest): </strong>[00:10:19] Yeah, like everyone hates on MVC but like I think a lot of it is just like how you implement it. It's not so much that in VC is a bad pattern is just like kind of like a broad thing and there's a lot of ways to do it poorly and a lot of ways do it well.</p><p><strong>Leo Dion (Host): </strong>[00:10:33] Yeah, we had Alex Bush on who does contract work for Uber and his big complaint was how MVC gets unwieldy with really really really large projects. And that's kind of what I've heard. I use MVC. I don't have really large projects that I feel uncomfortable still implementing it but I think one of the things I've seen especially novice developers do is they'll take a pattern like a specific design pattern and just use it to use it without understanding why they use it. Most of the time, design patterns, I feel like they end up growing out of an it like just based on my experience. I've experienced enough that patterns just a naturally develop in your code if you're already using a lot of other things like making sure that things only do one thing. I forgot what that's called or, you know having a healthy use of like protocols or interfaces that automatically creates healthy patterns that follow patterns that we've seen in various books and stuff. </p><p><strong>René Cacheaux (Guest): </strong>[00:11:33] Yeah, I experienced that exact same kind of sequence of events where like I first learned about design patterns and it was like a kid in a candy store. I was like, I want to use as many of these as I can and then it kind of dies down and then when you just start trying to solve the problems that are in front of you it's like you said that you'll end up using those patterns but not because you said oh I want to use the Observer pattern. It's more because oh you have these external signals coming from the outside coming into the view controller and you want to decouple the view controller from that - let me build an observer for that. </p><p><strong>Leo Dion (Host): </strong>[00:12:05] Yeah, and then you realize wait a second. This is an observer pattern. It's like how they naturally grow out of your code. </p><p><strong>René Cacheaux (Guest): </strong>[00:12:11] Yeah. Exactly. </p><p><strong>Josh Berlin (Guest): </strong>[00:12:12] Yeah. </p><p><strong>Leo Dion (Host): </strong>[00:12:12] What other patterns do you see used throughout iOS? </p><p><strong>Josh Berlin (Guest): </strong>[00:12:17] Yeah. I think they'll like the reactive pattern has been super hot lately.</p><p><strong>Leo Dion (Host): </strong>[00:12:21] Yes. </p><p><strong>Josh Berlin (Guest): </strong>[00:12:22] Maybe it's not the best. Thing to do on iOS like to write all this reactive code actually at the company. I work for now when I started a year and a few months ago the app was using a lot of RX Swift. </p><p><strong>Leo Dion (Host): </strong>[00:12:34] And RX Swift is hot right now </p><p><strong>Josh Berlin (Guest): </strong>[00:12:36] It's very hot. It's very hot. And when I first started I was I know RX left and I know like how to write it but it's still like sometimes when you look at a new project with Rx Swift you're kind of just like it's hard to wrap your head around what's going on. It's kind of funny because now a year later we have no RX Swift in the project. We've moved completely away from reactive programming and I think that's more of like, it's just easier to understand sometimes when the whole team doesn't know our RX Swift. It's like well do we want to continue down this path teach everyone this new style this like new trendy hot style or you want to move to something more of like an MVC pattern where everyone's more familiar and it's maybe more readable for everybody. </p><p><strong>Leo Dion (Host): </strong>[00:13:18] I also feel like I don't like bringing in third-party libraries like necessarily fight against the grain of I'm not against that pattern specific. But if you're like, let's say for instance, you're doing react like Facebook. React JavaScript stuff, right? Okay, at least that follows that pattern you're not fighting against the grain because that's what the whole thing is set up for but iOS like you're fighting against Apple and their push for MVC and okay if that's what you want to do. That's fine. But if after you know WWDC things though, work out that way like you're dependent on the React Swift team to like keep up with it, which that's up to you. That's a risk you're have to be willing to take</p><p><strong>René Cacheaux (Guest): </strong>[00:13:56] Again. Like I think that's where the team DNA kind of comes in and that's why I think that it's bad advice to say here's the one architecture that you should always use. It's really about looking at who you're working with because there's some folks that are really into that stuff. And so I've been in environments both very reactive in both not and. Direct trainer bring a reactive into a non reactive environment is really hard is really really hard. Like Josh said it's almost not worth it. The other thing I think that kind of popped in my mind while we're discussing this stuff was that I would bring in third-party libraries one of the things that I kind of don't like about RX whiffed is that it's a really big library and if you really think about the common use cases, you're probably only using about maybe 60% of the library maybe 50% So you're only using a portion of it, but you're paying all the binary costs in the weight that it brings in. I really wish they could break it down into like a core version of it or not, but. Bringing third party dependencies can be pretty bad or pretty heavy on your app. </p><p><strong>Leo Dion (Host): </strong>[00:14:57] Yeah, I kind of agree. So anything else you want to talk about as far as different styles. I know like dependency injection has been big, protocol oriented programming especially important in the Swift realm.</p><p><strong>René Cacheaux (Guest): </strong>[00:15:11] Yeah, I mean that's Dependency Injection is kind of cool because it's kind of a universal concept that we've been able to apply to all the different patterns. So I think of Dependency Injection as kind of like the foundation of the architecture where you can put patterns on top of it and if there's one thing that you want to focus on getting a right, I think especially if you're trying to build for a large team or large set of teams dependency injections is really important to get and the thing there is Josh and I've done this several different ways as we were learning the pattern and using it in different environments and different teams different companies. We started writing everything by hand because with Dependency Injection, there are Frameworks and libraries that kind of help you follow the pattern and that's typically where everyone goes to is oh, let me find a library or framework that helps with dependency injection. We found that using those libraries hurts more than helps. We found that handwriting all your dependency injection containers is actually the easiest way to write code that's easy to understand. It's a little more painful. It's a little bit more boilerplate a little bit more boring work, but on the other side of that you get a code base that's much easier to read and understand and trace through that's my advice I would give to any iOS developer is sure like look at the frameworks and play around with them and use them at the end of the day. I would recommend starting with handwriting stuff. The key thing there is. To make sure you don't put everything in one container, you know break it up down into multiple containers. But if you do that, you'll find that it's much easier to manage or do you agree with that Josh? </p><p><strong>Josh Berlin (Guest): </strong>[00:16:41] Yeah hundred percent. I mean, I think you're going to do one thing to make your app architecture better. It's like. Use dependency injection and like René was saying D.I. Can go from very simple to very very very complicated. </p><p><strong>Leo Dion (Host): </strong>[00:16:55] I want to break down dependency injection because some folks might not know what exactly that means. I'm gonna try at what I do. So I learned dependency injection at my previous employer? It was like this is amazing. Now this allows for unit testing, easy plugins and stuff. We had talked before the recording about how like I used to be a C# developer interview. Castle Windsor for dependency injection, which is great because Castle Windsor, it can do all the reflections so I can like look up whatever the default implementation of a specific interfaces and automatically do that for you but then if you want to like use mocks, you can use mocks to unit test as well. And I miss some of that ability to do reflection, automate some of the ability to plug in certain classes. So the way I've done dependency injection is kind of employing the protocol oriented way of creating a protocol for almost everything and then having specific components. Like for instance I have a class that needs I think that turns a wheel. So I have a protocol for turning a wheel and then I'll have a specific implementation of that. And then that way the constructor for that thing that takes in the thing that turns the wheel can take in anything that turns the wheel it doesn't matter but then I have a default implementation that I use an app and then in my unit test I might have a mock one just to see you know that it works regardless of what gets plugged in. Is that kind of what we're talking about here? </p><p><strong>René Cacheaux (Guest): </strong>[00:18:19] Yeah, and we're talking about also like the resolution of these things. So like when you say okay, I want to create this object and this object has a dependency on three other objects that may be a conform to specific protocol how that instruction happens how the assembly of the dependency graph happens. That's where tools like swinge act and other kind of dependency injection frameworks help you out. But the thing that we found is that those tools use what's called runtime resolution. So when you say I want this object, like let's say I want this view controller and it depends on this networking thingy. And this database thingy when you say hey give me this view controller. It does the resolution at runtime it rather than compile time. So if for some reason you don't register how to create a network thingy or a database thingy, you won't find out until you run the app, which is kind of a more dangerous way of doing it. Whereas if you just handwrite your dependency containers that. Know how to create a view controller with it network thingy and database thingy. You'll find out at compile time. If you're not able to create a database object conforming this protocol and injecting into the constructor it just you know, we should won't compile which is great for a really big app where you have lots of different protocols and services and objects and a large dependency graph. You don't want to depend on having to run through all the runtime logic to expose any kind of missing dependencies there so.</p><p><strong>Leo Dion (Host): </strong>[00:19:44] Yeah, that's what I feel like has been the big roadblock for me is the lack of like decent resolution frameworks to plug in. So I just end up, you know hard-coding in the app and taking defaults and things like that.</p><p><strong>René Cacheaux (Guest): </strong>[00:19:57] Yeah, and that's exactly how we found it to be the most helpful. Yep. </p><p><strong>Josh Berlin (Guest): </strong>[00:20:00] I mean even doing it that way like you're still getting all the benefits of dependency injection where your Constructors take in interfaces like protocols and these classes become testable. Even though you're not using a framework or still getting all the benefits of DI doing it yourself by hand.</p><p><strong>Leo Dion (Host): </strong>[00:20:18] Exactly. And then you know, when you do a unit test you can mock it you're not dependent on that specifically so you guys have had experience what other languages have you had experience developing. Sounds like René you've done some Java stuff. </p><p><strong>René Cacheaux (Guest): </strong>[00:20:30] Yeah, Java and JavaScript. I've done Kotlin, Objective-C, and Swift. Those are the main ones. </p><p><strong>Josh Berlin (Guest): </strong>[00:20:39] A couple years ago. I spent some time doing a reactive element the JavaScript. </p><p><strong>Leo Dion (Host): </strong>[00:20:45] Okay. </p><p><strong>Josh Berlin (Guest): </strong>[00:20:45] Yeah, I've done some Java before a little bit of Kotlin. </p><p><strong>Leo Dion (Host): </strong>[00:20:49] What have you found as what's unique as far as IOS app architecture? Would have been unique benefits that unique challenges that you've seen, you know with that and with the dev tools in general.</p><p><strong>René Cacheaux (Guest): </strong>[00:21:02] That's good question. There's a lot of thoughts there that are running through my mind. So one of the things that I think is challenging is that Apple even though they do push MVC quite heavily and cocoa touch does kind of you know is designed with MVC in my they don't seem to have a very strong opinion about it at least not around tooling and things like that. Whereas like in the Android side Google's really into architecture these days and they're putting out like libraries that are all about just architecture. It kind of helped folks, you know, architect their apps. And so I think the platform having an opinion really helps because it allows people to kind of rally around that set of patterns or that sort of thing and build tooling libraries that kind of just work with it and like an IOS and Android you don't have to use those things, right, but if you want to move. It's a good default. Whereas an iOS we really don't have that. So that's I think a challenge. </p><p><strong>Leo Dion (Host): </strong>[00:21:55] It's funny you mention that because I'm doing a talk on multi-threaded like asynchronous development. I'm preparing for it. And one of the big libraries for Swift to do that is actually done by Google. Yeah, even though we have like Swift NIO by Apple, Google is even providing libraries for Swift developers. </p><p><strong>René Cacheaux (Guest): </strong>[00:22:14] Yeah, and I guess Swift is a huge a challenge right? Because it's a great language. It's moving so slowly. I mean you can pair it with something like Kotlin. We just have huge gaps in Swift like concurrency primitives that are not there and I'm calling you have things like her routines and things like that. It's just, you know Collins moving a lot faster than Swift. And so when you're doing both Android and iOS today's a weird time to be doing both because there's a lot lacking or not on the iOS side. It used to be the other way around.</p><p><strong>Leo Dion (Host): </strong>[00:22:41] Yeah. I mean it almost seems like with Swift they've slowed down because they've placed a high priority on like ABI stability. I think now that they've gotten over that hurdle. It'll be interesting to see and we'll get into that like what they might come up with as far as development tools for iOS and maybe updates to Swift as a language. How about as far as like Xcode devtools? It seems like we're going in the same direction where it's just like Xcode. It's painful to do Swift development on sometimes like I'm glad we have some refactoring stuff but just like autocomplete sometimes it works. Sometimes it doesn't very cryptic messages from the compiler when we just aren't doing our generic protocols the right way that it wants us to. What other stuff have you run into?</p><p><strong>Josh Berlin (Guest): </strong>[00:23:28] The error messages are kind of a tough. I think it's another reason to just make your apps as simple as possible. That's why I like sometimes using third-party libraries just makes all the error messages worse and it's harder to find bugs </p><p><strong>Leo Dion (Host): </strong>[00:23:42] It fixes one problem, but crazy three more. </p><p><strong>Josh Berlin (Guest): </strong>[00:23:44] Yeah. So like maybe you have like a really cool architecture and like you have one way data flow, you know, everything works properly, but when something breaks, it might be a lot harder to fix versus if you go a simple around simple architecture, you're kind of setting yourself up for success later on. So think like like Xcode has come a long way in the last 10 years, but you still have to fight it sometimes for sure. </p><p><strong>René Cacheaux (Guest): </strong>[00:24:09] It's definitely creaking any like the fact that they had a kind of rebuild the build system underneath it completely. I mean it really needs it have an overhaul. Yeah. </p><p><strong>Josh Berlin (Guest): </strong>[00:24:19] Yeah build times are pretty high.</p><p><strong>Leo Dion (Host): </strong>[00:24:21] It's not as bad as iTunes, but still it needs help. </p><p><strong>Josh Berlin (Guest): </strong>[00:24:24] And the thing is like Google's just continuously improving their IDs and it kind of like makes me want to start doing more Android development not like I love iOS like that's my number one. It is I think interesting because they're doing so much with architecture and their build system is amazing. Right? So iOS developers can learn a lot from the Android platform. </p><p><strong>Leo Dion (Host): </strong>[00:24:46] Yeah, it's amazing to see like there are some really good tools out there that third parties have built like I'm just thinking I like Fastlane and see what you will about Cocoapods or Carthage, but they're essentially filling in the gap that Apple hasn't provide like hopefully Swift Package Management can fill a lot of that Gap like with dependencies, but still it's nice to see that at least there's a community out there filling in the gaps  that apple hasn't filled, right?</p><p><strong>René Cacheaux (Guest): </strong>[00:25:13] It's strange though because you know apple is such a large organization with so much money. You know, I feel like if they really wanted to solve these problems. They probably could do a pretty good job and they are doing things like they acquired BuddyBuild and so we'll see what happens with that. But I still feel like there's so much more that they could do in terms of helping developers in the environments that they are in today because a lot of the tooling that Apple builds. Apple doesn't use themselves things like Interface Builder isn't that widely used I think in apple and so what happens is a lot of the stuff that Apple builds is not really tailored for large organizations or large teams building large apps. And so that's where the community has to kind of jump in and fill those gaps which you know, the community has a really good job of it. I feel like apple could do even better job of it given all the resources that they have, Hopefully </p><p><strong>Leo Dion (Host): </strong>[00:26:03] You speak about interface Builder. So let's get into it like especially with architecture. How do you deal with managing your UI, but keeping a healthy architecture. I'm a storyboard guy, but I'm by no means somebody who's going to like shove it down anybody's throat. I totally get how painful it can be especially working on a team when you have like merging you have to deal with some crap like that. But what are your recommendations or your personal styling?</p><p><strong>René Cacheaux (Guest): </strong>[00:26:33] I would not recommend anyone use interface Builder especially in large teams. </p><p><strong>Leo Dion (Host): </strong>[00:26:37] Yes. </p><p><strong>René Cacheaux (Guest): </strong>[00:26:38] That's one of the strong opinions that I do have is mostly because with interface Builder. You don't have a source of Truth everything that you put in your storyboard or your nib file is subject to change by the code underneath it. And so when you're looking at the story board itself in your kind of tweaking the layouts and you're taking the constraints and stuff like that. There's nothing stopping the code underneath the completely changing that and so when there's bugs and stuff, sometimes it's really hard to figure out the root cause because you can't just look at the storyboard. That's not enough. You have to go to storyboard and you have to look at the code. So that's one of the things that Apple could fix that. The other thing around is if you use a storyboard still kind of the way that Apple suggest you use them with segues and stuff like that. We do end up coupling all your view controllers together and there are kind of acts around it to make it less so but they're still pretty hacky. The simplest example is just a navigation stack, right, you know, you have a navigation controller and you have your presenting like, you know a list of things and you tap on an item with segues you're going to have to instantiate the next view controller in that first view controller. Now your tightly coupling those two things. If you needed to reorganize the navigation path, you're gonna have to go in to touch all the view controllers and kind of remove things around. So those are like a couple of big things I would say there's other ones but they're the ones that up my mind </p><p><strong>Josh Berlin (Guest): </strong>[00:27:54] Also like Auto layout code is not that hard to write by hand. I think the initial ramp up time is pretty high. It takes a little bit to learn how to build constraints by hand.</p><p><strong>Leo Dion (Host): </strong>[00:28:05] You're talking about like the visual format language?</p><p><strong>Josh Berlin (Guest): </strong>[00:28:08] I'm just talking about like all the helper methods that Apple provides to create constraints and like constrained one view to another one in code </p><p><strong>Leo Dion (Host): </strong>[00:28:16] Interesting. Okay. </p><p><strong>René Cacheaux (Guest): </strong>[00:28:17] Yeah. They added like a new anchor API that makes it way easier </p><p><strong>Josh Berlin (Guest): </strong>[00:28:20] So nice. Yeah and like you can write it some helper methods around that stuff reading this in your view classes is really nice and it's really easy to look at a view and see how everything's laid out in code and the other thing is like simple views in Interface Builder. Maybe it's easier to build those using like like a storyboard or seeing the views like laid out on screen versus encode but once you start doing like animations and changing constraints that stuff is so much easier to write in code. </p><p><strong>René Cacheaux (Guest): </strong>[00:28:51] One thing you mention there Josh is I think a lot of folks don't use this enough where you can totally subclass uiview and do all your styling and layout in there as opposed to in a view controller. I still see a tons of you controllers with times of layout and styling code. I think that's one of the biggest complaints about not doing your UI and code is like, oh it blows my view controllers in your dad's all this layout and style code into my view controllers. And so. You know what I usually say is. Okay. Well, that's fine. Just subclass your route uiview do it all in there and that really nicely separates the viewcontroller kind of controlling logic from like the UI and a styling logic. </p><p><strong>Leo Dion (Host): </strong>[00:29:27] Yeah that goes back to the whole point about having healthy app architecture. Your view should not be in the controller like drawing your view should be in your view. That's what it's there for. </p><p><strong>René Cacheaux (Guest): </strong>[00:29:35] Exactly. </p><p><strong>Leo Dion (Host): </strong>[00:29:37] Cool. Well, thanks guys for coming on. So do you want to talk a little bit about your book that's coming out? </p><p><strong>René Cacheaux (Guest): </strong>[00:29:42] Yeah, definitely. So it's been lots of effort getting this book out. We've been working on it for I think about three years now, we're super excited about it. We really wanted to write something that was extremely pragmatic and something that would tackle all the real world scenarios of architecture. I think I've read a bunch of different architecture books that have come out and they're very theoretical they usually have very simple example code and so what we decided to do is to try to build out as much of a real app as we could possibly do and so what we did is we built basically an app that's kind of like an Uber app, but it's kind of fun. It's a kangaroos pick you up, so it's called Koober. And so yeah, you can hail a kangaroo </p><p><strong>Leo Dion (Host): </strong>[00:30:26] I started watching your YouTube video. You did a presentation on it, about Koober I loved it. Yeah, and I'll post a link to that as well.</p><p><strong>René Cacheaux (Guest): </strong>[00:30:33] It was a lot of fun. We based it off of Uber. So we built as much of Uber as we possibly could and so we had to tackle some hard problems. We couldn't shy away from things like navigation. Or things like authentication tokens and authentication stuff. And so we tackled all of those things. So because of that we didn't cover that many architectures. I think we cover three but we cover them pretty deeply and so yeah, I mean that's a couple of things I'm excited about actually probably the thing I'm most excited about is Josh and I are working together last, you know, six or so years. We kind of came up with her own kind of architecture and the last chapter of the book kind of covers that and we're pretty excited about it. Hopefully the community will have a good response to it. And I'm sure Josh has lots of thoughts on it. </p><p><strong>Josh Berlin (Guest): </strong>[00:31:20] I'm excited to hear what people think about  elements. It's an architecture that we created a Mutual Mobile  a long time ago, and we really try to provide a set of useful. Architecture patterns that people can like pick and choose which ones they like and yeah, we're pretty excited to see what people think of that. </p><p><strong>Leo Dion (Host): </strong>[00:31:39] Awesome. The name of the book is Advanced IOS app architecture and you can find out right at Ray Wenderlich's site. I'll provide the link in the notes just to plug our podcast. We are at brightdigit on Twitter as well as Facebook and I just started Instagram so you should definitely check that out. And before we close out guys, I wanted to ask you maybe your top three or top two things. You're most looking forward to at WWDC this year.</p><p><strong>Josh Berlin (Guest): </strong>[00:32:07] I know my number one. Definitely the Dark theme and I'm really excited to see what they do with seeming because that's something I've been working on at work lately is building a theming for our app and there's a lot of like third party theme libraries that are available right now. And I'm excited to see how Apple is going to do this.</p><p><strong>Leo Dion (Host): </strong>[00:32:29] Yeah, I'm excited about that too. </p><p><strong>René Cacheaux (Guest): </strong>[00:32:31] Oh boy. I have things that I want that I don't think are going to happen if this is gonna happen if they're cool. Obviously, I did. My number one. Most realistic was Marzipan. Just seeing what that looks like. I think I'm most interested in seeing how much of the macOS stuff is exposed like things like Safari extensions and stuff like that. Things that I would like to have that probably I think might not happen. I'd love for them to present concurrency primitives for. Something like co-routines would be so awesome. It would be really really cool </p><p><strong>Leo Dion (Host): </strong>[00:33:02] I feel like that if they're gonna announce it like a Swift is open source. That's the thing. I'm thinking about Swift is open source. So if they're going to announce that they would announce it. I think that's gonna be a Swift 6 or 5.3 or 5.2 thing. I think is definitely on the radar but I doubt we're going to hear about it at WWDC. But yeah, I totally agree. We need a async await. We need some of that stuff. </p><p><strong>René Cacheaux (Guest): </strong>[00:33:24] So you never know but yeah, I don't expect it. Yeah, those are my two. </p><p><strong>Leo Dion (Host): </strong>[00:33:28] Yeah. I was just going to say going back. Like I wish they'd fix our Xcode. I wish they'd get some of that stuff fixed. I think Swift Package Manager should be integrated into Xcode and it shouldn't be so difficult. I've become a big fan of some of the server side stuff. I'd like to at least have some sort of plug. For like Swift NIO and all the different Vapor and all the Kitura and all those projects because I think they're missing a lot of that push that Apple could give it. I'm really interested to see and I've done an episode on it as Apple has moved more into services if we're going to see Apple do anything for developers when it comes to services. Are we going to see more robust like CloudKit or integration with that because we have Firebase right Firebase is elephant in the room. Like where's Apple and this. So anything else guys before we close out? </p><p><strong>René Cacheaux (Guest): </strong>[00:34:18] The only I would say is you reminded me of something what happened to Xcode Extensions, like nothing like it was gonna go somewhere. It wouldn't go anywhere yet. </p><p><strong>Leo Dion (Host): </strong>[00:34:26] Yeah. Yeah exactly </p><p><strong>Josh Berlin (Guest): </strong>[00:34:28] Alcatraz thing. Yeah. I've hardly ever used anything some cool stuff on there though. </p><p><strong>Leo Dion (Host): </strong>[00:34:33] And it seems like that stuff is really more developer tools. Just more robust developer tools. That's all I'm asking for but I am interested in Marzipan and how that's going to work out. I've done some mac development and it's not that bad but there's a lot of old old </p><p><strong>René Cacheaux (Guest): </strong>[00:34:47] it's painful. </p><p><strong>Leo Dion (Host): </strong>[00:34:49] It's old. That's my problem with it. It's very Objective-C focused. And so I think Marzipan will breathe some fresh air. But my worry is that we're going to get kind of how. Lot of lazy companies but take their iPhone apps and just make them really big on the iPad. I have a feeling it's going to be the same on the Mac, unfortunately. Yeah, cool where can folks get a hold of you as far as on social media. </p><p><strong>René Cacheaux (Guest): </strong>[00:35:14] I'm on Twitter. My handle is at rcacheatx. That's where I primarily am. </p><p><strong>Josh Berlin (Guest): </strong>[00:35:21] My Twitter handle is at jab2109</p><p><strong>Leo Dion (Host): </strong>[00:35:25] So guys. Thanks again for coming on the show. It's been fantastic, and I would love to have you go again talking more about architecture and how it can help teams work out and expressing. Thanks, Leo.</p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 02 Jun 2019 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/7247db7e/e7236362.mp3" length="15292549" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>2137</itunes:duration>
      <itunes:summary>In this episode, we talk with René Cacheaux and Josh Berlin, authors of Advanced iOS App Architecture. In this episode, we talk about: how a company can foster healthy iOS Architectures with their iOS developers
and what makes good architectures.</itunes:summary>
      <itunes:subtitle>In this episode, we talk with René Cacheaux and Josh Berlin, authors of Advanced iOS App Architecture. In this episode, we talk about: how a company can foster healthy iOS Architectures with their iOS developers
and what makes good architectures.</itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Apple and Video with Paul J Schmidt</title>
      <itunes:episode>13</itunes:episode>
      <itunes:title>Apple and Video with Paul J Schmidt</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">82b1b336-4d0c-4e3a-b246-d689ef03c126</guid>
      <link>https://share.transistor.fm/s/6321c757</link>
      <description>
        <![CDATA[<p><b>UnoDeuce Multimedia and Storytelling</b></p><ul>
<li><a href="https://www.unodeuce.com">UnoDeuce Multimedia</a></li>
<li><a href="https://www.youtube.com/user/1dpmultimedia?feature=results_main">Youtube</a></li>
<li><a href="https://www.instagram.com/unodeucemedia/">Instagram</a></li>
<li><a href="https://twitter.com/unodeucemedia">Twitter</a></li>
<li><a href="https://www.facebook.com/UnoDeuceMultimedia">Facebook</a></li>
</ul><p><b>Previous Episodes</b></p><ul><li><a href="https://share.transistor.fm/s/3ee56c45">Apple 2019 - Apple and Service</a></li></ul><p><b><a href="https://www.youtube.com/watch?v=TZmBoMZFC8g">March 25th Event</a></b></p><ul>
<li>Other Services<ul>
<li><a href="https://www.apple.com/apple-arcade/">Apple Arcade</a></li>
<li><a href="https://www.apple.com/apple-card/">Apple Card</a></li>
<li><a href="https://www.apple.com/apple-news/">Apple News</a></li>
<li><a href="https://www.apple.com/apple-music/">Apple Music</a></li>
</ul>
</li>
<li>How is Apple positioning itself compared with other Streaming Services?<ul>
<li><a href="https://www.apple.com/tv/">Apple TV</a></li>
<li><a href="https://www.apple.com/apple-tv-plus/">Apple TV+</a></li>
<li><a href="https://www.amazon.com/Amazon-Video/b/ref=sv_atv_logo?node=2858778011&amp;ie=UTF8">Amazon Prime </a></li>
<li><a href="https://www.netflix.com">Netflix</a></li>
<li><a href="https://preview.disneyplus.com">Disney+</a></li>
<li><a href="https://exponent.fm/episode-169-family-friendly-disney/">Exponent Episode - Family-Friendly Disney</a></li>
<li><a href="https://www.hulu.com/welcome">Hulu</a></li>
</ul>
</li>
</ul><p><b>How to start telling stories with video now</b></p><ul>
<li><a href="https://www.filmicpro.com">Filmic Pro</a></li>
<li><a href="https://www.apple.com/clips/">Clips</a></li>
<li><a href="https://www.apple.com/imovie/">iMovie</a></li>
<li>Recording with an iPhone</li>
<li>Editing with an iPad</li>
<li>
<a href="https://www.apple.com/imac/">iMac</a> vs <a href="https://www.apple.com/imac-pro/">iMac Pro</a> for Video</li>
<li>HD vs <a href="https://en.wikipedia.org/wiki/4K_resolution">4K</a>
</li>
<li><a href="https://en.wikipedia.org/wiki/Wide-gamut_RGB_color_space">High Color Gamut</a></li>
<li><a href="https://www.apple.com/final-cut-pro/">Final Cut Pro</a></li>
<li><a href="https://www.apple.com/mac-mini/">Mac Mini</a></li>
</ul><p><b>Running IT in an Apple Run Business</b></p><ul><li><a href="https://www.dropbox.com">Dropbox</a></li></ul><p><strong>Archiving and Hard Drives </strong></p><ul>
<li><a href="https://www.lacie.com">Lacie</a></li>
<li><a href="https://www.westerndigital.com">Western Digital</a></li>
<li><a href="https://www.backblaze.com/blog/hard-drive-stats-for-2018/">BackBlaze Hard Drive Stats For 2018</a></li>
</ul><p><b>Lansing Marketing Hackers</b></p><ul>
<li><a href="https://www.meetup.com/Lansing-Marketing-Hackers/">Lansing Marketing Hackers Meetup</a></li>
<li><a href="https://www.youtube.com/watch?v=QrgWN6zEQtA">Learning a New <em>Skill</em> with Alexa with Paul J Schmidt</a></li>
</ul><p><b>WWDC</b></p><ul>
<li><em>New Mac Pro?</em></li>
<li><em>Pro App Updates</em></li>
</ul><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>UnoDeuce Multimedia and Storytelling</b></p><ul>
<li><a href="https://www.unodeuce.com">UnoDeuce Multimedia</a></li>
<li><a href="https://www.youtube.com/user/1dpmultimedia?feature=results_main">Youtube</a></li>
<li><a href="https://www.instagram.com/unodeucemedia/">Instagram</a></li>
<li><a href="https://twitter.com/unodeucemedia">Twitter</a></li>
<li><a href="https://www.facebook.com/UnoDeuceMultimedia">Facebook</a></li>
</ul><p><b>Previous Episodes</b></p><ul><li><a href="https://share.transistor.fm/s/3ee56c45">Apple 2019 - Apple and Service</a></li></ul><p><b><a href="https://www.youtube.com/watch?v=TZmBoMZFC8g">March 25th Event</a></b></p><ul>
<li>Other Services<ul>
<li><a href="https://www.apple.com/apple-arcade/">Apple Arcade</a></li>
<li><a href="https://www.apple.com/apple-card/">Apple Card</a></li>
<li><a href="https://www.apple.com/apple-news/">Apple News</a></li>
<li><a href="https://www.apple.com/apple-music/">Apple Music</a></li>
</ul>
</li>
<li>How is Apple positioning itself compared with other Streaming Services?<ul>
<li><a href="https://www.apple.com/tv/">Apple TV</a></li>
<li><a href="https://www.apple.com/apple-tv-plus/">Apple TV+</a></li>
<li><a href="https://www.amazon.com/Amazon-Video/b/ref=sv_atv_logo?node=2858778011&amp;ie=UTF8">Amazon Prime </a></li>
<li><a href="https://www.netflix.com">Netflix</a></li>
<li><a href="https://preview.disneyplus.com">Disney+</a></li>
<li><a href="https://exponent.fm/episode-169-family-friendly-disney/">Exponent Episode - Family-Friendly Disney</a></li>
<li><a href="https://www.hulu.com/welcome">Hulu</a></li>
</ul>
</li>
</ul><p><b>How to start telling stories with video now</b></p><ul>
<li><a href="https://www.filmicpro.com">Filmic Pro</a></li>
<li><a href="https://www.apple.com/clips/">Clips</a></li>
<li><a href="https://www.apple.com/imovie/">iMovie</a></li>
<li>Recording with an iPhone</li>
<li>Editing with an iPad</li>
<li>
<a href="https://www.apple.com/imac/">iMac</a> vs <a href="https://www.apple.com/imac-pro/">iMac Pro</a> for Video</li>
<li>HD vs <a href="https://en.wikipedia.org/wiki/4K_resolution">4K</a>
</li>
<li><a href="https://en.wikipedia.org/wiki/Wide-gamut_RGB_color_space">High Color Gamut</a></li>
<li><a href="https://www.apple.com/final-cut-pro/">Final Cut Pro</a></li>
<li><a href="https://www.apple.com/mac-mini/">Mac Mini</a></li>
</ul><p><b>Running IT in an Apple Run Business</b></p><ul><li><a href="https://www.dropbox.com">Dropbox</a></li></ul><p><strong>Archiving and Hard Drives </strong></p><ul>
<li><a href="https://www.lacie.com">Lacie</a></li>
<li><a href="https://www.westerndigital.com">Western Digital</a></li>
<li><a href="https://www.backblaze.com/blog/hard-drive-stats-for-2018/">BackBlaze Hard Drive Stats For 2018</a></li>
</ul><p><b>Lansing Marketing Hackers</b></p><ul>
<li><a href="https://www.meetup.com/Lansing-Marketing-Hackers/">Lansing Marketing Hackers Meetup</a></li>
<li><a href="https://www.youtube.com/watch?v=QrgWN6zEQtA">Learning a New <em>Skill</em> with Alexa with Paul J Schmidt</a></li>
</ul><p><b>WWDC</b></p><ul>
<li><em>New Mac Pro?</em></li>
<li><em>Pro App Updates</em></li>
</ul><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 19 May 2019 01:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/6321c757/98e57497.mp3" length="16546780" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>2452</itunes:duration>
      <itunes:summary>In this episode, we talk with Paul J Schmidt, Creative Video Strategist for Uno Deuce Multimedia. In this episode, we talk about:
- Apple’s positioning in the streaming market, 
- Get started with Video using iPhones, iPads, and Macs
- Running a video production company
</itunes:summary>
      <itunes:subtitle>In this episode, we talk with Paul J Schmidt, Creative Video Strategist for Uno Deuce Multimedia. In this episode, we talk about:
- Apple’s positioning in the streaming market, 
- Get started with Video using iPhones, iPads, and Macs
- Running a video </itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>iOS Developer Interviews with Alex Bush</title>
      <itunes:episode>12</itunes:episode>
      <itunes:title>iOS Developer Interviews with Alex Bush</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">e281a900-9acd-4f1a-81e5-d2eeb8cd9b51</guid>
      <link>https://share.transistor.fm/s/bcf9bb21</link>
      <description>
        <![CDATA[<p><b>Alex's Links</b></p><p><a href="https://twitter.com/alex_v_bush"><strong>On Twitter @alex_v_bush</strong></a><br><a href="http://iosinterviewguide.com/"><strong>iOS Interview Guide</strong></a><strong> </strong></p><p><a href="http://insideiosdev.com/"><strong>Inside iOS Dev Podcast</strong></a></p><p><b>Previous Episodes</b></p><p><a href="https://share.transistor.fm/s/ffcb9fc1"><strong>Episode 8 - Cloud and Backend Services For Apps</strong></a></p><p><b>What makes interviewing iOS Developers special?</b></p><ul>
<li>Apple Design Patterns<ul>
<li><a href="https://developer.apple.com/library/archive/documentation/General/Conceptual/DevPedia-CocoaCore/MVC.html">Model-View-Controller</a></li>
<li><a href="https://developer.apple.com/library/archive/documentation/General/Conceptual/DevPedia-CocoaCore/Delegation.html">Delegation Pattern</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2015/408/">Protocol Oriented Programming</a></li>
</ul>
</li>
<li>Special Background and Knowledge in Frameworks: <em>UIKit, HealthKit, AVFoundation, WatchKit, etc...</em>
</li>
</ul><p><b>Common mistakes employers make interviewing iOS candidates</b></p><ul>
<li>Not understanding their own app<ul><li>Hiring a consultant to help estimate and understand what iOS knowledge is nessecary</li></ul>
</li>
<li>Not understanding the phase their app and whether general iOS developers are needed as opposed to iOS developers with specialties</li>
<li>Algorithms and Optimization Interview Questions</li>
</ul><p><b>Interview Questions about building a UI in iOS</b></p><ul>
<li>Finding out whether the applicant understands the pros and cons of various methods: <em>Storyboards, Coding, etc...</em>
</li>
<li>Make sure they are willing to work with the team</li>
</ul><p><b>Common mistakes iOS developer applicants and candidates make</b></p><ul>
<li>Not having broad knowledge of various solutions an app may need: <em>Data Storage, Networking, UI...</em>
</li>
<li><a href="https://share.transistor.fm/s/ffcb9fc1">Some Backend Knowledge</a></li>
</ul><p><b>Full Transcription</b></p><p><strong>Leo Dion (Host): </strong>Hey Alex</p><p>[00:00:01] <strong>Alex Bush (Guest): </strong>Hey Leo </p><p>[00:00:01] <strong>Leo Dion (Host): </strong>how are you doing, sir? </p><p>[00:00:02] <strong>Alex Bush (Guest): </strong>Great. How are you doing? </p><p>[00:00:04] <strong>Leo Dion (Host): </strong>Fantastic glad to have Alex Bush on from IOS interview guide and inside iOS Dev podcast. If you are interested in iOS development, you should definitely check his podcast out. Alex, what are you up to right now? </p><p>[00:00:21] <strong>Alex Bush (Guest): </strong>I am sort of getting up to speed after Microconf and vacation.</p><p>[00:00:27] <strong>Leo Dion (Host): </strong>I hear you. I'm in the same boat microconf and peers and vacation and starting a new contract. So I know where you're coming from. </p><p>[00:00:35] <strong>Alex Bush (Guest): </strong>Right and yeah, and I'm Contracting as well iOS so doing that getting up to speed on that  </p><p>[00:00:42] <strong>Leo Dion (Host): </strong>Who are you working with right now? </p><p>[00:00:43] <strong>Alex Bush (Guest): </strong>Currently with Uber. Yeah, Silicon Valley, you know all the companies, around probably be looking for another gig soon enough. </p><p>[00:00:53] <strong>Leo Dion (Host): </strong>Yeah. If you are interested in architecture, definitely check Alex's podcast out like your specialty really is in helping iOS developers get jobs and specifically the interview process, correct. </p><p>[00:01:11] <strong>Alex Bush (Guest): </strong>Yes, that's sort of been my aim my focus lately last couple of years. Yeah, I wrote a book as you mentioned on the topic helping iOS developers get jobs right prep for interviews. </p><p>[00:01:26] <strong>Leo Dion (Host): </strong>Okay. So if you're like a company hiring iOS developers, what are some things that make interviewing a potential iOS Developer different from - I guess the biggest thing is web developers, right? So what makes it different from hiring your standard web developer. </p><p>[00:01:45] <strong>Alex Bush (Guest): </strong>That's a good question and it's sort of how the whole book thing and helping iOS devs interview started. I was at the time at a different consultancy helping them hire people for their iOS project. And as I was interviewing sort of same things will come up and I would kind of jot some notes take some notes on what to ask what to remember you get to ask and probe as I interview people and in general sort of when you interview, let's say a web developer or just a software developer right you go for a broader software topics, right?</p><p>[00:02:30] Roughly speaking algorithms and then design patterns and architectures, right but overall for software not specific for iOS and I think that's what's different when you're interviewing and hiring iOS people. The one thing is to in the sort of web world and specifically backend world in my opinion.</p><p>[00:02:52] You can hire a generalist and they can adapt. Quick enough I guess but in the iOS world it's very crucial to for for developers to really know very well the the frameworks that they work with and I think that's the main biggest difference when you're interviewing iOS people to sort of aim at that and assess their knowledge not just overall software development knowledge, but specifically iOS development.</p><p>[00:03:23] <strong>Leo Dion (Host): </strong>But I guess like you like it comes to mind because it drives almost everything maybe we'll particulars about UI kit are you thinking people should really know about </p><p>[00:03:34] <strong>Alex Bush (Guest): </strong>it also depends right? Like if you're hiring for just I guess you don't have a heavy UI animation or performance concerns for your project or your app.</p><p>[00:03:46] Then you don't really need a specialist. Who knows. Low-level details some of that right but sometimes for example social networking apps or apps that have social networking aspect of some kind they struggle with scrolling performance. Right? Let's say you have a some sort of a Instagram like feed with pictures infinitives feed that you can scroll and it's dynamically size, right if that's a crucial part of your app.</p><p>[00:04:14] It's important to make the performance buttery smooth right and not every developer. Like this is what in regards of UIKit what you want to dig and assess more in that case </p><p>[00:04:26] <strong>Leo Dion (Host): </strong>Okay, </p><p>[00:04:27] <strong>Alex Bush (Guest): </strong>rather than just overall. You know, what is MVC? Right right. </p><p>[00:04:32] <strong>Leo Dion (Host): </strong>So maybe we should clarify the audience like UI kit is the basic framework for the user interface on iOS. So if you're going to do any. Simple menus tables with navigation UI kit is the bread and butter of that and then like Apple kind of they teach an MVC pattern or model view controller, which I think correct me if I'm wrong like every developer who does iOS development should know that in an interview correct.</p><p>[00:05:00] <strong>Alex Bush (Guest): </strong>That is correct. Although I would say these days that's a prerequisite to Simply develop for iOS, but to be sort of hired for position. You should know more than that. At least be aware. Right?  </p><p>[00:05:16] <strong>Leo Dion (Host): </strong>I agree. I think that's the very basics what are some other things you should know about </p><p>[00:05:20] <strong>Alex Bush (Guest): </strong>what comes to mind the core apple design patterns, like key-value observation, delegation, Singleton, protocol oriented programming as they call it.</p><p>[00:05:31] <strong>Leo Dion (Host): </strong>Yes. Yeah, </p><p>[00:05:32] <strong>Alex Bush (Guest): </strong>which is basically coding for interfaces. </p><p>[00:05:35] <strong>Leo Dion (Host): </strong>Yes, essentially. </p><p>[00:05:37] <strong>Alex Bush (Guest): </strong>So yeah those things. And I think on top of it you need to know the most common components and tools that you would use such as networking. Right? How does an NSURLSession work? Yes and how you would not block the main thread as you perform in a networking requests so that the UI doesn't freeze things like that.</p><p>[00:06:01] <strong>Leo Dion (Host): </strong>Yeah. So let's break some of those down so like protocol oriented programming. Why would an employer care that a developer knows protocol oriented programming. </p><p>[00:06:12] <strong>Alex Bush (Guest): </strong>So in this specific thing is, you know, a typical developer answer right or developer or consultant answer depends like of course, but let's say if you're building something more than just an MVP one of throw away MVP to just validate your idea. Then what you're building needs to live through multiple iterations of development, right and protocol oriented programming is let's just say an approach to development coding that would facilitate extracting abstractions in your code and then later for other developers to build on top of and use </p><p>[00:06:56] <strong>Leo Dion (Host): </strong>I think it is like, you know, they toss to use the word protocol. The word interface is used in a lot of other programming languages, but the way I think about it is a protocol is like a contract. It says that this object will do these things and it agrees upon it and that just allows a lot of developers to know - okay, I need to like these are the requirements that it needs. This is what I'm testing for that this object actually will do that to me is like one of the benefits of that and if a developer you hire knows that. They may not know the term protocol oriented programming especially if they're from another language, but the idea of like this interface first. This protocol first design just introduces so much more convenience has and makes it easier for testing for architecture and things like that. I think that's kind of what you're getting at, right? </p><p>[00:07:47] <strong>Alex Bush (Guest): </strong>Yeah. That's a way better way to put it - contract essentially and that will help you structure your code in a way that its building blocks right as an example of that. You could if you don't do protocol oriented or interface oriented to few will development approach you and let's say your app needs to have some offline mode right where you store data offline and when there is network connection it still displays something to the user you could in a naive approach without protocol oriented programming would be to just hard code that and save that in memory- let's say in your view controller, right. But then later when the next developer comes to iterate on that and make some changes to persist that actually to disk so that the app displays that data even after its killed not just in offline mode then if you don't do protocol oriented programming then for the next developers it's harder to figure out how it was originally done but if you do protocol oriented, you have a clear interface and let's say a storage interface or protocol and then the next developer  clearly sees - oh, okay. So I just adopt the storage protocol for my new thing that not just saves in memory, but also saves to disk the data I want to have offline something like that.</p><p>[00:09:15] <strong>Leo Dion (Host): </strong>Yeah totally makes sense. Because if you allow that agility of any developer coming in and changing how something is done, but the important thing is that that object does what it says it does. And then like yeah, I think your point about like URL sessions, networking ,and understanding how that works with the UI is so important because then you get into like some threading stuff, background threads ,and Global thread, the main thread  and all that as well. Because the last thing you want in an app is a crappy UI that freezes on your because it's trying to pull data from the internet.</p><p>[00:09:48] <strong>Alex Bush (Guest): </strong>Right? I would say if we're talking about interviewing iOS developers right for your project or your company the advice I would give - sometimes you need Specialists, right? So what we talked about is sort of general overall what every iOS Developer is supposed to know but sometimes you need a specialist. Let's say your app is heavy on video right? Then likely you need AVFoundation expert that would be another framework. AVFoundation is Apple's framework that helps you work with audio and video. </p><p>[00:10:26] <strong>Leo Dion (Host): </strong>Another one I can think of is like HealthKit if you're doing anything in the health or Fitness space like you're going to need to know something like that </p><p>[00:10:32] <strong>Alex Bush (Guest): </strong>or let's say you are app connects to Bluetooth peripherals or devices, right? You need someone with BLEframework experience. So that's not necessarily your typical developer like such as myself. I don't know neither of those things, right? I worked with a AVFoundation maybe twice in my life, but that's not something I'm interested in so I didn't specialize in that. But some other other devs did and they like it. And then again right when you interview I don't know. Let's say you putting together a team of three maybe you need two general iOS devs" but then one specialist in AVFoundation, so keep that in mind, right then we are interview process should be focused more on. Oh do they know AVFoundation? They might be lacking in well roughly speaking is an example knowledge of storage and how to store and persistence that we just talked about. But they're really really really good at doing video stuff. That's what you need maybe.</p><p>[00:11:34] <strong>Leo Dion (Host): </strong>I think it's a really good point because like that's one of the struggles I see with like the iPhone is a lot of apps kind of do the same thing over and over again.</p><p>[00:11:43] There's so much potential out there with all the different Frameworks and a lot of businesses don't know how to take advantage of those Frameworks and then they don't know how to find the expertise in that area. Like I've done work with HealthKit, you know going to the Apple watch of worked with WatchKit.</p><p>[00:12:02] So I totally understand how those are really really deep Frameworks and there's a lot to know in those areas. </p><p>[00:12:11] <strong>Alex Bush (Guest): </strong>I think that that's the challenge for an employer right [or] for a company if you're not. I think if you're not a developer or a specific iOS developer yourself, it might be hard to define what do I even need? Right? I just want this app to look good and again, maybe show videos, right? </p><p>[00:12:31] Probably that's where you would want to hire maybe for a shorter period of time like for a few hours or days more experienced developers, more senior developer, maybe architect would take a look at your project and your idea , your proposal whatever you have and give you a well - I guess list of Frameworks involves potentially. </p><p>[00:12:53] <strong>Leo Dion (Host): </strong>Yeah, it's almost like you need like a consultant to come on and 99% of people don't know about all these Frameworks. They know - I'm going to do video or I want to track people's heart rate. The frameworks are completely outside of people's knowledge and rightfully so. That's where you might - I know I want to target iPhone. Like okay. I need a consult come in and tell me how much work does this involve and what expertise I'm looking for? And I think that would be very helpful to a lot of business owners and a lot of CTOs who are just looking for somebody to come in and kind of give them an idea of what needs to be done.</p><p>[00:13:32] <strong>Alex Bush (Guest): </strong>Yeah, I remember when I was running my small agency, small consultancy. We had usually two people including myself working on projects, but occasionally we would actually get outside help of an iOS expert in a particular framework. I believe our case was BLE, Bluetooth. Neither of us knew how to work with it. It was kind of complex and we were on a crunch time. So we hired someone for I believe like a week to just get us up to speed on how it works. And the pitfalls and then from there we took the prototype code and just improve that. </p><p>[00:14:14] <strong>Leo Dion (Host): </strong>Yeah, you know it makes me think of like when I have work done on the house. Like we had like the basement finished a couple of years ago like we brought somebody to come in. </p><p>[00:14:25] They had a specific person that did plumbing, a specific person that did electrical, a specific person that did drywall. And I think like that's something to keep in mind with some of these Frameworks is like, you know you what you need is like some consultant coming in to manage that and be able to like help figure out: okay what you actually need when you interview an iOS Developer. </p><p>[00:14:48] <strong>Alex Bush (Guest): </strong>I think the challenge comes, unlike in the web world, those specialties are clearly defined. I think at least [that's] my impression. And it's easy for example to find a Stripe expert for PHP or something but a bit harder for iOS right like a payment expert Apple Pay or something for iOS. I personally haven't seen many of those. </p><p>[00:15:14] <strong>Leo Dion (Host): </strong>Yeah, yeah. </p><p>[00:15:15] <strong>Alex Bush (Guest): </strong>But again, if you know that if that's what you need at least in your interview process those are the questions you want to be asking: how does that work? Can you walk me through it explained the whole system over. All right, and then maybe minutiae details -  something like that. </p><p>[00:15:31] <strong>Leo Dion (Host): </strong>I think the other thing is [and] I think this is with finding [all] developers who can learn because you know, you may not know until you get into it, you know, but okay, there are common patterns. Like you said, the delegation pattern that Apple uses that is used throughout every framework and being able to kind of go with the flow with whatever the team is and being able to learn new things.</p><p>[00:15:54] <strong>Alex Bush (Guest): </strong>Right. Well, yeah, I guess as you said that's a general software developer trait, if you will.</p><p>[00:16:01] <strong>Leo Dion (Host): </strong>Right, it's not necessarily iOS specific.</p><p>[00:16:05] <strong>Alex Bush (Guest): </strong>Right. And that's actually an interesting thing that an observation i've had over the last four years sort of. You want more of that of the general software knowledge and experience down the road as your app grows basically. And by app growth i mean the amount of code and number of people working on it.</p><p>[00:16:29] So roughly speaking just to simplify, Uber today doesn't need anyone just a general iOS dev who knows MVC. There is a way more complex architecture there that allows hundreds of people to more than a hundred people working in the same app at the same time.</p><p>[00:16:50] That's where it just doesn't cut it anymore. Right? So we need someone more advanced and architecture. For example. </p><p>[00:16:58] <strong>Leo Dion (Host): </strong>Yeah exactly. What are some stories or what are some things you've seen happen during the interview process that companies have completely failed at or the traps they fall into </p><p>[00:17:12] <strong>Alex Bush (Guest): </strong>my personal favorite, although not everyone agrees with me or rather not favored, but the opposite of favorite - companies asking all the algorithmic questions.</p><p>[00:17:24] <strong>Leo Dion (Host): </strong>Mmm </p><p>[00:17:25] <strong>Alex Bush (Guest): </strong>and all the - I mean, I'm joking. No one else did, but all the bubbles sorts of the world, right? </p><p>[00:17:32] <strong>Leo Dion (Host): </strong>Yes. </p><p>[00:17:33] <strong>Alex Bush (Guest): </strong>In the iOS world specifically, that does not make much sense because again unlike with back-end web world to be productive your general software knowledge, I mean it's necessary yes, but it's not as crucial.</p><p>[00:17:50] To be more productive you need to know more of iOS rather than more of general software algorithms. because unlike the backend we don't deploy multiple server instances to scale and propagate route balancing all of that stuff right and have a great algorithm for that. </p><p>[00:18:10] <strong>Leo Dion (Host): </strong>Yeah. I think that there's a divide between software that's written for performance and software that's running for maintenance. I think that differentiation is it made sometimes so that during the interview process you're going to ask. How do you write the fastest bubble sort? I think like unless you're doing machine learning or like high intense graphics where you're actually managing memory and CPU and that kind of stuff for the most part you want to write code that is easily maintainable.</p><p>[00:18:41] And that's where things like protocol oriented programming becomes important or like knowing the different patterns. And I think that -yeah, I totally agree with you a hundred percent. I've done interviews with like I think I did an interview with Amazon. They'll ask you all sorts of like oh, how do you sort this? How do you do a tree like this blah blah blah? And I like all I wanted to ask was wait. Do I have to relocate to take this position? Because I'm not moving it was like why are you wasting my time asking me these questions when like you haven't even like answered basic questions about whether I'm going to want to take the job if I know how to do it and it was this like, yeah...</p><p>[00:19:20] <strong>Alex Bush (Guest): </strong>Every time I hear those questions on interviews my question and response: oh, is that what I'm going to be doing at work if you actually like offer me the job. </p><p>[00:19:30] <strong>Leo Dion (Host): </strong>Yeah.</p><p>[00:19:30] <strong>Alex Bush (Guest): </strong>But the answer is no, right 99% of the time so</p><p>[00:19:34] <strong>Leo Dion (Host): </strong>You write code for maintenance and then 90 percent of companies, [if] the code is slow they either buy a bunch more CPUs and memory and then you know on top of it like you just want the code to be maintainable because there's already 52 libraries that do bubble sort better than any amount of optimization you can do so I totally agree with you. I'm glad you brought that point up. </p><p>[00:19:57] <strong>Alex Bush (Guest): </strong>Right. Yeah, as you said your code is 10 times more likely to change rather than to be slow on iOS so you optimize for that as you interview the people who can make it easier to change rather than faster. </p><p>[00:20:13] <strong>Leo Dion (Host): </strong>Yeah. I think it's a really really great point. Maintainability [and] testability are much more important than optimizing for speed or the best  - what is it? - like O^n or O^n squared algorithm? </p><p>[00:20:25] <strong>Alex Bush (Guest): </strong>Yeah that. </p><p>[00:20:26] <strong>Leo Dion (Host): </strong>So question that I wanted to bring up was - I wanted to go back to this - but developing UI on iOS. There's a lot of people who have a hundred opinions about the best way to maintain a UI in a code base. </p><p>[00:20:45] <strong>Alex Bush (Guest): </strong>I do too by the way. </p><p>[00:20:46] <strong>Leo Dion (Host): </strong>Yeah, I bet you did. So we have like storyboards which is the way xcode and Apple probably wants us to do it. You could write UI by code. In the interview process, what is the best way without getting too opinionated as the interviewee. What is the best way to ask those questions to know whether someone might be a good fit? Does that make sense? Because I don't want to get into like a storyboard versus code your own UI debate.</p><p>[00:21:17] But I'm more want to know like if you're interviewing somebody how do you know that they know how to build a good UI and work with your team. Does that make sense? </p><p>[00:21:27] <strong>Alex Bush (Guest): </strong>It does and I think the best way to gauge that is to look at the work they've done already right? Do they have a well-polished UI app in their portfolio, right or list of companies or projects they've worked on. And personally what I would do, right? I don't know if that's the right approach. But if I interview, I would want to know if regardless of what the person prefers or you prefer, right? Do they prefer storyboards or they prefer writing everything in code? I want for them to tell me the pros and cons of each option.</p><p>[00:22:08] And when to use each option that way, I will you know, hopefully hear from them that they know taht there are trade-offs for one approaching another. And at some point it breaks down right or in some cases it doesn't make sense. And specifically I'm talking about let's say storyboards don't  breakdown on scale when you have I don't know more than 20 people let's get working on that app. But then it doesn't make sense to do it right away as your one or two people team. </p><p>[00:22:42] <strong>Leo Dion (Host): </strong>Yes. </p><p>[00:22:43] <strong>Alex Bush (Guest): </strong>Something like that, right at least some reasoning like that because if they don't have it and the answer is oh, I just been doing storyboards all the time because Apple said so that is not a good answer.</p><p>[00:22:54] That means they don't think why they do it. That means the likely it's going to be difficult for them to adapt or impossible even when the scale grows to more than 20 people and then storyboards don't work anymore. </p><p>[00:23:07] <strong>Leo Dion (Host): </strong>Yep. I think it's a really good point. I think this goes with all interview questions. I mean there is right or wrong answers, but it's more are they reasoning this out well.</p><p>[00:23:16] <strong>Alex Bush (Guest): </strong>Right yeah.</p><p>[00:23:17] <strong>Leo Dion (Host): </strong>Do they understand the basics because yeah, I agree with you completely. It's like, okay. Do you know why you're doing what you're doing? And are you aware of other ways and then how do you work with large teams especially when you're building UI if you want to do storyboard or if you want to code it. Like what are some pitfalls? I think that's a really great point. </p><p>[00:23:39] <strong>Alex Bush (Guest): </strong>Another thing sort of related to that comes to mind. It's my personal opinion though. But still it's an observation over the years. The other thing you kind of want to gauge as how much do they agree or not agree... That's not the right word. But how much do they follow what Apple says - and you do need to follow what Apple says most of the time right? But again, are you still aware of the trade-offs? </p><p>[00:24:08] <strong>Leo Dion (Host): </strong>Can you give an example of a apple guideline? </p><p>[00:24:11] <strong>Alex Bush (Guest): </strong>It's the overall model view controller thing?  The reason they push it on us all these years and still don't stop.</p><p>[00:24:21] It's an easier design pattern to start with and build a simple app with and that fits their the goals of the company. Apple is a company once more apps. Yes. They want a better quality apps. What they want more is more apps and much more developers coding for their platform. So that's why they're pushing MVC if you want a better quality app or a bigger app, you can't really use MVC but they never say is that right?</p><p>[00:24:50] They always sort of skew it the other way or if you're not doing MVC you're doing it wrong. That's just as a you know, general from the software architecture perspective. That's not the right answer. Unfortunately Apple keep saying that right and a lot of people still think: Apple is right because it's Apple.</p><p>[00:25:11] <strong>Leo Dion (Host): </strong>Yeah, I think that like, it's also hard to change the ship when it's moving in a specific direction. I wouldn't be surprised if Apple like recommends other UI patterns, but for 99% of developers like they're not going to know. Like if you're already experienced enough you know to look for other patterns anyways. But yeah, I agree like if you're starting off being an iOS developer, you should definitely know MVC is a prerequisite if you know other patterns, I think that's definitely even a greater skill to have during an interview.</p><p>[00:25:44] <strong>Alex Bush (Guest): </strong>Trying to say the same thing if they tell you: oh use MVC because Apple said so then maybe a follow-up question from you should be all but why MVC is good, in what scenarios and what cases? </p><p>[00:25:58] <strong>Leo Dion (Host): </strong>It says a lot for a developer to not like fight going upstream because like you want to go with what Apple already recommends because when version 2 or version 3 of whatever you're working on is based on an Apple framework changes like at least you're ready for when those upgrades and updates happen. As opposed to fighting Upstream with your own custom thing and then finding out like oh it's not compatible anymore because Apple's changed the API. </p><p>[00:26:24] <strong>Alex Bush (Guest): </strong>Yeah, that's true. It's a balance to strike, right?</p><p>[00:26:29] <strong>Leo Dion (Host): </strong>Yeah </p><p>[00:26:30] <strong>Alex Bush (Guest): </strong>On the one hand your working and building an IOS app because you wanted to run on iOS platform, but on the other hand you're actually, building an app right that is your own thing with your own business logic and you don't want it to be too tightly couple it to specific iOS Apple stuff right?</p><p>[00:26:53] but then again, you still run it there. So you kind of have to in some cases that's what it's about. </p><p>[00:26:58] <strong>Leo Dion (Host): </strong>Yeah, and I think it goes back to what we were saying earlier is like if their reasoning is good and they have solid reasons, you know that they're knowledgeable in that space and they can learn and adapt to your team.</p><p>[00:27:09] So the other thing I wanted to ask is what are some pitfalls that people who are interviewed constantly run into when they are being interviewed, </p><p>[00:27:20] <strong>Alex Bush (Guest): </strong>huh? I think I would say basically, I think what I see a lot of developers when they're interviewed the mistake they make is they know only a certain subset of iOS Frameworks, right and the concerns and IOS app has but they don't know others this sort of overall the full circle of it. Specifically they might know how to do UI stuff and networking but they never done any storage or architecture for business logic right? Or doing very little of it and they don't pay attention. Again as we talked about it if you're interviewing for an UI heavy position. Maybe that's good enough, right? You really know your UI stuff very well and low-level details of it and likely then you'd be asked those questions in the interview and you probably pass right.</p><p>[00:28:18] But just in general as you apply right most of the time you kind of need to know more of overall rather than specifics because like let's say you Leo, you and I we team up and you know build an app and it's e-commerce with some social networking feed - let's say right some hybrid of Instagram and Amazon.</p><p>[00:28:42] So to build that you and I can code but let's say we need two more people to help us because timelines. </p><p>[00:28:50] So for that when we will interview people we would ask. Oh, yes. Do you know how to do UI work and networking but also we would want to know: oh, do you know how to do offline and storage stuff right?</p><p>[00:29:07] Because again,  maybe our app needs to persist something offline for reasons. And also on top of it a little bit of a I call it business logic, I guess business logic / architecture / design patterns as with we again talked about it something beyond MVC right at least a little bit. Do you know MVVM and MVP and in what cases to use those and maybe other design patterns like a Factory and Command write something like that?</p><p>[00:29:39] So I think that's the mistake a lot of iOS devs make. They just prep for UIKit UI stuff and networking. They never look into storage all the ways. You can store things on iOS like file storage core data key value storage all of those. </p><p>[00:29:57] <strong>Leo Dion (Host): </strong>Yep, </p><p>[00:29:58] <strong>Alex Bush (Guest): </strong>and they don't look a bit beyond at least a little bit beyond MVC and those design patterns and architecture.</p><p>[00:30:05] <strong>Leo Dion (Host): </strong>Do you think you could just like as iOS developer? You just pick up one framework? And just be like, okay today I'm going to use like core data and then get really knowledgeable about Core Data for this particular app. And then that gives them at least one framework that they can bring to an interview and speak about </p><p>[00:30:23] <strong>Alex Bush (Guest): </strong>In a way, yes, it's possible. Each one of those you can go very deep right but at least I think what I recommend focusing on maybe not even a specific framework but a concern an app has.</p><p>[00:30:42] <strong>Leo Dion (Host): </strong>So like you talked about like storage like you don't have to know particularly like core data, but like okay be able to bring to the company that is interviewing you different ways of doing storage and the pluses are pros and cons of each one.</p><p>[00:30:57] <strong>Alex Bush (Guest): </strong>Precisely. Yeah, because you can implement it with core data or realm or whatever else is out there. Right? I don't even know. But when you and I interview people we would want to know that they're aware of that concern and how to sort of overall approach on how to solve it and what it does rather than the details of how to do it because that's what they'll figure out on a job.</p><p>[00:31:22] <strong>Leo Dion (Host): </strong>Yes. </p><p>[00:31:23] <strong>Alex Bush (Guest): </strong>So that. I would say there are four big concerns, right? That's the UI, networking, storage, and business logic. So that's the pitfalls I think for interview is not knowing those four overall. </p><p>[00:31:39] <strong>Leo Dion (Host): </strong>I think it's a really good point is yeah, a lot of people can just obsess over UIKit in the very basics of you.</p><p>[00:31:45] I can't without knowing, you know that to build an app. You need to store data somewhere. If you need to call the web you need to do notifications. For instance. That's a whole elephant that we haven't even gotten to but I think it's a really good point. Is there anything else you wanted to talk about? As far as for people who are doing interviewing other iOS developers.</p><p>[00:32:09] <strong>Alex Bush (Guest): </strong>One more thing for interviewees. I guess that's not more or less for interviewers. You will get a lot of points on your interview if you're actually know a little bit of a back-end. Maybe not how to code it but at least how it works, right because as an iOS dev, you likely constantly will need to work with back-end people </p><p>[00:32:31] <strong>Leo Dion (Host): </strong>so maybe like the basics of what a rest API or GraphQL back end should do okay </p><p>[00:32:38] <strong>Alex Bush (Guest): </strong>and how to establish those contracts. What are the best practices there ... Things like that.</p><p>[00:32:44] <strong>Leo Dion (Host): </strong>Yeah. It's a really good point. I'm just surprised at how many iOS developers don't know anything about the back end. </p><p>[00:32:50] <strong>Alex Bush (Guest): </strong>Yes, it sort of makes sense to a degree they're specializing in iOS right there not those general software developers, but still it helps to know and in a lot of cases.</p><p>[00:33:04] The API design the backend API design will be driven by the front end people which means iOS people right? </p><p>[00:33:13] Yep. </p><p>[00:33:13] So the more knowledgeable you are maybe that applies more to sort of architect if you have a team, but if you're solo person you need to know that. As you mentioned it like at least know what restful is best practices there with my experience in one of the companies I worked at.</p><p>[00:33:31] That got out of hand so bad that we were sending 5 megabytes payloads of JSON down with each request to iOS and then parsing that took forever on the older devices like iPhone 4. Yeah, so they had to do client-side hacks to parse only lazily portions of the JSON and the rest on demand, so that is something that as an iOS developer, you should stop before it even comes to it.</p><p>[00:34:04] You need to be aware of what's going on with their API right that you're consuming and are they are you guys as a team keep shopping more data in it and not deprecating and migrating and having versions or something like that. </p><p>[00:34:18] <strong>Leo Dion (Host): </strong>Yeah, it's wow. Five big Json files. </p><p>[00:34:22] <strong>Alex Bush (Guest): </strong>I know right? </p><p>[00:34:24] <strong>Leo Dion (Host): </strong>Well, thank you so much for coming on the podcast and talking about this.</p><p>[00:34:28] I think there's a lot of companies that have no idea and just need help interviewing and finding iOS devs and it can be a real challenge. I know I know it's hard just recruiting people let alone interviewing them. </p><p>[00:34:41] <strong>Alex Bush (Guest): </strong>Right? Yeah. Yeah my pleasure and again, you know, it's been a passion of mine on the other side right help iOS devs to get jobs, but I understand the pain and that's where I originally came from the pain of how do I access and know that the person I'm hiring is actually knows what they're doing and everything that you know, they need </p><p>[00:35:05] <strong>Leo Dion (Host): </strong>so if you're someone who's looking for an iOS job. How does your book help them or tell me a little bit about the book and how it guides iOS developers in the interview process. </p><p>[00:35:18] <strong>Alex Bush (Guest): </strong>Overall. The book actually does what we talked about is those four areas of concern. Like UI, networking, storage, and business logic it gives you an overview of all those options that you have in each area of concern right like back to the storage option.</p><p>[00:35:37] Oh you can press store things in memory or you can store them key value storage right in as user default. So you can store things in files or it database like core data and so on. So it gives you this overview right without going into deep into details of how they work like specifically core data or something like that.</p><p>[00:35:59] But at least it tells you: oh here are the options that you have and in some scenarios you you want to use this or another option. That's what the book talks about. It kind of perhaps you overall. If you want to dig deeper, you can go ahead and research on specific topics. But yeah that overview was lacking before I wrote the book. So that's why I decided to do that </p><p>[00:36:23] <strong>Leo Dion (Host): </strong>Awesome. So where can I find the book at?</p><p>[00:36:26] <strong>Alex Bush (Guest): </strong>Its iOSinterviewguide.com </p><p>[00:36:28] <strong>Leo Dion (Host): </strong>awesome and then your podcast is insideiOSdevs.com, correct? </p><p>[00:36:32] <strong>Alex Bush (Guest): </strong>Yep. </p><p>[00:36:33] What do you talk about on that podcast specifically?</p><p>[00:36:36] So this podcast is for developers and we talked mostly I guess architecture and design questions sort of higher level, you know, everything beyond MVC.</p><p>[00:36:46] <strong>Leo Dion (Host): </strong>Okay. Awesome, so you can be found on Twitter at?</p><p>[00:36:53] <strong>Alex Bush (Guest): </strong>@alex_v_bush</p><p>[00:36:55] <strong>Leo Dion (Host): </strong>Awesome that'll be all in the show notes. And then you can find this podcast we are on brightdigit so @brightdigit on Twitter also you can find my website brightdigit.com for more info about the services that brightdigit offers when it comes to iOS development. Alexm again. Thank you for coming on. </p><p>[00:37:16] <strong>Alex Bush (Guest): </strong>Thank you for inviting me on.</p><p>[00:37:18] <strong>Leo Dion (Host): </strong>Welcome, and we will talk to you later. Bye.</p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Alex's Links</b></p><p><a href="https://twitter.com/alex_v_bush"><strong>On Twitter @alex_v_bush</strong></a><br><a href="http://iosinterviewguide.com/"><strong>iOS Interview Guide</strong></a><strong> </strong></p><p><a href="http://insideiosdev.com/"><strong>Inside iOS Dev Podcast</strong></a></p><p><b>Previous Episodes</b></p><p><a href="https://share.transistor.fm/s/ffcb9fc1"><strong>Episode 8 - Cloud and Backend Services For Apps</strong></a></p><p><b>What makes interviewing iOS Developers special?</b></p><ul>
<li>Apple Design Patterns<ul>
<li><a href="https://developer.apple.com/library/archive/documentation/General/Conceptual/DevPedia-CocoaCore/MVC.html">Model-View-Controller</a></li>
<li><a href="https://developer.apple.com/library/archive/documentation/General/Conceptual/DevPedia-CocoaCore/Delegation.html">Delegation Pattern</a></li>
<li><a href="https://developer.apple.com/videos/play/wwdc2015/408/">Protocol Oriented Programming</a></li>
</ul>
</li>
<li>Special Background and Knowledge in Frameworks: <em>UIKit, HealthKit, AVFoundation, WatchKit, etc...</em>
</li>
</ul><p><b>Common mistakes employers make interviewing iOS candidates</b></p><ul>
<li>Not understanding their own app<ul><li>Hiring a consultant to help estimate and understand what iOS knowledge is nessecary</li></ul>
</li>
<li>Not understanding the phase their app and whether general iOS developers are needed as opposed to iOS developers with specialties</li>
<li>Algorithms and Optimization Interview Questions</li>
</ul><p><b>Interview Questions about building a UI in iOS</b></p><ul>
<li>Finding out whether the applicant understands the pros and cons of various methods: <em>Storyboards, Coding, etc...</em>
</li>
<li>Make sure they are willing to work with the team</li>
</ul><p><b>Common mistakes iOS developer applicants and candidates make</b></p><ul>
<li>Not having broad knowledge of various solutions an app may need: <em>Data Storage, Networking, UI...</em>
</li>
<li><a href="https://share.transistor.fm/s/ffcb9fc1">Some Backend Knowledge</a></li>
</ul><p><b>Full Transcription</b></p><p><strong>Leo Dion (Host): </strong>Hey Alex</p><p>[00:00:01] <strong>Alex Bush (Guest): </strong>Hey Leo </p><p>[00:00:01] <strong>Leo Dion (Host): </strong>how are you doing, sir? </p><p>[00:00:02] <strong>Alex Bush (Guest): </strong>Great. How are you doing? </p><p>[00:00:04] <strong>Leo Dion (Host): </strong>Fantastic glad to have Alex Bush on from IOS interview guide and inside iOS Dev podcast. If you are interested in iOS development, you should definitely check his podcast out. Alex, what are you up to right now? </p><p>[00:00:21] <strong>Alex Bush (Guest): </strong>I am sort of getting up to speed after Microconf and vacation.</p><p>[00:00:27] <strong>Leo Dion (Host): </strong>I hear you. I'm in the same boat microconf and peers and vacation and starting a new contract. So I know where you're coming from. </p><p>[00:00:35] <strong>Alex Bush (Guest): </strong>Right and yeah, and I'm Contracting as well iOS so doing that getting up to speed on that  </p><p>[00:00:42] <strong>Leo Dion (Host): </strong>Who are you working with right now? </p><p>[00:00:43] <strong>Alex Bush (Guest): </strong>Currently with Uber. Yeah, Silicon Valley, you know all the companies, around probably be looking for another gig soon enough. </p><p>[00:00:53] <strong>Leo Dion (Host): </strong>Yeah. If you are interested in architecture, definitely check Alex's podcast out like your specialty really is in helping iOS developers get jobs and specifically the interview process, correct. </p><p>[00:01:11] <strong>Alex Bush (Guest): </strong>Yes, that's sort of been my aim my focus lately last couple of years. Yeah, I wrote a book as you mentioned on the topic helping iOS developers get jobs right prep for interviews. </p><p>[00:01:26] <strong>Leo Dion (Host): </strong>Okay. So if you're like a company hiring iOS developers, what are some things that make interviewing a potential iOS Developer different from - I guess the biggest thing is web developers, right? So what makes it different from hiring your standard web developer. </p><p>[00:01:45] <strong>Alex Bush (Guest): </strong>That's a good question and it's sort of how the whole book thing and helping iOS devs interview started. I was at the time at a different consultancy helping them hire people for their iOS project. And as I was interviewing sort of same things will come up and I would kind of jot some notes take some notes on what to ask what to remember you get to ask and probe as I interview people and in general sort of when you interview, let's say a web developer or just a software developer right you go for a broader software topics, right?</p><p>[00:02:30] Roughly speaking algorithms and then design patterns and architectures, right but overall for software not specific for iOS and I think that's what's different when you're interviewing and hiring iOS people. The one thing is to in the sort of web world and specifically backend world in my opinion.</p><p>[00:02:52] You can hire a generalist and they can adapt. Quick enough I guess but in the iOS world it's very crucial to for for developers to really know very well the the frameworks that they work with and I think that's the main biggest difference when you're interviewing iOS people to sort of aim at that and assess their knowledge not just overall software development knowledge, but specifically iOS development.</p><p>[00:03:23] <strong>Leo Dion (Host): </strong>But I guess like you like it comes to mind because it drives almost everything maybe we'll particulars about UI kit are you thinking people should really know about </p><p>[00:03:34] <strong>Alex Bush (Guest): </strong>it also depends right? Like if you're hiring for just I guess you don't have a heavy UI animation or performance concerns for your project or your app.</p><p>[00:03:46] Then you don't really need a specialist. Who knows. Low-level details some of that right but sometimes for example social networking apps or apps that have social networking aspect of some kind they struggle with scrolling performance. Right? Let's say you have a some sort of a Instagram like feed with pictures infinitives feed that you can scroll and it's dynamically size, right if that's a crucial part of your app.</p><p>[00:04:14] It's important to make the performance buttery smooth right and not every developer. Like this is what in regards of UIKit what you want to dig and assess more in that case </p><p>[00:04:26] <strong>Leo Dion (Host): </strong>Okay, </p><p>[00:04:27] <strong>Alex Bush (Guest): </strong>rather than just overall. You know, what is MVC? Right right. </p><p>[00:04:32] <strong>Leo Dion (Host): </strong>So maybe we should clarify the audience like UI kit is the basic framework for the user interface on iOS. So if you're going to do any. Simple menus tables with navigation UI kit is the bread and butter of that and then like Apple kind of they teach an MVC pattern or model view controller, which I think correct me if I'm wrong like every developer who does iOS development should know that in an interview correct.</p><p>[00:05:00] <strong>Alex Bush (Guest): </strong>That is correct. Although I would say these days that's a prerequisite to Simply develop for iOS, but to be sort of hired for position. You should know more than that. At least be aware. Right?  </p><p>[00:05:16] <strong>Leo Dion (Host): </strong>I agree. I think that's the very basics what are some other things you should know about </p><p>[00:05:20] <strong>Alex Bush (Guest): </strong>what comes to mind the core apple design patterns, like key-value observation, delegation, Singleton, protocol oriented programming as they call it.</p><p>[00:05:31] <strong>Leo Dion (Host): </strong>Yes. Yeah, </p><p>[00:05:32] <strong>Alex Bush (Guest): </strong>which is basically coding for interfaces. </p><p>[00:05:35] <strong>Leo Dion (Host): </strong>Yes, essentially. </p><p>[00:05:37] <strong>Alex Bush (Guest): </strong>So yeah those things. And I think on top of it you need to know the most common components and tools that you would use such as networking. Right? How does an NSURLSession work? Yes and how you would not block the main thread as you perform in a networking requests so that the UI doesn't freeze things like that.</p><p>[00:06:01] <strong>Leo Dion (Host): </strong>Yeah. So let's break some of those down so like protocol oriented programming. Why would an employer care that a developer knows protocol oriented programming. </p><p>[00:06:12] <strong>Alex Bush (Guest): </strong>So in this specific thing is, you know, a typical developer answer right or developer or consultant answer depends like of course, but let's say if you're building something more than just an MVP one of throw away MVP to just validate your idea. Then what you're building needs to live through multiple iterations of development, right and protocol oriented programming is let's just say an approach to development coding that would facilitate extracting abstractions in your code and then later for other developers to build on top of and use </p><p>[00:06:56] <strong>Leo Dion (Host): </strong>I think it is like, you know, they toss to use the word protocol. The word interface is used in a lot of other programming languages, but the way I think about it is a protocol is like a contract. It says that this object will do these things and it agrees upon it and that just allows a lot of developers to know - okay, I need to like these are the requirements that it needs. This is what I'm testing for that this object actually will do that to me is like one of the benefits of that and if a developer you hire knows that. They may not know the term protocol oriented programming especially if they're from another language, but the idea of like this interface first. This protocol first design just introduces so much more convenience has and makes it easier for testing for architecture and things like that. I think that's kind of what you're getting at, right? </p><p>[00:07:47] <strong>Alex Bush (Guest): </strong>Yeah. That's a way better way to put it - contract essentially and that will help you structure your code in a way that its building blocks right as an example of that. You could if you don't do protocol oriented or interface oriented to few will development approach you and let's say your app needs to have some offline mode right where you store data offline and when there is network connection it still displays something to the user you could in a naive approach without protocol oriented programming would be to just hard code that and save that in memory- let's say in your view controller, right. But then later when the next developer comes to iterate on that and make some changes to persist that actually to disk so that the app displays that data even after its killed not just in offline mode then if you don't do protocol oriented programming then for the next developers it's harder to figure out how it was originally done but if you do protocol oriented, you have a clear interface and let's say a storage interface or protocol and then the next developer  clearly sees - oh, okay. So I just adopt the storage protocol for my new thing that not just saves in memory, but also saves to disk the data I want to have offline something like that.</p><p>[00:09:15] <strong>Leo Dion (Host): </strong>Yeah totally makes sense. Because if you allow that agility of any developer coming in and changing how something is done, but the important thing is that that object does what it says it does. And then like yeah, I think your point about like URL sessions, networking ,and understanding how that works with the UI is so important because then you get into like some threading stuff, background threads ,and Global thread, the main thread  and all that as well. Because the last thing you want in an app is a crappy UI that freezes on your because it's trying to pull data from the internet.</p><p>[00:09:48] <strong>Alex Bush (Guest): </strong>Right? I would say if we're talking about interviewing iOS developers right for your project or your company the advice I would give - sometimes you need Specialists, right? So what we talked about is sort of general overall what every iOS Developer is supposed to know but sometimes you need a specialist. Let's say your app is heavy on video right? Then likely you need AVFoundation expert that would be another framework. AVFoundation is Apple's framework that helps you work with audio and video. </p><p>[00:10:26] <strong>Leo Dion (Host): </strong>Another one I can think of is like HealthKit if you're doing anything in the health or Fitness space like you're going to need to know something like that </p><p>[00:10:32] <strong>Alex Bush (Guest): </strong>or let's say you are app connects to Bluetooth peripherals or devices, right? You need someone with BLEframework experience. So that's not necessarily your typical developer like such as myself. I don't know neither of those things, right? I worked with a AVFoundation maybe twice in my life, but that's not something I'm interested in so I didn't specialize in that. But some other other devs did and they like it. And then again right when you interview I don't know. Let's say you putting together a team of three maybe you need two general iOS devs" but then one specialist in AVFoundation, so keep that in mind, right then we are interview process should be focused more on. Oh do they know AVFoundation? They might be lacking in well roughly speaking is an example knowledge of storage and how to store and persistence that we just talked about. But they're really really really good at doing video stuff. That's what you need maybe.</p><p>[00:11:34] <strong>Leo Dion (Host): </strong>I think it's a really good point because like that's one of the struggles I see with like the iPhone is a lot of apps kind of do the same thing over and over again.</p><p>[00:11:43] There's so much potential out there with all the different Frameworks and a lot of businesses don't know how to take advantage of those Frameworks and then they don't know how to find the expertise in that area. Like I've done work with HealthKit, you know going to the Apple watch of worked with WatchKit.</p><p>[00:12:02] So I totally understand how those are really really deep Frameworks and there's a lot to know in those areas. </p><p>[00:12:11] <strong>Alex Bush (Guest): </strong>I think that that's the challenge for an employer right [or] for a company if you're not. I think if you're not a developer or a specific iOS developer yourself, it might be hard to define what do I even need? Right? I just want this app to look good and again, maybe show videos, right? </p><p>[00:12:31] Probably that's where you would want to hire maybe for a shorter period of time like for a few hours or days more experienced developers, more senior developer, maybe architect would take a look at your project and your idea , your proposal whatever you have and give you a well - I guess list of Frameworks involves potentially. </p><p>[00:12:53] <strong>Leo Dion (Host): </strong>Yeah, it's almost like you need like a consultant to come on and 99% of people don't know about all these Frameworks. They know - I'm going to do video or I want to track people's heart rate. The frameworks are completely outside of people's knowledge and rightfully so. That's where you might - I know I want to target iPhone. Like okay. I need a consult come in and tell me how much work does this involve and what expertise I'm looking for? And I think that would be very helpful to a lot of business owners and a lot of CTOs who are just looking for somebody to come in and kind of give them an idea of what needs to be done.</p><p>[00:13:32] <strong>Alex Bush (Guest): </strong>Yeah, I remember when I was running my small agency, small consultancy. We had usually two people including myself working on projects, but occasionally we would actually get outside help of an iOS expert in a particular framework. I believe our case was BLE, Bluetooth. Neither of us knew how to work with it. It was kind of complex and we were on a crunch time. So we hired someone for I believe like a week to just get us up to speed on how it works. And the pitfalls and then from there we took the prototype code and just improve that. </p><p>[00:14:14] <strong>Leo Dion (Host): </strong>Yeah, you know it makes me think of like when I have work done on the house. Like we had like the basement finished a couple of years ago like we brought somebody to come in. </p><p>[00:14:25] They had a specific person that did plumbing, a specific person that did electrical, a specific person that did drywall. And I think like that's something to keep in mind with some of these Frameworks is like, you know you what you need is like some consultant coming in to manage that and be able to like help figure out: okay what you actually need when you interview an iOS Developer. </p><p>[00:14:48] <strong>Alex Bush (Guest): </strong>I think the challenge comes, unlike in the web world, those specialties are clearly defined. I think at least [that's] my impression. And it's easy for example to find a Stripe expert for PHP or something but a bit harder for iOS right like a payment expert Apple Pay or something for iOS. I personally haven't seen many of those. </p><p>[00:15:14] <strong>Leo Dion (Host): </strong>Yeah, yeah. </p><p>[00:15:15] <strong>Alex Bush (Guest): </strong>But again, if you know that if that's what you need at least in your interview process those are the questions you want to be asking: how does that work? Can you walk me through it explained the whole system over. All right, and then maybe minutiae details -  something like that. </p><p>[00:15:31] <strong>Leo Dion (Host): </strong>I think the other thing is [and] I think this is with finding [all] developers who can learn because you know, you may not know until you get into it, you know, but okay, there are common patterns. Like you said, the delegation pattern that Apple uses that is used throughout every framework and being able to kind of go with the flow with whatever the team is and being able to learn new things.</p><p>[00:15:54] <strong>Alex Bush (Guest): </strong>Right. Well, yeah, I guess as you said that's a general software developer trait, if you will.</p><p>[00:16:01] <strong>Leo Dion (Host): </strong>Right, it's not necessarily iOS specific.</p><p>[00:16:05] <strong>Alex Bush (Guest): </strong>Right. And that's actually an interesting thing that an observation i've had over the last four years sort of. You want more of that of the general software knowledge and experience down the road as your app grows basically. And by app growth i mean the amount of code and number of people working on it.</p><p>[00:16:29] So roughly speaking just to simplify, Uber today doesn't need anyone just a general iOS dev who knows MVC. There is a way more complex architecture there that allows hundreds of people to more than a hundred people working in the same app at the same time.</p><p>[00:16:50] That's where it just doesn't cut it anymore. Right? So we need someone more advanced and architecture. For example. </p><p>[00:16:58] <strong>Leo Dion (Host): </strong>Yeah exactly. What are some stories or what are some things you've seen happen during the interview process that companies have completely failed at or the traps they fall into </p><p>[00:17:12] <strong>Alex Bush (Guest): </strong>my personal favorite, although not everyone agrees with me or rather not favored, but the opposite of favorite - companies asking all the algorithmic questions.</p><p>[00:17:24] <strong>Leo Dion (Host): </strong>Mmm </p><p>[00:17:25] <strong>Alex Bush (Guest): </strong>and all the - I mean, I'm joking. No one else did, but all the bubbles sorts of the world, right? </p><p>[00:17:32] <strong>Leo Dion (Host): </strong>Yes. </p><p>[00:17:33] <strong>Alex Bush (Guest): </strong>In the iOS world specifically, that does not make much sense because again unlike with back-end web world to be productive your general software knowledge, I mean it's necessary yes, but it's not as crucial.</p><p>[00:17:50] To be more productive you need to know more of iOS rather than more of general software algorithms. because unlike the backend we don't deploy multiple server instances to scale and propagate route balancing all of that stuff right and have a great algorithm for that. </p><p>[00:18:10] <strong>Leo Dion (Host): </strong>Yeah. I think that there's a divide between software that's written for performance and software that's running for maintenance. I think that differentiation is it made sometimes so that during the interview process you're going to ask. How do you write the fastest bubble sort? I think like unless you're doing machine learning or like high intense graphics where you're actually managing memory and CPU and that kind of stuff for the most part you want to write code that is easily maintainable.</p><p>[00:18:41] And that's where things like protocol oriented programming becomes important or like knowing the different patterns. And I think that -yeah, I totally agree with you a hundred percent. I've done interviews with like I think I did an interview with Amazon. They'll ask you all sorts of like oh, how do you sort this? How do you do a tree like this blah blah blah? And I like all I wanted to ask was wait. Do I have to relocate to take this position? Because I'm not moving it was like why are you wasting my time asking me these questions when like you haven't even like answered basic questions about whether I'm going to want to take the job if I know how to do it and it was this like, yeah...</p><p>[00:19:20] <strong>Alex Bush (Guest): </strong>Every time I hear those questions on interviews my question and response: oh, is that what I'm going to be doing at work if you actually like offer me the job. </p><p>[00:19:30] <strong>Leo Dion (Host): </strong>Yeah.</p><p>[00:19:30] <strong>Alex Bush (Guest): </strong>But the answer is no, right 99% of the time so</p><p>[00:19:34] <strong>Leo Dion (Host): </strong>You write code for maintenance and then 90 percent of companies, [if] the code is slow they either buy a bunch more CPUs and memory and then you know on top of it like you just want the code to be maintainable because there's already 52 libraries that do bubble sort better than any amount of optimization you can do so I totally agree with you. I'm glad you brought that point up. </p><p>[00:19:57] <strong>Alex Bush (Guest): </strong>Right. Yeah, as you said your code is 10 times more likely to change rather than to be slow on iOS so you optimize for that as you interview the people who can make it easier to change rather than faster. </p><p>[00:20:13] <strong>Leo Dion (Host): </strong>Yeah. I think it's a really really great point. Maintainability [and] testability are much more important than optimizing for speed or the best  - what is it? - like O^n or O^n squared algorithm? </p><p>[00:20:25] <strong>Alex Bush (Guest): </strong>Yeah that. </p><p>[00:20:26] <strong>Leo Dion (Host): </strong>So question that I wanted to bring up was - I wanted to go back to this - but developing UI on iOS. There's a lot of people who have a hundred opinions about the best way to maintain a UI in a code base. </p><p>[00:20:45] <strong>Alex Bush (Guest): </strong>I do too by the way. </p><p>[00:20:46] <strong>Leo Dion (Host): </strong>Yeah, I bet you did. So we have like storyboards which is the way xcode and Apple probably wants us to do it. You could write UI by code. In the interview process, what is the best way without getting too opinionated as the interviewee. What is the best way to ask those questions to know whether someone might be a good fit? Does that make sense? Because I don't want to get into like a storyboard versus code your own UI debate.</p><p>[00:21:17] But I'm more want to know like if you're interviewing somebody how do you know that they know how to build a good UI and work with your team. Does that make sense? </p><p>[00:21:27] <strong>Alex Bush (Guest): </strong>It does and I think the best way to gauge that is to look at the work they've done already right? Do they have a well-polished UI app in their portfolio, right or list of companies or projects they've worked on. And personally what I would do, right? I don't know if that's the right approach. But if I interview, I would want to know if regardless of what the person prefers or you prefer, right? Do they prefer storyboards or they prefer writing everything in code? I want for them to tell me the pros and cons of each option.</p><p>[00:22:08] And when to use each option that way, I will you know, hopefully hear from them that they know taht there are trade-offs for one approaching another. And at some point it breaks down right or in some cases it doesn't make sense. And specifically I'm talking about let's say storyboards don't  breakdown on scale when you have I don't know more than 20 people let's get working on that app. But then it doesn't make sense to do it right away as your one or two people team. </p><p>[00:22:42] <strong>Leo Dion (Host): </strong>Yes. </p><p>[00:22:43] <strong>Alex Bush (Guest): </strong>Something like that, right at least some reasoning like that because if they don't have it and the answer is oh, I just been doing storyboards all the time because Apple said so that is not a good answer.</p><p>[00:22:54] That means they don't think why they do it. That means the likely it's going to be difficult for them to adapt or impossible even when the scale grows to more than 20 people and then storyboards don't work anymore. </p><p>[00:23:07] <strong>Leo Dion (Host): </strong>Yep. I think it's a really good point. I think this goes with all interview questions. I mean there is right or wrong answers, but it's more are they reasoning this out well.</p><p>[00:23:16] <strong>Alex Bush (Guest): </strong>Right yeah.</p><p>[00:23:17] <strong>Leo Dion (Host): </strong>Do they understand the basics because yeah, I agree with you completely. It's like, okay. Do you know why you're doing what you're doing? And are you aware of other ways and then how do you work with large teams especially when you're building UI if you want to do storyboard or if you want to code it. Like what are some pitfalls? I think that's a really great point. </p><p>[00:23:39] <strong>Alex Bush (Guest): </strong>Another thing sort of related to that comes to mind. It's my personal opinion though. But still it's an observation over the years. The other thing you kind of want to gauge as how much do they agree or not agree... That's not the right word. But how much do they follow what Apple says - and you do need to follow what Apple says most of the time right? But again, are you still aware of the trade-offs? </p><p>[00:24:08] <strong>Leo Dion (Host): </strong>Can you give an example of a apple guideline? </p><p>[00:24:11] <strong>Alex Bush (Guest): </strong>It's the overall model view controller thing?  The reason they push it on us all these years and still don't stop.</p><p>[00:24:21] It's an easier design pattern to start with and build a simple app with and that fits their the goals of the company. Apple is a company once more apps. Yes. They want a better quality apps. What they want more is more apps and much more developers coding for their platform. So that's why they're pushing MVC if you want a better quality app or a bigger app, you can't really use MVC but they never say is that right?</p><p>[00:24:50] They always sort of skew it the other way or if you're not doing MVC you're doing it wrong. That's just as a you know, general from the software architecture perspective. That's not the right answer. Unfortunately Apple keep saying that right and a lot of people still think: Apple is right because it's Apple.</p><p>[00:25:11] <strong>Leo Dion (Host): </strong>Yeah, I think that like, it's also hard to change the ship when it's moving in a specific direction. I wouldn't be surprised if Apple like recommends other UI patterns, but for 99% of developers like they're not going to know. Like if you're already experienced enough you know to look for other patterns anyways. But yeah, I agree like if you're starting off being an iOS developer, you should definitely know MVC is a prerequisite if you know other patterns, I think that's definitely even a greater skill to have during an interview.</p><p>[00:25:44] <strong>Alex Bush (Guest): </strong>Trying to say the same thing if they tell you: oh use MVC because Apple said so then maybe a follow-up question from you should be all but why MVC is good, in what scenarios and what cases? </p><p>[00:25:58] <strong>Leo Dion (Host): </strong>It says a lot for a developer to not like fight going upstream because like you want to go with what Apple already recommends because when version 2 or version 3 of whatever you're working on is based on an Apple framework changes like at least you're ready for when those upgrades and updates happen. As opposed to fighting Upstream with your own custom thing and then finding out like oh it's not compatible anymore because Apple's changed the API. </p><p>[00:26:24] <strong>Alex Bush (Guest): </strong>Yeah, that's true. It's a balance to strike, right?</p><p>[00:26:29] <strong>Leo Dion (Host): </strong>Yeah </p><p>[00:26:30] <strong>Alex Bush (Guest): </strong>On the one hand your working and building an IOS app because you wanted to run on iOS platform, but on the other hand you're actually, building an app right that is your own thing with your own business logic and you don't want it to be too tightly couple it to specific iOS Apple stuff right?</p><p>[00:26:53] but then again, you still run it there. So you kind of have to in some cases that's what it's about. </p><p>[00:26:58] <strong>Leo Dion (Host): </strong>Yeah, and I think it goes back to what we were saying earlier is like if their reasoning is good and they have solid reasons, you know that they're knowledgeable in that space and they can learn and adapt to your team.</p><p>[00:27:09] So the other thing I wanted to ask is what are some pitfalls that people who are interviewed constantly run into when they are being interviewed, </p><p>[00:27:20] <strong>Alex Bush (Guest): </strong>huh? I think I would say basically, I think what I see a lot of developers when they're interviewed the mistake they make is they know only a certain subset of iOS Frameworks, right and the concerns and IOS app has but they don't know others this sort of overall the full circle of it. Specifically they might know how to do UI stuff and networking but they never done any storage or architecture for business logic right? Or doing very little of it and they don't pay attention. Again as we talked about it if you're interviewing for an UI heavy position. Maybe that's good enough, right? You really know your UI stuff very well and low-level details of it and likely then you'd be asked those questions in the interview and you probably pass right.</p><p>[00:28:18] But just in general as you apply right most of the time you kind of need to know more of overall rather than specifics because like let's say you Leo, you and I we team up and you know build an app and it's e-commerce with some social networking feed - let's say right some hybrid of Instagram and Amazon.</p><p>[00:28:42] So to build that you and I can code but let's say we need two more people to help us because timelines. </p><p>[00:28:50] So for that when we will interview people we would ask. Oh, yes. Do you know how to do UI work and networking but also we would want to know: oh, do you know how to do offline and storage stuff right?</p><p>[00:29:07] Because again,  maybe our app needs to persist something offline for reasons. And also on top of it a little bit of a I call it business logic, I guess business logic / architecture / design patterns as with we again talked about it something beyond MVC right at least a little bit. Do you know MVVM and MVP and in what cases to use those and maybe other design patterns like a Factory and Command write something like that?</p><p>[00:29:39] So I think that's the mistake a lot of iOS devs make. They just prep for UIKit UI stuff and networking. They never look into storage all the ways. You can store things on iOS like file storage core data key value storage all of those. </p><p>[00:29:57] <strong>Leo Dion (Host): </strong>Yep, </p><p>[00:29:58] <strong>Alex Bush (Guest): </strong>and they don't look a bit beyond at least a little bit beyond MVC and those design patterns and architecture.</p><p>[00:30:05] <strong>Leo Dion (Host): </strong>Do you think you could just like as iOS developer? You just pick up one framework? And just be like, okay today I'm going to use like core data and then get really knowledgeable about Core Data for this particular app. And then that gives them at least one framework that they can bring to an interview and speak about </p><p>[00:30:23] <strong>Alex Bush (Guest): </strong>In a way, yes, it's possible. Each one of those you can go very deep right but at least I think what I recommend focusing on maybe not even a specific framework but a concern an app has.</p><p>[00:30:42] <strong>Leo Dion (Host): </strong>So like you talked about like storage like you don't have to know particularly like core data, but like okay be able to bring to the company that is interviewing you different ways of doing storage and the pluses are pros and cons of each one.</p><p>[00:30:57] <strong>Alex Bush (Guest): </strong>Precisely. Yeah, because you can implement it with core data or realm or whatever else is out there. Right? I don't even know. But when you and I interview people we would want to know that they're aware of that concern and how to sort of overall approach on how to solve it and what it does rather than the details of how to do it because that's what they'll figure out on a job.</p><p>[00:31:22] <strong>Leo Dion (Host): </strong>Yes. </p><p>[00:31:23] <strong>Alex Bush (Guest): </strong>So that. I would say there are four big concerns, right? That's the UI, networking, storage, and business logic. So that's the pitfalls I think for interview is not knowing those four overall. </p><p>[00:31:39] <strong>Leo Dion (Host): </strong>I think it's a really good point is yeah, a lot of people can just obsess over UIKit in the very basics of you.</p><p>[00:31:45] I can't without knowing, you know that to build an app. You need to store data somewhere. If you need to call the web you need to do notifications. For instance. That's a whole elephant that we haven't even gotten to but I think it's a really good point. Is there anything else you wanted to talk about? As far as for people who are doing interviewing other iOS developers.</p><p>[00:32:09] <strong>Alex Bush (Guest): </strong>One more thing for interviewees. I guess that's not more or less for interviewers. You will get a lot of points on your interview if you're actually know a little bit of a back-end. Maybe not how to code it but at least how it works, right because as an iOS dev, you likely constantly will need to work with back-end people </p><p>[00:32:31] <strong>Leo Dion (Host): </strong>so maybe like the basics of what a rest API or GraphQL back end should do okay </p><p>[00:32:38] <strong>Alex Bush (Guest): </strong>and how to establish those contracts. What are the best practices there ... Things like that.</p><p>[00:32:44] <strong>Leo Dion (Host): </strong>Yeah. It's a really good point. I'm just surprised at how many iOS developers don't know anything about the back end. </p><p>[00:32:50] <strong>Alex Bush (Guest): </strong>Yes, it sort of makes sense to a degree they're specializing in iOS right there not those general software developers, but still it helps to know and in a lot of cases.</p><p>[00:33:04] The API design the backend API design will be driven by the front end people which means iOS people right? </p><p>[00:33:13] Yep. </p><p>[00:33:13] So the more knowledgeable you are maybe that applies more to sort of architect if you have a team, but if you're solo person you need to know that. As you mentioned it like at least know what restful is best practices there with my experience in one of the companies I worked at.</p><p>[00:33:31] That got out of hand so bad that we were sending 5 megabytes payloads of JSON down with each request to iOS and then parsing that took forever on the older devices like iPhone 4. Yeah, so they had to do client-side hacks to parse only lazily portions of the JSON and the rest on demand, so that is something that as an iOS developer, you should stop before it even comes to it.</p><p>[00:34:04] You need to be aware of what's going on with their API right that you're consuming and are they are you guys as a team keep shopping more data in it and not deprecating and migrating and having versions or something like that. </p><p>[00:34:18] <strong>Leo Dion (Host): </strong>Yeah, it's wow. Five big Json files. </p><p>[00:34:22] <strong>Alex Bush (Guest): </strong>I know right? </p><p>[00:34:24] <strong>Leo Dion (Host): </strong>Well, thank you so much for coming on the podcast and talking about this.</p><p>[00:34:28] I think there's a lot of companies that have no idea and just need help interviewing and finding iOS devs and it can be a real challenge. I know I know it's hard just recruiting people let alone interviewing them. </p><p>[00:34:41] <strong>Alex Bush (Guest): </strong>Right? Yeah. Yeah my pleasure and again, you know, it's been a passion of mine on the other side right help iOS devs to get jobs, but I understand the pain and that's where I originally came from the pain of how do I access and know that the person I'm hiring is actually knows what they're doing and everything that you know, they need </p><p>[00:35:05] <strong>Leo Dion (Host): </strong>so if you're someone who's looking for an iOS job. How does your book help them or tell me a little bit about the book and how it guides iOS developers in the interview process. </p><p>[00:35:18] <strong>Alex Bush (Guest): </strong>Overall. The book actually does what we talked about is those four areas of concern. Like UI, networking, storage, and business logic it gives you an overview of all those options that you have in each area of concern right like back to the storage option.</p><p>[00:35:37] Oh you can press store things in memory or you can store them key value storage right in as user default. So you can store things in files or it database like core data and so on. So it gives you this overview right without going into deep into details of how they work like specifically core data or something like that.</p><p>[00:35:59] But at least it tells you: oh here are the options that you have and in some scenarios you you want to use this or another option. That's what the book talks about. It kind of perhaps you overall. If you want to dig deeper, you can go ahead and research on specific topics. But yeah that overview was lacking before I wrote the book. So that's why I decided to do that </p><p>[00:36:23] <strong>Leo Dion (Host): </strong>Awesome. So where can I find the book at?</p><p>[00:36:26] <strong>Alex Bush (Guest): </strong>Its iOSinterviewguide.com </p><p>[00:36:28] <strong>Leo Dion (Host): </strong>awesome and then your podcast is insideiOSdevs.com, correct? </p><p>[00:36:32] <strong>Alex Bush (Guest): </strong>Yep. </p><p>[00:36:33] What do you talk about on that podcast specifically?</p><p>[00:36:36] So this podcast is for developers and we talked mostly I guess architecture and design questions sort of higher level, you know, everything beyond MVC.</p><p>[00:36:46] <strong>Leo Dion (Host): </strong>Okay. Awesome, so you can be found on Twitter at?</p><p>[00:36:53] <strong>Alex Bush (Guest): </strong>@alex_v_bush</p><p>[00:36:55] <strong>Leo Dion (Host): </strong>Awesome that'll be all in the show notes. And then you can find this podcast we are on brightdigit so @brightdigit on Twitter also you can find my website brightdigit.com for more info about the services that brightdigit offers when it comes to iOS development. Alexm again. Thank you for coming on. </p><p>[00:37:16] <strong>Alex Bush (Guest): </strong>Thank you for inviting me on.</p><p>[00:37:18] <strong>Leo Dion (Host): </strong>Welcome, and we will talk to you later. Bye.</p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 05 May 2019 00:05:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/bcf9bb21/36e5889a.mp3" length="17671042" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>2242</itunes:duration>
      <itunes:summary>In this episode we talk with Alex Bush (@alex_v_bush), Author of @iosinterviewgd and co-host of @insideiosdev. Alex talks about the process of interviewing potential iOS developers, what are some questions employers should ask, and what makes an iOS developer different from other developer positions.</itunes:summary>
      <itunes:subtitle>In this episode we talk with Alex Bush (@alex_v_bush), Author of @iosinterviewgd and co-host of @insideiosdev. Alex talks about the process of interviewing potential iOS developers, what are some questions employers should ask, and what makes an iOS devel</itunes:subtitle>
      <itunes:keywords>hiring developers, iOS, UIKit, iO</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>External Developers with Jaim Zuber</title>
      <itunes:episode>11</itunes:episode>
      <itunes:title>External Developers with Jaim Zuber</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">7d695594-25b8-4958-bc05-1c132630a6e2</guid>
      <link>https://share.transistor.fm/s/d746d2ff</link>
      <description>
        <![CDATA[<p><strong>Previous Episode</strong></p><ul><li>
<a href="https://share.transistor.fm/s/00603d96">Episode 6 - Project Estimation</a> </li></ul><p><b>Guest: Jaim Zuber of Sharp Five Software </b></p><p><a href="https://sharpfivesoftware.com">Sharp Five Software</a></p><p><a href="https://jaimzuber.com">Jaim Zuber Blog</a></p><p><b>March 25 Apple Event</b></p><ul>
<li>Not following Apple Events </li>
<li>Cable Cutters</li>
<li>New Macs</li>
</ul><p><b>What does that mean working with external developers?</b></p><ul>
<li>Types of Developers</li>
<li>Employees vs. Consultants</li>
<li>Mobile Developer vs. iOS Developer</li>
<li>Types of Consultants</li>
</ul><p><b>What is the best way to know you have a good developer?</b></p><ul>
<li>How about “cheaper” developers?</li>
<li>What are other gotchas with developers?</li>
</ul><p>Follow Jaim at <a href="https://jaimzuber.com">jaimzuber.com</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><strong>Previous Episode</strong></p><ul><li>
<a href="https://share.transistor.fm/s/00603d96">Episode 6 - Project Estimation</a> </li></ul><p><b>Guest: Jaim Zuber of Sharp Five Software </b></p><p><a href="https://sharpfivesoftware.com">Sharp Five Software</a></p><p><a href="https://jaimzuber.com">Jaim Zuber Blog</a></p><p><b>March 25 Apple Event</b></p><ul>
<li>Not following Apple Events </li>
<li>Cable Cutters</li>
<li>New Macs</li>
</ul><p><b>What does that mean working with external developers?</b></p><ul>
<li>Types of Developers</li>
<li>Employees vs. Consultants</li>
<li>Mobile Developer vs. iOS Developer</li>
<li>Types of Consultants</li>
</ul><p><b>What is the best way to know you have a good developer?</b></p><ul>
<li>How about “cheaper” developers?</li>
<li>What are other gotchas with developers?</li>
</ul><p>Follow Jaim at <a href="https://jaimzuber.com">jaimzuber.com</a></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sat, 20 Apr 2019 23:40:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/d746d2ff/41c8a2a5.mp3" length="11987559" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>1622</itunes:duration>
      <itunes:summary>In this episode, we talk with Jaim Zuber of Sharp Five Software of what companies should know when hiring an outside contract developer.</itunes:summary>
      <itunes:subtitle>In this episode, we talk with Jaim Zuber of Sharp Five Software of what companies should know when hiring an outside contract developer.</itunes:subtitle>
      <itunes:keywords>developers, iOS, team management, consulting, hiring</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Business and IT Applications</title>
      <itunes:episode>10</itunes:episode>
      <itunes:title>Business and IT Applications</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">00fa1b28-82fa-474a-9f98-868c98c02406</guid>
      <link>https://share.transistor.fm/s/a19efbf9</link>
      <description>
        <![CDATA[<p><b>Previous Episodes</b></p><ul><li><a href="https://share.transistor.fm/s/a34307ee">Episode 9 - iPad Apps for Businesses and Pros</a></li></ul><p><b>Reddit Threads</b></p><ul>
<li><a href="https://www.reddit.com/r/macsysadmin/comments/av17s3/business_owners_and_admins_what_are_some_mac_apps/">r/macsysadmin</a></li>
<li><a href="https://www.reddit.com/r/osx/comments/av2tbd/business_owners_what_are_some_mac_apps_that_youd/">r/osx</a></li>
<li><a href="https://www.reddit.com/r/apple/comments/av11nr/business_owners_what_are_some_mac_or_ios_apps/">r/apple</a></li>
</ul><p><b>Database Collaboration Tool</b></p><ul>
<li>
<a href="https://airtable.com/invite/r/bhvkyqHU?ref=empowerapps">Airtable</a> </li>
<li>
<a href="https://www.filemaker.com?ref=empowerapps">FileMaker</a> </li>
<li><a href="https://ninoxdb.de/en/">Ninox</a></li>
</ul><p><b>Managing Devices</b></p><ul>
<li>
<a href="https://www.jamf.com?ref=empowerapps">JAMF</a> - Manage Multiple Mac, iPads, and iPhones</li>
<li>
<a href="https://www.reddit.com/r/macsysadmin?ref=empowerapps">More Details</a> </li>
</ul><p><b>Managing Software and Disk</b></p><ul>
<li>
<a href="http://cl.ly/ehYa?ref=empowerapps">DaisyDisk</a> - Manage and Visualize Disk Space</li>
<li>
<a href="https://brew.sh">Homebrew</a> - Command Line Application Package Installer</li>
</ul><p><b>Creative Apps</b></p><ul>
<li>
<a href="https://www.adobe.com?ref=empowerapps">Adobe Creative Cloud</a> - Includes Photoshop, Illustration, Audition, Premier and more...</li>
<li>
<a href="https://ulysses.app?ref=empowerapps">Ulysses</a> - Distraction Free Writing App</li>
<li>
<a href="https://www.filmicpro.com?ref=empowerapps">FiLMiC Pro</a> - Professional Video Recording App</li>
<li>
<a href="https://itunes.apple.com/us/app/filmic-remote/id661488661?ref=empowerapps">FiLMiC Remote</a> - Companion App for FiLMiC Pro</li>
</ul><p><b>Marketing Apps </b></p><ul>
<li>
<a href="https://buffer.com?ref=empowerapps">Buffer</a> - Manage Social Media Queues</li>
<li>
<a href="https://itunes.apple.com/us/app/facebook-pages-manager/id514643583?mt=8&amp;ref=empowerapps">Facebook Page</a> - Manage Your Facebook Page</li>
<li>
<a href="https://itunes.apple.com/us/app/google-analytics/id881599038?mt=8&amp;ref=empowerapps">Google Analytics</a> - Visual Your Analytics from your Phone</li>
<li>
<a href="https://itunes.apple.com/us/app/wordpress/id335703880?mt=8&amp;ref=empowerapps">Wordpress</a> - Post to and Edit Your Website</li>
<li>
<a href="http://eepurl.com/bYTdu5?ref=empowerapps">MailChimp</a> - Manage your Email List and Campaigns</li>
<li>
<a href="https://zoom.us">Zoom</a> - Conference Calling App</li>
</ul><p><b>Communication and Todo Apps</b></p><ul>
<li>
<a href="https://fullcontact.com/a/NKPG99?ref=empowerapps">FullContact</a> - Manage Multiple Different Address Books</li>
<li>
<a href="https://slack.com?ref=empowerapps">Slack</a> - Chat Application</li>
<li>
<a href="https://doodle.com?ref=empowerapps">Doodle</a> - Setup Polls, especially for Meetings</li>
<li>
<a href="https://todoist.com/r/leo_dion_figxjc?ref=empowerapps">Todoist</a> - Todo app, pro version includes sharing of tasks</li>
</ul><p><b>Finances Apps</b></p><ul>
<li>
<a href="https://www.referquickbooks.com/s/Leo012?ref=empowerapps">Quickbooks</a> - Business Accounting</li>
<li>
<a href="https://dl.tglapp.com/genius-scan?ref=empowerapps">Genius Scan</a> - Scan Documents From Your Phone</li>
<li>
<a href="http://ssqt.co/mQdF0Oy?ref=empowerapps">Receipt Bank</a> - Scan Receipts and Hook up to your Quickbooks</li>
<li>
<a href="https://www.expensify.com?ref=empowerapps">Expensify</a> - Scan Expense Receipts and Hook up to your Quickbooks</li>
<li>
<a href="https://www.waveapps.com?ref=empowerapps">Wave</a> - Business Accounting</li>
<li>
<a href="https://www.paypal.com">Paypal</a> - Transfer Money</li>
</ul><p>Music by <a href="https://icons8.com/music/author/bimbotronic">Bimbotronic</a> from <a href="https://icons8.com/music">Fugue</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Previous Episodes</b></p><ul><li><a href="https://share.transistor.fm/s/a34307ee">Episode 9 - iPad Apps for Businesses and Pros</a></li></ul><p><b>Reddit Threads</b></p><ul>
<li><a href="https://www.reddit.com/r/macsysadmin/comments/av17s3/business_owners_and_admins_what_are_some_mac_apps/">r/macsysadmin</a></li>
<li><a href="https://www.reddit.com/r/osx/comments/av2tbd/business_owners_what_are_some_mac_apps_that_youd/">r/osx</a></li>
<li><a href="https://www.reddit.com/r/apple/comments/av11nr/business_owners_what_are_some_mac_or_ios_apps/">r/apple</a></li>
</ul><p><b>Database Collaboration Tool</b></p><ul>
<li>
<a href="https://airtable.com/invite/r/bhvkyqHU?ref=empowerapps">Airtable</a> </li>
<li>
<a href="https://www.filemaker.com?ref=empowerapps">FileMaker</a> </li>
<li><a href="https://ninoxdb.de/en/">Ninox</a></li>
</ul><p><b>Managing Devices</b></p><ul>
<li>
<a href="https://www.jamf.com?ref=empowerapps">JAMF</a> - Manage Multiple Mac, iPads, and iPhones</li>
<li>
<a href="https://www.reddit.com/r/macsysadmin?ref=empowerapps">More Details</a> </li>
</ul><p><b>Managing Software and Disk</b></p><ul>
<li>
<a href="http://cl.ly/ehYa?ref=empowerapps">DaisyDisk</a> - Manage and Visualize Disk Space</li>
<li>
<a href="https://brew.sh">Homebrew</a> - Command Line Application Package Installer</li>
</ul><p><b>Creative Apps</b></p><ul>
<li>
<a href="https://www.adobe.com?ref=empowerapps">Adobe Creative Cloud</a> - Includes Photoshop, Illustration, Audition, Premier and more...</li>
<li>
<a href="https://ulysses.app?ref=empowerapps">Ulysses</a> - Distraction Free Writing App</li>
<li>
<a href="https://www.filmicpro.com?ref=empowerapps">FiLMiC Pro</a> - Professional Video Recording App</li>
<li>
<a href="https://itunes.apple.com/us/app/filmic-remote/id661488661?ref=empowerapps">FiLMiC Remote</a> - Companion App for FiLMiC Pro</li>
</ul><p><b>Marketing Apps </b></p><ul>
<li>
<a href="https://buffer.com?ref=empowerapps">Buffer</a> - Manage Social Media Queues</li>
<li>
<a href="https://itunes.apple.com/us/app/facebook-pages-manager/id514643583?mt=8&amp;ref=empowerapps">Facebook Page</a> - Manage Your Facebook Page</li>
<li>
<a href="https://itunes.apple.com/us/app/google-analytics/id881599038?mt=8&amp;ref=empowerapps">Google Analytics</a> - Visual Your Analytics from your Phone</li>
<li>
<a href="https://itunes.apple.com/us/app/wordpress/id335703880?mt=8&amp;ref=empowerapps">Wordpress</a> - Post to and Edit Your Website</li>
<li>
<a href="http://eepurl.com/bYTdu5?ref=empowerapps">MailChimp</a> - Manage your Email List and Campaigns</li>
<li>
<a href="https://zoom.us">Zoom</a> - Conference Calling App</li>
</ul><p><b>Communication and Todo Apps</b></p><ul>
<li>
<a href="https://fullcontact.com/a/NKPG99?ref=empowerapps">FullContact</a> - Manage Multiple Different Address Books</li>
<li>
<a href="https://slack.com?ref=empowerapps">Slack</a> - Chat Application</li>
<li>
<a href="https://doodle.com?ref=empowerapps">Doodle</a> - Setup Polls, especially for Meetings</li>
<li>
<a href="https://todoist.com/r/leo_dion_figxjc?ref=empowerapps">Todoist</a> - Todo app, pro version includes sharing of tasks</li>
</ul><p><b>Finances Apps</b></p><ul>
<li>
<a href="https://www.referquickbooks.com/s/Leo012?ref=empowerapps">Quickbooks</a> - Business Accounting</li>
<li>
<a href="https://dl.tglapp.com/genius-scan?ref=empowerapps">Genius Scan</a> - Scan Documents From Your Phone</li>
<li>
<a href="http://ssqt.co/mQdF0Oy?ref=empowerapps">Receipt Bank</a> - Scan Receipts and Hook up to your Quickbooks</li>
<li>
<a href="https://www.expensify.com?ref=empowerapps">Expensify</a> - Scan Expense Receipts and Hook up to your Quickbooks</li>
<li>
<a href="https://www.waveapps.com?ref=empowerapps">Wave</a> - Business Accounting</li>
<li>
<a href="https://www.paypal.com">Paypal</a> - Transfer Money</li>
</ul><p>Music by <a href="https://icons8.com/music/author/bimbotronic">Bimbotronic</a> from <a href="https://icons8.com/music">Fugue</a></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sat, 09 Mar 2019 23:55:00 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/a19efbf9/c12e8283.mp3" length="8697188" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>1081</itunes:duration>
      <itunes:summary>In this episode, Leo goes over some of the apps for the Mac, iPad, and iPhone which are used to create, organize or manage for businesses. These include apps for creating video and audio work, managing your social media on the go, dealing with accounting and financials, scheduling meetings and managing communication.</itunes:summary>
      <itunes:subtitle>In this episode, Leo goes over some of the apps for the Mac, iPad, and iPhone which are used to create, organize or manage for businesses. These include apps for creating video and audio work, managing your social media on the go, dealing with accounting </itunes:subtitle>
      <itunes:keywords>technology, apple, business, iPhone, Mac, osx, macOS, iPad, Apple Watch</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>iPad Apps for Businesses and Pros</title>
      <itunes:episode>9</itunes:episode>
      <itunes:title>iPad Apps for Businesses and Pros</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">51a2bd67-8c24-431c-86db-671f6be05a04</guid>
      <link>https://share.transistor.fm/s/a34307ee</link>
      <description>
        <![CDATA[<p><b><strong>Apple March Event</strong></b></p><ul>
<li><a href="https://share.transistor.fm/s/3ee56c45"><strong>Apple makes moves towards services (Previous Episode - Apple in 2019)</strong></a></li>
<li><a href="https://www.imore.com/apple-march-2019-event-preview"><strong>Apple March 2019 Special Event Preview</strong></a></li>
<li>New <em>Non-Pro </em>iPads and iPad Minis coming out</li>
</ul><p><b><strong>History of the iPad </strong></b></p><ul>
<li>Is the iPad Still Transitioning Similar to SmartPhones and Notebook Computers did? </li>
<li>Leo's iPad Journey</li>
<li>What makes iPad and iOS work well </li>
<li>What’s the difference between Professional and Business Apps?</li>
</ul><p><b><strong>Limitations of the iPad </strong></b></p><p><b>Hardware Limitations </b></p><ul>
<li>Battery Life </li>
<li>Connectors </li>
<li>External Drive Support</li>
<li>Files Management</li>
</ul><p><b>UI Issues</b></p><ul>
<li>Touch vs Keyboard and Mouse</li>
<li>FaceID and TouchID</li>
<li>Managing Apps and Split Screen</li>
<li>Responsive Web Sites</li>
</ul><p><b>App Store Monetization </b></p><ul>
<li>Ads</li>
<li>Flat price</li>
<li>In-App Purchases</li>
<li>Subscriptions</li>
<li>Where is Group Licensing?</li>
</ul><p><b><strong>Enterprise Licenses </strong></b></p><ul>
<li><a href="https://support.apple.com/en-us/HT204460_"><strong>How Enterprise Licensing Works (Apple Support Page)</strong></a></li>
<li>What is Enterprise Licensing For</li>
<li>
<a href="https://www.recode.net/2019/1/30/18203231/apple-banning-facebook-research-app"><strong>How did Facebook abuse Enterprise Licensing? (Recode Article)</strong></a><strong> </strong>
</li>
</ul><p><b><br></b></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b><strong>Apple March Event</strong></b></p><ul>
<li><a href="https://share.transistor.fm/s/3ee56c45"><strong>Apple makes moves towards services (Previous Episode - Apple in 2019)</strong></a></li>
<li><a href="https://www.imore.com/apple-march-2019-event-preview"><strong>Apple March 2019 Special Event Preview</strong></a></li>
<li>New <em>Non-Pro </em>iPads and iPad Minis coming out</li>
</ul><p><b><strong>History of the iPad </strong></b></p><ul>
<li>Is the iPad Still Transitioning Similar to SmartPhones and Notebook Computers did? </li>
<li>Leo's iPad Journey</li>
<li>What makes iPad and iOS work well </li>
<li>What’s the difference between Professional and Business Apps?</li>
</ul><p><b><strong>Limitations of the iPad </strong></b></p><p><b>Hardware Limitations </b></p><ul>
<li>Battery Life </li>
<li>Connectors </li>
<li>External Drive Support</li>
<li>Files Management</li>
</ul><p><b>UI Issues</b></p><ul>
<li>Touch vs Keyboard and Mouse</li>
<li>FaceID and TouchID</li>
<li>Managing Apps and Split Screen</li>
<li>Responsive Web Sites</li>
</ul><p><b>App Store Monetization </b></p><ul>
<li>Ads</li>
<li>Flat price</li>
<li>In-App Purchases</li>
<li>Subscriptions</li>
<li>Where is Group Licensing?</li>
</ul><p><b><strong>Enterprise Licenses </strong></b></p><ul>
<li><a href="https://support.apple.com/en-us/HT204460_"><strong>How Enterprise Licensing Works (Apple Support Page)</strong></a></li>
<li>What is Enterprise Licensing For</li>
<li>
<a href="https://www.recode.net/2019/1/30/18203231/apple-banning-facebook-research-app"><strong>How did Facebook abuse Enterprise Licensing? (Recode Article)</strong></a><strong> </strong>
</li>
</ul><p><b><br></b></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 24 Feb 2019 01:05:00 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/a34307ee/72de1676.mp3" length="15878200" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>1979</itunes:duration>
      <itunes:summary>With the possibility of new iPad apps out in March, Leo talks about the status of business and professional apps on the iPad. How has it expanded? What are its limitation both in development and monetization? What are some ways to deliver professional and business applications for the iPad?</itunes:summary>
      <itunes:subtitle>With the possibility of new iPad apps out in March, Leo talks about the status of business and professional apps on the iPad. How has it expanded? What are its limitation both in development and monetization? What are some ways to deliver professional and</itunes:subtitle>
      <itunes:keywords>iPad, FaceBook, Enterprise, App Store, In-App Purchases, </itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Cloud and Backend Services For Apps with Erik Gillespie</title>
      <itunes:episode>8</itunes:episode>
      <itunes:title>Cloud and Backend Services For Apps with Erik Gillespie</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">ccc45750-1ab9-44f2-a91e-509fe889ff7d</guid>
      <link>https://share.transistor.fm/s/ffcb9fc1</link>
      <description>
        <![CDATA[<p><b>Previous Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/3ee56c45">Episode 7 - Apple 2019</a></li>
<li><a href="https://share.transistor.fm/s/00603d96">Episode 6 - Project Estimation Episode</a></li>
</ul><p><b>Define Whether You Do Need Cloud or Backend Services</b></p><p><strong>You Do Not Need If…</strong></p><ul>
<li>Privacy-Sensitive Data</li>
<li>No Cloud Backups Needed</li>
<li>Already Storing Using a Third Party APIs</li>
<li>Example App Developed by <a href="https://brightdigit.com/">BrightDigit</a> - <a href="http://cegeniusnurses.com/">CE Genius</a>
</li>
</ul><p><strong>You Do Need If..</strong></p><ul>
<li>Multiple Devices In Sync </li>
<li>Cloud Backups Nessecary</li>
<li>Example App Developed by <a href="http://www.shinyfrog.net/">Shiny Frog</a> - <a href="https://bear.app/">Bear</a>
</li>
</ul><p><b>What To Consider When Deciding How To Store Data?</b></p><ul>
<li>MVP vs Enterprise<ul><li>What is an MVP? Most Viable Product</li></ul>
</li>
<li>Start With the User - <a href="https://share.transistor.fm/s/00603d96">Project Estimation Episode</a>
</li>
<li>What Devices Does the App Support?</li>
<li>How Complex is the Data and Queries?</li>
<li>Are Outside Jobs Needed? <ul><li>Such as Cron Jobs, Backups, Push Notifications, etc…</li></ul>
</li>
<li>Consider Prices - Bandwidth and Storage</li>
<li>Consider Developer Team’s Comfort Level</li>
<li>Develop Abstracting User Experience From Data Layer</li>
</ul><p><b>Build a Custom Web App</b></p><p><strong>Virtual Machine Options</strong></p><ul>
<li><a href="https://aws.amazon.com/ec2/">Amazon EC2</a></li>
<li><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7">Linode</a></li>
<li><a href="https://m.do.co/c/255904441a32">Digital Ocean</a></li>
</ul><p><strong>Web App Options</strong></p><ul>
<li><a href="https://kubernetes.io/">Kubernetes</a></li>
<li><a href="https://www.docker.com/">Docker</a></li>
<li><a href="https://www.heroku.com/">Heroku</a></li>
</ul><p><strong>Database Options</strong></p><ul>
<li><a href="https://www.mysql.com/">MySQL</a></li>
<li><a href="https://mariadb.org/">MariaDB</a></li>
<li><a href="https://www.postgresql.org/">PostgreSQL</a></li>
<li><a href="https://www.mongodb.com/">MongoDB</a></li>
<li><a href="https://redis.io/">Redis</a></li>
</ul><p><strong>Programming Options</strong></p><ul>
<li><a href="http://php.net/">PHP</a></li>
<li><a href="https://nodejs.org/en/">Node.js</a></li>
<li>
<a href="https://docs.microsoft.com/en-us/dotnet/csharp/">C#</a>and <a href="https://dotnet.microsoft.com/apps/aspnet/apis">ASP.NET Web APIs</a>
</li>
<li><a href="https://www.ruby-lang.org/en/">Ruby</a></li>
<li><a href="https://elixir-lang.org/">Elixir</a></li>
</ul><p><strong>Swift Options</strong></p><ul>
<li>
<a href="https://vapor.codes/">Vapor</a> -<a href="https://learningswift.brightdigit.com/vapor-swift-backend-review/?utm_medium=web&amp;utm_source=empower-apps-show"> Review</a>
</li>
<li><a href="https://www.kitura.io/">Kitura</a></li>
<li><a href="https://perfect.org/">Perfect</a></li>
</ul><p><strong>Server Software Options</strong></p><ul>
<li><a href="https://www.iis.net/">IIS</a></li>
<li><a href="https://www.nginx.com/">Nginx</a></li>
<li><a href="https://httpd.apache.org/">Apache</a></li>
</ul><p><strong>Other Software Considerations</strong></p><ul>
<li><a href="https://www.cloudflare.com/">Cloudflare</a></li>
<li><a href="https://newrelic.com/">New Relic</a></li>
<li><a href="http://supervisord.org/">Supervisor</a></li>
</ul><p><b>Mobile Backend As A Service</b></p><ul>
<li><a href="https://www.sashido.io/">Parse</a></li>
<li>CloudKit</li>
<li>Firebase<ul>
<li>Using Multiple Services </li>
<li>
<a href="https://restfulapi.net/">REST API</a> vs <a href="https://graphql.org/">GraphQL</a>
</li>
</ul>
</li>
</ul><p>Music by <a href="https://icons8.com/music/author/roman-bulakhov">Roman Bulakhov</a> from <a href="https://icons8.com/music">Fugue</a></p><p><b>Full Transcript</b></p><p>[00:00:00] <strong>Erik Gillespie (Host): </strong>Hi Leo, it's me. Again. </p><p>[00:00:01] <strong>Leo Dion (Host): </strong>Hey, Eric. Glad to have you on to help host this episode. So today we're going to talk about back-end and cloud services for your IOS app. And I think first we should talk about when you should need a back-end or cloud service because I don't think it's needed in every absolute case when it comes to an IOS app or any mobile app.</p><p>[00:00:25] <strong>Erik Gillespie (Host): </strong>Yeah, I'm really curious to hear what your ideas are on this. </p><p>[00:00:27] <strong>Leo Dion (Host): </strong>So one thing to consider is there's a lot you can get away with without even doing cloud services. The thing with an IOS app is if you're storing your data in something that is like iCloud or in a lot of cases people really don't need the cloud to store their data. They can just sort on their phone itself. I think often times when we think about building an app that's something to think about is like do you really need this stored in the cloud and if you maybe can provide a manual mechanism to backup the data into some sort of iCloud storage as a file that saves a lot of trouble and saves you a lot of time and money quite frankly when you're building your mobile app. And then that way you don't really need a cloud service or a back-end service in a lot of cases. </p><p>[00:01:15] <strong>Erik Gillespie (Host): </strong>What are some situations where you think it's okay to go with a back-end service or on the flip side choose to only or mostly store things directly on your users phones. </p><p>[00:01:27] <strong>Leo Dion (Host): </strong>I think anything that's privacy sensitive. I think you should definitely just store on the phone locally because that's a whole other headache you having to deal with if you're worried about that stuff being stored in the cloud and if it's very simple stuff if it's things that they just need on their phone and if they lose it, it's not the end of the world I think it's totally legitimate to only store that stuff on the phone. Also, if you're using any third party apis in other words. Like let's say you're using Twitter or YouTube or some other API where you're not really storing data. Data that's being stored is essentially being stored in this third party structure than it's not really necessary because you can just use that third party API as your database in many ways.</p><p>[00:02:06] I'll just tell you one case I built an app for nurses and doctors to do continuing education for their career and all that data was just stored in core data, which is essentially a SQL lite database abstraction layer. And so all that stuff was sort of essentially in SQL and it was all sort of locally and there was just a simple option. They don't have the budget for it. They didn't have the timeline for it either. So the simple way we did it is we just have a manual backup process that you can run and it essentially creates a zip file of this data stored as a Json or JavaScript object notation file. And so if they wanted to back up they can just sort it in iCloud and if they ever wanted to restore it they can always restore it back on their iPhone. Where I think a back-end service and a cloud service is really helpful is if you're going to have it available on multiple devices .So for instance I'm a big user of Bear, which is an awesome note taking app that's available on all Apple devices and they use kind of combination iCloud and CloudKit they store their stuff in the back end and then that way if I pull up my notes on a Mac or on my iPad or my iPhone. I always have it accessible because it's all stored in the cloud. I think that's where something like a back-end service is really useful. </p><p>[00:03:19] <strong>Erik Gillespie (Host): </strong>Like when you need to synchronize data across multiple devices </p><p>[00:03:22] <strong>Leo Dion (Host): </strong>Exactly. Yep. So I think that's really where it's really nessecary. As we get into this we'll talk about complexity of like data in any sort of like back-end stuff for notifications ,things like that, that's where we really are going to want to look at having a stuff stored in the cloud somehow </p><p>[00:03:37] <strong>Erik Gillespie (Host): </strong>gotcha. So what are some things to consider when you decide that you do need back-end storage?</p><p>[00:03:42] <strong>Leo Dion (Host): </strong>One thing to consider is timeline and budget and specifically what is the purpose of this app? Is this just a simple MVP or is it more of a long-term app that needs to be well architected when I first starts off? Because if it's an MVP, use something that you know how to use that's easy, that's simple and that's cheap and just get it done and have something that is usable and can be tested by your audience and seeing whether it works according to what you're testing as far as the app's value to the customers.</p><p>[00:04:15] <strong>Erik Gillespie (Host): </strong>Just going to ask if you could briefly explain what you mean by MVP. </p><p>[00:04:18] <strong>Leo Dion (Host): </strong>So by MVP, I mean most viable product if you're familiar with like Lean Startup methodology. So you're just proving to whether this is a product that your customers are actually going to want. And so you're just getting something quickly out there that essentially works and that you can see whether this is something customers want or you need to pivot or you need to change something or something like. Does That that  make sense? </p><p>[00:04:39] <strong>Erik Gillespie (Host): </strong>Yeah, like a bare-bones version of like the basic features that you think that your customers or your users want exactly. </p><p>[00:04:46] <strong>Leo Dion (Host): </strong>Yep. </p><p>[00:04:46] <strong>Erik Gillespie (Host): </strong>Okay. </p><p>[00:04:47] <strong>Leo Dion (Host): </strong>Otherwise if you're building like an Enterprise app for a big Fortune 500 company, you probably are more likely going to want to build something a little bit more robust and customizable. That doesn't necessarily rule out some of the more cheaper options, but it's just something to consider is what do you want to work with in the long term because it's going to be used for quite a while. I think another thing to consider is when you're developing the iOS end of things and you're writing your Swift or Objective-c code to talk to this back-end make sure you have some healthy abstraction with your API communication so that way in case you pivot and use a different service at some point that that's not a big deal to what you view or what you're showing the user on the front end if that makes sense.</p><p>[00:05:27]<strong>Erik Gillespie (Host): </strong> I think so. So do you recommend doing some user-focus design and come up with the kind of data that your users need and then work your way back towards how you would need to store that in some kind of a back-end storage.</p><p>[00:05:40] <strong>Leo Dion (Host): </strong>Yeah, absolutely in an earlier episode. I believe it was episode number 6. We talked about project estimation and one of the first things I do when I have workout app is almost like a little MVP in a way is I build out the storyboard the UI of the app and essentially fake the data to make sure that that data is what the customers want and then go backwards which is exactly what you're saying. So get your UI because that's the most important thing that the users are going to see get that stuff settled and ready before you go in and build the back end in some cases. I think that's a useful rule </p><p>[00:06:16] <strong>Erik Gillespie (Host): </strong>right on. </p><p>[00:06:16] <strong>Leo Dion (Host): </strong>So another thing to consider is what devices you support. Are you only supporting Apple devices - In which case we'll talk about the more Apple centered back ends. Are you also going to support the web? Are going to support Android? Are going to support Windows and Linux desktops? Are you going to support internet of things? Because that all Is something to consider when you're looking at different backgrounds, which we'll talk about in a little bit. And then the other thing to think about is the complexity or simplicity of your queries, which is essentially when you're asked for data back or the data itself.</p><p>[00:06:50] How complex and simple is it? Because some things especially relational data is best done through some sort of SQL database when in  some cases you might be better off with like a document storage type database and all the various other nosql or other types of data structures that you can do with a database so that's something also to keep in mind.</p><p>[00:07:09] <strong>Erik Gillespie (Host): </strong>Okay. And so if I'm understanding correctly some other thing ways that you could approach that is do you need to aggregate your data or you do you need to create filters and view it in a lot of different ways and combine your data set? Is that close? </p><p>[00:07:23] <strong>Leo Dion (Host): </strong>Yeah, that's exactly it. </p><p>[00:07:25] <strong>Erik Gillespie (Host): </strong>Okay, and then on the simple side, it would be I need to look up a user with this ID. I need to look up, you know the single record with this ID or something along those lines. </p><p>[00:07:33] <strong>Leo Dion (Host): </strong>Yeah, exactly. Are you willing to just kind of offload a lot of the complexity of a good query over to the device like your iPhone or is it important to have that stuff on the server and done on the server instead? That's really the question asked. </p><p>[00:07:47] <strong>Erik Gillespie (Host): </strong>Okay. </p><p>[00:07:47] <strong>Leo Dion (Host): </strong>Another thing is do you need any sort of like outside communication or outside jobs, like cron jobs essentially scheduled jobs to be run on a periodic basis. Doing backups - that's another thing we could talk about because that stuff doesn't necessarily come with a lot of the more track cloud level databases that we're going to talk about.</p><p>[00:08:09]<strong>Erik Gillespie (Host): </strong> One of the ideas there is that the user does something that creates data and then you need to be able to do something with that data whether or not they have their phone on. </p><p>[00:08:18] <strong>Leo Dion (Host): </strong>Yes, exactly. Just because you think you might need a Cron job doesn't necessarily mean you might need one. Because in a lot of cases you can just get away with like having the person when they run your app run a particular job that they haven't run in like several days.</p><p>[00:08:32] That's totally a reasonable way to get around not having access to cron jobs is just having the user do it automatically when they run the app. So that's always something to think about. That's just a way to get around the lack of the ability of having cron jobs and last but not least. I think the two other more important ones is what's your developer team comfort level like what's their expertise in that's going to matter a big deal because if their expertise is a .net shop, you probably are just better off having a Windows back end with SQL Server and C# just using like Web API and have at it. If you're already getting a decent price on your Azure instance go for it because that's what your team is an expert in. There's nothing wrong with that. So, you know it all depends. What's your team? What's your price? Because it definitely matters. Does That make sense?</p><p>[00:09:21] <strong>Erik Gillespie (Host): </strong>Yeah it does I mean let your developers the ones who are going to be supporting all of this do what they do best. Yeah, that sounds very empowering. </p><p>[00:09:28] <strong>Leo Dion (Host): </strong>Exactly. So let's talk about the different options. The first option we're going to talk about is probably the most customizable the most robust perhaps and that's just hosting your own server essentially and even that comes with different abstraction layers.</p><p>[00:09:42] So you can buy your own server and have a hosted at a site you can have a virtual machine which is what 99% of people do and get something through like AWS EC2 or Linode or DigitalOcean. I'm doing linode that's like five bucks a month super reasonable and if you listen to any other podcasts in the technical area, I'm sure you can get a really reasonable discount. They are very reasonably priced. You can go that route. </p><p>[00:10:04] If you want to go another layer of abstraction. There's something like Kubernetes. This is Google's thing, but it's open source. I believe even like AWS and Linode or DigitalOcean also host Kubernetes instances, and that's like a software layer of abstraction. I'm not an expert on kubernetes, but that sound about right Erik.</p><p>[00:10:23]<strong>Erik Gillespie (Host): </strong> I think so. I was just going to ask if you would mind explaining a little bit about what some of these are.</p><p>[00:10:28]<strong>Leo Dion (Host): </strong>I am not an expert at them, but they're just simply put it's another way to easily plug in your app into an infrastructure without the headache of setting up an entire machine essentially. People are big fans of kubernetes and for good reason, especially in the dev-op space but that's another layer of abstraction rather than just sending up a whole server essentially. </p><p>[00:10:48] There's of course Docker which is uses Kubernetes as well. And there's other container type instances that you can use. I've used Heroku as well. Heroku is fantastic. If you're just starting from scratch and want  something very little to try out with I highly recommend starting off with Heroku with that.</p><p>[00:11:05] You don't even need to know kubernetes or how to setup an HTTP host or any of that stuff. That's super super easy. And that's also something to consider as well and they're not that expensive. </p><p>[00:11:14] <strong>Erik Gillespie (Host): </strong>I haven't dived into a lot of the specific platforms that you just mentioned, but I'm a little bit familiar with Heroku and I know that some of these platforms I would project don't necessarily support all of the different types of data storage solutions that you might want to host.</p><p>[00:11:30] <strong>Leo Dion (Host): </strong>Or if they do they might charge them at a premium. I mean, that's  part of the problem If anything. And we'll get into that in a little bit.</p><p>[00:11:37] <strong>Erik Gillespie (Host): </strong>Research Is important and don't just pick one and then think it's going to be smooth sailing </p><p>[00:11:43] <strong>Leo Dion (Host): </strong>right like with a virtual machine. You pretty much can put whatever you want to put on it. That shouldn't be a big deal because you have a blank slate to do whatever you want with but with Kubernetes or Heroku you're going to want to look at what databases they actually support. </p><p>[00:11:56] Well, let's just get into like the different database structures you could do you could do like a traditional SQL database like MySQL or Mariadb postgres or if you're doing Microsoft, you have SQL server or if you're really, you know, you're doing some Enterprise and you're a masochist you could always do Oracle</p><p>[00:12:14]<strong>Erik Gillespie (Host): </strong> and have a lot of money. </p><p>[00:12:15] <strong>Leo Dion (Host): </strong>Yeah, exactly. So those are options if you want a more of like a SQL relational database type structure. That's what I like to go with. That's what I'm used to and despite dabbling in nosql I've always found that I almost want to go back home to SQL when it comes to database structure because that's how I think of stuff - in real a relational ways the problem with those is that. And to be more expensive but that's always an option. Heroku has a free option with postgres, which is really nice. If you're doing something small and just want to do a SQL database. </p><p>[00:12:45] <strong>Erik Gillespie (Host): </strong>Yeah, that seems like it would work with the MVP approach very very well. </p><p>[00:12:49] <strong>Leo Dion (Host): </strong>You could always do something like Mongo if you want something more loose and document-based there's redis of course and other key value type database structures as well.</p><p>[00:12:57] So those are your options when it comes to data storage as far as the database is concerned. Programming language again, what is your developer team familiar with: just stick with like PHP? That's still pretty popular; ruby's very popular; nodejs; if you're a .Net shop. There's always C sharp. You can run on that and luckily for us Swift developers. We have a plethora of options right now. </p><p>[00:13:18] There's Perfect; if you're on the Enterprise side of things and we want to stick with Swift I would recommend looking at Kitura by IBM - they're moving fast on that. If you want something more community-based than I would highly recommend Vapor which is what I've worked with and it's really awesome and easy to set up both on development when it comes to xcode or if you're setting it up on a Ubuntu I got Vapor set up on Ubuntu box over on Linode and that worked fantastic. So that's something can consider again. What is your developer team want to do? What's their toolset? What are they familiar with you're going to go find with any of those options.</p><p>[00:13:55] When it comes to running your HTTP server, you have your choice with like Apache which has been around for forever. If you're doing dotnet there's IIS, of course what's really grown in popularity in the last 10 years is nginx because it's so simple and there's a great Community out there and it's much simpler than Apache and that's always something to look at as well. Did I cover everything you can think of as far as server, database, programming language, and abstraction?</p><p>[00:14:20]<strong>Erik Gillespie (Host): </strong> I think in regards to picking a language as well. If you don't have a team then these popular ones are also ones that you can look out for if you're looking for Freelancers to do some one-time development for you. </p><p>[00:14:32] <strong>Leo Dion (Host): </strong>Yes, and if you're looking for a Swift developer who's worked with Vapor contact me </p><p>[00:14:37] <strong>Erik Gillespie (Host): </strong>nice </p><p>[00:14:38] <strong>Leo Dion (Host): </strong>because I've worked with vapor and it's a really fun framework to work with if you're already a Swift developer.</p><p>[00:14:43] We've talked about the main stuff you need but then you're going to need some sort of monitoring security and backups and things like that and that's also something to consider. What I set up to get the app working on Ubuntu for Vapors is I used supervisor which essentially runs the app so that way it can be tunnelled through nginx through the main server and supervisor is really good.</p><p>[00:15:04] If you're looking for security or a CDN or things like that, you definitely want to look at cloudflare. They're pretty reasonable for what you can get for free from them. I would highly recommend checking them out. I don't know if New Relic is specifically PHP related but New Relic is really good for monitoring when it comes to your app.</p><p>[00:15:21]<strong>Erik Gillespie (Host): </strong> I recommend actually testing all of these out. So whichever one you decide actually try it out and make sure that for any kind of security or monitoring that you're able to not just read and understand how to use these tools. You can use them and that they work the way that you think and if you're doing like database restores and recovery and security that you're testing those really well. This is an area of your infrastructure that needs to be pretty rock solid or your entire application will just go down and be unavailable </p><p>[00:15:50] <strong>Leo Dion (Host): </strong>That's a really good point Erik. So some of the advantages of hosting your own is the fact that you can customize everything down to the minutiae, I mean you basically have a whole machine that you can work with that is also the disadvantage because the burden is on you to make sure everything is set up correctly wear as a lot of these other services. They pretty much can take care of everything. All you need to do is write your app code and get your database setup. So that's something to think about. I think the good time to host your own is if you're building Enterprise or long-term application. If you're using something outside of the Apple domain, I think it's something I consider is just hosting your own server or having your own web app.</p><p>[00:16:29] And then if you're doing any sort of complex queries or complex data, definitely you want to take a look at setting up your own SQL database. And if you absolutely need backups or cron jobs or things like that you definitely want to take a look at hosting your own.</p><p>[00:16:43] I would not recommend hosting your own if you need a simple MVP or if you're doing this only on Apple devices or your data is fairly simple. Of course, this is all pertains to what's your price range? What's your developer team Comfort level and things like. That but those are things to consider.</p><p>[00:16:57] <strong>Erik Gillespie (Host): </strong>It sounds like basically if you have simple needs go with the simplest solution and then plan on scaling out from there according to the growth of your own needs. </p><p>[00:17:06] <strong>Leo Dion (Host): </strong>Exactly. And let's be quite honest with ourselves here quite often people are rewriting  web apps all the time. So especially in software nothing's written in stone.</p><p>[00:17:16] So I would definitely think long term but not too long term because in the very long term the stuff is going to be re-written quite frankly keep that in mind as well. I don't know how I put that but so it makes sense Erik. Let's talk cloudkit now, which is Apple's more or less back-end storage. CloudKit is essentially like an abstraction layer of object storage cloud based object data storage.</p><p>[00:17:41] It's a fairly simple to use if you're sticking with iOS it comes with push notifications so you have the ability to do that. It's completely native to Apple. So if you're running a Mac app or an iPad app or using an Apple Watch or Apple TV, it's really easy to do. It also includes a JavaScript component for the web.</p><p>[00:17:59] So you have that ability. If you're doing something web-based. However, there are some disadvantages. Right now, It's probably pretty difficult to use for Android. I say that because there is no like. It is Android use, you know, it's interesting. We talked in the previous episode about Apple's growth in the services space.</p><p>[00:18:17] It'll be interesting to see if they make any moves towards Android with CloudKit June with WWDC because you know if they're putting an iTunes on a Samsung TV, or they're putting Apple music on an echo you'd think they wouldn't mind putting cloudkit on Android, but we'll see about that. I think there's probably ways to get around that with Android.</p><p>[00:18:34] I'm not an Android developer, but I would think there's ways you can call the JavaScript API using Android or at the very least you could like say running ionic or Cordova app and just use JavaScript in that sense using cloudkit. And you know going to the desktop maybe if you're running an electron app, for instance, you might be able to just use cloudkitJS with that so that option is available but like I said there might be an uphill battle. </p><p>[00:18:59] <strong>Erik Gillespie (Host): </strong>Do you happen to know if the JavaScript API can be used from node? Or is it only from the browser? </p><p>[00:19:06] <strong>Leo Dion (Host): </strong>I don't know that that goes to the next point is like would you be able to like write an app on a Raspberry Pi using cloudkit JS? Like I have no clue about that. That's a really good question and somebody out there knows that right us back. We'd love to hear. </p><p>[00:19:18] Where it is an easy yes is if you're just going to target only Apple devices. Then I would say cloudkit is definitely what you want to go with and then if you don't need a lot of outside jobs, like I said, you probably could figure out how to write your app so that way you don't really need a crown job, or maybe you do automatic backups in the app itself. These are seriously powerful iPhones so really I wouldn't worry too much about straightening a user's iPhone when they have so much power, especially with these like newer iPhones. I think you're totally fine offloading some of the stuff onto the iPhone itself if your data is not too complex or your data or your queries aren't too complex when I wouldn't suggest using it is if you're not doing Apple only I have some hesitation about just depending on cloudkit JS for everything if you're not targeting only Apple devices. And if you absolutely absolutely need outside backups or outside cron jobs of some sort to be run and you're absolutely cannot do it on an iPhone or an iPad then you might want to consider not going with the cloudkit option if you're targeting especially slower devices or you really need to offload a lot of these queries or data is just way too complex to sort and cloudkit then you might want to not consider cloudkit in that case.</p><p>[00:20:50] Maybe we'll do a little history lesson. So I would say about five years ago six years ago the most popular one out there by far when it came to mobile backends was Parse. Parse then got bought out by Facebook and then Facebook essentially killed it. Now, they open sourced it so anybody could run their own Parse server, but out of the ashes of that came another startup called Firebase. And I don't know how many years it's been but a Firebase essentially got acquired by Google.</p><p>[00:21:20] And as far as what I've seen it's the most popular mobile backend as a service and actually backend as a service over all because of price probably but also that it's available on a plethora of devices. Erik, you've actually used Firebase, correct? </p><p>[00:21:36] <strong>Erik Gillespie (Host): </strong>I have and yeah on the surface, it seemed really really appealing and I've got to say right now I would be hesitant to use it in to any of my applications that might scale </p><p>[00:21:49] <strong>Leo Dion (Host): </strong>so could.explain a little bit about how Firebase works?</p><p>[00:21:52] <strong>Erik Gillespie (Host): </strong>You can think of it as a nosql database that stores everything that effectively as one giant JSON object; every single user if you have user records, if you have a Blog every single post, it's all going to be in one giant JSON structure and they have a very basic querying language that you can use to access data within that JSON structure, but it's not very robust and it's got a little bit better, but I think this typically ends up happening with a lot of NoSQL databases if you want complex querying capabilities typically you end up duplicating a lot of your data to make it a little bit easier so.</p><p>[00:22:26] <strong>Leo Dion (Host): </strong>Did you run into a lot of like map-reduce issues with Firebase? That's what I've run into when it comes to Mongo is like you end up having a lot of map-reduce and like that stuff can get really complicated really quick.</p><p>[00:22:39] <strong>Erik Gillespie (Host): </strong>Yep. So there's a lot of different ways that I needed to use this data that took a lot of consideration and to how to secure the data how to. So data how to do things efficiently and then also like you were suggesting how to actually manipulate all of the data once I do have it so that I can report it to the user in the correct way.</p><p>[00:22:59] <strong>Leo Dion (Host): </strong>Does Firebase allow you to offload a lot of that complex querying over to their servers you can pick they do have functions. So you can do things on the Firebase server as you would or you can run your own server. And so you can query the Firebase database manipulate the data on your own server and then send that to the users or.</p><p>[00:23:19] <strong>Erik Gillespie (Host): </strong>You can even access everything directly from the browser or your IOS app and then manipulate the data directly on the client device. The tough thing is Firebase does make it really easy to get started with a database and do some really cool real-time interactions with basic data sets. And so there is a strong appeal and I can understand why there's this popularity to it and it's really good as an introductory database.</p><p>[00:23:44] If you want to learn how to do real-time database integration in a web browser and you don't want to have to introduce like rest apis or making graphql or any other typical ways where you have to just create a bunch of extra code, In order to get access to data. Firebase is a great way to go about it.</p><p>[00:24:01] However from my experience if you're doing anything more than basic it gets really complicated really quick. So very early in this episode you mentioned the security is one of the concerns. If you have clients accessing the database directly and you don't have any server in the middle there. Then you have to start writing all of these different rules in Firebase in order to make sure that user X cannot access data that is exclusive to user Y that's really complicated and it's kind of like JavaScript but it's not quite JavaScript. So there's all these nuances that you have to learn about how to use it. </p><p>[00:24:34] Testing is also really challenging. So the way that you watch data is you watch it query URL. So you provide a path, to an object or a structure within your Json that you want to watch and anytime there's changes to that fire base will automatically stream that data to any of the affected clients. So you have to be concerned about the size of the data. So if you have let's say you have a user profile that has your username and an avatar and a bio you have to be mindful that if you want to just present in the navigation bar on any given page the name of a user that you only want to query for the name of the user otherwise you might be incurring a lot of extra downloads if the bio or that image change. So there's some performance impacts if you don't model and code your Firebase application correctly. </p><p>[00:25:22] <strong>Leo Dion (Host): </strong>So this sounds a lot like subscriptions and cloudkit. So in cloudkit you can do something like a subscription and listen to changes in the database for a particular user. Is it some similar to that and then you get like a push notification with subscriptions essentially?</p><p>[00:25:37] <strong>Erik Gillespie (Host): </strong>Yeah exactly the Firebase realtime database doesn't use browser or client push notifications. So you don't have to do the like I allow this application or this website to push notifications to me.</p><p>[00:25:54] <strong>Leo Dion (Host): </strong>Right</p><p>[00:25:54] <strong>Erik Gillespie (Host): </strong>and it does that really well. So the data syncing does work marvelously. However, sometimes it can take a long time to sync data if you're watching an entire user record and they change their profile. Meanwhile, all of your users who are in a chat room who only care about the username then may have to download this profile that is maybe like one kilobyte and until that is donethey don't actually see any changes to like a username or anything like that. </p><p>[00:26:28] <strong>Leo Dion (Host): </strong>Yeah. That's a really good point. </p><p>[00:26:29] <strong>Erik Gillespie (Host): </strong>Yeah, so you have to be very careful about those subscriptions or what you're listening to.</p><p>[00:26:34] <strong>Leo Dion (Host): </strong>Now cloudkit has the idea of like a private database, public database and a shared database you have somebody like that like CloudKit? Or  is it all  just kind of like a database which is kind of the more traditional way of doing things?</p><p>[00:26:46]<strong>Erik Gillespie (Host): </strong> Firebase has a few different storage options might be able to guess this since they store in the real-time database everything as JSON you have all of the same limitations of what you're able to store so binary data is automatically out.</p><p>[00:27:00] So if you need to store files PDFs or images or anything like that, That will go into a different Firebase service. So you have to then code to separate ways to potentially get access to the data that you need which can have its benefits. However, it can also seem a little cumbersome. The last point is the querying capabilities.</p><p>[00:27:19] They've gotten better. However, there's still really basic and definitely not as powerful as what you can do with like an SQL database. I would say if you have any kinds of reporting needs or you need to aggregate lots of data and then present it to the user in. One, two, three, or more different ways than you may need to take that into consideration when you're modeling your data and potentially create duplications of your data, or maybe just reconsider using Firebase for that kind of reporting need.</p><p>[00:27:50] <strong>Leo Dion (Host): </strong>Okay, that makes total sense. </p><p>[00:27:52] <strong>Erik Gillespie (Host): </strong>It does seem really really popular but the more I dig into it like there are some companies using it but not a whole lot of like enterprise-grade companies that are really relying on Firebase. So that is something to consider as well. And I would recommend considering that not just for Firebase.</p><p>[00:28:09] But any kind of storage solution that you're going to use see if there are any big companies is using it if you want something that's rock solid and stable and gets a lot of support you can. Be sure that these big companies who have lots of lots of time and money to spend will have taken the time to research and vet these solutions and so you can offload some of the work on to them and consider it a little bit safer to go with a solution If you have like one of these Fortune 500 companies using it.</p><p>[00:28:37]<strong>Leo Dion (Host): </strong>What do you think of Fortune 500 company is using for their back-end?</p><p>[00:28:41]<strong>Erik Gillespie (Host): </strong> I've seen a lot of them end up hosting their own. </p><p>[00:28:44] <strong>Leo Dion (Host): </strong>Yes. </p><p>[00:28:44] <strong>Erik Gillespie (Host): </strong>I am seeing them shift more towards cloud based Solutions but what they tend to do is do a lot of self manage types of solutions. </p><p>[00:28:51] <strong>Leo Dion (Host): </strong>Yep.</p><p>[00:28:52] <strong>Erik Gillespie (Host): </strong>Not necessarily like a Heroku but maybe like AWS or there's other what are considered enterprise-grade.</p><p>[00:28:58] <strong>Leo Dion (Host): </strong>When it comes to your Fortune 500, If they're going to go Cloud, they usually go AWS, Azure, IBM - typically those are those are the big three Cloud platforms that I've heard of maybe maybe Google if they've been given enough incentives to do that as well.</p><p>[00:29:13] I don't see a lot of Firebase. Now, I've also seen the case where. You might use multiple database systems. So maybe you have like MySQL for some of your data. And then maybe you'll have like a real time data using Firebase. Is that a use case you've seen a lot of?</p><p>[00:29:27] <strong>Erik Gillespie (Host): </strong>I haven't seen a lot of it, but it was it is something that I would consider. I think graphql makes that a little bit easier because you can aggregate data from a lot of different sources more easily with a rest API you basically have to do all the coding yourself. So if you want to use Firebase and postgres, for example, then you create an API and then your apis server-side code will connect to both of those places pull down the data they need and then manipulate it however and then spit it back out to you so definitely very viable something to consider.</p><p>[00:29:57] <strong>Leo Dion (Host): </strong>Could you explain a little bit what graphql is as opposed to rest API</p><p>[00:30:01] <strong>Erik Gillespie (Host): </strong>With a rest API, typically you have a URL or resource on the web and you will fetch that and download one piece of data with graphql from the client you can provide a multitude of data that you want to access and then a graphql will take on the responsibility of figuring out how to quickly get and combine all of that data and then get it to you. </p><p>[00:30:31] <strong>Leo Dion (Host): </strong>Yeah, I think Rest API kind of is a very simple as far as what you can query. It's meant to be like that. It's always been structured in that way.</p><p>[00:30:39] So you can say I want to get user with ID 20 and I'll just do it and then maybe you can maybe attach some filters and things but it's really it's very simple as far as that where I think like with graphql which is by Facebook. They've done is they've created a weight so that the client can send a complex query essentially in some sort of JavaScript object notation format.</p><p>[00:31:01] And then the server has the responsibility of figuring out how that query is to be run and how that query data is supposed to be outputted to the user. Is that correct? </p><p>[00:31:11] <strong>Erik Gillespie (Host): </strong>Yeah for my understanding. Yeah and it introduces some alternative concerns with rest. You have a single resource that you're trying to fetch so it's pretty easy to lock down data. With graphql, then you have to consider now a user is potentially queering for anything that they want because you're exposing this query API to potentially anyone. </p><p>[00:31:31] <strong>Leo Dion (Host): </strong>Yes. </p><p>[00:31:31] <strong>Erik Gillespie (Host): </strong>So how do you protect all of this data? How do you make sure that they don't come up with a query that is going to just totally bog down your server or get access to data that they're not supposed to have access to. How do you actually present errors when they occur?</p><p>[00:31:45]<strong>Leo Dion (Host): </strong>Anything else you want to talk about as far as Firebase is concerned?</p><p>[00:31:47]<strong>Erik Gillespie (Host): </strong> I would recommend using it for very very simple situations where you have data that is not going to change in structure over time, data that's generally flat and when you don't have to do lots of complex queries. So on the flip side of that if you have lots of relational data you have to do a lot of reporting you have lots of large Fields like files to download that might be text-based so you'd be inclined store them in Jason or you have very complex security needs then you might want to consider some alternatives to Firebase. </p><p>[00:32:19] <strong>Leo Dion (Host): </strong>Yeah, because I feel like Firebase is the most popular it's the hotness and from what you've told me with your story is like it's not necessarily a good fit for most things. Is that correct? </p><p>[00:32:31] <strong>Erik Gillespie (Host): </strong>I think most people when they're building applications have grand ideas of them scaling to lots of people being used for very big things Firebase is very appealing for small projects. However, from what I've seen they get really complicated really quick. So as your needs change firebase might not be able to adapt and grow with you and can be very difficult to continue to support. </p><p>[00:32:55] <strong>Leo Dion (Host): </strong>I think it's a really good point Erik. So always consider your developer team your price when you're doing your backend and help simple. Can you make your data? How much can you get away without a lot of the complexity of a home-built server?</p><p>[00:33:07] Because the backend they're great. If you don't mind dealing with the hosting and all their headache and also even if you do a custom back-end consider how much of that can be abstract and you're willing to get away without having to maintain a server all on your own. If you're doing anything in the Apple space and you already have a team of Swift developers I would recommend looking at vapor at the very least for your back end. But if your team is mostly .net Developers or mostly Ruby developers or PHP or Elixir or go or rust or whatever one of the plethora of languages out there consider the comfort of your developer team. If you're just doing mostly Apple apps so stuff for the Mac iPad iPhone TV watch whatever consider cloudkit. With Cloudkit, you can get away with a lot. It's very very cheap. Apple practically gives it away for free. You're hardly ever going to run into the limit and it's really easy to use when you're working with Apple devices and you're already programming in Swift or Objective-c. </p><p>[00:34:00] And then as far as Firebase, it's great if you're doing really simple data or you're working with a really simple MVP but really look at the limitations before you jump into it. It might not be a good fit for what you're looking for. And you know, if you need to pivot do it early it. Don't do it when it's too late, if you feel like your data isn't a good fit for whatever you end up picking pivot as quickly as you can because you're not going to want to be burnt out by constantly trying to get your data to fit and in particular space.</p><p>[00:34:28] <strong>Erik Gillespie (Host): </strong>Yeah. Yeah. I totally agree with that </p><p>[00:34:30] <strong>Leo Dion (Host): </strong>cool. So yeah. Thank you so much for coming on again and telling your story about Firebase and we will talk to you later. </p><p>[00:34:37] <strong>Erik Gillespie (Host): </strong>Alright take it easy. Thanks for having me.</p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Previous Episodes</b></p><ul>
<li><a href="https://share.transistor.fm/s/3ee56c45">Episode 7 - Apple 2019</a></li>
<li><a href="https://share.transistor.fm/s/00603d96">Episode 6 - Project Estimation Episode</a></li>
</ul><p><b>Define Whether You Do Need Cloud or Backend Services</b></p><p><strong>You Do Not Need If…</strong></p><ul>
<li>Privacy-Sensitive Data</li>
<li>No Cloud Backups Needed</li>
<li>Already Storing Using a Third Party APIs</li>
<li>Example App Developed by <a href="https://brightdigit.com/">BrightDigit</a> - <a href="http://cegeniusnurses.com/">CE Genius</a>
</li>
</ul><p><strong>You Do Need If..</strong></p><ul>
<li>Multiple Devices In Sync </li>
<li>Cloud Backups Nessecary</li>
<li>Example App Developed by <a href="http://www.shinyfrog.net/">Shiny Frog</a> - <a href="https://bear.app/">Bear</a>
</li>
</ul><p><b>What To Consider When Deciding How To Store Data?</b></p><ul>
<li>MVP vs Enterprise<ul><li>What is an MVP? Most Viable Product</li></ul>
</li>
<li>Start With the User - <a href="https://share.transistor.fm/s/00603d96">Project Estimation Episode</a>
</li>
<li>What Devices Does the App Support?</li>
<li>How Complex is the Data and Queries?</li>
<li>Are Outside Jobs Needed? <ul><li>Such as Cron Jobs, Backups, Push Notifications, etc…</li></ul>
</li>
<li>Consider Prices - Bandwidth and Storage</li>
<li>Consider Developer Team’s Comfort Level</li>
<li>Develop Abstracting User Experience From Data Layer</li>
</ul><p><b>Build a Custom Web App</b></p><p><strong>Virtual Machine Options</strong></p><ul>
<li><a href="https://aws.amazon.com/ec2/">Amazon EC2</a></li>
<li><a href="https://www.linode.com/?r=97e09acbd5d304d87dadef749491d245e71c74e7">Linode</a></li>
<li><a href="https://m.do.co/c/255904441a32">Digital Ocean</a></li>
</ul><p><strong>Web App Options</strong></p><ul>
<li><a href="https://kubernetes.io/">Kubernetes</a></li>
<li><a href="https://www.docker.com/">Docker</a></li>
<li><a href="https://www.heroku.com/">Heroku</a></li>
</ul><p><strong>Database Options</strong></p><ul>
<li><a href="https://www.mysql.com/">MySQL</a></li>
<li><a href="https://mariadb.org/">MariaDB</a></li>
<li><a href="https://www.postgresql.org/">PostgreSQL</a></li>
<li><a href="https://www.mongodb.com/">MongoDB</a></li>
<li><a href="https://redis.io/">Redis</a></li>
</ul><p><strong>Programming Options</strong></p><ul>
<li><a href="http://php.net/">PHP</a></li>
<li><a href="https://nodejs.org/en/">Node.js</a></li>
<li>
<a href="https://docs.microsoft.com/en-us/dotnet/csharp/">C#</a>and <a href="https://dotnet.microsoft.com/apps/aspnet/apis">ASP.NET Web APIs</a>
</li>
<li><a href="https://www.ruby-lang.org/en/">Ruby</a></li>
<li><a href="https://elixir-lang.org/">Elixir</a></li>
</ul><p><strong>Swift Options</strong></p><ul>
<li>
<a href="https://vapor.codes/">Vapor</a> -<a href="https://learningswift.brightdigit.com/vapor-swift-backend-review/?utm_medium=web&amp;utm_source=empower-apps-show"> Review</a>
</li>
<li><a href="https://www.kitura.io/">Kitura</a></li>
<li><a href="https://perfect.org/">Perfect</a></li>
</ul><p><strong>Server Software Options</strong></p><ul>
<li><a href="https://www.iis.net/">IIS</a></li>
<li><a href="https://www.nginx.com/">Nginx</a></li>
<li><a href="https://httpd.apache.org/">Apache</a></li>
</ul><p><strong>Other Software Considerations</strong></p><ul>
<li><a href="https://www.cloudflare.com/">Cloudflare</a></li>
<li><a href="https://newrelic.com/">New Relic</a></li>
<li><a href="http://supervisord.org/">Supervisor</a></li>
</ul><p><b>Mobile Backend As A Service</b></p><ul>
<li><a href="https://www.sashido.io/">Parse</a></li>
<li>CloudKit</li>
<li>Firebase<ul>
<li>Using Multiple Services </li>
<li>
<a href="https://restfulapi.net/">REST API</a> vs <a href="https://graphql.org/">GraphQL</a>
</li>
</ul>
</li>
</ul><p>Music by <a href="https://icons8.com/music/author/roman-bulakhov">Roman Bulakhov</a> from <a href="https://icons8.com/music">Fugue</a></p><p><b>Full Transcript</b></p><p>[00:00:00] <strong>Erik Gillespie (Host): </strong>Hi Leo, it's me. Again. </p><p>[00:00:01] <strong>Leo Dion (Host): </strong>Hey, Eric. Glad to have you on to help host this episode. So today we're going to talk about back-end and cloud services for your IOS app. And I think first we should talk about when you should need a back-end or cloud service because I don't think it's needed in every absolute case when it comes to an IOS app or any mobile app.</p><p>[00:00:25] <strong>Erik Gillespie (Host): </strong>Yeah, I'm really curious to hear what your ideas are on this. </p><p>[00:00:27] <strong>Leo Dion (Host): </strong>So one thing to consider is there's a lot you can get away with without even doing cloud services. The thing with an IOS app is if you're storing your data in something that is like iCloud or in a lot of cases people really don't need the cloud to store their data. They can just sort on their phone itself. I think often times when we think about building an app that's something to think about is like do you really need this stored in the cloud and if you maybe can provide a manual mechanism to backup the data into some sort of iCloud storage as a file that saves a lot of trouble and saves you a lot of time and money quite frankly when you're building your mobile app. And then that way you don't really need a cloud service or a back-end service in a lot of cases. </p><p>[00:01:15] <strong>Erik Gillespie (Host): </strong>What are some situations where you think it's okay to go with a back-end service or on the flip side choose to only or mostly store things directly on your users phones. </p><p>[00:01:27] <strong>Leo Dion (Host): </strong>I think anything that's privacy sensitive. I think you should definitely just store on the phone locally because that's a whole other headache you having to deal with if you're worried about that stuff being stored in the cloud and if it's very simple stuff if it's things that they just need on their phone and if they lose it, it's not the end of the world I think it's totally legitimate to only store that stuff on the phone. Also, if you're using any third party apis in other words. Like let's say you're using Twitter or YouTube or some other API where you're not really storing data. Data that's being stored is essentially being stored in this third party structure than it's not really necessary because you can just use that third party API as your database in many ways.</p><p>[00:02:06] I'll just tell you one case I built an app for nurses and doctors to do continuing education for their career and all that data was just stored in core data, which is essentially a SQL lite database abstraction layer. And so all that stuff was sort of essentially in SQL and it was all sort of locally and there was just a simple option. They don't have the budget for it. They didn't have the timeline for it either. So the simple way we did it is we just have a manual backup process that you can run and it essentially creates a zip file of this data stored as a Json or JavaScript object notation file. And so if they wanted to back up they can just sort it in iCloud and if they ever wanted to restore it they can always restore it back on their iPhone. Where I think a back-end service and a cloud service is really helpful is if you're going to have it available on multiple devices .So for instance I'm a big user of Bear, which is an awesome note taking app that's available on all Apple devices and they use kind of combination iCloud and CloudKit they store their stuff in the back end and then that way if I pull up my notes on a Mac or on my iPad or my iPhone. I always have it accessible because it's all stored in the cloud. I think that's where something like a back-end service is really useful. </p><p>[00:03:19] <strong>Erik Gillespie (Host): </strong>Like when you need to synchronize data across multiple devices </p><p>[00:03:22] <strong>Leo Dion (Host): </strong>Exactly. Yep. So I think that's really where it's really nessecary. As we get into this we'll talk about complexity of like data in any sort of like back-end stuff for notifications ,things like that, that's where we really are going to want to look at having a stuff stored in the cloud somehow </p><p>[00:03:37] <strong>Erik Gillespie (Host): </strong>gotcha. So what are some things to consider when you decide that you do need back-end storage?</p><p>[00:03:42] <strong>Leo Dion (Host): </strong>One thing to consider is timeline and budget and specifically what is the purpose of this app? Is this just a simple MVP or is it more of a long-term app that needs to be well architected when I first starts off? Because if it's an MVP, use something that you know how to use that's easy, that's simple and that's cheap and just get it done and have something that is usable and can be tested by your audience and seeing whether it works according to what you're testing as far as the app's value to the customers.</p><p>[00:04:15] <strong>Erik Gillespie (Host): </strong>Just going to ask if you could briefly explain what you mean by MVP. </p><p>[00:04:18] <strong>Leo Dion (Host): </strong>So by MVP, I mean most viable product if you're familiar with like Lean Startup methodology. So you're just proving to whether this is a product that your customers are actually going to want. And so you're just getting something quickly out there that essentially works and that you can see whether this is something customers want or you need to pivot or you need to change something or something like. Does That that  make sense? </p><p>[00:04:39] <strong>Erik Gillespie (Host): </strong>Yeah, like a bare-bones version of like the basic features that you think that your customers or your users want exactly. </p><p>[00:04:46] <strong>Leo Dion (Host): </strong>Yep. </p><p>[00:04:46] <strong>Erik Gillespie (Host): </strong>Okay. </p><p>[00:04:47] <strong>Leo Dion (Host): </strong>Otherwise if you're building like an Enterprise app for a big Fortune 500 company, you probably are more likely going to want to build something a little bit more robust and customizable. That doesn't necessarily rule out some of the more cheaper options, but it's just something to consider is what do you want to work with in the long term because it's going to be used for quite a while. I think another thing to consider is when you're developing the iOS end of things and you're writing your Swift or Objective-c code to talk to this back-end make sure you have some healthy abstraction with your API communication so that way in case you pivot and use a different service at some point that that's not a big deal to what you view or what you're showing the user on the front end if that makes sense.</p><p>[00:05:27]<strong>Erik Gillespie (Host): </strong> I think so. So do you recommend doing some user-focus design and come up with the kind of data that your users need and then work your way back towards how you would need to store that in some kind of a back-end storage.</p><p>[00:05:40] <strong>Leo Dion (Host): </strong>Yeah, absolutely in an earlier episode. I believe it was episode number 6. We talked about project estimation and one of the first things I do when I have workout app is almost like a little MVP in a way is I build out the storyboard the UI of the app and essentially fake the data to make sure that that data is what the customers want and then go backwards which is exactly what you're saying. So get your UI because that's the most important thing that the users are going to see get that stuff settled and ready before you go in and build the back end in some cases. I think that's a useful rule </p><p>[00:06:16] <strong>Erik Gillespie (Host): </strong>right on. </p><p>[00:06:16] <strong>Leo Dion (Host): </strong>So another thing to consider is what devices you support. Are you only supporting Apple devices - In which case we'll talk about the more Apple centered back ends. Are you also going to support the web? Are going to support Android? Are going to support Windows and Linux desktops? Are you going to support internet of things? Because that all Is something to consider when you're looking at different backgrounds, which we'll talk about in a little bit. And then the other thing to think about is the complexity or simplicity of your queries, which is essentially when you're asked for data back or the data itself.</p><p>[00:06:50] How complex and simple is it? Because some things especially relational data is best done through some sort of SQL database when in  some cases you might be better off with like a document storage type database and all the various other nosql or other types of data structures that you can do with a database so that's something also to keep in mind.</p><p>[00:07:09] <strong>Erik Gillespie (Host): </strong>Okay. And so if I'm understanding correctly some other thing ways that you could approach that is do you need to aggregate your data or you do you need to create filters and view it in a lot of different ways and combine your data set? Is that close? </p><p>[00:07:23] <strong>Leo Dion (Host): </strong>Yeah, that's exactly it. </p><p>[00:07:25] <strong>Erik Gillespie (Host): </strong>Okay, and then on the simple side, it would be I need to look up a user with this ID. I need to look up, you know the single record with this ID or something along those lines. </p><p>[00:07:33] <strong>Leo Dion (Host): </strong>Yeah, exactly. Are you willing to just kind of offload a lot of the complexity of a good query over to the device like your iPhone or is it important to have that stuff on the server and done on the server instead? That's really the question asked. </p><p>[00:07:47] <strong>Erik Gillespie (Host): </strong>Okay. </p><p>[00:07:47] <strong>Leo Dion (Host): </strong>Another thing is do you need any sort of like outside communication or outside jobs, like cron jobs essentially scheduled jobs to be run on a periodic basis. Doing backups - that's another thing we could talk about because that stuff doesn't necessarily come with a lot of the more track cloud level databases that we're going to talk about.</p><p>[00:08:09]<strong>Erik Gillespie (Host): </strong> One of the ideas there is that the user does something that creates data and then you need to be able to do something with that data whether or not they have their phone on. </p><p>[00:08:18] <strong>Leo Dion (Host): </strong>Yes, exactly. Just because you think you might need a Cron job doesn't necessarily mean you might need one. Because in a lot of cases you can just get away with like having the person when they run your app run a particular job that they haven't run in like several days.</p><p>[00:08:32] That's totally a reasonable way to get around not having access to cron jobs is just having the user do it automatically when they run the app. So that's always something to think about. That's just a way to get around the lack of the ability of having cron jobs and last but not least. I think the two other more important ones is what's your developer team comfort level like what's their expertise in that's going to matter a big deal because if their expertise is a .net shop, you probably are just better off having a Windows back end with SQL Server and C# just using like Web API and have at it. If you're already getting a decent price on your Azure instance go for it because that's what your team is an expert in. There's nothing wrong with that. So, you know it all depends. What's your team? What's your price? Because it definitely matters. Does That make sense?</p><p>[00:09:21] <strong>Erik Gillespie (Host): </strong>Yeah it does I mean let your developers the ones who are going to be supporting all of this do what they do best. Yeah, that sounds very empowering. </p><p>[00:09:28] <strong>Leo Dion (Host): </strong>Exactly. So let's talk about the different options. The first option we're going to talk about is probably the most customizable the most robust perhaps and that's just hosting your own server essentially and even that comes with different abstraction layers.</p><p>[00:09:42] So you can buy your own server and have a hosted at a site you can have a virtual machine which is what 99% of people do and get something through like AWS EC2 or Linode or DigitalOcean. I'm doing linode that's like five bucks a month super reasonable and if you listen to any other podcasts in the technical area, I'm sure you can get a really reasonable discount. They are very reasonably priced. You can go that route. </p><p>[00:10:04] If you want to go another layer of abstraction. There's something like Kubernetes. This is Google's thing, but it's open source. I believe even like AWS and Linode or DigitalOcean also host Kubernetes instances, and that's like a software layer of abstraction. I'm not an expert on kubernetes, but that sound about right Erik.</p><p>[00:10:23]<strong>Erik Gillespie (Host): </strong> I think so. I was just going to ask if you would mind explaining a little bit about what some of these are.</p><p>[00:10:28]<strong>Leo Dion (Host): </strong>I am not an expert at them, but they're just simply put it's another way to easily plug in your app into an infrastructure without the headache of setting up an entire machine essentially. People are big fans of kubernetes and for good reason, especially in the dev-op space but that's another layer of abstraction rather than just sending up a whole server essentially. </p><p>[00:10:48] There's of course Docker which is uses Kubernetes as well. And there's other container type instances that you can use. I've used Heroku as well. Heroku is fantastic. If you're just starting from scratch and want  something very little to try out with I highly recommend starting off with Heroku with that.</p><p>[00:11:05] You don't even need to know kubernetes or how to setup an HTTP host or any of that stuff. That's super super easy. And that's also something to consider as well and they're not that expensive. </p><p>[00:11:14] <strong>Erik Gillespie (Host): </strong>I haven't dived into a lot of the specific platforms that you just mentioned, but I'm a little bit familiar with Heroku and I know that some of these platforms I would project don't necessarily support all of the different types of data storage solutions that you might want to host.</p><p>[00:11:30] <strong>Leo Dion (Host): </strong>Or if they do they might charge them at a premium. I mean, that's  part of the problem If anything. And we'll get into that in a little bit.</p><p>[00:11:37] <strong>Erik Gillespie (Host): </strong>Research Is important and don't just pick one and then think it's going to be smooth sailing </p><p>[00:11:43] <strong>Leo Dion (Host): </strong>right like with a virtual machine. You pretty much can put whatever you want to put on it. That shouldn't be a big deal because you have a blank slate to do whatever you want with but with Kubernetes or Heroku you're going to want to look at what databases they actually support. </p><p>[00:11:56] Well, let's just get into like the different database structures you could do you could do like a traditional SQL database like MySQL or Mariadb postgres or if you're doing Microsoft, you have SQL server or if you're really, you know, you're doing some Enterprise and you're a masochist you could always do Oracle</p><p>[00:12:14]<strong>Erik Gillespie (Host): </strong> and have a lot of money. </p><p>[00:12:15] <strong>Leo Dion (Host): </strong>Yeah, exactly. So those are options if you want a more of like a SQL relational database type structure. That's what I like to go with. That's what I'm used to and despite dabbling in nosql I've always found that I almost want to go back home to SQL when it comes to database structure because that's how I think of stuff - in real a relational ways the problem with those is that. And to be more expensive but that's always an option. Heroku has a free option with postgres, which is really nice. If you're doing something small and just want to do a SQL database. </p><p>[00:12:45] <strong>Erik Gillespie (Host): </strong>Yeah, that seems like it would work with the MVP approach very very well. </p><p>[00:12:49] <strong>Leo Dion (Host): </strong>You could always do something like Mongo if you want something more loose and document-based there's redis of course and other key value type database structures as well.</p><p>[00:12:57] So those are your options when it comes to data storage as far as the database is concerned. Programming language again, what is your developer team familiar with: just stick with like PHP? That's still pretty popular; ruby's very popular; nodejs; if you're a .Net shop. There's always C sharp. You can run on that and luckily for us Swift developers. We have a plethora of options right now. </p><p>[00:13:18] There's Perfect; if you're on the Enterprise side of things and we want to stick with Swift I would recommend looking at Kitura by IBM - they're moving fast on that. If you want something more community-based than I would highly recommend Vapor which is what I've worked with and it's really awesome and easy to set up both on development when it comes to xcode or if you're setting it up on a Ubuntu I got Vapor set up on Ubuntu box over on Linode and that worked fantastic. So that's something can consider again. What is your developer team want to do? What's their toolset? What are they familiar with you're going to go find with any of those options.</p><p>[00:13:55] When it comes to running your HTTP server, you have your choice with like Apache which has been around for forever. If you're doing dotnet there's IIS, of course what's really grown in popularity in the last 10 years is nginx because it's so simple and there's a great Community out there and it's much simpler than Apache and that's always something to look at as well. Did I cover everything you can think of as far as server, database, programming language, and abstraction?</p><p>[00:14:20]<strong>Erik Gillespie (Host): </strong> I think in regards to picking a language as well. If you don't have a team then these popular ones are also ones that you can look out for if you're looking for Freelancers to do some one-time development for you. </p><p>[00:14:32] <strong>Leo Dion (Host): </strong>Yes, and if you're looking for a Swift developer who's worked with Vapor contact me </p><p>[00:14:37] <strong>Erik Gillespie (Host): </strong>nice </p><p>[00:14:38] <strong>Leo Dion (Host): </strong>because I've worked with vapor and it's a really fun framework to work with if you're already a Swift developer.</p><p>[00:14:43] We've talked about the main stuff you need but then you're going to need some sort of monitoring security and backups and things like that and that's also something to consider. What I set up to get the app working on Ubuntu for Vapors is I used supervisor which essentially runs the app so that way it can be tunnelled through nginx through the main server and supervisor is really good.</p><p>[00:15:04] If you're looking for security or a CDN or things like that, you definitely want to look at cloudflare. They're pretty reasonable for what you can get for free from them. I would highly recommend checking them out. I don't know if New Relic is specifically PHP related but New Relic is really good for monitoring when it comes to your app.</p><p>[00:15:21]<strong>Erik Gillespie (Host): </strong> I recommend actually testing all of these out. So whichever one you decide actually try it out and make sure that for any kind of security or monitoring that you're able to not just read and understand how to use these tools. You can use them and that they work the way that you think and if you're doing like database restores and recovery and security that you're testing those really well. This is an area of your infrastructure that needs to be pretty rock solid or your entire application will just go down and be unavailable </p><p>[00:15:50] <strong>Leo Dion (Host): </strong>That's a really good point Erik. So some of the advantages of hosting your own is the fact that you can customize everything down to the minutiae, I mean you basically have a whole machine that you can work with that is also the disadvantage because the burden is on you to make sure everything is set up correctly wear as a lot of these other services. They pretty much can take care of everything. All you need to do is write your app code and get your database setup. So that's something to think about. I think the good time to host your own is if you're building Enterprise or long-term application. If you're using something outside of the Apple domain, I think it's something I consider is just hosting your own server or having your own web app.</p><p>[00:16:29] And then if you're doing any sort of complex queries or complex data, definitely you want to take a look at setting up your own SQL database. And if you absolutely need backups or cron jobs or things like that you definitely want to take a look at hosting your own.</p><p>[00:16:43] I would not recommend hosting your own if you need a simple MVP or if you're doing this only on Apple devices or your data is fairly simple. Of course, this is all pertains to what's your price range? What's your developer team Comfort level and things like. That but those are things to consider.</p><p>[00:16:57] <strong>Erik Gillespie (Host): </strong>It sounds like basically if you have simple needs go with the simplest solution and then plan on scaling out from there according to the growth of your own needs. </p><p>[00:17:06] <strong>Leo Dion (Host): </strong>Exactly. And let's be quite honest with ourselves here quite often people are rewriting  web apps all the time. So especially in software nothing's written in stone.</p><p>[00:17:16] So I would definitely think long term but not too long term because in the very long term the stuff is going to be re-written quite frankly keep that in mind as well. I don't know how I put that but so it makes sense Erik. Let's talk cloudkit now, which is Apple's more or less back-end storage. CloudKit is essentially like an abstraction layer of object storage cloud based object data storage.</p><p>[00:17:41] It's a fairly simple to use if you're sticking with iOS it comes with push notifications so you have the ability to do that. It's completely native to Apple. So if you're running a Mac app or an iPad app or using an Apple Watch or Apple TV, it's really easy to do. It also includes a JavaScript component for the web.</p><p>[00:17:59] So you have that ability. If you're doing something web-based. However, there are some disadvantages. Right now, It's probably pretty difficult to use for Android. I say that because there is no like. It is Android use, you know, it's interesting. We talked in the previous episode about Apple's growth in the services space.</p><p>[00:18:17] It'll be interesting to see if they make any moves towards Android with CloudKit June with WWDC because you know if they're putting an iTunes on a Samsung TV, or they're putting Apple music on an echo you'd think they wouldn't mind putting cloudkit on Android, but we'll see about that. I think there's probably ways to get around that with Android.</p><p>[00:18:34] I'm not an Android developer, but I would think there's ways you can call the JavaScript API using Android or at the very least you could like say running ionic or Cordova app and just use JavaScript in that sense using cloudkit. And you know going to the desktop maybe if you're running an electron app, for instance, you might be able to just use cloudkitJS with that so that option is available but like I said there might be an uphill battle. </p><p>[00:18:59] <strong>Erik Gillespie (Host): </strong>Do you happen to know if the JavaScript API can be used from node? Or is it only from the browser? </p><p>[00:19:06] <strong>Leo Dion (Host): </strong>I don't know that that goes to the next point is like would you be able to like write an app on a Raspberry Pi using cloudkit JS? Like I have no clue about that. That's a really good question and somebody out there knows that right us back. We'd love to hear. </p><p>[00:19:18] Where it is an easy yes is if you're just going to target only Apple devices. Then I would say cloudkit is definitely what you want to go with and then if you don't need a lot of outside jobs, like I said, you probably could figure out how to write your app so that way you don't really need a crown job, or maybe you do automatic backups in the app itself. These are seriously powerful iPhones so really I wouldn't worry too much about straightening a user's iPhone when they have so much power, especially with these like newer iPhones. I think you're totally fine offloading some of the stuff onto the iPhone itself if your data is not too complex or your data or your queries aren't too complex when I wouldn't suggest using it is if you're not doing Apple only I have some hesitation about just depending on cloudkit JS for everything if you're not targeting only Apple devices. And if you absolutely absolutely need outside backups or outside cron jobs of some sort to be run and you're absolutely cannot do it on an iPhone or an iPad then you might want to consider not going with the cloudkit option if you're targeting especially slower devices or you really need to offload a lot of these queries or data is just way too complex to sort and cloudkit then you might want to not consider cloudkit in that case.</p><p>[00:20:50] Maybe we'll do a little history lesson. So I would say about five years ago six years ago the most popular one out there by far when it came to mobile backends was Parse. Parse then got bought out by Facebook and then Facebook essentially killed it. Now, they open sourced it so anybody could run their own Parse server, but out of the ashes of that came another startup called Firebase. And I don't know how many years it's been but a Firebase essentially got acquired by Google.</p><p>[00:21:20] And as far as what I've seen it's the most popular mobile backend as a service and actually backend as a service over all because of price probably but also that it's available on a plethora of devices. Erik, you've actually used Firebase, correct? </p><p>[00:21:36] <strong>Erik Gillespie (Host): </strong>I have and yeah on the surface, it seemed really really appealing and I've got to say right now I would be hesitant to use it in to any of my applications that might scale </p><p>[00:21:49] <strong>Leo Dion (Host): </strong>so could.explain a little bit about how Firebase works?</p><p>[00:21:52] <strong>Erik Gillespie (Host): </strong>You can think of it as a nosql database that stores everything that effectively as one giant JSON object; every single user if you have user records, if you have a Blog every single post, it's all going to be in one giant JSON structure and they have a very basic querying language that you can use to access data within that JSON structure, but it's not very robust and it's got a little bit better, but I think this typically ends up happening with a lot of NoSQL databases if you want complex querying capabilities typically you end up duplicating a lot of your data to make it a little bit easier so.</p><p>[00:22:26] <strong>Leo Dion (Host): </strong>Did you run into a lot of like map-reduce issues with Firebase? That's what I've run into when it comes to Mongo is like you end up having a lot of map-reduce and like that stuff can get really complicated really quick.</p><p>[00:22:39] <strong>Erik Gillespie (Host): </strong>Yep. So there's a lot of different ways that I needed to use this data that took a lot of consideration and to how to secure the data how to. So data how to do things efficiently and then also like you were suggesting how to actually manipulate all of the data once I do have it so that I can report it to the user in the correct way.</p><p>[00:22:59] <strong>Leo Dion (Host): </strong>Does Firebase allow you to offload a lot of that complex querying over to their servers you can pick they do have functions. So you can do things on the Firebase server as you would or you can run your own server. And so you can query the Firebase database manipulate the data on your own server and then send that to the users or.</p><p>[00:23:19] <strong>Erik Gillespie (Host): </strong>You can even access everything directly from the browser or your IOS app and then manipulate the data directly on the client device. The tough thing is Firebase does make it really easy to get started with a database and do some really cool real-time interactions with basic data sets. And so there is a strong appeal and I can understand why there's this popularity to it and it's really good as an introductory database.</p><p>[00:23:44] If you want to learn how to do real-time database integration in a web browser and you don't want to have to introduce like rest apis or making graphql or any other typical ways where you have to just create a bunch of extra code, In order to get access to data. Firebase is a great way to go about it.</p><p>[00:24:01] However from my experience if you're doing anything more than basic it gets really complicated really quick. So very early in this episode you mentioned the security is one of the concerns. If you have clients accessing the database directly and you don't have any server in the middle there. Then you have to start writing all of these different rules in Firebase in order to make sure that user X cannot access data that is exclusive to user Y that's really complicated and it's kind of like JavaScript but it's not quite JavaScript. So there's all these nuances that you have to learn about how to use it. </p><p>[00:24:34] Testing is also really challenging. So the way that you watch data is you watch it query URL. So you provide a path, to an object or a structure within your Json that you want to watch and anytime there's changes to that fire base will automatically stream that data to any of the affected clients. So you have to be concerned about the size of the data. So if you have let's say you have a user profile that has your username and an avatar and a bio you have to be mindful that if you want to just present in the navigation bar on any given page the name of a user that you only want to query for the name of the user otherwise you might be incurring a lot of extra downloads if the bio or that image change. So there's some performance impacts if you don't model and code your Firebase application correctly. </p><p>[00:25:22] <strong>Leo Dion (Host): </strong>So this sounds a lot like subscriptions and cloudkit. So in cloudkit you can do something like a subscription and listen to changes in the database for a particular user. Is it some similar to that and then you get like a push notification with subscriptions essentially?</p><p>[00:25:37] <strong>Erik Gillespie (Host): </strong>Yeah exactly the Firebase realtime database doesn't use browser or client push notifications. So you don't have to do the like I allow this application or this website to push notifications to me.</p><p>[00:25:54] <strong>Leo Dion (Host): </strong>Right</p><p>[00:25:54] <strong>Erik Gillespie (Host): </strong>and it does that really well. So the data syncing does work marvelously. However, sometimes it can take a long time to sync data if you're watching an entire user record and they change their profile. Meanwhile, all of your users who are in a chat room who only care about the username then may have to download this profile that is maybe like one kilobyte and until that is donethey don't actually see any changes to like a username or anything like that. </p><p>[00:26:28] <strong>Leo Dion (Host): </strong>Yeah. That's a really good point. </p><p>[00:26:29] <strong>Erik Gillespie (Host): </strong>Yeah, so you have to be very careful about those subscriptions or what you're listening to.</p><p>[00:26:34] <strong>Leo Dion (Host): </strong>Now cloudkit has the idea of like a private database, public database and a shared database you have somebody like that like CloudKit? Or  is it all  just kind of like a database which is kind of the more traditional way of doing things?</p><p>[00:26:46]<strong>Erik Gillespie (Host): </strong> Firebase has a few different storage options might be able to guess this since they store in the real-time database everything as JSON you have all of the same limitations of what you're able to store so binary data is automatically out.</p><p>[00:27:00] So if you need to store files PDFs or images or anything like that, That will go into a different Firebase service. So you have to then code to separate ways to potentially get access to the data that you need which can have its benefits. However, it can also seem a little cumbersome. The last point is the querying capabilities.</p><p>[00:27:19] They've gotten better. However, there's still really basic and definitely not as powerful as what you can do with like an SQL database. I would say if you have any kinds of reporting needs or you need to aggregate lots of data and then present it to the user in. One, two, three, or more different ways than you may need to take that into consideration when you're modeling your data and potentially create duplications of your data, or maybe just reconsider using Firebase for that kind of reporting need.</p><p>[00:27:50] <strong>Leo Dion (Host): </strong>Okay, that makes total sense. </p><p>[00:27:52] <strong>Erik Gillespie (Host): </strong>It does seem really really popular but the more I dig into it like there are some companies using it but not a whole lot of like enterprise-grade companies that are really relying on Firebase. So that is something to consider as well. And I would recommend considering that not just for Firebase.</p><p>[00:28:09] But any kind of storage solution that you're going to use see if there are any big companies is using it if you want something that's rock solid and stable and gets a lot of support you can. Be sure that these big companies who have lots of lots of time and money to spend will have taken the time to research and vet these solutions and so you can offload some of the work on to them and consider it a little bit safer to go with a solution If you have like one of these Fortune 500 companies using it.</p><p>[00:28:37]<strong>Leo Dion (Host): </strong>What do you think of Fortune 500 company is using for their back-end?</p><p>[00:28:41]<strong>Erik Gillespie (Host): </strong> I've seen a lot of them end up hosting their own. </p><p>[00:28:44] <strong>Leo Dion (Host): </strong>Yes. </p><p>[00:28:44] <strong>Erik Gillespie (Host): </strong>I am seeing them shift more towards cloud based Solutions but what they tend to do is do a lot of self manage types of solutions. </p><p>[00:28:51] <strong>Leo Dion (Host): </strong>Yep.</p><p>[00:28:52] <strong>Erik Gillespie (Host): </strong>Not necessarily like a Heroku but maybe like AWS or there's other what are considered enterprise-grade.</p><p>[00:28:58] <strong>Leo Dion (Host): </strong>When it comes to your Fortune 500, If they're going to go Cloud, they usually go AWS, Azure, IBM - typically those are those are the big three Cloud platforms that I've heard of maybe maybe Google if they've been given enough incentives to do that as well.</p><p>[00:29:13] I don't see a lot of Firebase. Now, I've also seen the case where. You might use multiple database systems. So maybe you have like MySQL for some of your data. And then maybe you'll have like a real time data using Firebase. Is that a use case you've seen a lot of?</p><p>[00:29:27] <strong>Erik Gillespie (Host): </strong>I haven't seen a lot of it, but it was it is something that I would consider. I think graphql makes that a little bit easier because you can aggregate data from a lot of different sources more easily with a rest API you basically have to do all the coding yourself. So if you want to use Firebase and postgres, for example, then you create an API and then your apis server-side code will connect to both of those places pull down the data they need and then manipulate it however and then spit it back out to you so definitely very viable something to consider.</p><p>[00:29:57] <strong>Leo Dion (Host): </strong>Could you explain a little bit what graphql is as opposed to rest API</p><p>[00:30:01] <strong>Erik Gillespie (Host): </strong>With a rest API, typically you have a URL or resource on the web and you will fetch that and download one piece of data with graphql from the client you can provide a multitude of data that you want to access and then a graphql will take on the responsibility of figuring out how to quickly get and combine all of that data and then get it to you. </p><p>[00:30:31] <strong>Leo Dion (Host): </strong>Yeah, I think Rest API kind of is a very simple as far as what you can query. It's meant to be like that. It's always been structured in that way.</p><p>[00:30:39] So you can say I want to get user with ID 20 and I'll just do it and then maybe you can maybe attach some filters and things but it's really it's very simple as far as that where I think like with graphql which is by Facebook. They've done is they've created a weight so that the client can send a complex query essentially in some sort of JavaScript object notation format.</p><p>[00:31:01] And then the server has the responsibility of figuring out how that query is to be run and how that query data is supposed to be outputted to the user. Is that correct? </p><p>[00:31:11] <strong>Erik Gillespie (Host): </strong>Yeah for my understanding. Yeah and it introduces some alternative concerns with rest. You have a single resource that you're trying to fetch so it's pretty easy to lock down data. With graphql, then you have to consider now a user is potentially queering for anything that they want because you're exposing this query API to potentially anyone. </p><p>[00:31:31] <strong>Leo Dion (Host): </strong>Yes. </p><p>[00:31:31] <strong>Erik Gillespie (Host): </strong>So how do you protect all of this data? How do you make sure that they don't come up with a query that is going to just totally bog down your server or get access to data that they're not supposed to have access to. How do you actually present errors when they occur?</p><p>[00:31:45]<strong>Leo Dion (Host): </strong>Anything else you want to talk about as far as Firebase is concerned?</p><p>[00:31:47]<strong>Erik Gillespie (Host): </strong> I would recommend using it for very very simple situations where you have data that is not going to change in structure over time, data that's generally flat and when you don't have to do lots of complex queries. So on the flip side of that if you have lots of relational data you have to do a lot of reporting you have lots of large Fields like files to download that might be text-based so you'd be inclined store them in Jason or you have very complex security needs then you might want to consider some alternatives to Firebase. </p><p>[00:32:19] <strong>Leo Dion (Host): </strong>Yeah, because I feel like Firebase is the most popular it's the hotness and from what you've told me with your story is like it's not necessarily a good fit for most things. Is that correct? </p><p>[00:32:31] <strong>Erik Gillespie (Host): </strong>I think most people when they're building applications have grand ideas of them scaling to lots of people being used for very big things Firebase is very appealing for small projects. However, from what I've seen they get really complicated really quick. So as your needs change firebase might not be able to adapt and grow with you and can be very difficult to continue to support. </p><p>[00:32:55] <strong>Leo Dion (Host): </strong>I think it's a really good point Erik. So always consider your developer team your price when you're doing your backend and help simple. Can you make your data? How much can you get away without a lot of the complexity of a home-built server?</p><p>[00:33:07] Because the backend they're great. If you don't mind dealing with the hosting and all their headache and also even if you do a custom back-end consider how much of that can be abstract and you're willing to get away without having to maintain a server all on your own. If you're doing anything in the Apple space and you already have a team of Swift developers I would recommend looking at vapor at the very least for your back end. But if your team is mostly .net Developers or mostly Ruby developers or PHP or Elixir or go or rust or whatever one of the plethora of languages out there consider the comfort of your developer team. If you're just doing mostly Apple apps so stuff for the Mac iPad iPhone TV watch whatever consider cloudkit. With Cloudkit, you can get away with a lot. It's very very cheap. Apple practically gives it away for free. You're hardly ever going to run into the limit and it's really easy to use when you're working with Apple devices and you're already programming in Swift or Objective-c. </p><p>[00:34:00] And then as far as Firebase, it's great if you're doing really simple data or you're working with a really simple MVP but really look at the limitations before you jump into it. It might not be a good fit for what you're looking for. And you know, if you need to pivot do it early it. Don't do it when it's too late, if you feel like your data isn't a good fit for whatever you end up picking pivot as quickly as you can because you're not going to want to be burnt out by constantly trying to get your data to fit and in particular space.</p><p>[00:34:28] <strong>Erik Gillespie (Host): </strong>Yeah. Yeah. I totally agree with that </p><p>[00:34:30] <strong>Leo Dion (Host): </strong>cool. So yeah. Thank you so much for coming on again and telling your story about Firebase and we will talk to you later. </p><p>[00:34:37] <strong>Erik Gillespie (Host): </strong>Alright take it easy. Thanks for having me.</p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sun, 10 Feb 2019 01:00:00 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/ffcb9fc1/b0afd7df.mp3" length="16687333" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>2080</itunes:duration>
      <itunes:summary>In this episode, Leo talks different backend technologies to use when building an iOS app or any other Apple device: when you need a cloud service, running on your own server, cloudkit, firebase, and more...</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks different backend technologies to use when building an iOS app or any other Apple device: when you need a cloud service, running on your own server, cloudkit, firebase, and more...</itunes:subtitle>
      <itunes:keywords>apple, iOS, mobile apps, cloud, firebase, cloudkit, enterprise, mvp, aws, linode, digital ocean, kubernetes, docker, heroku, mysql, mariadb, postgresql, mongodb, redis, php, nodejs, C#, ruby, elixir, vapor, kitura, perfect, iis, nginx, apache, cloudflare, new relic, supervisor</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Apple 2019</title>
      <itunes:episode>7</itunes:episode>
      <itunes:title>Apple 2019</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">fd556ba6-07a9-4658-adb2-7224c341dfca</guid>
      <link>https://share.transistor.fm/s/3ee56c45</link>
      <description>
        <![CDATA[<p><b>Previous Episodes </b></p><ul>
<li><a href="http://www.empowerapps.show/episodes/iphone-xs-vs-iphone-xs-max-vs-iphone-xr">iPhone Xr</a></li>
<li><a href="http://www.empowerapps.show/episodes/low-cost-macs-macbook-air-mac-mini">Low-Cost Macs</a></li>
</ul><p><b>Slowing iPhone Sales</b></p><ul>
<li>China<ul>
<li><a href="https://www.cnbc.com/2019/01/08/samsung-q4-guidance-.html">Samsung 4th Quarter Guidance</a></li>
<li><a href="https://500ish.com/apples-precarious-and-pivotal-2019-f4f8cea3993a">Apple’s Precarious and Pivotal 2019 - M.G. Siegler</a></li>
<li><a href="https://overcast.fm/+CdQfKRJo/37:31">Apple Revises Guidance - Accidental Tech Podcast</a></li>
<li><a href="https://stratechery.com/2017/apples-china-problem/">Apple's China Problem - Strechery</a></li>
</ul>
</li>
<li>Decrease in Computer Sales<ul><li><a href="https://www.weforum.org/agenda/2016/04/4-charts-that-explain-the-decline-of-the-pc/">4 Charts That Explain The Decline in PC </a></li></ul>
</li>
<li>SmartPhones Plateau / Mature<ul>
<li><a href="https://www.cnbc.com/2018/02/23/smartphone-sales-are-slowing-and-here-are-two-key-reasons-why.html">Smartphone Sales Are Slowing</a></li>
<li><a href="https://www.imore.com/iphoneslow">Apple's Battery Program</a></li>
</ul>
</li>
<li>Growth in Services<ul><li><a href="https://www.statista.com/chart/14629/apple-services-revenue/">Apple's Servies Segment Continues to Grow</a></li></ul>
</li>
</ul><p><b>Apple and Business</b></p><ul>
<li>How does Apple balance quality and price in the PC Market?</li>
<li>How will Apple tailor their growing services segment for businesses? </li>
</ul><p><b>Apple and Developers</b></p><ul>
<li>Will Apple encourage more services in the cloud?<ul>
<li><a href="https://aws.amazon.com/">Amazon Web Services</a></li>
<li><a href="https://aws.amazon.com/lambda/">AWS Lambda (Server-Less)</a></li>
<li><a href="https://cloud.google.com">Google Cloud Platform</a></li>
<li><a href="https://azure.microsoft.com/en-us/">Microsoft Azure</a></li>
<li><a href="https://developer.apple.com/icloud/cloudkit/">Apple CloudKit</a></li>
</ul>
</li>
<li>Will Apple encourage more services for developers?<ul><li><a href="https://www.macstadium.com">MacStadium</a></li></ul>
</li>
<li>Will Apple offer some sort server-side services?<ul>
<li><a href="https://vapor.codes">Vapor</a></li>
<li><a href="https://perfect.org">Perfect</a></li>
<li><a href="https://www.kitura.io">Kitura</a></li>
</ul>
</li>
</ul><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Previous Episodes </b></p><ul>
<li><a href="http://www.empowerapps.show/episodes/iphone-xs-vs-iphone-xs-max-vs-iphone-xr">iPhone Xr</a></li>
<li><a href="http://www.empowerapps.show/episodes/low-cost-macs-macbook-air-mac-mini">Low-Cost Macs</a></li>
</ul><p><b>Slowing iPhone Sales</b></p><ul>
<li>China<ul>
<li><a href="https://www.cnbc.com/2019/01/08/samsung-q4-guidance-.html">Samsung 4th Quarter Guidance</a></li>
<li><a href="https://500ish.com/apples-precarious-and-pivotal-2019-f4f8cea3993a">Apple’s Precarious and Pivotal 2019 - M.G. Siegler</a></li>
<li><a href="https://overcast.fm/+CdQfKRJo/37:31">Apple Revises Guidance - Accidental Tech Podcast</a></li>
<li><a href="https://stratechery.com/2017/apples-china-problem/">Apple's China Problem - Strechery</a></li>
</ul>
</li>
<li>Decrease in Computer Sales<ul><li><a href="https://www.weforum.org/agenda/2016/04/4-charts-that-explain-the-decline-of-the-pc/">4 Charts That Explain The Decline in PC </a></li></ul>
</li>
<li>SmartPhones Plateau / Mature<ul>
<li><a href="https://www.cnbc.com/2018/02/23/smartphone-sales-are-slowing-and-here-are-two-key-reasons-why.html">Smartphone Sales Are Slowing</a></li>
<li><a href="https://www.imore.com/iphoneslow">Apple's Battery Program</a></li>
</ul>
</li>
<li>Growth in Services<ul><li><a href="https://www.statista.com/chart/14629/apple-services-revenue/">Apple's Servies Segment Continues to Grow</a></li></ul>
</li>
</ul><p><b>Apple and Business</b></p><ul>
<li>How does Apple balance quality and price in the PC Market?</li>
<li>How will Apple tailor their growing services segment for businesses? </li>
</ul><p><b>Apple and Developers</b></p><ul>
<li>Will Apple encourage more services in the cloud?<ul>
<li><a href="https://aws.amazon.com/">Amazon Web Services</a></li>
<li><a href="https://aws.amazon.com/lambda/">AWS Lambda (Server-Less)</a></li>
<li><a href="https://cloud.google.com">Google Cloud Platform</a></li>
<li><a href="https://azure.microsoft.com/en-us/">Microsoft Azure</a></li>
<li><a href="https://developer.apple.com/icloud/cloudkit/">Apple CloudKit</a></li>
</ul>
</li>
<li>Will Apple encourage more services for developers?<ul><li><a href="https://www.macstadium.com">MacStadium</a></li></ul>
</li>
<li>Will Apple offer some sort server-side services?<ul>
<li><a href="https://vapor.codes">Vapor</a></li>
<li><a href="https://perfect.org">Perfect</a></li>
<li><a href="https://www.kitura.io">Kitura</a></li>
</ul>
</li>
</ul><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Sat, 26 Jan 2019 23:50:00 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/3ee56c45/f3223e9b.mp3" length="9844600" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>1225</itunes:duration>
      <itunes:summary>In this episode, Leo talks about the current state of Apple in 2019 and how it affects businesses and developers: the slow down in smartphone sales, the future for macs, services and business, the cloud and developers, and more...
</itunes:summary>
      <itunes:subtitle>In this episode, Leo talks about the current state of Apple in 2019 and how it affects businesses and developers: the slow down in smartphone sales, the future for macs, services and business, the cloud and developers, and more...
</itunes:subtitle>
      <itunes:keywords>technology, apple, iPhone, smartphone, china, PC, AWS, Cloud, Google, Azure, Devops, Swift, Vapor, IBM,</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Project Estimation</title>
      <itunes:episode>6</itunes:episode>
      <itunes:title>Project Estimation</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">6d3721be-4030-49fa-975c-c82dd326b4f9</guid>
      <link>https://share.transistor.fm/s/00603d96</link>
      <description>
        <![CDATA[<ul>
<li><a href="https://learningswift.brightdigit.com/swift-development-tips-speculid-tryswift/">Speculid Talk</a></li>
<li>Development Alternatives<ul>
<li><a href="https://ionicframework.com/">Ionic</a></li>
<li><a href="https://facebook.github.io/react-native/">React Native</a></li>
<li><a href="https://visualstudio.microsoft.com/xamarin/">Xamarian</a></li>
<li><a href="https://cordova.apache.org">Cordova</a></li>
<li><a href="https://www.nativescript.org/">NativeScript</a></li>
</ul>
</li>
<li>Continuous Integration for iOS Options<ul>
<li><a href="https://www.macstadium.com/">MacStadium</a></li>
<li><a href="https://travis-ci.org">Travis-CI</a></li>
<li>
<a href="https://jenkins.io">Jenkins</a> </li>
<li><a href="https://www.macincloud.com/">MacinCloud</a></li>
<li><a href="https://developer.apple.com/library/archive/documentation/IDEs/Conceptual/xcode_guide-continuous_integration/index.html">Xcode Server</a></li>
<li><a href="https://circleci.com/">CircleCI</a></li>
<li><a href="https://hockeyapp.net/">HockeyApp</a></li>
</ul>
</li>
</ul><p><b>Complete Transcription</b></p><p>[00:00:00] <strong>Theresa Jasko (Host): </strong>I feel like last time we had our podcast you've maybe done a few speaking engagements. </p><p>[00:00:06] <strong>Leo Dion (Host): </strong>I spoke at ArborMoon at the Ann Arbor Cocoaheads group about Try! Swift which is the conference, I went to Labor Day week. And then I also talked about Speculid which is a Mac App for developers that I've been working on for building graphics for apps. I just talked about how it works and kind of the guts of the challenges I faced building the app. </p><p>[00:00:31] <strong>Theresa Jasko (Host): </strong>Nice, So what is IOS development? </p><p>[00:00:34] <strong>Leo Dion (Host): </strong>IOS, of course, is the operating system for iPads and iPhones. So typically it's the process of coding, designing, testing, and packaging an app and delivering it in whatever way a customer would want.</p><p>[00:00:52] <strong>Theresa Jasko (Host): </strong>Yeah, so if someone's looking into doing that what kind of factors go into getting a quote for that kind of service.</p><p>[00:00:59] <strong>Leo Dion (Host): </strong>So really it depends on the features and kind of the timeline of the app. So faster timeline is going to mean a higher quote then integrating any sort of third party services. So if you're integrating something like Facebook or integrating any sort of special controls or sensors on the iPhone like motion controls then that's going to up your quote. And then the complexity of the data that's being used, especially if it's data that's going to be stored locally or remotely - there's going to be some complexity there and that will take take more time. </p><p>[00:01:40] Because that's essentially what we're talking about is quality and time the more you pay the more time it will take and the more higher quality will also mean a higher quote for those Services because that quality also takes time of course. So offline capabilities - not a lot of apps necessarily need that but a lot of apps want to have the ability to just having online and offline capabilities so syncing and things like that. Any sort of UI complexity and any UX complexity, chat, the amount or number of screens is a good indicator of how complex an app is going to be and how much the price is going to be. </p><p>[00:02:26] And then this is much more an issue on Android but as far as iOS is concerned, It's what operating system versions you support. What devices you support. So is this just an iPad app is it just an iPhone app is a support iOS 12, iOS 11 how far down the chain are you going and that usually factors into the price of the quote for developing an app.</p><p>[00:02:53] And also another thing to mention is in many cases we're thinking a green app, but starting an app from scratch that has its challenges but also picking up an app that's already been developed on has its challenges as well. So that's something to that will weigh into the quote of developing an IOS app.</p><p>[00:03:17] <strong>Theresa Jasko (Host): </strong>Yeah, so when you talk about like those factors just now is there like a common app that you could use it as an example of like kind of illustrating some of that stuff? Is there maybe like a weather app or something like when you talk about like UI ux complexity and things like that? I'm having a hard time envisioning what that means in real life.</p><p>[00:03:38] <strong>Leo Dion (Host): </strong>Sure. So the way I think about it is a lot of times customers depending on how much they want to do when it comes to getting requirements for an app have a pretty good idea of what screens they want. And so I usually get into the process of asking them - Okay, what does this app do? What are you trying to do? What is your end goal and then figure out - okay, we'll need a screen for this and a screen for that and then the screen will go to that. Then I'll start thinking about like different edge cases because we always have to think like what happens in this case what happens in that case. What I do is in spreadsheet will write out the different screens that an app will need in order for it to essentially work. </p><p>[00:04:26] For instance, we developed a nurse training app and that uses about four different tabs and probably each of those have different dialogues for adding credits for a nurse. And so we'll have say 12 screens in that app. Just kind of roughly and so that I look at the complexity how much data is being entered is it like one field, 2 fields, 3 Fields? How complex is that data? Is that data dependent on certain variables? Is there a certain range of acceptable values and then that factors into some of the UX that's involved or the user experience because I want to make sure that the user is walked through the app. Easily and knows what they need to do and it's intuitive.</p><p>[00:05:17] So I kind of rough guess how many hours that's going to be for each screen. We also talked about for instance with a brand new app, there's some setup time usually involved. And then for each screen, there's going to be testing involved say every week or two weeks so that gets added in as well.</p><p>[00:05:41] And then of course at the end, there's the issue of getting into the App Store assuming it's a app store app and there's always time involved there because you'll always find all sorts of issues when you get into App Store. There's also dependencies for their marketing or graphic design folks to make sure that they have the assets that are needed to get into the App Store.</p><p>[00:06:02] <strong>Theresa Jasko (Host): </strong>Hmm. Wow, do you find that when people approach you about getting a quote or something? Do they have a full understanding of the things that you're talking about are usually have to really kind of work with people to even explain that?</p><p>[00:06:17] <strong>Leo Dion (Host): </strong>Usually what I like to do is kind of do a rough tree of how the app is going to work. And then from there I'll go ahead and make estimates for each of those things. Sometimes I might do something like an initial consultation for a fee depending on how complex the app is. And then what I like to do early on in the project is have basically an app that doesn't work but at least has the UI and the workflow that they expect out of the app so that way early on in the process they're there confirming how the app is going to work eventually at some point. </p><p>[00:07:00] <strong>Theresa Jasko (Host): </strong>What are the things - you know what - let's say someone wants to do a development project and they get let's say three different quotes. What's the reasons you know, if the prices are kind of varying pretty significantly what could be different there? What would you be maybe missing out on if you go with the least expensive? </p><p>[00:07:23] <strong>Leo Dion (Host): </strong>Sometimes they are perhaps using services that might expediate the development process without really offering any ability to customize it later. Perhaps it's using some sort of different method besides building it native Apple like Swift or Objective-C. We can talk about the different methods for developing apps later. It's all kind of based on maybe an extensive experience or you know, just kind of taking shortcuts and things like that. There's some app building templates out there that people might be using as well which doesn't really fit with what they want. But really you're getting different quotes based on possibly the quality of work and just what features haven't been completely flushed out early in the process. </p><p>[00:08:20] <strong>Theresa Jasko (Host): </strong>Yeah, so when you say for instance that you won't be able to be updated later or something. Does that mean they kind of cobble something together? And then that's just kind of it and you can't add to it later? </p><p>[00:08:34] <strong>Leo Dion (Host): </strong>Yeah, that could definitely be the case in many ways. </p><p>[00:08:37] <strong>Theresa Jasko (Host): </strong>Do a lot of people like when they make an app want to update it later or is it kind of 50/50 or you know, like well, yeah, we made this and it's good enough and we just kind of let it lie.</p><p>[00:08:48] <strong>Leo Dion (Host): </strong>I think it's 50/50 but with a lot of at least with iOS you need to keep updating app if you're going to want people to use it when you come out with a new iPhone that's bigger or has a notch or uses a different design then you pretty much have to update your app. You can't get away with keeping on the App Store because Apple can just drop the app if it doesn't work on newer phones. </p><p>[00:09:15] <strong>Theresa Jasko (Host): </strong>Mhm. And so when you're saying people you maybe use like a template or something to say is it is it kind of like a square peg in a round hole thing where it's like, well we have this starting point and we're going to kind of make it work for you.</p><p>[00:09:26] <strong>Leo Dion (Host): </strong>Yeah, that's exactly what you could run into. If somebody could just be using like a template and they're not maintaining a they're not keeping it working and keeping it going. So when the new phones come around they haven't updated the template or they haven't updated the app. You're going to have to just come back to those people to update the app and your kind of dependent on them at that point.</p><p>[00:09:51] <strong>Theresa Jasko (Host): </strong>So you're saying you couldn't have somebody else come in and update it then. </p><p>[00:09:56] <strong>Leo Dion (Host): </strong>Well somebody else could but they're going to charge for whatever it takes to reconfigure that app. That might be outside of their wheel house. </p><p>[00:10:06] <strong>Theresa Jasko (Host): </strong>So what is the difference between starting from scratch like to me when I feel like when you start from scratch with something it's going to take longer than going to be more expensive. But then you're saying if you using a template or you know, kind of a starting point that somebody else is made then that can create problems later on too. So you ever start with a template or anything or do always kind of start from scratch? I've started with some templates before or at least started with other development projects and it really depends on that previous team and how well they did if they did a good job and structured their app well, then it might not be that big of a deal to pick it up. But if it's just cobbled together like what we're talking about then there could be some serious issues trying to bring that app in. And if it's old enough that it uses some old code that doesn't work anymore. That could be a serious issue for the new team that comes in and adds new features to the app. They might come to a conclusion that is some of the stuff is worth just burning down and starting from scratch. </p><p>[00:11:13] We've been kind of talking about different ways of going about it. Does that mean that there are different methods for developing apps for the iPhone? </p><p>[00:11:21] <strong>Leo Dion (Host): </strong>Yeah. So we kind of talked about some templates. There's app building templates are out there, but there's also a different methods that deviate from just doing it the Apple way so to speak. So there's what I like to call like the web development wrapper way of doing it and the building it in my own favorite language, but still make it a native way of doing it and they each have their advantages.</p><p>[00:11:48] So with the web development wrapper, that's typically something like Cordova or Ionic. Cordova was built by Adobe and essentially what it is is you build a web app. So you're just you doing regular HTML and things like that to build. The app and it's wrapped but you still have access to certain native features on that phone.</p><p>[00:12:14] So to the user it looks like just regular app out of the box, but to you the developer, you're actually just building a web page. There's so many questions as far as how to get something like that into the App Store that can sometimes be a challenge but if you do it, right, there's quite a few apps that are built using that technology</p><p>[00:12:39] <strong>Theresa Jasko (Host): </strong>what do you mean by native? </p><p>[00:12:41] <strong>Leo Dion (Host): </strong>When I say at least looking native is an app that doesn't look like something that's hacked together using custom components or packaged like it doesn't use like actual apple design elements that people typically use when they build an app.</p><p>[00:13:01] So like I've been on certain apps that have like a weird wood grain or it has buttons that don't look quite right or has drop down menus, which you don't really see in a lot of Apple apps and that kind of gives a good indication that use some custom software to build it. Unless of course it's designed well, and it uses kind of some of the third-party tools will talk about in a little bit.</p><p>[00:13:26] So like with a web development wrapper, sometimes it'll just have a weird color scheme attached to it or it'll have different menus that you don't typically see in an app that's developed natively using xcode the toolset Apple has available. </p><p>[00:13:45] <strong>Theresa Jasko (Host): </strong>Okay, so it just kind of feels a little off or looks a little off at best.</p><p>[00:13:49] <strong>Leo Dion (Host): </strong>Yeah, exactly. </p><p>[00:13:51] <strong>Theresa Jasko (Host): </strong>Okay, then what at worse? It just doesn't work correctly. Yeah. </p><p>[00:13:55] <strong>Leo Dion (Host): </strong>Yeah or it just doesn't make any sense. It doesn't follow the paradigms people typically are used to when they use a IOS app. </p><p>[00:14:04] <strong>Theresa Jasko (Host): </strong>Well, if so if it's clunky and weird like that, why do people even make them or release them </p><p>[00:14:14] <strong>Leo Dion (Host): </strong>because it's cheap and easy. So, I mean that's kind of it. Also, maybe maybe they're focusing on Android. So they just wanted to make sure it works on Android and if it works on iOS, that's fine. It's a lot of that. So that is the benefit. A lot of these different methods is that you can ideally developed for both Android and iPhone at the same time. But in a lot of cases your UI won't look natural on Android, but also won't look all that natural on iPhone as well. Okay, because you've made some compromises. </p><p>[00:14:51] <strong>Theresa Jasko (Host): </strong>Yeah, I didn't think it went that both ways because I've always heard. You know, when I complain about different apps that I use on my Android usually people are like, well it's because you have an Android. I didn't realize it happened on IPhones and stuff too. </p><p>[00:15:08] <strong>Leo Dion (Host): </strong>Yeah, there's definitely some crappy apps out there on the iPhone. </p><p>[00:15:15] <strong>Theresa Jasko (Host): </strong>All right. So what other ways are there to develop apps than besides this cobbled thing?</p><p>[00:15:20] <strong>Leo Dion (Host): </strong>So we talked about building a website or webpage and then packaging it as an app kind of what Cordova or Ionic does. And then the other method is developing in a specific language that your development team might know in a lot of cases JavaScript and then building it using that for iPhone or IPad. You see that a lot with NativeScript which is built by the folks at Progress  but even more popular we see that with React Native which is built by the folks at Facebook. React is really popular amongst folks in the web development circles. And so if you're somebody who's already have a web team and they're already familiar with React then it makes sense. Maybe you just reuse those same people to build an app using React Native and it uses the same a lot of the same things that React does, but you can use it to build basically a native app. Whereas the first one [Ionic] takes it. A series of web pages are and HTML files and kind of puts it in a frame or wraps it this one actually converts the code into native code. So it actually is building a app. There's no HTML or anything like that in the app. It's actually building native features, but it's converting it to native from JavaScript in these cases or NativeScript. </p><p>[00:16:55] <strong>Theresa Jasko (Host): </strong>Okay. Have you done all these different methods? </p><p>[00:16:59] <strong>Leo Dion (Host): </strong>Well, the one that I've used is Xamarin, which is by the folks at Microsoft. So that uses C# to build apps. The problem that I found was constantly these tools have to catch up with Apple or Google to make sure that they're compatible. So Apple might come out with new stuff. That means your have to be dependent on them to make sure that they're updating their tools to work with whatever is new when it comes to Apple. So there can be a little bit of a support issue. Also at least with Xamarian those files can get pretty large because they might have like a file in there that has to do all the heavy lifting of making sure that the app works, even though it's written in a different language. So your app size might be a little bit larger a little bit slower because of that. That's kind of the issues I ran into at least when it came to developing using Xamarin </p><p>[00:18:02] <strong>Theresa Jasko (Host): </strong>So developers do use different methods. </p><p>[00:18:06] <strong>Leo Dion (Host): </strong>Yeah You'll see a lot of teams, they might just do react native because that's what they know - React. So it's easier for them to just go ahead and stick with that. Or they might be a bunch of web developers, so it might just be quick and easy to use Cordova or Ionic in that case. </p><p>[00:18:25] <strong>Theresa Jasko (Host): </strong>So one of the related words or phrases I guess I've heard is continuous integration. So how does this relate to continuous integration? </p><p>[00:18:38] <strong>Leo Dion (Host): </strong>Well, we're talking earlier about experience, testing, UI complexity are kind of the factors that might make a quote more expensive. One of the things is being able to continually make sure that as software is written that it actually is tested. So there's the common term in programming called unit testing where you'll write a thing that does addition. So you'll write a method or function that does addition that is takes numbers outputs the sum. Right, and then the way a unit test will work is you might have a series of numbers that you know add up to another number and you want to continually test to make sure that if you add two and two that will always equal four with this function if you had four and six at always equal 10, and so on. That's gives kind of a really simplified it sample, but you might have some developers come in and have make modifications to this method so that it does things like negative numbers or take decimal points. So then you need to make sure that you add those tests and you continually are testing both with the new test but also the old tests as you make changes to this function that adds two numbers together. So that's kind of the idea of continuous integration is as your team comes in and makes changes to different functions and methods and features within an app that the app still works based on the old code that's been written before. And typically how that's done is you might have a separate individual machine or you might use some service in the cloud that will take your code build it and make sure everything works no matter the environment that it's in and that it works on whatever you support and whatever devices you intend to support. Does that kind of make sense?</p><p>[00:20:32] <strong>Theresa Jasko (Host): </strong>Yeah a little bit. I'm I guess I'm having a hard time imagining like. Do some people not tests throughout their development?</p><p>[00:20:40] <strong>Leo Dion (Host): </strong>Yeah, I mean everybody "tests", but typically it's - so does it work? Like and you just kind of use the app and it works and you're fine, but there are so many outliers and different things that people do or my might do differently. And there's different kind of testing of course, but you'd be surprised how many teams don't test and don't do things like continuous integration.</p><p>[00:21:03] <strong>Theresa Jasko (Host): </strong>It makes me wonder there's stuff going on at work where they developed a new system and has never quite functioned right and then they will do bug fixes and then the next day a bunch of other things have been broken and It's always kind of intrigued me like why is this happening? </p><p>[00:21:21] <strong>Leo Dion (Host): </strong>Yep, and that's a lot of cases what they find is, you know, the testing is part of the thing that gets cut because if it works good enough that it works good enough and that's unfortunate in a lot of cases. </p><p>[00:21:33] <strong>Theresa Jasko (Host): </strong>Yeah. So do you is this the method you use the continuous integration?</p><p>[00:21:37] <strong>Leo Dion (Host): </strong>Yeah, actually  last night when I was in Ann Arbor. I talked about Speculid and how I used Continuous Integration. I used a Cloud Service - Travis CI which is available for free for open source projects, which is really nice because a lot of services that do continuous integration of the cloud are expensive. Because of how much it costs you pretty much have to get a Mac machine in order to do it. So yeah last night I talked about Travis CI and how there's some customization involved. But also one of the biggest challenges is if you are building in this case the Mac app or especially if you're building an app for the App Store you have to make sure that you have certificates and keys setup so that like for instance in the case of Travis CI you might want to just upload it to the App Store as soon as your testing is verified and it works correctly.</p><p>[00:22:34] So that's always something to keep in mind is to make sure that you have your environment set up correctly and you have things like certificates and provisioning profiles and all the little doodads and security stuff that Apple requires when you want to post something to app store. Or in the case that I ran into just distribute the app downloadable.</p><p>[00:23:01] So there's some other services out there. There's like Mac Stadium -Where you're typically like renting a machine essentially on a monthly basis. There's Jenkins if you want to run it on site or xcode server, which but I've been playing around with lately. And the idea is you're not running it on a machine. You'll especially run into the issue where a developer has something specifically set up and it works fine on this developer machine, but then when they run out on somebody else's machine, it doesn't work.</p><p>[00:23:34] Well you need to know that. Because if you're going to write a piece of software you need to know what's depending on what needs to be set up or what you're missing in your application in order to get it to work. It's really nice with iOS because you can just run it in the simulator, but even simulators have some major differences to how it works on an actual device.</p><p>[00:23:54] So you want to have access to something you can reset and start from scratch and run the app and make sure it works. </p><p>[00:24:02] <strong>Theresa Jasko (Host): </strong>So is this automated is this something you set up and say test every day at 10 or is it something that you do yourself or how does it work? </p><p>[00:24:10] <strong>Leo Dion (Host): </strong>So there's a couple of things you could do. You can set up on a schedule so you can say I'll run hourly or daily. You can especially if you're using something like git to control code where code gets checked in you can listen for changes to the code unlike the central server and when a code change happens, you can get the code and run it on the continuous integration machine. So it's another way to do it.</p><p>[00:24:37] And typically those are kind of the two main ways - run it on any code change that you listen to or run it on a scheduled basis. </p><p>[00:24:45] <strong>Theresa Jasko (Host): </strong>So if you know kind of your average customer is considering a developing an app, are there certain things that they would maybe assume comes along with it, but it doesn't or just things for them to keep in mind if they start thinking about this.</p><p>[00:25:04] <strong>Leo Dion (Host): </strong>So we talked about continuous integration testing - that's something that they should look into and ask questions. What kind of testing do you do? What kind of testing environment do you have? Another thing you want to ask is analytics? I don't think people think about that enough, but I think it's super important to have some analytics to know how people are using your app and what issues they have is there any sort of bug reporting that's natively built into the app something like instabug or bugsnag or some service like that. Also animations like that stuff is pretty complex. Don't make the assumption that there's any animations any custom fonts or any Custom Graphics. Those are things that you have to think about when you're building an app and then any sort of like backup support.</p><p>[00:25:56] Are you going to actually own the code when it's done? What kind of services are there for maintaining the app is that baked into your contract or into your quote? So those are some things to think about when you're asking somebody to build an app for you essentially.</p><p>[00:26:13] <strong>Theresa Jasko (Host): </strong>Okay. Do you offer those different things depending on what your customers want or do you kind of have a standard like I always have bug reporting and analytics or something like that. </p><p>[00:26:24] <strong>Leo Dion (Host): </strong>I always ask the customer what they want because it really depends on their budget coming up for my end. I want to make sure that I stay within their budget and make sure that I'm not adding in extra services they might not need because in some cases they just need a simple app. And then which is what I usually suggest depending on the budget is like both building something simple get like not a prototype but like a usable proof of concept that you can get to your customers so they can actually start using it and then if you see like there's some issues or there some features that we really need to flush out then, you know, come back to me let's build version 2.0 and really flesh this thing out. </p><p>[00:27:04] <strong>Theresa Jasko (Host): </strong>So is it easier for people to come in and kind of know how much they have to spend or is it better to have a range and then work someone like you to start to hone in on like what features they want or what's the best way to approach a project like that?</p><p>[00:27:20] <strong>Leo Dion (Host): </strong>I think both I think what is the ideal app you're looking at building and then what's your budget and that gives a good idea. Because the budget really is going to give me a good idea of what kind of features are reasonable. And also of course the timeline like well how soon do you expect it to be done?</p><p>[00:27:40] And that really gives me a good idea because I want to build the best app within what somebody can spend and knowing those factors really help communicate clearly to me and clearly to them what can be done within that range. I work to make my customers happy and I want them to be happy and I hate to be in a position where I over-promised and that's something I never do.</p><p>[00:28:06] So, the other thing to keep in mind is sometimes what the customer wants isn't really what the customer wants. And so you know, I could do a really kind of basic estimation but if they want something more flushed out, what I like to do is kind of do a requirements analysis and get an idea of  what are they really?</p><p>[00:28:33] What's their end goal and then kind of design around that and maybe build a rapport that at the very least if they don't want that app, then they can they can take that to somebody else and go: "oh, you know, we had an analysis done this is kind of what we're looking at getting built and maybe take it to somebody else to have it built for them if that's much more a better fit for them.</p><p>[00:29:00] So it really depends on their budget to like do they want to spend some money on a kind of report that we can take and then build an app against or do we want to put a quick estimate together and build based on that? And so that depends too is like how much of an analysis do they want beforehand.</p><p>[00:29:20] <strong>Theresa Jasko (Host): </strong>Do you have any examples of someone thought maybe they wanted something but it what they really wanted was something else?</p><p>[00:29:27]<strong>Leo Dion (Host): </strong>Yeah in a lot of cases. I've found that people you hear the I have a great idea for an app thing and I think I'm always surprised at how many times people haven't just looked in the App Store to see if that app already exists because a lot of times it does and in a lot of case It doesn't work very well. So that can always be a challenge. I think it a lot of cases people don't get into the specifics of the rules that they have in mind and they don't think of the weird edge cases that actually come up more often than they think so they think something is fairly simple, but then they realize that there's going to be situations where in fact it isn't that simple and that there might be a lot a situations where people are running into all sorts of issues because there are certain things that they need. for instance we had that nurse training app where we have on occasion with  nurses that need certifications in multiple states. So that's a big deal because you know, that might have been built to only support one state and if you're somebody who needs to get certifications in two states you need to track those credits accordingly in both States. And this is something people didn't think about and we brought that in and so they're always situations like that. Especially what you get with somebody like me is I've been developing an apple space for almost a decade now and I understand how different UI and ux paradigms work on Apple what people expect from a app that it's on an Apple device and those are things to think about as well.</p><p>[00:31:19] <strong>Theresa Jasko (Host): </strong>You had mentioned earlier one of the questions was about like who owns the code. Can you explain more what that means? </p><p>[00:31:26] <strong>Leo Dion (Host): </strong>Right so you'd wall was want somebody who develops an app for you to give you a copy or access to the code or repository? I mean, I feel like that's what requirement with any app.</p><p>[00:31:38] <strong>Theresa Jasko (Host): </strong>Are There people that develop stuff and then don't give it to the customer. </p><p>[00:31:41] <strong>Leo Dion (Host): </strong>Exactly and that is always something to check on. </p><p>[00:31:45] <strong>Theresa Jasko (Host): </strong>What would be the reason for? </p><p>[00:31:47] <strong>Leo Dion (Host): </strong>Maybe in a lot of cases they don't even think about the code. They just want the app in the app store and maybe they don't want the customer to see how poorly the code is written. I always provide the code like that just makes common sense. Yeah, but you'll find situations where that isn't the case.</p><p>[00:32:05] <strong>Theresa Jasko (Host): </strong>yeah definitely wouldn't have thought about that. So if someone were interested in investigating this do people offer like a free consultation or it it usually like a fee to kind of start to explore </p><p>[00:32:18] <strong>Leo Dion (Host): </strong>depends on how much you want me to break down the estimate if you want something for pretty basic than I could probably do it for free, but I think it's always better to like talk to the customers start like sketching things out and of course when it gets more details than it's not a free consultation, but for a very basic app yeah, I've done free consultation certainly. </p><p>[00:32:43] <strong>Theresa Jasko (Host): </strong>I just mean like if I don't even have any idea like I'm thinking I want an app. I could probably spend $5,000. I mean is that even like in the realm of reality? Like how do you even know what you need to put aside for that. </p><p>[00:32:56] <strong>Leo Dion (Host): </strong>No, I think five thousand dollar app would be well below the budget at this point. Yeah, I mean it's possible to do a five grand app, but it's not going to have a lot of features quite frankly. I think like right now you're talking bass price for an app would be 10 grand and it goes up from there. And I think that yeah, so typically, you know, that's where you need to start thinking about like third-party services, analytics, offline, UI  and ux complexity and things like that and that's where the price kind of increases from there.</p><p>[00:33:33] <strong>Theresa Jasko (Host): </strong>So other than getting like referrals from people that have worked with folks, is there other ways to kind of tell if you know who's a good developer and if they know what they're doing. </p><p>[00:33:44] <strong>Leo Dion (Host): </strong>I think look at their portfolio. I think that's a great way to look at the references and then kind of get an idea - talk to them about how a typical timeline will work and you want somebody that's going to be honest with you and tell you all the different missteps that can go along the way and all different gotchas that happen in the app development process, especially with like Apple, like something that will come up is your app gets rejected for the App Store. Now, what are you going to do and you have to think about those things and you want to developer that'll be honest with you and forthright about the different issues that could come up. Like I said, portfolio references what's on the App Store? what do they have as far as on the company website?</p><p>[00:34:30] What do they have that talks about this kind of stuff that's going to give you some confidence to know that they're actually doing what they're talking about. </p><p>[00:34:36] <strong>Theresa Jasko (Host): </strong>So is it safe to assume there are going to be hiccups. There are going to be speed bumps and it's just kind of matter of what they are and when they're going to happen.</p><p>[00:34:45] <strong>Leo Dion (Host): </strong>Yes, exactly. Yeah. </p><p>[00:34:47] <strong>Theresa Jasko (Host): </strong>So if anyone tries to tell you it's just going to be smooth sailing and nothing bad's going to happen - that's a red flag. </p><p>[00:34:53] <strong>Leo Dion (Host): </strong>Yeah, I would say so it's definitely a red flag and like if they haven't given you a portfolio or a list of references, like that's a red flag as well because they probably don't know what they're talking about.</p><p>[00:35:04] <strong>Theresa Jasko (Host): </strong>Yeah. So what kind of things you know, besides getting a budget are there certain things that a customer should think about beforehand or prepare in order to make the most that time.</p><p>[00:35:16]<strong>Leo Dion (Host): </strong>Have regular meetings with that customer talk to them. Make sure you have a copy of the app to test around on your own machine on your own iPhone so that you can look at it get it into your hands as quickly as possible so you can see it and talk about it and look at what issues come up and I think that's a big part of it. </p><p>[00:35:38] <strong>Theresa Jasko (Host): </strong>I feel like what we've talked about does make it maybe seem less scary to me, you know, if this was something I was going to be investigating for myself, which I think is a big big thing. Right? I mean a lot of technology stuff I feel like because kind of based on fear you make decisions based on fear. You don't make decisions based on fear. So, you know, I think anything that makes it a little more easier to understand is good</p><p>[00:36:01] <strong>Leo Dion (Host): </strong>Going to our discussion previously about continuous integration. I think it'll be interesting to see how Mac Mini is that into other development shops and how they might employ Mac minis in their environment because you know that I think is the biggest draw of getting a Mac Mini is having a continuous integration machine you can you could format and do all sorts of stuff with and break, essentially without having to worry about you know the cost of getting into enormous machine to do it. Because this is easy to run every so often interested work. </p><p>[00:36:33] <strong>Theresa Jasko (Host): </strong>Yeah. Well cool. This has been super interesting. I always learn a lot from our discussions. </p><p>[00:36:39] <strong>Leo Dion (Host): </strong>Yeah. Well, thank you Teresa. </p><p>[00:36:41] <strong>Theresa Jasko (Host): </strong>Yeah, great. I can't wait till next time. Yep. Talk to you later.</p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<ul>
<li><a href="https://learningswift.brightdigit.com/swift-development-tips-speculid-tryswift/">Speculid Talk</a></li>
<li>Development Alternatives<ul>
<li><a href="https://ionicframework.com/">Ionic</a></li>
<li><a href="https://facebook.github.io/react-native/">React Native</a></li>
<li><a href="https://visualstudio.microsoft.com/xamarin/">Xamarian</a></li>
<li><a href="https://cordova.apache.org">Cordova</a></li>
<li><a href="https://www.nativescript.org/">NativeScript</a></li>
</ul>
</li>
<li>Continuous Integration for iOS Options<ul>
<li><a href="https://www.macstadium.com/">MacStadium</a></li>
<li><a href="https://travis-ci.org">Travis-CI</a></li>
<li>
<a href="https://jenkins.io">Jenkins</a> </li>
<li><a href="https://www.macincloud.com/">MacinCloud</a></li>
<li><a href="https://developer.apple.com/library/archive/documentation/IDEs/Conceptual/xcode_guide-continuous_integration/index.html">Xcode Server</a></li>
<li><a href="https://circleci.com/">CircleCI</a></li>
<li><a href="https://hockeyapp.net/">HockeyApp</a></li>
</ul>
</li>
</ul><p><b>Complete Transcription</b></p><p>[00:00:00] <strong>Theresa Jasko (Host): </strong>I feel like last time we had our podcast you've maybe done a few speaking engagements. </p><p>[00:00:06] <strong>Leo Dion (Host): </strong>I spoke at ArborMoon at the Ann Arbor Cocoaheads group about Try! Swift which is the conference, I went to Labor Day week. And then I also talked about Speculid which is a Mac App for developers that I've been working on for building graphics for apps. I just talked about how it works and kind of the guts of the challenges I faced building the app. </p><p>[00:00:31] <strong>Theresa Jasko (Host): </strong>Nice, So what is IOS development? </p><p>[00:00:34] <strong>Leo Dion (Host): </strong>IOS, of course, is the operating system for iPads and iPhones. So typically it's the process of coding, designing, testing, and packaging an app and delivering it in whatever way a customer would want.</p><p>[00:00:52] <strong>Theresa Jasko (Host): </strong>Yeah, so if someone's looking into doing that what kind of factors go into getting a quote for that kind of service.</p><p>[00:00:59] <strong>Leo Dion (Host): </strong>So really it depends on the features and kind of the timeline of the app. So faster timeline is going to mean a higher quote then integrating any sort of third party services. So if you're integrating something like Facebook or integrating any sort of special controls or sensors on the iPhone like motion controls then that's going to up your quote. And then the complexity of the data that's being used, especially if it's data that's going to be stored locally or remotely - there's going to be some complexity there and that will take take more time. </p><p>[00:01:40] Because that's essentially what we're talking about is quality and time the more you pay the more time it will take and the more higher quality will also mean a higher quote for those Services because that quality also takes time of course. So offline capabilities - not a lot of apps necessarily need that but a lot of apps want to have the ability to just having online and offline capabilities so syncing and things like that. Any sort of UI complexity and any UX complexity, chat, the amount or number of screens is a good indicator of how complex an app is going to be and how much the price is going to be. </p><p>[00:02:26] And then this is much more an issue on Android but as far as iOS is concerned, It's what operating system versions you support. What devices you support. So is this just an iPad app is it just an iPhone app is a support iOS 12, iOS 11 how far down the chain are you going and that usually factors into the price of the quote for developing an app.</p><p>[00:02:53] And also another thing to mention is in many cases we're thinking a green app, but starting an app from scratch that has its challenges but also picking up an app that's already been developed on has its challenges as well. So that's something to that will weigh into the quote of developing an IOS app.</p><p>[00:03:17] <strong>Theresa Jasko (Host): </strong>Yeah, so when you talk about like those factors just now is there like a common app that you could use it as an example of like kind of illustrating some of that stuff? Is there maybe like a weather app or something like when you talk about like UI ux complexity and things like that? I'm having a hard time envisioning what that means in real life.</p><p>[00:03:38] <strong>Leo Dion (Host): </strong>Sure. So the way I think about it is a lot of times customers depending on how much they want to do when it comes to getting requirements for an app have a pretty good idea of what screens they want. And so I usually get into the process of asking them - Okay, what does this app do? What are you trying to do? What is your end goal and then figure out - okay, we'll need a screen for this and a screen for that and then the screen will go to that. Then I'll start thinking about like different edge cases because we always have to think like what happens in this case what happens in that case. What I do is in spreadsheet will write out the different screens that an app will need in order for it to essentially work. </p><p>[00:04:26] For instance, we developed a nurse training app and that uses about four different tabs and probably each of those have different dialogues for adding credits for a nurse. And so we'll have say 12 screens in that app. Just kind of roughly and so that I look at the complexity how much data is being entered is it like one field, 2 fields, 3 Fields? How complex is that data? Is that data dependent on certain variables? Is there a certain range of acceptable values and then that factors into some of the UX that's involved or the user experience because I want to make sure that the user is walked through the app. Easily and knows what they need to do and it's intuitive.</p><p>[00:05:17] So I kind of rough guess how many hours that's going to be for each screen. We also talked about for instance with a brand new app, there's some setup time usually involved. And then for each screen, there's going to be testing involved say every week or two weeks so that gets added in as well.</p><p>[00:05:41] And then of course at the end, there's the issue of getting into the App Store assuming it's a app store app and there's always time involved there because you'll always find all sorts of issues when you get into App Store. There's also dependencies for their marketing or graphic design folks to make sure that they have the assets that are needed to get into the App Store.</p><p>[00:06:02] <strong>Theresa Jasko (Host): </strong>Hmm. Wow, do you find that when people approach you about getting a quote or something? Do they have a full understanding of the things that you're talking about are usually have to really kind of work with people to even explain that?</p><p>[00:06:17] <strong>Leo Dion (Host): </strong>Usually what I like to do is kind of do a rough tree of how the app is going to work. And then from there I'll go ahead and make estimates for each of those things. Sometimes I might do something like an initial consultation for a fee depending on how complex the app is. And then what I like to do early on in the project is have basically an app that doesn't work but at least has the UI and the workflow that they expect out of the app so that way early on in the process they're there confirming how the app is going to work eventually at some point. </p><p>[00:07:00] <strong>Theresa Jasko (Host): </strong>What are the things - you know what - let's say someone wants to do a development project and they get let's say three different quotes. What's the reasons you know, if the prices are kind of varying pretty significantly what could be different there? What would you be maybe missing out on if you go with the least expensive? </p><p>[00:07:23] <strong>Leo Dion (Host): </strong>Sometimes they are perhaps using services that might expediate the development process without really offering any ability to customize it later. Perhaps it's using some sort of different method besides building it native Apple like Swift or Objective-C. We can talk about the different methods for developing apps later. It's all kind of based on maybe an extensive experience or you know, just kind of taking shortcuts and things like that. There's some app building templates out there that people might be using as well which doesn't really fit with what they want. But really you're getting different quotes based on possibly the quality of work and just what features haven't been completely flushed out early in the process. </p><p>[00:08:20] <strong>Theresa Jasko (Host): </strong>Yeah, so when you say for instance that you won't be able to be updated later or something. Does that mean they kind of cobble something together? And then that's just kind of it and you can't add to it later? </p><p>[00:08:34] <strong>Leo Dion (Host): </strong>Yeah, that could definitely be the case in many ways. </p><p>[00:08:37] <strong>Theresa Jasko (Host): </strong>Do a lot of people like when they make an app want to update it later or is it kind of 50/50 or you know, like well, yeah, we made this and it's good enough and we just kind of let it lie.</p><p>[00:08:48] <strong>Leo Dion (Host): </strong>I think it's 50/50 but with a lot of at least with iOS you need to keep updating app if you're going to want people to use it when you come out with a new iPhone that's bigger or has a notch or uses a different design then you pretty much have to update your app. You can't get away with keeping on the App Store because Apple can just drop the app if it doesn't work on newer phones. </p><p>[00:09:15] <strong>Theresa Jasko (Host): </strong>Mhm. And so when you're saying people you maybe use like a template or something to say is it is it kind of like a square peg in a round hole thing where it's like, well we have this starting point and we're going to kind of make it work for you.</p><p>[00:09:26] <strong>Leo Dion (Host): </strong>Yeah, that's exactly what you could run into. If somebody could just be using like a template and they're not maintaining a they're not keeping it working and keeping it going. So when the new phones come around they haven't updated the template or they haven't updated the app. You're going to have to just come back to those people to update the app and your kind of dependent on them at that point.</p><p>[00:09:51] <strong>Theresa Jasko (Host): </strong>So you're saying you couldn't have somebody else come in and update it then. </p><p>[00:09:56] <strong>Leo Dion (Host): </strong>Well somebody else could but they're going to charge for whatever it takes to reconfigure that app. That might be outside of their wheel house. </p><p>[00:10:06] <strong>Theresa Jasko (Host): </strong>So what is the difference between starting from scratch like to me when I feel like when you start from scratch with something it's going to take longer than going to be more expensive. But then you're saying if you using a template or you know, kind of a starting point that somebody else is made then that can create problems later on too. So you ever start with a template or anything or do always kind of start from scratch? I've started with some templates before or at least started with other development projects and it really depends on that previous team and how well they did if they did a good job and structured their app well, then it might not be that big of a deal to pick it up. But if it's just cobbled together like what we're talking about then there could be some serious issues trying to bring that app in. And if it's old enough that it uses some old code that doesn't work anymore. That could be a serious issue for the new team that comes in and adds new features to the app. They might come to a conclusion that is some of the stuff is worth just burning down and starting from scratch. </p><p>[00:11:13] We've been kind of talking about different ways of going about it. Does that mean that there are different methods for developing apps for the iPhone? </p><p>[00:11:21] <strong>Leo Dion (Host): </strong>Yeah. So we kind of talked about some templates. There's app building templates are out there, but there's also a different methods that deviate from just doing it the Apple way so to speak. So there's what I like to call like the web development wrapper way of doing it and the building it in my own favorite language, but still make it a native way of doing it and they each have their advantages.</p><p>[00:11:48] So with the web development wrapper, that's typically something like Cordova or Ionic. Cordova was built by Adobe and essentially what it is is you build a web app. So you're just you doing regular HTML and things like that to build. The app and it's wrapped but you still have access to certain native features on that phone.</p><p>[00:12:14] So to the user it looks like just regular app out of the box, but to you the developer, you're actually just building a web page. There's so many questions as far as how to get something like that into the App Store that can sometimes be a challenge but if you do it, right, there's quite a few apps that are built using that technology</p><p>[00:12:39] <strong>Theresa Jasko (Host): </strong>what do you mean by native? </p><p>[00:12:41] <strong>Leo Dion (Host): </strong>When I say at least looking native is an app that doesn't look like something that's hacked together using custom components or packaged like it doesn't use like actual apple design elements that people typically use when they build an app.</p><p>[00:13:01] So like I've been on certain apps that have like a weird wood grain or it has buttons that don't look quite right or has drop down menus, which you don't really see in a lot of Apple apps and that kind of gives a good indication that use some custom software to build it. Unless of course it's designed well, and it uses kind of some of the third-party tools will talk about in a little bit.</p><p>[00:13:26] So like with a web development wrapper, sometimes it'll just have a weird color scheme attached to it or it'll have different menus that you don't typically see in an app that's developed natively using xcode the toolset Apple has available. </p><p>[00:13:45] <strong>Theresa Jasko (Host): </strong>Okay, so it just kind of feels a little off or looks a little off at best.</p><p>[00:13:49] <strong>Leo Dion (Host): </strong>Yeah, exactly. </p><p>[00:13:51] <strong>Theresa Jasko (Host): </strong>Okay, then what at worse? It just doesn't work correctly. Yeah. </p><p>[00:13:55] <strong>Leo Dion (Host): </strong>Yeah or it just doesn't make any sense. It doesn't follow the paradigms people typically are used to when they use a IOS app. </p><p>[00:14:04] <strong>Theresa Jasko (Host): </strong>Well, if so if it's clunky and weird like that, why do people even make them or release them </p><p>[00:14:14] <strong>Leo Dion (Host): </strong>because it's cheap and easy. So, I mean that's kind of it. Also, maybe maybe they're focusing on Android. So they just wanted to make sure it works on Android and if it works on iOS, that's fine. It's a lot of that. So that is the benefit. A lot of these different methods is that you can ideally developed for both Android and iPhone at the same time. But in a lot of cases your UI won't look natural on Android, but also won't look all that natural on iPhone as well. Okay, because you've made some compromises. </p><p>[00:14:51] <strong>Theresa Jasko (Host): </strong>Yeah, I didn't think it went that both ways because I've always heard. You know, when I complain about different apps that I use on my Android usually people are like, well it's because you have an Android. I didn't realize it happened on IPhones and stuff too. </p><p>[00:15:08] <strong>Leo Dion (Host): </strong>Yeah, there's definitely some crappy apps out there on the iPhone. </p><p>[00:15:15] <strong>Theresa Jasko (Host): </strong>All right. So what other ways are there to develop apps than besides this cobbled thing?</p><p>[00:15:20] <strong>Leo Dion (Host): </strong>So we talked about building a website or webpage and then packaging it as an app kind of what Cordova or Ionic does. And then the other method is developing in a specific language that your development team might know in a lot of cases JavaScript and then building it using that for iPhone or IPad. You see that a lot with NativeScript which is built by the folks at Progress  but even more popular we see that with React Native which is built by the folks at Facebook. React is really popular amongst folks in the web development circles. And so if you're somebody who's already have a web team and they're already familiar with React then it makes sense. Maybe you just reuse those same people to build an app using React Native and it uses the same a lot of the same things that React does, but you can use it to build basically a native app. Whereas the first one [Ionic] takes it. A series of web pages are and HTML files and kind of puts it in a frame or wraps it this one actually converts the code into native code. So it actually is building a app. There's no HTML or anything like that in the app. It's actually building native features, but it's converting it to native from JavaScript in these cases or NativeScript. </p><p>[00:16:55] <strong>Theresa Jasko (Host): </strong>Okay. Have you done all these different methods? </p><p>[00:16:59] <strong>Leo Dion (Host): </strong>Well, the one that I've used is Xamarin, which is by the folks at Microsoft. So that uses C# to build apps. The problem that I found was constantly these tools have to catch up with Apple or Google to make sure that they're compatible. So Apple might come out with new stuff. That means your have to be dependent on them to make sure that they're updating their tools to work with whatever is new when it comes to Apple. So there can be a little bit of a support issue. Also at least with Xamarian those files can get pretty large because they might have like a file in there that has to do all the heavy lifting of making sure that the app works, even though it's written in a different language. So your app size might be a little bit larger a little bit slower because of that. That's kind of the issues I ran into at least when it came to developing using Xamarin </p><p>[00:18:02] <strong>Theresa Jasko (Host): </strong>So developers do use different methods. </p><p>[00:18:06] <strong>Leo Dion (Host): </strong>Yeah You'll see a lot of teams, they might just do react native because that's what they know - React. So it's easier for them to just go ahead and stick with that. Or they might be a bunch of web developers, so it might just be quick and easy to use Cordova or Ionic in that case. </p><p>[00:18:25] <strong>Theresa Jasko (Host): </strong>So one of the related words or phrases I guess I've heard is continuous integration. So how does this relate to continuous integration? </p><p>[00:18:38] <strong>Leo Dion (Host): </strong>Well, we're talking earlier about experience, testing, UI complexity are kind of the factors that might make a quote more expensive. One of the things is being able to continually make sure that as software is written that it actually is tested. So there's the common term in programming called unit testing where you'll write a thing that does addition. So you'll write a method or function that does addition that is takes numbers outputs the sum. Right, and then the way a unit test will work is you might have a series of numbers that you know add up to another number and you want to continually test to make sure that if you add two and two that will always equal four with this function if you had four and six at always equal 10, and so on. That's gives kind of a really simplified it sample, but you might have some developers come in and have make modifications to this method so that it does things like negative numbers or take decimal points. So then you need to make sure that you add those tests and you continually are testing both with the new test but also the old tests as you make changes to this function that adds two numbers together. So that's kind of the idea of continuous integration is as your team comes in and makes changes to different functions and methods and features within an app that the app still works based on the old code that's been written before. And typically how that's done is you might have a separate individual machine or you might use some service in the cloud that will take your code build it and make sure everything works no matter the environment that it's in and that it works on whatever you support and whatever devices you intend to support. Does that kind of make sense?</p><p>[00:20:32] <strong>Theresa Jasko (Host): </strong>Yeah a little bit. I'm I guess I'm having a hard time imagining like. Do some people not tests throughout their development?</p><p>[00:20:40] <strong>Leo Dion (Host): </strong>Yeah, I mean everybody "tests", but typically it's - so does it work? Like and you just kind of use the app and it works and you're fine, but there are so many outliers and different things that people do or my might do differently. And there's different kind of testing of course, but you'd be surprised how many teams don't test and don't do things like continuous integration.</p><p>[00:21:03] <strong>Theresa Jasko (Host): </strong>It makes me wonder there's stuff going on at work where they developed a new system and has never quite functioned right and then they will do bug fixes and then the next day a bunch of other things have been broken and It's always kind of intrigued me like why is this happening? </p><p>[00:21:21] <strong>Leo Dion (Host): </strong>Yep, and that's a lot of cases what they find is, you know, the testing is part of the thing that gets cut because if it works good enough that it works good enough and that's unfortunate in a lot of cases. </p><p>[00:21:33] <strong>Theresa Jasko (Host): </strong>Yeah. So do you is this the method you use the continuous integration?</p><p>[00:21:37] <strong>Leo Dion (Host): </strong>Yeah, actually  last night when I was in Ann Arbor. I talked about Speculid and how I used Continuous Integration. I used a Cloud Service - Travis CI which is available for free for open source projects, which is really nice because a lot of services that do continuous integration of the cloud are expensive. Because of how much it costs you pretty much have to get a Mac machine in order to do it. So yeah last night I talked about Travis CI and how there's some customization involved. But also one of the biggest challenges is if you are building in this case the Mac app or especially if you're building an app for the App Store you have to make sure that you have certificates and keys setup so that like for instance in the case of Travis CI you might want to just upload it to the App Store as soon as your testing is verified and it works correctly.</p><p>[00:22:34] So that's always something to keep in mind is to make sure that you have your environment set up correctly and you have things like certificates and provisioning profiles and all the little doodads and security stuff that Apple requires when you want to post something to app store. Or in the case that I ran into just distribute the app downloadable.</p><p>[00:23:01] So there's some other services out there. There's like Mac Stadium -Where you're typically like renting a machine essentially on a monthly basis. There's Jenkins if you want to run it on site or xcode server, which but I've been playing around with lately. And the idea is you're not running it on a machine. You'll especially run into the issue where a developer has something specifically set up and it works fine on this developer machine, but then when they run out on somebody else's machine, it doesn't work.</p><p>[00:23:34] Well you need to know that. Because if you're going to write a piece of software you need to know what's depending on what needs to be set up or what you're missing in your application in order to get it to work. It's really nice with iOS because you can just run it in the simulator, but even simulators have some major differences to how it works on an actual device.</p><p>[00:23:54] So you want to have access to something you can reset and start from scratch and run the app and make sure it works. </p><p>[00:24:02] <strong>Theresa Jasko (Host): </strong>So is this automated is this something you set up and say test every day at 10 or is it something that you do yourself or how does it work? </p><p>[00:24:10] <strong>Leo Dion (Host): </strong>So there's a couple of things you could do. You can set up on a schedule so you can say I'll run hourly or daily. You can especially if you're using something like git to control code where code gets checked in you can listen for changes to the code unlike the central server and when a code change happens, you can get the code and run it on the continuous integration machine. So it's another way to do it.</p><p>[00:24:37] And typically those are kind of the two main ways - run it on any code change that you listen to or run it on a scheduled basis. </p><p>[00:24:45] <strong>Theresa Jasko (Host): </strong>So if you know kind of your average customer is considering a developing an app, are there certain things that they would maybe assume comes along with it, but it doesn't or just things for them to keep in mind if they start thinking about this.</p><p>[00:25:04] <strong>Leo Dion (Host): </strong>So we talked about continuous integration testing - that's something that they should look into and ask questions. What kind of testing do you do? What kind of testing environment do you have? Another thing you want to ask is analytics? I don't think people think about that enough, but I think it's super important to have some analytics to know how people are using your app and what issues they have is there any sort of bug reporting that's natively built into the app something like instabug or bugsnag or some service like that. Also animations like that stuff is pretty complex. Don't make the assumption that there's any animations any custom fonts or any Custom Graphics. Those are things that you have to think about when you're building an app and then any sort of like backup support.</p><p>[00:25:56] Are you going to actually own the code when it's done? What kind of services are there for maintaining the app is that baked into your contract or into your quote? So those are some things to think about when you're asking somebody to build an app for you essentially.</p><p>[00:26:13] <strong>Theresa Jasko (Host): </strong>Okay. Do you offer those different things depending on what your customers want or do you kind of have a standard like I always have bug reporting and analytics or something like that. </p><p>[00:26:24] <strong>Leo Dion (Host): </strong>I always ask the customer what they want because it really depends on their budget coming up for my end. I want to make sure that I stay within their budget and make sure that I'm not adding in extra services they might not need because in some cases they just need a simple app. And then which is what I usually suggest depending on the budget is like both building something simple get like not a prototype but like a usable proof of concept that you can get to your customers so they can actually start using it and then if you see like there's some issues or there some features that we really need to flush out then, you know, come back to me let's build version 2.0 and really flesh this thing out. </p><p>[00:27:04] <strong>Theresa Jasko (Host): </strong>So is it easier for people to come in and kind of know how much they have to spend or is it better to have a range and then work someone like you to start to hone in on like what features they want or what's the best way to approach a project like that?</p><p>[00:27:20] <strong>Leo Dion (Host): </strong>I think both I think what is the ideal app you're looking at building and then what's your budget and that gives a good idea. Because the budget really is going to give me a good idea of what kind of features are reasonable. And also of course the timeline like well how soon do you expect it to be done?</p><p>[00:27:40] And that really gives me a good idea because I want to build the best app within what somebody can spend and knowing those factors really help communicate clearly to me and clearly to them what can be done within that range. I work to make my customers happy and I want them to be happy and I hate to be in a position where I over-promised and that's something I never do.</p><p>[00:28:06] So, the other thing to keep in mind is sometimes what the customer wants isn't really what the customer wants. And so you know, I could do a really kind of basic estimation but if they want something more flushed out, what I like to do is kind of do a requirements analysis and get an idea of  what are they really?</p><p>[00:28:33] What's their end goal and then kind of design around that and maybe build a rapport that at the very least if they don't want that app, then they can they can take that to somebody else and go: "oh, you know, we had an analysis done this is kind of what we're looking at getting built and maybe take it to somebody else to have it built for them if that's much more a better fit for them.</p><p>[00:29:00] So it really depends on their budget to like do they want to spend some money on a kind of report that we can take and then build an app against or do we want to put a quick estimate together and build based on that? And so that depends too is like how much of an analysis do they want beforehand.</p><p>[00:29:20] <strong>Theresa Jasko (Host): </strong>Do you have any examples of someone thought maybe they wanted something but it what they really wanted was something else?</p><p>[00:29:27]<strong>Leo Dion (Host): </strong>Yeah in a lot of cases. I've found that people you hear the I have a great idea for an app thing and I think I'm always surprised at how many times people haven't just looked in the App Store to see if that app already exists because a lot of times it does and in a lot of case It doesn't work very well. So that can always be a challenge. I think it a lot of cases people don't get into the specifics of the rules that they have in mind and they don't think of the weird edge cases that actually come up more often than they think so they think something is fairly simple, but then they realize that there's going to be situations where in fact it isn't that simple and that there might be a lot a situations where people are running into all sorts of issues because there are certain things that they need. for instance we had that nurse training app where we have on occasion with  nurses that need certifications in multiple states. So that's a big deal because you know, that might have been built to only support one state and if you're somebody who needs to get certifications in two states you need to track those credits accordingly in both States. And this is something people didn't think about and we brought that in and so they're always situations like that. Especially what you get with somebody like me is I've been developing an apple space for almost a decade now and I understand how different UI and ux paradigms work on Apple what people expect from a app that it's on an Apple device and those are things to think about as well.</p><p>[00:31:19] <strong>Theresa Jasko (Host): </strong>You had mentioned earlier one of the questions was about like who owns the code. Can you explain more what that means? </p><p>[00:31:26] <strong>Leo Dion (Host): </strong>Right so you'd wall was want somebody who develops an app for you to give you a copy or access to the code or repository? I mean, I feel like that's what requirement with any app.</p><p>[00:31:38] <strong>Theresa Jasko (Host): </strong>Are There people that develop stuff and then don't give it to the customer. </p><p>[00:31:41] <strong>Leo Dion (Host): </strong>Exactly and that is always something to check on. </p><p>[00:31:45] <strong>Theresa Jasko (Host): </strong>What would be the reason for? </p><p>[00:31:47] <strong>Leo Dion (Host): </strong>Maybe in a lot of cases they don't even think about the code. They just want the app in the app store and maybe they don't want the customer to see how poorly the code is written. I always provide the code like that just makes common sense. Yeah, but you'll find situations where that isn't the case.</p><p>[00:32:05] <strong>Theresa Jasko (Host): </strong>yeah definitely wouldn't have thought about that. So if someone were interested in investigating this do people offer like a free consultation or it it usually like a fee to kind of start to explore </p><p>[00:32:18] <strong>Leo Dion (Host): </strong>depends on how much you want me to break down the estimate if you want something for pretty basic than I could probably do it for free, but I think it's always better to like talk to the customers start like sketching things out and of course when it gets more details than it's not a free consultation, but for a very basic app yeah, I've done free consultation certainly. </p><p>[00:32:43] <strong>Theresa Jasko (Host): </strong>I just mean like if I don't even have any idea like I'm thinking I want an app. I could probably spend $5,000. I mean is that even like in the realm of reality? Like how do you even know what you need to put aside for that. </p><p>[00:32:56] <strong>Leo Dion (Host): </strong>No, I think five thousand dollar app would be well below the budget at this point. Yeah, I mean it's possible to do a five grand app, but it's not going to have a lot of features quite frankly. I think like right now you're talking bass price for an app would be 10 grand and it goes up from there. And I think that yeah, so typically, you know, that's where you need to start thinking about like third-party services, analytics, offline, UI  and ux complexity and things like that and that's where the price kind of increases from there.</p><p>[00:33:33] <strong>Theresa Jasko (Host): </strong>So other than getting like referrals from people that have worked with folks, is there other ways to kind of tell if you know who's a good developer and if they know what they're doing. </p><p>[00:33:44] <strong>Leo Dion (Host): </strong>I think look at their portfolio. I think that's a great way to look at the references and then kind of get an idea - talk to them about how a typical timeline will work and you want somebody that's going to be honest with you and tell you all the different missteps that can go along the way and all different gotchas that happen in the app development process, especially with like Apple, like something that will come up is your app gets rejected for the App Store. Now, what are you going to do and you have to think about those things and you want to developer that'll be honest with you and forthright about the different issues that could come up. Like I said, portfolio references what's on the App Store? what do they have as far as on the company website?</p><p>[00:34:30] What do they have that talks about this kind of stuff that's going to give you some confidence to know that they're actually doing what they're talking about. </p><p>[00:34:36] <strong>Theresa Jasko (Host): </strong>So is it safe to assume there are going to be hiccups. There are going to be speed bumps and it's just kind of matter of what they are and when they're going to happen.</p><p>[00:34:45] <strong>Leo Dion (Host): </strong>Yes, exactly. Yeah. </p><p>[00:34:47] <strong>Theresa Jasko (Host): </strong>So if anyone tries to tell you it's just going to be smooth sailing and nothing bad's going to happen - that's a red flag. </p><p>[00:34:53] <strong>Leo Dion (Host): </strong>Yeah, I would say so it's definitely a red flag and like if they haven't given you a portfolio or a list of references, like that's a red flag as well because they probably don't know what they're talking about.</p><p>[00:35:04] <strong>Theresa Jasko (Host): </strong>Yeah. So what kind of things you know, besides getting a budget are there certain things that a customer should think about beforehand or prepare in order to make the most that time.</p><p>[00:35:16]<strong>Leo Dion (Host): </strong>Have regular meetings with that customer talk to them. Make sure you have a copy of the app to test around on your own machine on your own iPhone so that you can look at it get it into your hands as quickly as possible so you can see it and talk about it and look at what issues come up and I think that's a big part of it. </p><p>[00:35:38] <strong>Theresa Jasko (Host): </strong>I feel like what we've talked about does make it maybe seem less scary to me, you know, if this was something I was going to be investigating for myself, which I think is a big big thing. Right? I mean a lot of technology stuff I feel like because kind of based on fear you make decisions based on fear. You don't make decisions based on fear. So, you know, I think anything that makes it a little more easier to understand is good</p><p>[00:36:01] <strong>Leo Dion (Host): </strong>Going to our discussion previously about continuous integration. I think it'll be interesting to see how Mac Mini is that into other development shops and how they might employ Mac minis in their environment because you know that I think is the biggest draw of getting a Mac Mini is having a continuous integration machine you can you could format and do all sorts of stuff with and break, essentially without having to worry about you know the cost of getting into enormous machine to do it. Because this is easy to run every so often interested work. </p><p>[00:36:33] <strong>Theresa Jasko (Host): </strong>Yeah. Well cool. This has been super interesting. I always learn a lot from our discussions. </p><p>[00:36:39] <strong>Leo Dion (Host): </strong>Yeah. Well, thank you Teresa. </p><p>[00:36:41] <strong>Theresa Jasko (Host): </strong>Yeah, great. I can't wait till next time. Yep. Talk to you later.</p><p><br></p><p><br></p><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Tue, 08 Jan 2019 00:00:00 -0500</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/00603d96/00603d96.mp3" length="17656272" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>2204</itunes:duration>
      <itunes:summary>In this episode, Leo and Theresa talk about how the process of going from a customer's idea to a proposal happens. These also include: what features to consider, how much involvement might be needed to get a proposal, budgets, timelines and more...</itunes:summary>
      <itunes:subtitle>In this episode, Leo and Theresa talk about how the process of going from a customer's idea to a proposal happens. These also include: what features to consider, how much involvement might be needed to get a proposal, budgets, timelines and more...</itunes:subtitle>
      <itunes:keywords>project estimation, budget, react native, xamarin, mac mini, writing a proposal, project timelines</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Apple Watch Series 4</title>
      <itunes:episode>5</itunes:episode>
      <itunes:title>Apple Watch Series 4</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">9962bba2-774d-4c99-90b5-982c6979108c</guid>
      <link>https://share.transistor.fm/s/82709349</link>
      <description>
        <![CDATA[<ul>
<li><a href="https://www.reddit.com/r/apple/comments/9fkb3t/im_an_emergency_physician_and_wanted_to_talk/">I'm an Emergency Physician and wanted to talk about Apple Watch's new ECG</a></li>
<li>
<strong>Watch Faces</strong> <a href="https://imgur.com/OKHiyYI.png">Infographic</a> and <a href="https://i.imgur.com/ZwWrrwT.png">Infographic Modular</a>
</li>
<li>
<strong>Previous Episodes</strong><ul>
<li><a href="https://www.empowerapps.show/3">Episode 3 : Low-Cost Macs - MacBook Air &amp; Mac Mini</a></li>
<li><a href="http://www.empowerapps.show/4">Episode 4 : iPhone Xs vs iPhone Xs Max vs iPhone Xr</a></li>
</ul>
</li>
<li>
<strong>Apple Developer Videos</strong><ul>
<li><a href="https://developer.apple.com/videos/play/tech-talks/802/">Designing for Apple Watch Series 4</a></li>
<li><a href="https://developer.apple.com/videos/play/tech-talks/208/">Developing Complications for Apple Watch Series 4</a></li>
<li><a href="https://developer.apple.com/videos/play/insights/112/">Using Subscriptions</a></li>
<li><a href="https://developer.apple.com/videos/play/tech-talks/803/">Designing for Subscription Success</a></li>
</ul>
</li>
</ul><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<ul>
<li><a href="https://www.reddit.com/r/apple/comments/9fkb3t/im_an_emergency_physician_and_wanted_to_talk/">I'm an Emergency Physician and wanted to talk about Apple Watch's new ECG</a></li>
<li>
<strong>Watch Faces</strong> <a href="https://imgur.com/OKHiyYI.png">Infographic</a> and <a href="https://i.imgur.com/ZwWrrwT.png">Infographic Modular</a>
</li>
<li>
<strong>Previous Episodes</strong><ul>
<li><a href="https://www.empowerapps.show/3">Episode 3 : Low-Cost Macs - MacBook Air &amp; Mac Mini</a></li>
<li><a href="http://www.empowerapps.show/4">Episode 4 : iPhone Xs vs iPhone Xs Max vs iPhone Xr</a></li>
</ul>
</li>
<li>
<strong>Apple Developer Videos</strong><ul>
<li><a href="https://developer.apple.com/videos/play/tech-talks/802/">Designing for Apple Watch Series 4</a></li>
<li><a href="https://developer.apple.com/videos/play/tech-talks/208/">Developing Complications for Apple Watch Series 4</a></li>
<li><a href="https://developer.apple.com/videos/play/insights/112/">Using Subscriptions</a></li>
<li><a href="https://developer.apple.com/videos/play/tech-talks/803/">Designing for Subscription Success</a></li>
</ul>
</li>
</ul><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Fri, 28 Sep 2018 01:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/82709349/82709349.mp3" length="13763010" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>1703</itunes:duration>
      <itunes:summary>In this episode, Leo and Theresa talk about the new Apple Watch Series 4. How useful are the new health features? What complications will be useful on the new display? How should apps be updated on the new watch? What kind of industries should think about having an app on the watch? What's the future of other smart watches?</itunes:summary>
      <itunes:subtitle>In this episode, Leo and Theresa talk about the new Apple Watch Series 4. How useful are the new health features? What complications will be useful on the new display? How should apps be updated on the new watch? What kind of industries should think about</itunes:subtitle>
      <itunes:keywords>apple, Apple Watch Series 4, Fitbit, pebble, ECG, complications</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>iPhone Xs vs iPhone Xs Max vs iPhone Xr</title>
      <itunes:episode>4</itunes:episode>
      <itunes:title>iPhone Xs vs iPhone Xs Max vs iPhone Xr</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">baeaecb3-b6d3-4652-bc6b-030ec6771b8d</guid>
      <link>https://share.transistor.fm/s/b358d0a4</link>
      <description>
        <![CDATA[<ul>
<li><a href="http://www.empowerapps.show/episodes/low-cost-macs-macbook-air-mac-mini">Episode 3 - Low-Cost Macs</a></li>
<li><a href="https://brightdigit.com/blog/2018/09/20/machine-learning-business-applications-with-kevin-scott/">Interview with Kevin Scott on Machine Learning</a></li>
<li><a href="https://stratechery.com/2018/the-iphone-franchise/">Stratechery - The iPhone Franchise</a></li>
<li><a href="https://learningswift.brightdigit.com/swift-thoughts-tryswift-nyc-2018/">Swift Thoughts on try!Swift NYC 2018</a></li>
<li><a href="https://developer.apple.com/videos/play/tech-talks/207/">Building Apps for iPhone XS, iPhone XS Max, and iPhone XR</a></li>
</ul><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<ul>
<li><a href="http://www.empowerapps.show/episodes/low-cost-macs-macbook-air-mac-mini">Episode 3 - Low-Cost Macs</a></li>
<li><a href="https://brightdigit.com/blog/2018/09/20/machine-learning-business-applications-with-kevin-scott/">Interview with Kevin Scott on Machine Learning</a></li>
<li><a href="https://stratechery.com/2018/the-iphone-franchise/">Stratechery - The iPhone Franchise</a></li>
<li><a href="https://learningswift.brightdigit.com/swift-thoughts-tryswift-nyc-2018/">Swift Thoughts on try!Swift NYC 2018</a></li>
<li><a href="https://developer.apple.com/videos/play/tech-talks/207/">Building Apps for iPhone XS, iPhone XS Max, and iPhone XR</a></li>
</ul><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Wed, 26 Sep 2018 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/b358d0a4/b358d0a4.mp3" length="19989877" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>2495</itunes:duration>
      <itunes:summary>In this episode, Leo and Theresa talk about the new iPhones for 2018: the iPhone Xs, iPhone Xs Max, and iPhone Xr. Whether it's worth getting the Xs? Is the Xs Max too big or just right? How does the Xr fit in the market? How can developers utilize these new phones? What updates should be coming to apps in machine learning, photography, and screen layout?</itunes:summary>
      <itunes:subtitle>In this episode, Leo and Theresa talk about the new iPhones for 2018: the iPhone Xs, iPhone Xs Max, and iPhone Xr. Whether it's worth getting the Xs? Is the Xs Max too big or just right? How does the Xr fit in the market? How can developers utilize these </itunes:subtitle>
      <itunes:keywords>apple, iPhone, iPhone Xr, iPhone Xs, iPhone Xs Max, Machine Learning, </itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>Low-Cost Macs - MacBook Air &amp; Mac Mini</title>
      <itunes:episode>3</itunes:episode>
      <itunes:title>Low-Cost Macs - MacBook Air &amp; Mac Mini</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">8c8eaaa6-a9b0-45b6-934f-a46b0ead1d72</guid>
      <link>https://share.transistor.fm/s/4f13fa7b</link>
      <description>
        <![CDATA[<ul>
<li><a href="https://itunes.apple.com/us/podcast/apple-special-event-september-2015-1080p/id509310064?i=1000352406900&amp;mt=2">Apple September Event 2015  </a></li>
<li><a href="https://daringfireball.net/2018/08/new_low-cost_laptop_to_succeed_macbook_air">Daring Fireball - Let’s Really Think About This ‘New Low-Cost Laptop to Succeed MacBook Air’ Thing</a></li>
<li>Reddit Threads<ul>
<li><a href="https://www.reddit.com/r/apple/comments/9a7opp/dear_mac_mini_owners_three_questions/">/r/Apple - Dear Mac Mini Owners... (Three Questions)</a></li>
<li><a href="https://www.reddit.com/r/MacOS/comments/9a253e/dear_mac_mini_owners_three_questions/">/r/MacOS - Dear Mac Mini Owners... (Three Questions) </a></li>
<li><a href="https://www.reddit.com/r/iOSProgramming/comments/9awl61/dear_developers_with_a_mac_mini_two_questions/">/r/iOSProgramming - Dear Developers with a Mac Mini... (Two Questions)</a></li>
<li><a href="https://www.reddit.com/r/swift/comments/9apooj/dear_developers_with_a_mac_mini_two_questions/">/r/Swift - Dear Developers with a Mac Mini... (Two Questions)</a></li>
</ul>
</li>
<li><a href="https://www.plex.tv">Plex</a></li>
<li><a href="https://buyersguide.macrumors.com">MacRumors Buyers Guide</a></li>
</ul><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<ul>
<li><a href="https://itunes.apple.com/us/podcast/apple-special-event-september-2015-1080p/id509310064?i=1000352406900&amp;mt=2">Apple September Event 2015  </a></li>
<li><a href="https://daringfireball.net/2018/08/new_low-cost_laptop_to_succeed_macbook_air">Daring Fireball - Let’s Really Think About This ‘New Low-Cost Laptop to Succeed MacBook Air’ Thing</a></li>
<li>Reddit Threads<ul>
<li><a href="https://www.reddit.com/r/apple/comments/9a7opp/dear_mac_mini_owners_three_questions/">/r/Apple - Dear Mac Mini Owners... (Three Questions)</a></li>
<li><a href="https://www.reddit.com/r/MacOS/comments/9a253e/dear_mac_mini_owners_three_questions/">/r/MacOS - Dear Mac Mini Owners... (Three Questions) </a></li>
<li><a href="https://www.reddit.com/r/iOSProgramming/comments/9awl61/dear_developers_with_a_mac_mini_two_questions/">/r/iOSProgramming - Dear Developers with a Mac Mini... (Two Questions)</a></li>
<li><a href="https://www.reddit.com/r/swift/comments/9apooj/dear_developers_with_a_mac_mini_two_questions/">/r/Swift - Dear Developers with a Mac Mini... (Two Questions)</a></li>
</ul>
</li>
<li><a href="https://www.plex.tv">Plex</a></li>
<li><a href="https://buyersguide.macrumors.com">MacRumors Buyers Guide</a></li>
</ul><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Mon, 10 Sep 2018 07:00:00 -0400</pubDate>
      <author>Bright Digit, LLC</author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/4f13fa7b/4f13fa7b.mp3" length="8592505" type="audio/mpeg"/>
      <itunes:author>Bright Digit, LLC</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>922</itunes:duration>
      <itunes:summary>There are rumors this year of new Mac Minis and a budget MacBook (i.e. MacBook Air replacement). What do people use Mac Minis for? What could be the reasoning behind Apple making new models? What is the use case for a new budget MacBook? How will new budget MacBooks compete with iPads?</itunes:summary>
      <itunes:subtitle>There are rumors this year of new Mac Minis and a budget MacBook (i.e. MacBook Air replacement). What do people use Mac Minis for? What could be the reasoning behind Apple making new models? What is the use case for a new budget MacBook? How will new budg</itunes:subtitle>
      <itunes:keywords>macbook air retina, macbook air, mac mini, apple September event, </itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>September 12th Apple Event - iPhone and Apple Watch 2018</title>
      <itunes:episode>2</itunes:episode>
      <itunes:title>September 12th Apple Event - iPhone and Apple Watch 2018</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">610aa723-1eec-42cc-a83a-f855797c9316</guid>
      <link>https://share.transistor.fm/s/c1521cf5</link>
      <description>
        <![CDATA[<ul>
<li><a href="https://www.tomsguide.com/us/new-iphones-apple-event-date,news-27904.html">Tom's Guide - Apple Will Launch New iPhones at Big Sept. 12 Event</a></li>
<li><a href="https://www.imore.com/iphone-xs">iMore - iPhone Xs (2018) rumors: Release date, specs, price, and features!</a></li>
<li><a href="https://gizmodo.com/apple-s-next-smartphones-and-watch-allegedly-revealed-i-1828723924">Gizmodo - Apple’s Next Smartphones and Watch Allegedly Revealed in New Leak</a></li>
<li><a href="http://atp.fm/episodes/289">Accidental Tech Podcast #289 - How does the budget "iPhone 9" fit?</a></li>
<li><a href="https://www.youtube.com/watch?v=0sXvuUrJa0o">MKBHD - The 2019 iPhone Models!</a></li>
<li><a href="https://light.co/camera">Light L16 Camera</a></li>
<li><a href="https://www.youtube.com/watch?v=oD_3wMh5kLg">MKBHD - Top 5 Smartphone Cameras: The Blind Test! [2018]</a></li>
<li><a href="https://itunes.apple.com/us/podcast/apple-special-event-march-2015-1080p/id509310064?i=1000337281199&amp;mt=2">Original Apple Watch Event - March 2015</a></li>
</ul><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<ul>
<li><a href="https://www.tomsguide.com/us/new-iphones-apple-event-date,news-27904.html">Tom's Guide - Apple Will Launch New iPhones at Big Sept. 12 Event</a></li>
<li><a href="https://www.imore.com/iphone-xs">iMore - iPhone Xs (2018) rumors: Release date, specs, price, and features!</a></li>
<li><a href="https://gizmodo.com/apple-s-next-smartphones-and-watch-allegedly-revealed-i-1828723924">Gizmodo - Apple’s Next Smartphones and Watch Allegedly Revealed in New Leak</a></li>
<li><a href="http://atp.fm/episodes/289">Accidental Tech Podcast #289 - How does the budget "iPhone 9" fit?</a></li>
<li><a href="https://www.youtube.com/watch?v=0sXvuUrJa0o">MKBHD - The 2019 iPhone Models!</a></li>
<li><a href="https://light.co/camera">Light L16 Camera</a></li>
<li><a href="https://www.youtube.com/watch?v=oD_3wMh5kLg">MKBHD - Top 5 Smartphone Cameras: The Blind Test! [2018]</a></li>
<li><a href="https://itunes.apple.com/us/podcast/apple-special-event-march-2015-1080p/id509310064?i=1000337281199&amp;mt=2">Original Apple Watch Event - March 2015</a></li>
</ul><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Tue, 04 Sep 2018 10:00:00 -0400</pubDate>
      <author>Bright Digit, LLC</author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/c1521cf5/c1521cf5.mp3" length="11488999" type="audio/mpeg"/>
      <itunes:author>Bright Digit, LLC</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>1433</itunes:duration>
      <itunes:summary>In this episode, Leo and Theresa discuss what the Apple September event might be about based on the current rumors. 
- Why are people so interested in larger phones? 
- Is this the first Apple event with no new Home Button iPhones? 
- How does a more affordable large phone compete with Android? 
- How is Apple giving us more display and less bezel on the iPhone, iPad, and the Apple Watch? </itunes:summary>
      <itunes:subtitle>In this episode, Leo and Theresa discuss what the Apple September event might be about based on the current rumors. 
- Why are people so interested in larger phones? 
- Is this the first Apple event with no new Home Button iPhones? 
- How does a more a</itunes:subtitle>
      <itunes:keywords>iPhone, Apple Watch, iPad, iPhone 9, iPhone XS, iPhone XS Plus, Apple Watch Series 4, Apple September Event, Apple Event, Apple Announcement</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
    <item>
      <title>WWDC 2018 - What Does It Mean For Businesses?</title>
      <itunes:episode>1</itunes:episode>
      <itunes:title>WWDC 2018 - What Does It Mean For Businesses?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:block>No</itunes:block>
      <googleplay:block>No</googleplay:block>
      <guid isPermaLink="false">02255150-c3b1-4150-9ebb-201c8e243e20</guid>
      <link>https://share.transistor.fm/s/8108defb</link>
      <description>
        <![CDATA[<p>In this episode, we talk about <strong>WWDC 2018</strong> and what it means for the technology industry and businesses. <br>It seemed like a fairly quiet conference for Apple but maybe that's a good thing. </p><ul>
<li>Is Apple cleaning house?</li>
<li>Will iOS 12 work on your current iPhone or iPad?</li>
<li>Why should old people in business and tech like us care about Memoji? (Hint: AR and ML)</li>
<li>When is a good time to install the new OSes?</li>
<li>What is new with the Mac App Store?</li>
<li>What are the new features in macOS Mojave?</li>
<li>How is development changing for macOS Mojave in 2019?</li>
</ul><p><b>Links</b></p><ul>
<li>
<a href="https://www.pokemon.com/us/">Pokemon Go</a> </li>
<li>
<a href="https://www.apple.com/newsroom/2018/06/apple-previews-ios-12/">Memoji</a> </li>
<li><a href="https://questvisual.com">WordLens</a></li>
<li><a href="https://itunes.apple.com/us/app/ikea-place/id1279244498?mt=8">Ikea Place</a></li>
</ul><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>In this episode, we talk about <strong>WWDC 2018</strong> and what it means for the technology industry and businesses. <br>It seemed like a fairly quiet conference for Apple but maybe that's a good thing. </p><ul>
<li>Is Apple cleaning house?</li>
<li>Will iOS 12 work on your current iPhone or iPad?</li>
<li>Why should old people in business and tech like us care about Memoji? (Hint: AR and ML)</li>
<li>When is a good time to install the new OSes?</li>
<li>What is new with the Mac App Store?</li>
<li>What are the new features in macOS Mojave?</li>
<li>How is development changing for macOS Mojave in 2019?</li>
</ul><p><b>Links</b></p><ul>
<li>
<a href="https://www.pokemon.com/us/">Pokemon Go</a> </li>
<li>
<a href="https://www.apple.com/newsroom/2018/06/apple-previews-ios-12/">Memoji</a> </li>
<li><a href="https://questvisual.com">WordLens</a></li>
<li><a href="https://itunes.apple.com/us/app/ikea-place/id1279244498?mt=8">Ikea Place</a></li>
</ul><p><strong><a rel="payment" title="★ Support this podcast on Patreon ★" href="https://www.patreon.com/empowerappsshow">★ Support this podcast on Patreon ★</a></strong></p>]]>
      </content:encoded>
      <pubDate>Tue, 14 Aug 2018 00:00:00 -0400</pubDate>
      <author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </author>
      <enclosure url="https://pdcn.co/e/media.transistor.fm/8108defb/8108defb.mp3" length="14347923" type="audio/mpeg"/>
      <itunes:author>Leo Dion, Principal CEO and Swift Developer at BrightDigit </itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/122/full_1533929410-artwork.jpg"/>
      <itunes:duration>1776</itunes:duration>
      <itunes:summary>In this episode, we talk about WWDC 2018 and what it means for the technology industry and businesses. We talk iOS 12, Mojave, and dessert.</itunes:summary>
      <itunes:subtitle>In this episode, we talk about WWDC 2018 and what it means for the technology industry and businesses. We talk iOS 12, Mojave, and dessert.</itunes:subtitle>
      <itunes:keywords>WWDC, wwdc 2018, macOS, apple, iPhone, iPad, Mojave, iOS 12, Memoji, Augmented Reality, AR, Machine Learning, Artificial Intelligence</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <googleplay:explicit>No</googleplay:explicit>
    </item>
  </channel>
</rss>
