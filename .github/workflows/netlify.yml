name: macOS

on:
  push:
    branches:
      - '*'
      - 'feature/*'
      - 'release/*'
      - 'bugfix/*'
    tags: '*'

jobs:
  build:
    env:
      PACKAGE_NAME: SyndiKit

    runs-on: macos-11
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    strategy:
      matrix:
        runs-on: [macos-11]
        xcode: ["/Applications/Xcode_12.5.1.app", "/Applications/Xcode_13.0.app"]
        include:
          - os: macos-10.5
            xcode: "/Applications/Xcode_12.4.app"

    steps:
    - uses: actions/checkout@v2
    - name: Set Xcode Name
      run: echo "XCODE_NAME=$(basename -- ${{ matrix.xcode }} | sed 's/\.[^.]*$//' | cut -d'_' -f2)" >> $GITHUB_ENV
    - name: Setup Xcode
      run: sudo xcode-select -s ${{ matrix.xcode }}/Contents/Developer
    - name: Build
      run: swift build -v
    - name: Lint
      if: startsWith(github.ref, 'refs/tags/') != true
      run: swift run swiftformat --lint . && swift run swiftlint
    - name: Run tests
      run: swift test -v --enable-code-coverage
    - name: Prepare Code Coverage
      run: xcrun llvm-cov export -format="lcov" .build/debug/${{ env.PACKAGE_NAME }}PackageTests.xctest/Contents/MacOS/${{ env.PACKAGE_NAME }}PackageTests -instr-profile .build/debug/codecov/default.profdata > info.lcov
    - name: Upload to CodeCov.io
      run: bash <(curl https://codecov.io/bash) -F github -F macOS -F ${{ matrix.runs-on }}
      env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}      
    - name: Build sourcedocs Documentation
      if: ${{ matrix.os == 'macos-11' && matrix.xcode == '/Applications/Xcode_12.5.app' && !startsWith(github.ref, 'refs/tags/') }}
      run: |
        swift run sourcedocs generate build -cra
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git status
        git add Documentation
        git diff-index --quiet HEAD || git commit -m "[github action] Update Docs"
        git push    
        
  deploy:
    needs: [build]
    env:
      PACKAGE_NAME: SyndiKit

    runs-on: macos-11
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
      - name: Setup Netlify
        run: brew install netlify-cli
      - name: Setup Xcode
        run: sudo xcode-select -s /Applications/Xcode_13.0.app/Contents/Developer
      - name: Build DocC Documentation
        run: xcodebuild docbuild -scheme ${{ env.PACKAGE_NAME }} -destination 'platform=macOS' -derivedDataPath DerivedData
      - name: Setup Directory
        run: |
          mkdir Output
          cp -rf DerivedData/Build/Products/Debug/SyndiKit.doccarchive Output
          cp netlify.toml Output
      - name: Deploy Files
        run: netlify deploy --site $NETLIFY_SITE_ID --auth $NETLIFY_AUTH_TOKEN --prod
